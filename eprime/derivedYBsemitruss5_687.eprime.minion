MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 11
# CSE_active_eliminated_expressions = 58
# CSE_active_total_size = 33
**VARIABLES**
DISCRETE S_00001_00002 #
{2..5}
DISCRETE S_00001_00004 #
{4..5}
DISCRETE S_00002_00001 #
{1..5}
**CONSTRAINTS**
w-inintervalset(S_00002_00001, [1,1,3,5])
**VARIABLES**
DISCRETE S_00002_00003 #
{3..5}
**CONSTRAINTS**
w-inintervalset(S_00002_00003, [3,3,5,5])
**VARIABLES**
DISCRETE S_00003_00001 #
{1..4}
**CONSTRAINTS**
w-inintervalset(S_00003_00001, [1,1,4,4])
**VARIABLES**
DISCRETE S_00003_00002 #
{2..4}
**CONSTRAINTS**
w-inintervalset(S_00003_00002, [2,2,4,4])
**VARIABLES**
DISCRETE S_00004_00001 #
{1..3}
**CONSTRAINTS**
w-inintervalset(S_00004_00001, [1,1,3,3])
**VARIABLES**
DISCRETE S_00004_00002 #
{2..3}
DISCRETE aux0 #Active-CSE: 8 occurrences of this expression or equivalent: (S_00004_00002 + -1)
{1..2}
DISCRETE aux1 #Active-CSE: 2 occurrences of this expression or equivalent: (-9 + 5*S_00003_00002)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux1, [1,1,11,11])
**VARIABLES**
DISCRETE aux2 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*S_00003_00001)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux2, [1,1,16,16])
**VARIABLES**
DISCRETE aux3 #Active-CSE: 9 occurrences of this expression or equivalent: (-1 + S_00003_00002)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux3, [1,1,3,3])
**VARIABLES**
DISCRETE aux4 #Active-CSE: 2 occurrences of this expression or equivalent: (5*S_00001_00004 + -19)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux4, [1,1,6,6])
**VARIABLES**
DISCRETE aux5 #Active-CSE: 9 occurrences of this expression or equivalent: (S_00001_00004 + -3)
{1..2}
DISCRETE aux6 #Active-CSE: 2 occurrences of this expression or equivalent: (-14 + 5*S_00002_00003)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux6, [1,1,11,11])
**VARIABLES**
DISCRETE aux7 #Active-CSE: 9 occurrences of this expression or equivalent: (S_00001_00002 + -1)
{1..4}
DISCRETE aux8 #Active-CSE: 2 occurrences of this expression or equivalent: (5*S_00004_00002 + -9)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux8, [1,1,6,6])
**VARIABLES**
DISCRETE aux9 #Active-CSE: 2 occurrences of this expression or equivalent: (5*S_00004_00001 + -4)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux9, [1,1,11,11])
**VARIABLES**
DISCRETE aux10 #Active-CSE: 11 occurrences of this expression or equivalent: (-2 + S_00002_00003)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux10, [1,1,3,3])
**VARIABLES**
DISCRETE aux11 #ElementOne([1, 2, 4, 3, 5], S_00002_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux11, [1,1,3,5])
**VARIABLES**
DISCRETE aux12 #ElementOne([2, 4, 3, 5], aux7)
{2..5}
DISCRETE aux13 #ElementOne([3, 5], aux5)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux13, [3,3,5,5])
**VARIABLES**
DISCRETE aux14 #ElementOne([4, 3, 5], aux10)
{3..5}
DISCRETE aux15 #ElementOne([1, 2, 4], S_00004_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux15, [1,2,4,4])
**VARIABLES**
DISCRETE aux16 #ElementOne([2, 4], aux0)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux16, [2,2,4,4])
**VARIABLES**
DISCRETE aux17 #ElementOne([1, 2, 4, 3], S_00003_00001)
{1..4}
DISCRETE aux18 #ElementOne([2, 4, 3], aux3)
{2..4}
DISCRETE aux19 #(-5 + 6*S_00002_00001)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux19, [1,1,13,13,19,19,25,25])
**VARIABLES**
DISCRETE aux20 #(S_00001_00002 + -6 + 5*S_00002_00001)
{1..24}
**CONSTRAINTS**
w-inintervalset(aux20, [1,4,11,14,16,19,21,24])
**VARIABLES**
DISCRETE aux21 #(-7 + 5*S_00002_00001 + S_00002_00003)
{1..23}
**CONSTRAINTS**
w-inintervalset(aux21, [1,1,3,3,11,11,13,13,16,16,18,18,21,21,23,23])
**VARIABLES**
DISCRETE aux22 #(S_00001_00004 + -8 + 5*S_00002_00001)
{1..22}
**CONSTRAINTS**
w-inintervalset(aux22, [1,2,11,12,16,17,21,22])
**VARIABLES**
DISCRETE aux23 #(-4 + 5*S_00002_00001)
{1..21}
**CONSTRAINTS**
w-inintervalset(aux23, [1,1,11,11,16,16,21,21])
**VARIABLES**
DISCRETE aux24 #(5*S_00001_00002 + -10 + S_00002_00001)
{1..20}
**CONSTRAINTS**
w-inintervalset(aux24, [1,1,3,6,8,11,13,16,18,20])
**VARIABLES**
DISCRETE aux25 #(6*S_00001_00002 + -11)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux25, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux26 #(5*S_00001_00002 + -12 + S_00002_00003)
{1..18}
**CONSTRAINTS**
w-inintervalset(aux26, [1,1,3,3,6,6,8,8,11,11,13,13,16,16,18,18])
**VARIABLES**
DISCRETE aux27 #(5*S_00001_00002 + S_00001_00004 + -13)
{1..17}
**CONSTRAINTS**
w-inintervalset(aux27, [1,2,6,7,11,12,16,17])
**VARIABLES**
DISCRETE aux28 #(5*S_00001_00002 + -9)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux28, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux29 #(-15 + S_00002_00001 + 5*S_00002_00003)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux29, [1,1,3,5,11,11,13,15])
**VARIABLES**
DISCRETE aux30 #(S_00001_00002 + -16 + 5*S_00002_00003)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux30, [1,4,11,14])
**VARIABLES**
DISCRETE aux31 #(-17 + 6*S_00002_00003)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux31, [1,1,13,13])
**VARIABLES**
DISCRETE aux32 #(S_00001_00004 + -18 + 5*S_00002_00003)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux32, [1,2,11,12])
**VARIABLES**
DISCRETE aux33 #(5*S_00001_00004 + -20 + S_00002_00001)
{1..10}
**CONSTRAINTS**
w-inintervalset(aux33, [1,1,3,6,8,10])
**VARIABLES**
DISCRETE aux34 #(S_00001_00002 + 5*S_00001_00004 + -21)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux34, [1,4,6,9])
**VARIABLES**
DISCRETE aux35 #(5*S_00001_00004 + -22 + S_00002_00003)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux35, [1,1,3,3,6,6,8,8])
**VARIABLES**
DISCRETE aux36 #(6*S_00001_00004 + -23)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux36, [1,1,7,7])
**VARIABLES**
DISCRETE aux37 #(-5 + 6*S_00003_00001)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux37, [1,1,19,19])
**VARIABLES**
DISCRETE aux38 #(-6 + 5*S_00003_00001 + S_00003_00002)
{1..18}
**CONSTRAINTS**
w-inintervalset(aux38, [1,1,3,3,16,16,18,18])
**VARIABLES**
DISCRETE aux39 #(-7 + S_00002_00003 + 5*S_00003_00001)
{1..18}
**CONSTRAINTS**
w-inintervalset(aux39, [1,1,3,3,16,16,18,18])
**VARIABLES**
DISCRETE aux40 #(-10 + S_00003_00001 + 5*S_00003_00002)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux40, [1,1,4,4,11,11,14,14])
**VARIABLES**
DISCRETE aux41 #(-11 + 6*S_00003_00002)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux41, [1,1,13,13])
**VARIABLES**
DISCRETE aux42 #(-12 + S_00002_00003 + 5*S_00003_00002)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux42, [1,1,3,3,11,11,13,13])
**VARIABLES**
DISCRETE aux43 #(-15 + 5*S_00002_00003 + S_00003_00001)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux43, [1,1,4,4,11,11,14,14])
**VARIABLES**
DISCRETE aux44 #(-16 + 5*S_00002_00003 + S_00003_00002)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux44, [1,1,3,3,11,11,13,13])
**VARIABLES**
DISCRETE aux45 #(6*S_00004_00001 + -5)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux45, [1,1,13,13])
**VARIABLES**
DISCRETE aux46 #(5*S_00004_00001 + S_00004_00002 + -6)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux46, [1,2,11,12])
**VARIABLES**
DISCRETE aux47 #(5*S_00004_00001 + S_00001_00004 + -8)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux47, [1,2,11,12])
**VARIABLES**
DISCRETE aux48 #(S_00004_00001 + 5*S_00004_00002 + -10)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux48, [1,1,3,3,6,6,8,8])
**VARIABLES**
DISCRETE aux49 #(6*S_00004_00002 + -11)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux49, [1,1,7,7])
**VARIABLES**
DISCRETE aux50 #(5*S_00004_00002 + S_00001_00004 + -13)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux50, [1,2,6,7])
**VARIABLES**
DISCRETE aux51 #(S_00004_00001 + 5*S_00001_00004 + -20)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux51, [1,1,3,3,6,6,8,8])
**VARIABLES**
DISCRETE aux52 #(S_00004_00002 + 5*S_00001_00004 + -21)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux52, [1,2,6,7])
**VARIABLES**
**TUPLELIST**
perms 1 5
1 2 4 3 5 
**VARIABLES**
ALIAS perms[1,5]=[[1, 2, 4, 3, 5]]
**TUPLELIST**
inverses 1 5
1 2 4 3 5 
**VARIABLES**
ALIAS inverses[1,5]=[[1, 2, 4, 3, 5]]
**TUPLELIST**
M 5 5
1 1 1 1 1 
1 1 1 1 1 
1 1 3 1 3 
1 1 1 4 4 
1 1 3 4 5 
**VARIABLES**
ALIAS M[5,5]=[[1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 3, 1, 3], [1, 1, 1, 4, 4], [1, 1, 3, 4, 5]]
**SEARCH**
PRINT[[S_00001_00002],[S_00001_00004],[S_00002_00001],[S_00002_00003],[S_00003_00001],[S_00003_00002],[S_00004_00001],[S_00004_00002]]
VARORDER STATIC [S_00002_00001, S_00001_00002, S_00002_00003, S_00001_00004, S_00003_00001, S_00003_00002, S_00004_00001, S_00004_00002]
**CONSTRAINTS**
watchelement_one([1, 2, 4, 3, 5], S_00002_00001, aux11)
watchelement_one([2, 4, 3, 5], aux7, aux12)
watchelement_one([3, 5], aux5, aux13)
watchelement_one([4, 3, 5], aux10, aux14)
watchelement_one([1, 2, 4], S_00004_00001, aux15)
watchelement_one([2, 4], aux0, aux16)
watchelement_one([1, 2, 4, 3], S_00003_00001, aux17)
watchelement_one([2, 4, 3], aux3, aux18)
lexleq([S_00002_00001, S_00001_00002, S_00002_00003, S_00001_00004, S_00003_00001, S_00003_00002, S_00004_00001, S_00004_00002],[aux11, aux12, aux13, aux14, aux15, aux16, aux17, aux18])
watchelement_one([1, 1, 1, 1, 1], S_00002_00001, 1)
watchelement_one([1, 1, 3, 1], S_00003_00001, 1)
watchelement_one([1, 1, 1], S_00004_00001, 1)
watchelement_one([1, 1, 1, 1], aux7, 1)
watchelement_one([1, 3, 1], aux3, 1)
watchelement_one([1, 1], aux0, 1)
watchelement_one([1, 1, 1], aux10, 1)
watchelement_one([3, 1, 3], aux10, 3)
watchelement_one([1, 1], aux5, 1)
watchelement_one([4, 4], aux5, 4)
watchelement_one([S_00002_00001, S_00002_00001, S_00003_00001, S_00004_00001, 1], S_00002_00001, 1)
watchelement_one([S_00001_00002, S_00001_00002, S_00003_00002, S_00004_00002, 2], S_00002_00001, 2)
watchelement_one([S_00002_00003, S_00002_00003, S_00002_00003, 3], S_00003_00001, 3)
watchelement_one([S_00001_00004, S_00001_00004, 4], S_00004_00001, 4)
watchelement_one([S_00002_00001, S_00003_00001, S_00004_00001, 1], aux7, 1)
watchelement_one([S_00001_00002, S_00003_00002, S_00004_00002, 2], aux7, 2)
watchelement_one([S_00002_00003, S_00002_00003, 3], aux3, 3)
watchelement_one([S_00001_00004, 4], aux0, 4)
watchelement_one([S_00003_00001, S_00004_00001, 1], aux10, 1)
watchelement_one([S_00003_00002, S_00004_00002, 2], aux10, 2)
watchelement_one([S_00002_00003, 3, 3], aux10, 3)
watchelement_one([S_00004_00001, 1], aux5, 1)
watchelement_one([S_00004_00002, 2], aux5, 2)
watchelement_one([S_00001_00004, 4], aux5, 4)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux19, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux20, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux21, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux22, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux23, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux24, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux25, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux26, S_00002_00001)
watchelement_one([1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux27, S_00002_00001)
watchelement_one([1, 1, 1, 3, 1, 3, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux28, S_00002_00001)
watchelement_one([1, 1, 3, 1, 3, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux29, S_00002_00001)
watchelement_one([1, 3, 1, 3, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux30, S_00002_00001)
watchelement_one([3, 1, 3, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux31, S_00002_00003)
watchelement_one([1, 3, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux32, S_00002_00001)
watchelement_one([3, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux6, S_00002_00003)
watchelement_one([1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux33, S_00002_00001)
watchelement_one([1, 1, 4, 4, 1, 1, 3, 4, 5], aux34, S_00002_00001)
watchelement_one([1, 4, 4, 1, 1, 3, 4, 5], aux35, S_00002_00001)
watchelement_one([4, 4, 1, 1, 3, 4, 5], aux36, S_00001_00004)
watchelement_one([4, 1, 1, 3, 4, 5], aux4, S_00001_00004)
watchelement_one([1, 1, 3, 4, 5], S_00002_00001, S_00002_00001)
watchelement_one([1, 3, 4, 5], aux7, S_00002_00001)
watchelement_one([3, 4, 5], aux10, S_00002_00003)
watchelement_one([4, 5], aux5, S_00001_00004)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4], aux37, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4], aux38, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4, 4], aux39, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4], aux2, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4, 4], aux2, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4], aux40, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4], aux41, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4, 4], aux42, S_00003_00001)
watchelement_one([1, 1, 1, 1, 3, 1, 3, 1, 1, 1, 4], aux1, S_00003_00001)
watchelement_one([1, 1, 1, 3, 1, 3, 1, 1, 1, 4, 4], aux1, S_00003_00001)
watchelement_one([1, 1, 3, 1, 3, 1, 1, 1, 4, 4, 1, 1, 3, 4], aux43, S_00003_00001)
watchelement_one([1, 3, 1, 3, 1, 1, 1, 4, 4, 1, 1, 3, 4], aux44, S_00003_00001)
watchelement_one([1, 3, 1, 1, 1, 4, 4, 1, 1, 3, 4], aux6, S_00003_00001)
watchelement_one([1, 1, 1, 4], S_00003_00001, S_00003_00001)
watchelement_one([1, 1, 4], aux3, S_00003_00001)
watchelement_one([1, 4, 4], aux10, S_00003_00001)
watchelement_one([1, 1, 3, 4], S_00003_00001, S_00003_00001)
watchelement_one([1, 3, 4], aux3, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3], aux45, S_00004_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3], aux46, S_00004_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3], aux9, S_00004_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 3], aux47, S_00004_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 3], aux9, S_00004_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 3], aux48, S_00004_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 3], aux49, S_00004_00001)
watchelement_one([1, 1, 1, 1, 1, 3], aux8, S_00004_00001)
watchelement_one([1, 1, 1, 1, 3, 1, 3], aux50, S_00004_00001)
watchelement_one([1, 1, 1, 3, 1, 3], aux8, S_00004_00001)
watchelement_one([1, 1, 3], S_00004_00001, S_00004_00001)
watchelement_one([1, 3], aux0, S_00004_00001)
watchelement_one([1, 3], aux5, S_00004_00001)
watchelement_one([1, 1, 1, 4, 4, 1, 1, 3], aux51, S_00004_00001)
watchelement_one([1, 1, 4, 4, 1, 1, 3], aux52, S_00004_00001)
watchelement_one([1, 4, 4, 1, 1, 3], aux4, S_00004_00001)
watchelement_one([S_00002_00001, S_00001_00002, S_00002_00003, S_00001_00004, 5], S_00002_00001, S_00002_00001)
watchelement_one([S_00001_00002, S_00002_00003, S_00001_00004, 5], aux7, S_00001_00002)
watchelement_one([S_00002_00003, S_00001_00004, 5], aux10, S_00002_00003)
watchelement_one([S_00001_00004, 5], aux5, S_00001_00004)
watchelement_one([S_00003_00001, S_00003_00002, S_00002_00003, 4, 5], S_00002_00001, S_00002_00001)
watchelement_one([S_00003_00002, S_00002_00003, 4, 5], aux7, S_00001_00002)
watchelement_one([S_00002_00003, 4, 5], aux10, S_00002_00003)
watchelement_one([S_00004_00001, S_00004_00002, 3, S_00001_00004, 5], S_00002_00001, S_00002_00001)
watchelement_one([S_00004_00002, 3, S_00001_00004, 5], aux7, S_00001_00002)
watchelement_one([3, S_00001_00004, 5], aux10, S_00002_00003)
watchelement_one([1, 2, 3, 4, 5], S_00002_00001, S_00002_00001)
watchelement_one([2, 3, 4, 5], aux7, S_00001_00002)
watchelement_one([S_00002_00001, S_00001_00002, S_00002_00003, S_00001_00004], S_00003_00001, S_00002_00001)
watchelement_one([S_00001_00002, S_00002_00003, S_00001_00004], aux3, S_00001_00002)
watchelement_one([S_00003_00001, S_00003_00002, S_00002_00003, 4], S_00003_00001, S_00003_00001)
watchelement_one([S_00003_00002, S_00002_00003, 4], aux3, S_00003_00002)
watchelement_one([S_00004_00001, S_00004_00002, 3, S_00001_00004], S_00003_00001, S_00002_00001)
watchelement_one([S_00004_00002, 3, S_00001_00004], aux3, S_00001_00002)
watchelement_one([1, 2, 3, 4], S_00003_00001, S_00003_00001)
watchelement_one([2, 3, 4], aux3, S_00003_00002)
watchelement_one([S_00002_00001, S_00001_00002, S_00002_00003], S_00004_00001, S_00002_00001)
watchelement_one([S_00001_00002, S_00002_00003], aux0, S_00001_00002)
watchelement_one([S_00003_00001, S_00003_00002, S_00002_00003], S_00004_00001, S_00002_00001)
watchelement_one([S_00003_00002, S_00002_00003], aux0, S_00001_00002)
watchelement_one([S_00004_00001, S_00004_00002, 3], S_00004_00001, S_00004_00001)
watchelement_one([S_00004_00002, 3], aux0, S_00004_00002)
watchelement_one([1, 2, 3], S_00004_00001, S_00004_00001)
watchelement_one([2, 3], aux0, S_00004_00002)
weightedsumleq([1,6],[-5,S_00002_00001],aux19)
weightedsumgeq([1,6],[-5,S_00002_00001],aux19)
weightedsumleq([1,1,5],[S_00001_00002,-6,S_00002_00001],aux20)
weightedsumgeq([1,1,5],[S_00001_00002,-6,S_00002_00001],aux20)
weightedsumleq([1,5,1],[-7,S_00002_00001,S_00002_00003],aux21)
weightedsumgeq([1,5,1],[-7,S_00002_00001,S_00002_00003],aux21)
weightedsumleq([1,1,5],[S_00001_00004,-8,S_00002_00001],aux22)
weightedsumgeq([1,1,5],[S_00001_00004,-8,S_00002_00001],aux22)
weightedsumleq([1,5],[-4,S_00002_00001],aux23)
weightedsumgeq([1,5],[-4,S_00002_00001],aux23)
weightedsumleq([5,1,1],[S_00001_00002,-10,S_00002_00001],aux24)
weightedsumgeq([5,1,1],[S_00001_00002,-10,S_00002_00001],aux24)
weightedsumleq([6,1],[S_00001_00002,-11],aux25)
weightedsumgeq([6,1],[S_00001_00002,-11],aux25)
weightedsumleq([5,1,1],[S_00001_00002,-12,S_00002_00003],aux26)
weightedsumgeq([5,1,1],[S_00001_00002,-12,S_00002_00003],aux26)
weightedsumleq([5,1,1],[S_00001_00002,S_00001_00004,-13],aux27)
weightedsumgeq([5,1,1],[S_00001_00002,S_00001_00004,-13],aux27)
weightedsumleq([5,1],[S_00001_00002,-9],aux28)
weightedsumgeq([5,1],[S_00001_00002,-9],aux28)
weightedsumleq([1,1,5],[-15,S_00002_00001,S_00002_00003],aux29)
weightedsumgeq([1,1,5],[-15,S_00002_00001,S_00002_00003],aux29)
weightedsumleq([1,1,5],[S_00001_00002,-16,S_00002_00003],aux30)
weightedsumgeq([1,1,5],[S_00001_00002,-16,S_00002_00003],aux30)
weightedsumleq([1,6],[-17,S_00002_00003],aux31)
weightedsumgeq([1,6],[-17,S_00002_00003],aux31)
weightedsumleq([1,1,5],[S_00001_00004,-18,S_00002_00003],aux32)
weightedsumgeq([1,1,5],[S_00001_00004,-18,S_00002_00003],aux32)
weightedsumleq([5,1,1],[S_00001_00004,-20,S_00002_00001],aux33)
weightedsumgeq([5,1,1],[S_00001_00004,-20,S_00002_00001],aux33)
weightedsumleq([1,5,1],[S_00001_00002,S_00001_00004,-21],aux34)
weightedsumgeq([1,5,1],[S_00001_00002,S_00001_00004,-21],aux34)
weightedsumleq([5,1,1],[S_00001_00004,-22,S_00002_00003],aux35)
weightedsumgeq([5,1,1],[S_00001_00004,-22,S_00002_00003],aux35)
weightedsumleq([6,1],[S_00001_00004,-23],aux36)
weightedsumgeq([6,1],[S_00001_00004,-23],aux36)
weightedsumleq([1,6],[-5,S_00003_00001],aux37)
weightedsumgeq([1,6],[-5,S_00003_00001],aux37)
weightedsumleq([1,5,1],[-6,S_00003_00001,S_00003_00002],aux38)
weightedsumgeq([1,5,1],[-6,S_00003_00001,S_00003_00002],aux38)
weightedsumleq([1,1,5],[-7,S_00002_00003,S_00003_00001],aux39)
weightedsumgeq([1,1,5],[-7,S_00002_00003,S_00003_00001],aux39)
weightedsumleq([1,1,5],[-10,S_00003_00001,S_00003_00002],aux40)
weightedsumgeq([1,1,5],[-10,S_00003_00001,S_00003_00002],aux40)
weightedsumleq([1,6],[-11,S_00003_00002],aux41)
weightedsumgeq([1,6],[-11,S_00003_00002],aux41)
weightedsumleq([1,1,5],[-12,S_00002_00003,S_00003_00002],aux42)
weightedsumgeq([1,1,5],[-12,S_00002_00003,S_00003_00002],aux42)
weightedsumleq([1,5,1],[-15,S_00002_00003,S_00003_00001],aux43)
weightedsumgeq([1,5,1],[-15,S_00002_00003,S_00003_00001],aux43)
weightedsumleq([1,5,1],[-16,S_00002_00003,S_00003_00002],aux44)
weightedsumgeq([1,5,1],[-16,S_00002_00003,S_00003_00002],aux44)
weightedsumleq([6,1],[S_00004_00001,-5],aux45)
weightedsumgeq([6,1],[S_00004_00001,-5],aux45)
weightedsumleq([5,1,1],[S_00004_00001,S_00004_00002,-6],aux46)
weightedsumgeq([5,1,1],[S_00004_00001,S_00004_00002,-6],aux46)
weightedsumleq([5,1,1],[S_00004_00001,S_00001_00004,-8],aux47)
weightedsumgeq([5,1,1],[S_00004_00001,S_00001_00004,-8],aux47)
weightedsumleq([1,5,1],[S_00004_00001,S_00004_00002,-10],aux48)
weightedsumgeq([1,5,1],[S_00004_00001,S_00004_00002,-10],aux48)
weightedsumleq([6,1],[S_00004_00002,-11],aux49)
weightedsumgeq([6,1],[S_00004_00002,-11],aux49)
weightedsumleq([5,1,1],[S_00004_00002,S_00001_00004,-13],aux50)
weightedsumgeq([5,1,1],[S_00004_00002,S_00001_00004,-13],aux50)
weightedsumleq([1,5,1],[S_00004_00001,S_00001_00004,-20],aux51)
weightedsumgeq([1,5,1],[S_00004_00001,S_00001_00004,-20],aux51)
weightedsumleq([1,5,1],[S_00004_00002,S_00001_00004,-21],aux52)
weightedsumgeq([1,5,1],[S_00004_00002,S_00001_00004,-21],aux52)
sumleq([S_00004_00002,-1],aux0)
sumgeq([S_00004_00002,-1],aux0)
weightedsumleq([1,5],[-9,S_00003_00002],aux1)
weightedsumgeq([1,5],[-9,S_00003_00002],aux1)
weightedsumleq([1,5],[-4,S_00003_00001],aux2)
weightedsumgeq([1,5],[-4,S_00003_00001],aux2)
sumleq([-1,S_00003_00002],aux3)
sumgeq([-1,S_00003_00002],aux3)
weightedsumleq([5,1],[S_00001_00004,-19],aux4)
weightedsumgeq([5,1],[S_00001_00004,-19],aux4)
sumleq([S_00001_00004,-3],aux5)
sumgeq([S_00001_00004,-3],aux5)
weightedsumleq([1,5],[-14,S_00002_00003],aux6)
weightedsumgeq([1,5],[-14,S_00002_00003],aux6)
sumleq([S_00001_00002,-1],aux7)
sumgeq([S_00001_00002,-1],aux7)
weightedsumleq([5,1],[S_00004_00002,-9],aux8)
weightedsumgeq([5,1],[S_00004_00002,-9],aux8)
weightedsumleq([5,1],[S_00004_00001,-4],aux9)
weightedsumgeq([5,1],[S_00004_00001,-4],aux9)
sumleq([-2,S_00002_00003],aux10)
sumgeq([-2,S_00002_00003],aux10)
**EOF**
