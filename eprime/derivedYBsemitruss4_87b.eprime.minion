MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 4
# CSE_active_eliminated_expressions = 8
# CSE_active_total_size = 12
**VARIABLES**
DISCRETE S_00003_00003 #
{1..3}
**CONSTRAINTS**
w-inintervalset(S_00003_00003, [1,1,3,3])
**VARIABLES**
DISCRETE S_00003_00004 #
{1..3}
**CONSTRAINTS**
w-inintervalset(S_00003_00004, [1,1,3,3])
**VARIABLES**
DISCRETE S_00004_00003 #
{1..4}
**CONSTRAINTS**
w-inintervalset(S_00004_00003, [1,1,4,4])
**VARIABLES**
DISCRETE S_00004_00004 #
{1..4}
**CONSTRAINTS**
w-inintervalset(S_00004_00004, [1,1,4,4])
**VARIABLES**
DISCRETE aux0 #Active-CSE: 2 occurrences of this expression or equivalent: (-3 + 4*S_00003_00003)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux0, [1,1,9,9])
**VARIABLES**
DISCRETE aux1 #Active-CSE: 2 occurrences of this expression or equivalent: (-3 + 4*S_00003_00004)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux1, [1,1,9,9])
**VARIABLES**
DISCRETE aux2 #Active-CSE: 2 occurrences of this expression or equivalent: (4*S_00004_00004 + -3)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux2, [1,1,13,13])
**VARIABLES**
DISCRETE aux3 #Active-CSE: 2 occurrences of this expression or equivalent: (4*S_00004_00003 + -3)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux3, [1,1,13,13])
**VARIABLES**
DISCRETE aux4 #ElementOne([1, 2, 4, 3], S_00004_00004)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux4, [1,1,3,3])
**VARIABLES**
DISCRETE aux5 #ElementOne([1, 2, 4, 3], S_00004_00003)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux5, [1,1,3,3])
**VARIABLES**
DISCRETE aux6 #ElementOne([1, 2, 4], S_00003_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux6, [1,2,4,4])
**VARIABLES**
DISCRETE aux7 #ElementOne([1, 2, 4], S_00003_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux7, [1,2,4,4])
**VARIABLES**
DISCRETE aux8 #(-4 + 5*S_00003_00003)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux8, [1,1,11,11])
**VARIABLES**
DISCRETE aux9 #(-4 + 4*S_00003_00003 + S_00003_00004)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux9, [1,1,3,3,9,9,11,11])
**VARIABLES**
DISCRETE aux10 #(-4 + S_00003_00003 + 4*S_00003_00004)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux10, [1,1,3,3,9,9,11,11])
**VARIABLES**
DISCRETE aux11 #(-4 + 5*S_00003_00004)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux11, [1,1,11,11])
**VARIABLES**
DISCRETE aux12 #(5*S_00004_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux12, [1,1,16,16])
**VARIABLES**
DISCRETE aux13 #(4*S_00004_00003 + S_00004_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux13, [1,1,4,4,13,13,16,16])
**VARIABLES**
DISCRETE aux14 #(S_00004_00003 + 4*S_00004_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux14, [1,1,4,4,13,13,16,16])
**VARIABLES**
DISCRETE aux15 #(5*S_00004_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux15, [1,1,16,16])
**VARIABLES**
**TUPLELIST**
perms 1 4
1 2 4 3 
**VARIABLES**
ALIAS perms[1,4]=[[1, 2, 4, 3]]
**TUPLELIST**
inverses 1 4
1 2 4 3 
**VARIABLES**
ALIAS inverses[1,4]=[[1, 2, 4, 3]]
**TUPLELIST**
M 4 4
1 1 3 4 
1 1 3 4 
3 3 3 4 
4 4 3 4 
**VARIABLES**
ALIAS M[4,4]=[[1, 1, 3, 4], [1, 1, 3, 4], [3, 3, 3, 4], [4, 4, 3, 4]]
**SEARCH**
PRINT[[S_00003_00003],[S_00003_00004],[S_00004_00003],[S_00004_00004]]
VARORDER STATIC [S_00003_00003, S_00003_00004, S_00004_00003, S_00004_00004]
**CONSTRAINTS**
watchelement_one([1, 2, 4, 3], S_00004_00004, aux4)
watchelement_one([1, 2, 4, 3], S_00004_00003, aux5)
watchelement_one([1, 2, 4], S_00003_00004, aux6)
watchelement_one([1, 2, 4], S_00003_00003, aux7)
lexleq([S_00003_00003, S_00003_00004, S_00004_00003, S_00004_00004],[aux4, aux5, aux6, aux7])
watchelement_one([3, 3, 3], S_00003_00003, 3)
watchelement_one([4, 4, 3, 4], S_00004_00003, 4)
watchelement_one([3, 3, 3], S_00003_00004, 3)
watchelement_one([4, 4, 3, 4], S_00004_00004, 4)
watchelement_one([3, 3, S_00003_00003], S_00003_00003, 3)
watchelement_one([4, 4, S_00003_00004, S_00004_00004], S_00004_00003, 4)
watchelement_one([3, 3, S_00003_00003], S_00003_00004, 3)
watchelement_one([4, 4, S_00003_00004, S_00004_00004], S_00004_00004, 4)
watchelement_one([1, 1, 3], S_00003_00003, S_00003_00003)
watchelement_one([1, 1, 3], S_00003_00004, S_00003_00004)
watchelement_one([1, 1, 3, 4, 1, 1, 3, 4, 3], aux0, S_00003_00003)
watchelement_one([1, 3, 4, 1, 1, 3, 4, 3, 3], aux0, S_00003_00003)
watchelement_one([1, 1, 3, 4, 1, 1, 3, 4, 3, 3, 3], aux8, S_00003_00003)
watchelement_one([1, 1, 3, 4, 1, 1, 3, 4, 3, 3, 3], aux9, S_00003_00004)
watchelement_one([1, 1, 3, 4, 1, 1, 3, 4, 3], aux1, S_00003_00004)
watchelement_one([1, 3, 4, 1, 1, 3, 4, 3, 3], aux1, S_00003_00004)
watchelement_one([1, 1, 3, 4, 1, 1, 3, 4, 3, 3, 3], aux10, S_00003_00003)
watchelement_one([1, 1, 3, 4, 1, 1, 3, 4, 3, 3, 3], aux11, S_00003_00004)
watchelement_one([1, 1, 3, 4], S_00004_00003, S_00004_00003)
watchelement_one([1, 1, 3, 4], S_00004_00004, S_00004_00004)
watchelement_one([1, 1, 3, 4, 1, 1, 3, 4, 3, 3, 3, 4, 4], aux3, S_00004_00003)
watchelement_one([1, 3, 4, 1, 1, 3, 4, 3, 3, 3, 4, 4, 4], aux3, S_00004_00003)
watchelement_one([1, 1, 3, 4, 1, 1, 3, 4, 3, 3, 3, 4, 4, 4, 3, 4], aux12, S_00004_00003)
watchelement_one([1, 1, 3, 4, 1, 1, 3, 4, 3, 3, 3, 4, 4, 4, 3, 4], aux13, S_00004_00004)
watchelement_one([1, 1, 3, 4, 1, 1, 3, 4, 3, 3, 3, 4, 4], aux2, S_00004_00004)
watchelement_one([1, 3, 4, 1, 1, 3, 4, 3, 3, 3, 4, 4, 4], aux2, S_00004_00004)
watchelement_one([1, 1, 3, 4, 1, 1, 3, 4, 3, 3, 3, 4, 4, 4, 3, 4], aux14, S_00004_00003)
watchelement_one([1, 1, 3, 4, 1, 1, 3, 4, 3, 3, 3, 4, 4, 4, 3, 4], aux15, S_00004_00004)
watchelement_one([1, 2, 3], S_00003_00003, S_00003_00003)
watchelement_one([1, 2, 3], S_00003_00004, S_00003_00004)
watchelement_one([1, 2, S_00003_00003], S_00003_00003, S_00003_00003)
watchelement_one([1, 2, S_00003_00003], S_00003_00004, S_00003_00004)
watchelement_one([1, 2, S_00004_00003], S_00003_00003, S_00004_00003)
watchelement_one([1, 2, S_00004_00003], S_00003_00004, S_00004_00004)
watchelement_one([1, 2, 3, 4], S_00004_00003, S_00004_00003)
watchelement_one([1, 2, 3, 4], S_00004_00004, S_00004_00004)
watchelement_one([1, 2, S_00003_00003, S_00003_00004], S_00004_00003, S_00003_00003)
watchelement_one([1, 2, S_00003_00003, S_00003_00004], S_00004_00004, S_00003_00004)
watchelement_one([1, 2, S_00004_00003, S_00004_00004], S_00004_00003, S_00004_00003)
watchelement_one([1, 2, S_00004_00003, S_00004_00004], S_00004_00004, S_00004_00004)
weightedsumleq([1,5],[-4,S_00003_00003],aux8)
weightedsumgeq([1,5],[-4,S_00003_00003],aux8)
weightedsumleq([1,4,1],[-4,S_00003_00003,S_00003_00004],aux9)
weightedsumgeq([1,4,1],[-4,S_00003_00003,S_00003_00004],aux9)
weightedsumleq([1,1,4],[-4,S_00003_00003,S_00003_00004],aux10)
weightedsumgeq([1,1,4],[-4,S_00003_00003,S_00003_00004],aux10)
weightedsumleq([1,5],[-4,S_00003_00004],aux11)
weightedsumgeq([1,5],[-4,S_00003_00004],aux11)
weightedsumleq([5,1],[S_00004_00003,-4],aux12)
weightedsumgeq([5,1],[S_00004_00003,-4],aux12)
weightedsumleq([4,1,1],[S_00004_00003,S_00004_00004,-4],aux13)
weightedsumgeq([4,1,1],[S_00004_00003,S_00004_00004,-4],aux13)
weightedsumleq([1,4,1],[S_00004_00003,S_00004_00004,-4],aux14)
weightedsumgeq([1,4,1],[S_00004_00003,S_00004_00004,-4],aux14)
weightedsumleq([5,1],[S_00004_00004,-4],aux15)
weightedsumgeq([5,1],[S_00004_00004,-4],aux15)
weightedsumleq([1,4],[-3,S_00003_00003],aux0)
weightedsumgeq([1,4],[-3,S_00003_00003],aux0)
weightedsumleq([1,4],[-3,S_00003_00004],aux1)
weightedsumgeq([1,4],[-3,S_00003_00004],aux1)
weightedsumleq([4,1],[S_00004_00004,-3],aux2)
weightedsumgeq([4,1],[S_00004_00004,-3],aux2)
weightedsumleq([4,1],[S_00004_00003,-3],aux3)
weightedsumgeq([4,1],[S_00004_00003,-3],aux3)
**EOF**
