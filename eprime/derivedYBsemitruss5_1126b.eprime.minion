MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 10
# CSE_active_eliminated_expressions = 42
# CSE_active_total_size = 42
**VARIABLES**
DISCRETE S_00001_00001 #
{1..2}
DISCRETE S_00001_00005 #
{1..2}
DISCRETE S_00005_00001 #
{2..5}
**CONSTRAINTS**
w-inintervalset(S_00005_00001, [2,2,5,5])
**VARIABLES**
DISCRETE S_00005_00005 #
{2..5}
**CONSTRAINTS**
w-inintervalset(S_00005_00005, [2,2,5,5])
**VARIABLES**
DISCRETE aux0 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 2], S_00001_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux0, [2,2,5,5])
**VARIABLES**
DISCRETE aux1 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 2], S_00001_00005)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux1, [2,2,5,5])
**VARIABLES**
DISCRETE aux4 #Active-CSE: 3 occurrences of this expression or equivalent: (5*S_00005_00001 + -9)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux4, [1,1,16,16])
**VARIABLES**
DISCRETE aux5 #Active-CSE: 3 occurrences of this expression or equivalent: (5*S_00005_00005 + -9)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux5, [1,1,16,16])
**VARIABLES**
DISCRETE aux6 #Active-CSE: 11 occurrences of this expression or equivalent: (S_00005_00005 + -1)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux6, [1,1,4,4])
**VARIABLES**
DISCRETE aux7 #Active-CSE: 11 occurrences of this expression or equivalent: (S_00005_00001 + -1)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux7, [1,1,4,4])
**VARIABLES**
DISCRETE aux8 #Active-CSE: 3 occurrences of this expression or equivalent: (5*S_00001_00005 + -4)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux8, [1,1,6,6])
**VARIABLES**
DISCRETE aux9 #Active-CSE: 3 occurrences of this expression or equivalent: (5*S_00001_00001 + -4)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux9, [1,1,6,6])
**VARIABLES**
DISCRETE aux10 #(6*S_00001_00001 + -5)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux10, [1,1,7,7])
**VARIABLES**
DISCRETE aux11 #(5*S_00001_00001 + S_00001_00005 + -5)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux11, [1,2,6,7])
**VARIABLES**
DISCRETE aux12 #(S_00001_00001 + 5*S_00001_00005 + -5)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux12, [1,2,6,7])
**VARIABLES**
DISCRETE aux13 #(6*S_00001_00005 + -5)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux13, [1,1,7,7])
**VARIABLES**
DISCRETE aux14 #(6*S_00005_00001 + -11)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux14, [1,1,19,19])
**VARIABLES**
DISCRETE aux15 #(5*S_00005_00001 + S_00005_00005 + -11)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux15, [1,1,4,4,16,16,19,19])
**VARIABLES**
DISCRETE aux16 #(S_00005_00001 + 5*S_00005_00005 + -11)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux16, [1,1,4,4,16,16,19,19])
**VARIABLES**
DISCRETE aux17 #(6*S_00005_00005 + -11)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux17, [1,1,19,19])
**VARIABLES**
DISCRETE aux18 #ElementOne([2, 4, 3, 5], aux7)
{2..5}
DISCRETE aux19 #ElementOne([2, 4, 3, 5], aux6)
{2..5}
DISCRETE aux20 #ElementOne([2, 3, 4, 1], aux6)
{1..4}
DISCRETE aux21 #ElementOne([2, 3, 4, 1], aux7)
{1..4}
DISCRETE aux22 #ElementOne([2, 4, 3, 1], aux6)
{1..4}
DISCRETE aux23 #ElementOne([2, 4, 3, 1], aux7)
{1..4}
**TUPLELIST**
perms 3 5
1 2 4 3 5 
5 2 3 4 1 
5 2 4 3 1 
**VARIABLES**
ALIAS perms[3,5]=[[1, 2, 4, 3, 5], [5, 2, 3, 4, 1], [5, 2, 4, 3, 1]]
**TUPLELIST**
inverses 3 5
1 2 4 3 5 
5 2 3 4 1 
5 2 4 3 1 
**VARIABLES**
ALIAS inverses[3,5]=[[1, 2, 4, 3, 5], [5, 2, 3, 4, 1], [5, 2, 4, 3, 1]]
**TUPLELIST**
M 5 5
1 1 1 1 5 
1 2 2 2 5 
1 2 3 2 5 
1 2 2 4 5 
1 5 5 5 5 
**VARIABLES**
ALIAS M[5,5]=[[1, 1, 1, 1, 5], [1, 2, 2, 2, 5], [1, 2, 3, 2, 5], [1, 2, 2, 4, 5], [1, 5, 5, 5, 5]]
**SEARCH**
PRINT[[S_00001_00001],[S_00001_00005],[S_00005_00001],[S_00005_00005]]
VARORDER STATIC [S_00001_00001, S_00001_00005, S_00005_00001, S_00005_00005]
**CONSTRAINTS**
watchelement_one([2, 4, 3, 5], aux7, aux18)
watchelement_one([2, 4, 3, 5], aux6, aux19)
watchelement_one([2, 3, 4, 1], aux6, aux20)
watchelement_one([2, 3, 4, 1], aux7, aux21)
watchelement_one([2, 4, 3, 1], aux6, aux22)
watchelement_one([2, 4, 3, 1], aux7, aux23)
watchelement_one([5, 2], S_00001_00001, aux0)
watchelement_one([5, 2], S_00001_00005, aux1)
watchelement_one([1, 2], S_00001_00001, S_00001_00001)
watchelement_one([1, 2], S_00001_00005, S_00001_00005)
watchelement_one([1, 1], S_00001_00001, 1)
watchelement_one([5, 5, 5, 5], aux7, 5)
watchelement_one([1, 1], S_00001_00005, 1)
watchelement_one([5, 5, 5, 5], aux6, 5)
watchelement_one([S_00001_00001, 1], S_00001_00001, 1)
watchelement_one([5, 5, 5, S_00005_00005], aux7, 5)
watchelement_one([S_00001_00001, 1], S_00001_00005, 1)
watchelement_one([5, 5, 5, S_00005_00005], aux6, 5)
watchelement_one([1, 1, 1, 1, 5, 1, 2], aux10, S_00001_00001)
watchelement_one([1, 1, 1, 5, 1, 2], aux9, S_00001_00001)
watchelement_one([1, 1, 5, 1, 2, 2], aux9, S_00001_00001)
watchelement_one([1, 5, 1, 2, 2, 2], aux9, S_00001_00001)
watchelement_one([1, 1, 1, 1, 5, 1, 2], aux11, S_00001_00005)
watchelement_one([1, 1, 1, 1, 5, 1, 2], aux12, S_00001_00001)
watchelement_one([1, 1, 1, 5, 1, 2], aux8, S_00001_00005)
watchelement_one([1, 1, 5, 1, 2, 2], aux8, S_00001_00005)
watchelement_one([1, 5, 1, 2, 2, 2], aux8, S_00001_00005)
watchelement_one([1, 1, 1, 1, 5, 1, 2], aux13, S_00001_00005)
watchelement_one([2, 2, 2, 5, 1, 2, 3, 2, 5, 1, 2, 2, 4, 5, 1, 5, 5, 5, 5], aux14, S_00005_00001)
watchelement_one([2, 2, 2, 5, 1, 2, 3, 2, 5, 1, 2, 2, 4, 5, 1, 5], aux4, S_00005_00001)
watchelement_one([2, 2, 5, 1, 2, 3, 2, 5, 1, 2, 2, 4, 5, 1, 5, 5], aux4, S_00005_00001)
watchelement_one([2, 5, 1, 2, 3, 2, 5, 1, 2, 2, 4, 5, 1, 5, 5, 5], aux4, S_00005_00001)
watchelement_one([2, 2, 2, 5, 1, 2, 3, 2, 5, 1, 2, 2, 4, 5, 1, 5, 5, 5, 5], aux15, S_00005_00005)
watchelement_one([2, 2, 2, 5], aux7, S_00005_00001)
watchelement_one([2, 2, 2, 5], aux6, S_00005_00005)
watchelement_one([2, 3, 2, 5], aux7, S_00005_00001)
watchelement_one([2, 3, 2, 5], aux6, S_00005_00005)
watchelement_one([2, 2, 4, 5], aux7, S_00005_00001)
watchelement_one([2, 2, 4, 5], aux6, S_00005_00005)
watchelement_one([2, 2, 2, 5, 1, 2, 3, 2, 5, 1, 2, 2, 4, 5, 1, 5, 5, 5, 5], aux16, S_00005_00001)
watchelement_one([2, 2, 2, 5, 1, 2, 3, 2, 5, 1, 2, 2, 4, 5, 1, 5], aux5, S_00005_00005)
watchelement_one([2, 2, 5, 1, 2, 3, 2, 5, 1, 2, 2, 4, 5, 1, 5, 5], aux5, S_00005_00005)
watchelement_one([2, 5, 1, 2, 3, 2, 5, 1, 2, 2, 4, 5, 1, 5, 5, 5], aux5, S_00005_00005)
watchelement_one([2, 2, 2, 5, 1, 2, 3, 2, 5, 1, 2, 2, 4, 5, 1, 5, 5, 5, 5], aux17, S_00005_00005)
watchelement_one([S_00001_00001, 2], S_00001_00001, S_00001_00001)
watchelement_one([S_00001_00001, 2], S_00001_00005, S_00001_00005)
watchelement_one([S_00005_00001, 2], S_00001_00001, S_00005_00001)
watchelement_one([S_00005_00001, 2], S_00001_00005, S_00005_00005)
watchelement_one([2, 3, 4, S_00001_00005], aux7, S_00001_00001)
watchelement_one([2, 3, 4, S_00001_00005], aux6, S_00001_00005)
watchelement_one([2, 3, 4, 5], aux7, S_00005_00001)
watchelement_one([2, 3, 4, 5], aux6, S_00005_00005)
watchelement_one([2, 3, 4, S_00005_00005], aux7, S_00005_00001)
watchelement_one([2, 3, 4, S_00005_00005], aux6, S_00005_00005)
lexleq([S_00005_00001, S_00005_00005],[aux18, aux19])
lexleq([S_00001_00001, S_00001_00005, S_00005_00001, S_00005_00005],[aux20, aux21, aux1, aux0])
lexleq([S_00001_00001, S_00001_00005, S_00005_00001, S_00005_00005],[aux22, aux23, aux1, aux0])
weightedsumleq([6,1],[S_00001_00001,-5],aux10)
weightedsumgeq([6,1],[S_00001_00001,-5],aux10)
weightedsumleq([5,1,1],[S_00001_00001,S_00001_00005,-5],aux11)
weightedsumgeq([5,1,1],[S_00001_00001,S_00001_00005,-5],aux11)
weightedsumleq([1,5,1],[S_00001_00001,S_00001_00005,-5],aux12)
weightedsumgeq([1,5,1],[S_00001_00001,S_00001_00005,-5],aux12)
weightedsumleq([6,1],[S_00001_00005,-5],aux13)
weightedsumgeq([6,1],[S_00001_00005,-5],aux13)
weightedsumleq([6,1],[S_00005_00001,-11],aux14)
weightedsumgeq([6,1],[S_00005_00001,-11],aux14)
weightedsumleq([5,1,1],[S_00005_00001,S_00005_00005,-11],aux15)
weightedsumgeq([5,1,1],[S_00005_00001,S_00005_00005,-11],aux15)
weightedsumleq([1,5,1],[S_00005_00001,S_00005_00005,-11],aux16)
weightedsumgeq([1,5,1],[S_00005_00001,S_00005_00005,-11],aux16)
weightedsumleq([6,1],[S_00005_00005,-11],aux17)
weightedsumgeq([6,1],[S_00005_00005,-11],aux17)
weightedsumleq([5,1],[S_00005_00001,-9],aux4)
weightedsumgeq([5,1],[S_00005_00001,-9],aux4)
weightedsumleq([5,1],[S_00005_00005,-9],aux5)
weightedsumgeq([5,1],[S_00005_00005,-9],aux5)
sumleq([S_00005_00005,-1],aux6)
sumgeq([S_00005_00005,-1],aux6)
sumleq([S_00005_00001,-1],aux7)
sumgeq([S_00005_00001,-1],aux7)
weightedsumleq([5,1],[S_00001_00005,-4],aux8)
weightedsumgeq([5,1],[S_00001_00005,-4],aux8)
weightedsumleq([5,1],[S_00001_00001,-4],aux9)
weightedsumgeq([5,1],[S_00001_00001,-4],aux9)
**EOF**
