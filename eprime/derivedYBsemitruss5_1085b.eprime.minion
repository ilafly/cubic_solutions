MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 5
# CSE_active_eliminated_expressions = 15
# CSE_active_total_size = 24
**VARIABLES**
DISCRETE S_00001_00001 #
{1..2}
DISCRETE S_00003_00001 #
{3..5}
**CONSTRAINTS**
w-inintervalset(S_00003_00001, [3,3,5,5])
**VARIABLES**
DISCRETE aux2 #Active-CSE: 7 occurrences of this expression or equivalent: (-2 + S_00003_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux2, [1,1,3,3])
**VARIABLES**
DISCRETE aux3 #Active-CSE: 2 occurrences of this expression or equivalent: (-14 + 5*S_00003_00001)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux3, [1,1,11,11])
**VARIABLES**
DISCRETE aux4 #Active-CSE: 2 occurrences of this expression or equivalent: (5*S_00001_00001 + -4)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux4, [1,1,6,6])
**VARIABLES**
DISCRETE aux5 #(6*S_00001_00001 + -5)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux5, [1,1,7,7])
**VARIABLES**
DISCRETE aux6 #(-17 + 6*S_00003_00001)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux6, [1,1,13,13])
**VARIABLES**
**TUPLELIST**
perms 1 5
3 5 1 4 2 
**VARIABLES**
ALIAS perms[1,5]=[[3, 5, 1, 4, 2]]
**TUPLELIST**
inverses 1 5
3 5 1 4 2 
**VARIABLES**
ALIAS inverses[1,5]=[[3, 5, 1, 4, 2]]
**TUPLELIST**
M 5 5
1 1 3 1 3 
1 2 3 2 5 
1 1 3 3 3 
1 2 3 4 5 
1 2 3 5 5 
**VARIABLES**
ALIAS M[5,5]=[[1, 1, 3, 1, 3], [1, 2, 3, 2, 5], [1, 1, 3, 3, 3], [1, 2, 3, 4, 5], [1, 2, 3, 5, 5]]
**SEARCH**
PRINT[[S_00001_00001],[S_00003_00001]]
VARORDER STATIC [S_00001_00001, S_00003_00001]
**CONSTRAINTS**
watchelement_one([1, 4, 2], aux2, S_00001_00001)
watchelement_one([3, 5], S_00001_00001, S_00003_00001)
watchelement_one([1, 1], S_00001_00001, 1)
watchelement_one([3, 3, 3], aux2, 3)
watchelement_one([S_00001_00001, 1], S_00001_00001, 1)
watchelement_one([S_00003_00001, 3, 3], aux2, 3)
watchelement_one([1, 1, 3, 1, 3, 1, 2], aux5, S_00001_00001)
watchelement_one([1, 3, 1, 3, 1, 2], aux4, S_00001_00001)
watchelement_one([1, 3, 1, 2, 3, 2], aux4, S_00001_00001)
watchelement_one([1, 2], S_00001_00001, S_00001_00001)
watchelement_one([3, 3, 3, 1, 2, 3, 4, 5, 1, 2, 3, 5, 5], aux6, S_00003_00001)
watchelement_one([3, 1, 2, 3, 4, 5, 1, 2, 3, 5, 5], aux3, S_00003_00001)
watchelement_one([3, 3, 1, 2, 3, 4, 5, 1, 2, 3, 5], aux3, S_00003_00001)
watchelement_one([3, 5, 5], aux2, S_00003_00001)
watchelement_one([3, 4, 5], aux2, S_00003_00001)
watchelement_one([S_00001_00001, 2], S_00001_00001, S_00001_00001)
watchelement_one([S_00003_00001, 5], S_00001_00001, S_00003_00001)
watchelement_one([S_00001_00001, 4, 2], aux2, S_00001_00001)
watchelement_one([S_00003_00001, 4, 5], aux2, S_00003_00001)
weightedsumleq([6,1],[S_00001_00001,-5],aux5)
weightedsumgeq([6,1],[S_00001_00001,-5],aux5)
weightedsumleq([1,6],[-17,S_00003_00001],aux6)
weightedsumgeq([1,6],[-17,S_00003_00001],aux6)
sumleq([-2,S_00003_00001],aux2)
sumgeq([-2,S_00003_00001],aux2)
weightedsumleq([1,5],[-14,S_00003_00001],aux3)
weightedsumgeq([1,5],[-14,S_00003_00001],aux3)
weightedsumleq([5,1],[S_00001_00001,-4],aux4)
weightedsumgeq([5,1],[S_00001_00001,-4],aux4)
**EOF**
