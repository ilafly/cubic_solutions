MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 5
# CSE_active_eliminated_expressions = 24
# CSE_active_total_size = 15
**VARIABLES**
DISCRETE S_00001_00002 #
{2..5}
**CONSTRAINTS**
w-inintervalset(S_00001_00002, [2,2,5,5])
**VARIABLES**
DISCRETE S_00001_00003 #
{3..5}
**CONSTRAINTS**
w-inintervalset(S_00001_00003, [3,3,5,5])
**VARIABLES**
DISCRETE S_00003_00001 #
{1..4}
**CONSTRAINTS**
w-inintervalset(S_00003_00001, [1,1,4,4])
**VARIABLES**
DISCRETE aux0 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*S_00003_00001)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux0, [1,1,16,16])
**VARIABLES**
DISCRETE aux1 #Active-CSE: 2 occurrences of this expression or equivalent: (5*S_00001_00003 + -14)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux1, [1,1,11,11])
**VARIABLES**
DISCRETE aux2 #Active-CSE: 2 occurrences of this expression or equivalent: (5*S_00001_00002 + -9)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux2, [1,1,16,16])
**VARIABLES**
DISCRETE aux3 #Active-CSE: 9 occurrences of this expression or equivalent: (S_00001_00003 + -2)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux3, [1,1,3,3])
**VARIABLES**
DISCRETE aux4 #Active-CSE: 9 occurrences of this expression or equivalent: (S_00001_00002 + -1)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux4, [1,1,4,4])
**VARIABLES**
DISCRETE aux5 #(-5 + 6*S_00003_00001)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux5, [1,1,19,19])
**VARIABLES**
DISCRETE aux6 #(S_00001_00002 + -6 + 5*S_00003_00001)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux6, [1,1,4,4,16,16,19,19])
**VARIABLES**
DISCRETE aux7 #(S_00001_00003 + -7 + 5*S_00003_00001)
{1..18}
**CONSTRAINTS**
w-inintervalset(aux7, [1,1,3,3,16,16,18,18])
**VARIABLES**
DISCRETE aux8 #(5*S_00001_00002 + -10 + S_00003_00001)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux8, [1,1,4,4,16,16,19,19])
**VARIABLES**
DISCRETE aux9 #(6*S_00001_00002 + -11)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux9, [1,1,19,19])
**VARIABLES**
DISCRETE aux10 #(5*S_00001_00002 + S_00001_00003 + -12)
{1..18}
**CONSTRAINTS**
w-inintervalset(aux10, [1,1,3,3,16,16,18,18])
**VARIABLES**
DISCRETE aux11 #(5*S_00001_00003 + -15 + S_00003_00001)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux11, [1,1,4,4,11,11,14,14])
**VARIABLES**
DISCRETE aux12 #(S_00001_00002 + 5*S_00001_00003 + -16)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux12, [1,1,4,4,11,11,14,14])
**VARIABLES**
DISCRETE aux13 #(6*S_00001_00003 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux13, [1,1,13,13])
**VARIABLES**
**TUPLELIST**
M 5 5
1 2 2 1 2 
2 1 1 2 1 
2 1 1 2 1 
1 2 2 4 5 
2 1 1 5 4 
**VARIABLES**
ALIAS M[5,5]=[[1, 2, 2, 1, 2], [2, 1, 1, 2, 1], [2, 1, 1, 2, 1], [1, 2, 2, 4, 5], [2, 1, 1, 5, 4]]
**SEARCH**
PRINT[[S_00001_00002],[S_00001_00003],[S_00003_00001]]
VARORDER STATIC [S_00003_00001, S_00001_00002, S_00001_00003]
**CONSTRAINTS**
watchelement_one([1, 2, 2, 1], S_00003_00001, 1)
watchelement_one([2, 1, 1, 2], S_00003_00001, 2)
watchelement_one([2, 2, 1, 2], aux4, 2)
watchelement_one([1, 1, 2, 1], aux4, 1)
watchelement_one([2, 1, 2], aux3, 2)
watchelement_one([1, 2, 1], aux3, 1)
watchelement_one([S_00003_00001, S_00003_00001, S_00003_00001, 1], S_00003_00001, 1)
watchelement_one([S_00001_00002, S_00001_00002, S_00001_00002, 2], S_00003_00001, 2)
watchelement_one([S_00001_00003, S_00001_00003, S_00001_00003, 3], S_00003_00001, 3)
watchelement_one([S_00003_00001, S_00003_00001, 1, 1], aux4, 1)
watchelement_one([S_00001_00002, S_00001_00002, 2, 2], aux4, 2)
watchelement_one([S_00001_00003, S_00001_00003, 3, 3], aux4, 3)
watchelement_one([S_00003_00001, 1, 1], aux3, 1)
watchelement_one([S_00001_00002, 2, 2], aux3, 2)
watchelement_one([S_00001_00003, 3, 3], aux3, 3)
watchelement_one([1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 4], aux5, S_00003_00001)
watchelement_one([2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 4, 5], aux6, S_00001_00002)
watchelement_one([2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 4, 5], aux7, S_00001_00002)
watchelement_one([1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 4], aux0, S_00003_00001)
watchelement_one([2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 4, 5], aux0, S_00001_00002)
watchelement_one([2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 4, 5, 2, 1, 1, 5], aux8, S_00001_00002)
watchelement_one([1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 4, 5, 2, 1, 1, 5, 4], aux9, S_00003_00001)
watchelement_one([1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 4, 5, 2, 1, 1, 5, 4], aux10, S_00003_00001)
watchelement_one([2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 4, 5, 2, 1, 1, 5], aux2, S_00001_00002)
watchelement_one([1, 2, 1, 1, 2, 1, 1, 2, 2, 4, 5, 2, 1, 1, 5, 4], aux2, S_00003_00001)
watchelement_one([2, 1, 1, 2, 1, 1, 2, 2, 4, 5, 2, 1, 1, 5], aux11, S_00001_00002)
watchelement_one([1, 1, 2, 1, 1, 2, 2, 4, 5, 2, 1, 1, 5, 4], aux12, S_00003_00001)
watchelement_one([1, 2, 1, 1, 2, 2, 4, 5, 2, 1, 1, 5, 4], aux13, S_00003_00001)
watchelement_one([2, 1, 1, 2, 2, 4, 5, 2, 1, 1, 5], aux1, S_00001_00002)
watchelement_one([1, 1, 2, 2, 4, 5, 2, 1, 1, 5, 4], aux1, S_00003_00001)
watchelement_one([1, 2, 2, 4], S_00003_00001, S_00003_00001)
watchelement_one([2, 2, 4, 5], aux4, S_00001_00002)
watchelement_one([2, 4, 5], aux3, S_00001_00002)
watchelement_one([2, 1, 1, 5], S_00003_00001, S_00001_00002)
watchelement_one([1, 1, 5, 4], aux4, S_00003_00001)
watchelement_one([1, 5, 4], aux3, S_00003_00001)
watchelement_one([S_00003_00001, S_00001_00002, S_00001_00003, 4], S_00003_00001, S_00003_00001)
watchelement_one([S_00001_00002, S_00001_00003, 4, 5], aux4, S_00001_00002)
watchelement_one([S_00001_00003, 4, 5], aux3, S_00001_00003)
watchelement_one([1, 2, 3, 4], S_00003_00001, S_00003_00001)
watchelement_one([2, 3, 4, 5], aux4, S_00001_00002)
watchelement_one([3, 4, 5], aux3, S_00001_00003)
weightedsumleq([1,6],[-5,S_00003_00001],aux5)
weightedsumgeq([1,6],[-5,S_00003_00001],aux5)
weightedsumleq([1,1,5],[S_00001_00002,-6,S_00003_00001],aux6)
weightedsumgeq([1,1,5],[S_00001_00002,-6,S_00003_00001],aux6)
weightedsumleq([1,1,5],[S_00001_00003,-7,S_00003_00001],aux7)
weightedsumgeq([1,1,5],[S_00001_00003,-7,S_00003_00001],aux7)
weightedsumleq([5,1,1],[S_00001_00002,-10,S_00003_00001],aux8)
weightedsumgeq([5,1,1],[S_00001_00002,-10,S_00003_00001],aux8)
weightedsumleq([6,1],[S_00001_00002,-11],aux9)
weightedsumgeq([6,1],[S_00001_00002,-11],aux9)
weightedsumleq([5,1,1],[S_00001_00002,S_00001_00003,-12],aux10)
weightedsumgeq([5,1,1],[S_00001_00002,S_00001_00003,-12],aux10)
weightedsumleq([5,1,1],[S_00001_00003,-15,S_00003_00001],aux11)
weightedsumgeq([5,1,1],[S_00001_00003,-15,S_00003_00001],aux11)
weightedsumleq([1,5,1],[S_00001_00002,S_00001_00003,-16],aux12)
weightedsumgeq([1,5,1],[S_00001_00002,S_00001_00003,-16],aux12)
weightedsumleq([6,1],[S_00001_00003,-17],aux13)
weightedsumgeq([6,1],[S_00001_00003,-17],aux13)
weightedsumleq([1,5],[-4,S_00003_00001],aux0)
weightedsumgeq([1,5],[-4,S_00003_00001],aux0)
weightedsumleq([5,1],[S_00001_00003,-14],aux1)
weightedsumgeq([5,1],[S_00001_00003,-14],aux1)
weightedsumleq([5,1],[S_00001_00002,-9],aux2)
weightedsumgeq([5,1],[S_00001_00002,-9],aux2)
sumleq([S_00001_00003,-2],aux3)
sumgeq([S_00001_00003,-2],aux3)
sumleq([S_00001_00002,-1],aux4)
sumgeq([S_00001_00002,-1],aux4)
**EOF**
