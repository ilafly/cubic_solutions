MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 18
# CSE_active_eliminated_expressions = 36
# CSE_active_total_size = 60
**VARIABLES**
DISCRETE L_00001_00002 #
{1..3}
DISCRETE L_00001_00003 #
{1..2}
DISCRETE L_00002_00002 #
{1..3}
DISCRETE L_00002_00003 #
{1..2}
DISCRETE L_00003_00002 #
{1..3}
DISCRETE L_00003_00003 #
{1..2}
DISCRETE aux0 #Active-CSE: 2 occurrences of this expression or equivalent: (3*L_00002_00002 + L_00002_00003 + -3)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux0, [1,2,4,5,7,7])
**VARIABLES**
DISCRETE aux1 #Active-CSE: 2 occurrences of this expression or equivalent: (L_00002_00002 + 3*L_00002_00003 + -3)
{1..4}
DISCRETE aux2 #Active-CSE: 2 occurrences of this expression or equivalent: (3*L_00003_00002 + L_00003_00003 + -3)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux2, [1,2,4,5,7,7])
**VARIABLES**
DISCRETE aux3 #Active-CSE: 2 occurrences of this expression or equivalent: (L_00003_00002 + 3*L_00003_00003 + -3)
{1..4}
DISCRETE aux4 #Active-CSE: 2 occurrences of this expression or equivalent: (-3 + L_00001_00002 + 3*L_00001_00003)
{1..4}
DISCRETE aux5 #Active-CSE: 2 occurrences of this expression or equivalent: (-3 + 3*L_00001_00002 + L_00001_00003)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux5, [1,2,4,5,7,7])
**VARIABLES**
DISCRETE aux6 #Active-CSE: 2 occurrences of this expression or equivalent: (-3 + 4*L_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux6, [1,1,5,5])
**VARIABLES**
DISCRETE aux7 #Active-CSE: 2 occurrences of this expression or equivalent: (-3 + 4*L_00001_00002)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux7, [1,1,5,5,9,9])
**VARIABLES**
DISCRETE aux8 #Active-CSE: 2 occurrences of this expression or equivalent: (-2 + 3*L_00001_00002)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux8, [1,1,4,4,7,7])
**VARIABLES**
DISCRETE aux9 #Active-CSE: 2 occurrences of this expression or equivalent: (-2 + 3*L_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux9, [1,1,4,4])
**VARIABLES**
DISCRETE aux10 #Active-CSE: 2 occurrences of this expression or equivalent: (3*L_00003_00002 + -2)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux10, [1,1,4,4,7,7])
**VARIABLES**
DISCRETE aux11 #Active-CSE: 2 occurrences of this expression or equivalent: (3*L_00003_00003 + -2)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux11, [1,1,4,4])
**VARIABLES**
DISCRETE aux12 #Active-CSE: 2 occurrences of this expression or equivalent: (4*L_00003_00003 + -3)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux12, [1,1,5,5])
**VARIABLES**
DISCRETE aux13 #Active-CSE: 2 occurrences of this expression or equivalent: (4*L_00003_00002 + -3)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux13, [1,1,5,5,9,9])
**VARIABLES**
DISCRETE aux14 #Active-CSE: 2 occurrences of this expression or equivalent: (4*L_00002_00003 + -3)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux14, [1,1,5,5])
**VARIABLES**
DISCRETE aux15 #Active-CSE: 2 occurrences of this expression or equivalent: (4*L_00002_00002 + -3)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux15, [1,1,5,5,9,9])
**VARIABLES**
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: (3*L_00002_00003 + -2)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux16, [1,1,4,4])
**VARIABLES**
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: (3*L_00002_00002 + -2)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux17, [1,1,4,4,7,7])
**VARIABLES**
**TUPLELIST**
S 3 3
1 2 3 
1 2 3 
1 2 3 
**VARIABLES**
ALIAS S[3,3]=[[1, 2, 3], [1, 2, 3], [1, 2, 3]]
**TUPLELIST**
M 3 3
1 1 1 
1 1 1 
1 1 1 
**VARIABLES**
ALIAS M[3,3]=[[1, 1, 1], [1, 1, 1], [1, 1, 1]]
**SEARCH**
PRINT[[L_00001_00002],[L_00001_00003],[L_00002_00002],[L_00002_00003],[L_00003_00002],[L_00003_00003]]
VARORDER STATIC [L_00001_00002, L_00001_00003, L_00002_00002, L_00002_00003, L_00003_00002, L_00003_00003]
**CONSTRAINTS**
watchelement_one([1, 1, 1, 1, 1, 1, 1], aux8, 1)
watchelement_one([1, 1, 1, 1], aux9, 1)
watchelement_one([1, 1, 1, 1, 1, 1, 1], aux17, 1)
watchelement_one([1, 1, 1, 1], aux16, 1)
watchelement_one([1, 1, 1, 1, 1, 1, 1], aux10, 1)
watchelement_one([1, 1, 1, 1], aux11, 1)
watchelement_one([1, 2, 3, 1, 2, 3, 1], aux8, 1)
watchelement_one([1, 2, 3, 1], aux9, 1)
watchelement_one([1, 2, 3], L_00001_00002, L_00001_00002)
watchelement_one([1, 2, 3, 1, 2, 3, 1, 2, 3], aux7, L_00001_00002)
watchelement_one([1, 2, 3, 1], aux4, L_00001_00002)
watchelement_one([1, 2], L_00001_00003, L_00001_00003)
watchelement_one([1, 2, 3, 1, 2, 3, 1], aux5, L_00001_00003)
watchelement_one([1, 2, 3, 1, 2], aux6, L_00001_00003)
watchelement_one([1, 2, 3, 1, 2, 3, 1], aux17, 1)
watchelement_one([1, 2, 3, 1], aux16, 1)
watchelement_one([1, 2, 3], L_00002_00002, L_00002_00002)
watchelement_one([1, 2, 3, 1, 2, 3, 1, 2, 3], aux15, L_00002_00002)
watchelement_one([1, 2, 3, 1], aux1, L_00002_00002)
watchelement_one([1, 2], L_00002_00003, L_00002_00003)
watchelement_one([1, 2, 3, 1, 2, 3, 1], aux0, L_00002_00003)
watchelement_one([1, 2, 3, 1, 2], aux14, L_00002_00003)
watchelement_one([1, 2, 3, 1, 2, 3, 1], aux10, 1)
watchelement_one([1, 2, 3, 1], aux11, 1)
watchelement_one([1, 2, 3], L_00003_00002, L_00003_00002)
watchelement_one([1, 2, 3, 1, 2, 3, 1, 2, 3], aux13, L_00003_00002)
watchelement_one([1, 2, 3, 1], aux3, L_00003_00002)
watchelement_one([1, 2], L_00003_00003, L_00003_00003)
watchelement_one([1, 2, 3, 1, 2, 3, 1], aux2, L_00003_00003)
watchelement_one([1, 2, 3, 1, 2], aux12, L_00003_00003)
watchelement_one([1, L_00001_00002, L_00001_00003], L_00001_00002, 1)
watchelement_one([1, 1, 1], L_00001_00002, 1)
watchelement_one([1, L_00001_00002], L_00001_00003, 1)
watchelement_one([1, 1], L_00001_00003, 1)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1], aux7, 1)
watchelement_one([1, L_00001_00002, L_00001_00003], L_00002_00002, 1)
watchelement_one([1, 1, 1, 1, 1, 1, 1], aux5, 1)
watchelement_one([1, L_00001_00002], L_00002_00003, 1)
watchelement_one([1, 1, 1, 1], aux4, 1)
watchelement_one([1, L_00001_00002, L_00001_00003], L_00003_00002, 1)
watchelement_one([1, 1, 1, 1, 1], aux6, 1)
watchelement_one([1, L_00001_00002], L_00003_00003, 1)
watchelement_one([1, L_00002_00002, L_00002_00003], L_00001_00002, 1)
watchelement_one([1, 1, 1], L_00002_00002, 1)
watchelement_one([1, 1], L_00002_00003, 1)
watchelement_one([1, L_00002_00002], L_00001_00003, 1)
watchelement_one([1, L_00002_00002, L_00002_00003], L_00002_00002, 1)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1], aux15, 1)
watchelement_one([1, 1, 1, 1, 1, 1, 1], aux0, 1)
watchelement_one([1, L_00002_00002], L_00002_00003, 1)
watchelement_one([1, 1, 1, 1], aux1, 1)
watchelement_one([1, L_00002_00002, L_00002_00003], L_00003_00002, 1)
watchelement_one([1, L_00002_00002], L_00003_00003, 1)
watchelement_one([1, 1, 1, 1, 1], aux14, 1)
watchelement_one([1, L_00003_00002, L_00003_00003], L_00001_00002, 1)
watchelement_one([1, 1, 1], L_00003_00002, 1)
watchelement_one([1, L_00003_00002], L_00001_00003, 1)
watchelement_one([1, 1], L_00003_00003, 1)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1], aux13, 1)
watchelement_one([1, L_00003_00002, L_00003_00003], L_00002_00002, 1)
watchelement_one([1, 1, 1, 1, 1, 1, 1], aux2, 1)
watchelement_one([1, L_00003_00002], L_00002_00003, 1)
watchelement_one([1, 1, 1, 1], aux3, 1)
watchelement_one([1, L_00003_00002, L_00003_00003], L_00003_00002, 1)
watchelement_one([1, 1, 1, 1, 1], aux12, 1)
watchelement_one([1, L_00003_00002], L_00003_00003, 1)
weightedsumleq([3,1,1],[L_00002_00002,L_00002_00003,-3],aux0)
weightedsumgeq([3,1,1],[L_00002_00002,L_00002_00003,-3],aux0)
weightedsumleq([1,3,1],[L_00002_00002,L_00002_00003,-3],aux1)
weightedsumgeq([1,3,1],[L_00002_00002,L_00002_00003,-3],aux1)
weightedsumleq([3,1,1],[L_00003_00002,L_00003_00003,-3],aux2)
weightedsumgeq([3,1,1],[L_00003_00002,L_00003_00003,-3],aux2)
weightedsumleq([1,3,1],[L_00003_00002,L_00003_00003,-3],aux3)
weightedsumgeq([1,3,1],[L_00003_00002,L_00003_00003,-3],aux3)
weightedsumleq([1,1,3],[-3,L_00001_00002,L_00001_00003],aux4)
weightedsumgeq([1,1,3],[-3,L_00001_00002,L_00001_00003],aux4)
weightedsumleq([1,3,1],[-3,L_00001_00002,L_00001_00003],aux5)
weightedsumgeq([1,3,1],[-3,L_00001_00002,L_00001_00003],aux5)
weightedsumleq([1,4],[-3,L_00001_00003],aux6)
weightedsumgeq([1,4],[-3,L_00001_00003],aux6)
weightedsumleq([1,4],[-3,L_00001_00002],aux7)
weightedsumgeq([1,4],[-3,L_00001_00002],aux7)
weightedsumleq([1,3],[-2,L_00001_00002],aux8)
weightedsumgeq([1,3],[-2,L_00001_00002],aux8)
weightedsumleq([1,3],[-2,L_00001_00003],aux9)
weightedsumgeq([1,3],[-2,L_00001_00003],aux9)
weightedsumleq([3,1],[L_00003_00002,-2],aux10)
weightedsumgeq([3,1],[L_00003_00002,-2],aux10)
weightedsumleq([3,1],[L_00003_00003,-2],aux11)
weightedsumgeq([3,1],[L_00003_00003,-2],aux11)
weightedsumleq([4,1],[L_00003_00003,-3],aux12)
weightedsumgeq([4,1],[L_00003_00003,-3],aux12)
weightedsumleq([4,1],[L_00003_00002,-3],aux13)
weightedsumgeq([4,1],[L_00003_00002,-3],aux13)
weightedsumleq([4,1],[L_00002_00003,-3],aux14)
weightedsumgeq([4,1],[L_00002_00003,-3],aux14)
weightedsumleq([4,1],[L_00002_00002,-3],aux15)
weightedsumgeq([4,1],[L_00002_00002,-3],aux15)
weightedsumleq([3,1],[L_00002_00003,-2],aux16)
weightedsumgeq([3,1],[L_00002_00003,-2],aux16)
weightedsumleq([3,1],[L_00002_00002,-2],aux17)
weightedsumgeq([3,1],[L_00002_00002,-2],aux17)
**EOF**
