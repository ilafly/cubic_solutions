MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 9
# CSE_active_eliminated_expressions = 21
# CSE_active_total_size = 36
**VARIABLES**
DISCRETE L_00001_00003 #
{1..2}
DISCRETE L_00002_00003 #
{1..2}
DISCRETE L_00003_00003 #
{1..2}
DISCRETE aux3 #Active-CSE: 2 occurrences of this expression or equivalent: (-3 + 4*L_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux3, [1,1,5,5])
**VARIABLES**
DISCRETE aux4 #Active-CSE: 2 occurrences of this expression or equivalent: (-2 + 3*L_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux4, [1,1,4,4])
**VARIABLES**
DISCRETE aux5 #Active-CSE: 2 occurrences of this expression or equivalent: (3*L_00003_00003 + -2)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux5, [1,1,4,4])
**VARIABLES**
DISCRETE aux6 #Active-CSE: 2 occurrences of this expression or equivalent: (4*L_00003_00003 + -3)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux6, [1,1,5,5])
**VARIABLES**
DISCRETE aux7 #Active-CSE: 2 occurrences of this expression or equivalent: (4*L_00002_00003 + -3)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux7, [1,1,5,5])
**VARIABLES**
DISCRETE aux8 #Active-CSE: 2 occurrences of this expression or equivalent: (3*L_00002_00003 + -2)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux8, [1,1,4,4])
**VARIABLES**
**TUPLELIST**
S 3 3
1 2 3 
1 2 3 
1 2 3 
**VARIABLES**
ALIAS S[3,3]=[[1, 2, 3], [1, 2, 3], [1, 2, 3]]
**TUPLELIST**
M 3 3
1 1 3 
1 1 3 
3 3 1 
**VARIABLES**
ALIAS M[3,3]=[[1, 1, 3], [1, 1, 3], [3, 3, 1]]
**SEARCH**
PRINT[[L_00001_00003],[L_00002_00003],[L_00003_00003]]
VARORDER STATIC [L_00001_00003, L_00002_00003, L_00003_00003]
**CONSTRAINTS**
watchelement_one([1, 1], L_00001_00003, 1)
watchelement_one([1, 1], L_00003_00003, 1)
watchelement_one([1, 1], L_00002_00003, 1)
watchelement_one([1, 1, 3, 1], aux4, 1)
watchelement_one([1, 1, 3, 1, 1], aux3, 1)
watchelement_one([1, 1, 3, 1], aux8, 1)
watchelement_one([1, 1, 3, 1, 1], aux7, 1)
watchelement_one([1, 1, 3, 1], aux5, 1)
watchelement_one([1, 1, 3, 1, 1], aux6, 1)
watchelement_one([1, 2, 3, 1], aux4, 1)
watchelement_one([1, 2], L_00001_00003, L_00001_00003)
watchelement_one([1, 2, 3, 1, 2], aux3, L_00001_00003)
watchelement_one([1, 2, 3, 1], aux8, 1)
watchelement_one([1, 2], L_00002_00003, L_00002_00003)
watchelement_one([1, 2, 3, 1, 2], aux7, L_00002_00003)
watchelement_one([1, 2, 3, 1], aux5, 1)
watchelement_one([1, 2], L_00003_00003, L_00003_00003)
watchelement_one([1, 2, 3, 1, 2], aux6, L_00003_00003)
weightedsumleq([1,4],[-3,L_00001_00003],aux3)
weightedsumgeq([1,4],[-3,L_00001_00003],aux3)
weightedsumleq([1,3],[-2,L_00001_00003],aux4)
weightedsumgeq([1,3],[-2,L_00001_00003],aux4)
weightedsumleq([3,1],[L_00003_00003,-2],aux5)
weightedsumgeq([3,1],[L_00003_00003,-2],aux5)
weightedsumleq([4,1],[L_00003_00003,-3],aux6)
weightedsumgeq([4,1],[L_00003_00003,-3],aux6)
weightedsumleq([4,1],[L_00002_00003,-3],aux7)
weightedsumgeq([4,1],[L_00002_00003,-3],aux7)
weightedsumleq([3,1],[L_00002_00003,-2],aux8)
weightedsumgeq([3,1],[L_00002_00003,-2],aux8)
**EOF**
