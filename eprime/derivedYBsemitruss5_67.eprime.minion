MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 6
# CSE_active_eliminated_expressions = 42
# CSE_active_total_size = 33
**VARIABLES**
DISCRETE S_00002_00001 #
{1..5}
**CONSTRAINTS**
w-inintervalset(S_00002_00001, [1,1,5,5])
**VARIABLES**
DISCRETE S_00004_00002 #
{2..5}
**CONSTRAINTS**
w-inintervalset(S_00004_00002, [2,2,5,5])
**VARIABLES**
DISCRETE S_00004_00003 #
{3..5}
**CONSTRAINTS**
w-inintervalset(S_00004_00003, [3,3,5,5])
**VARIABLES**
DISCRETE S_00004_00004 #
{4..5}
DISCRETE aux1 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5], (S_00004_00004 + -3))
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1, [3,3,5,5])
**VARIABLES**
DISCRETE aux2 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 5], (S_00004_00004 + -3))
{2..5}
**CONSTRAINTS**
w-inintervalset(aux2, [2,2,5,5])
**VARIABLES**
DISCRETE aux3 #Active-CSE: 13 occurrences of this expression or equivalent: (S_00004_00002 + -1)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux3, [1,1,4,4])
**VARIABLES**
DISCRETE aux4 #Active-CSE: 10 occurrences of this expression or equivalent: (S_00004_00004 + -3)
{1..2}
DISCRETE aux5 #Active-CSE: 13 occurrences of this expression or equivalent: (S_00004_00003 + -2)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux5, [1,1,3,3])
**VARIABLES**
DISCRETE aux6 #(-5 + 6*S_00002_00001)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux6, [1,1,25,25])
**VARIABLES**
DISCRETE aux7 #(S_00004_00002 + -6 + 5*S_00002_00001)
{1..24}
**CONSTRAINTS**
w-inintervalset(aux7, [1,1,4,4,21,21,24,24])
**VARIABLES**
DISCRETE aux8 #(S_00004_00003 + -7 + 5*S_00002_00001)
{1..23}
**CONSTRAINTS**
w-inintervalset(aux8, [1,1,3,3,21,21,23,23])
**VARIABLES**
DISCRETE aux9 #(S_00004_00004 + -8 + 5*S_00002_00001)
{1..22}
**CONSTRAINTS**
w-inintervalset(aux9, [1,2,21,22])
**VARIABLES**
DISCRETE aux10 #(-4 + 5*S_00002_00001)
{1..21}
**CONSTRAINTS**
w-inintervalset(aux10, [1,1,21,21])
**VARIABLES**
DISCRETE aux11 #(5*S_00004_00002 + -10 + S_00002_00001)
{1..20}
**CONSTRAINTS**
w-inintervalset(aux11, [1,1,5,5,16,16,20,20])
**VARIABLES**
DISCRETE aux12 #(6*S_00004_00002 + -11)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux12, [1,1,19,19])
**VARIABLES**
DISCRETE aux13 #(5*S_00004_00002 + S_00004_00003 + -12)
{1..18}
**CONSTRAINTS**
w-inintervalset(aux13, [1,1,3,3,16,16,18,18])
**VARIABLES**
DISCRETE aux14 #(5*S_00004_00002 + S_00004_00004 + -13)
{1..17}
**CONSTRAINTS**
w-inintervalset(aux14, [1,2,16,17])
**VARIABLES**
DISCRETE aux15 #(5*S_00004_00002 + -9)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux15, [1,1,16,16])
**VARIABLES**
DISCRETE aux16 #(5*S_00004_00003 + -15 + S_00002_00001)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux16, [1,1,5,5,11,11,15,15])
**VARIABLES**
DISCRETE aux17 #(S_00004_00002 + 5*S_00004_00003 + -16)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux17, [1,1,4,4,11,11,14,14])
**VARIABLES**
DISCRETE aux18 #(6*S_00004_00003 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux18, [1,1,13,13])
**VARIABLES**
DISCRETE aux19 #(5*S_00004_00003 + S_00004_00004 + -18)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux19, [1,2,11,12])
**VARIABLES**
DISCRETE aux20 #(5*S_00004_00003 + -14)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux20, [1,1,11,11])
**VARIABLES**
DISCRETE aux21 #(5*S_00004_00004 + -20 + S_00002_00001)
{1..10}
**CONSTRAINTS**
w-inintervalset(aux21, [1,1,5,6,10,10])
**VARIABLES**
DISCRETE aux22 #(S_00004_00002 + 5*S_00004_00004 + -21)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux22, [1,1,4,4,6,6,9,9])
**VARIABLES**
DISCRETE aux23 #(S_00004_00003 + 5*S_00004_00004 + -22)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux23, [1,1,3,3,6,6,8,8])
**VARIABLES**
DISCRETE aux24 #(6*S_00004_00004 + -23)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux24, [1,1,7,7])
**VARIABLES**
DISCRETE aux25 #(5*S_00004_00004 + -19)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux25, [1,1,6,6])
**VARIABLES**
DISCRETE aux26 #ElementOne([1, 2, 4, 3, 5], S_00002_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux26, [1,1,5,5])
**VARIABLES**
DISCRETE aux27 #ElementOne([2, 4, 3, 5], aux3)
{2..5}
DISCRETE aux28 #ElementOne([4, 3, 5], aux5)
{3..5}
DISCRETE aux29 #ElementOne([1, 3, 4, 2, 5], S_00002_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux29, [1,1,5,5])
**VARIABLES**
DISCRETE aux30 #ElementOne([3, 4, 2, 5], aux3)
{2..5}
DISCRETE aux31 #ElementOne([4, 2, 5], aux5)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux31, [2,2,4,5])
**VARIABLES**
DISCRETE aux32 #ElementOne([1, 4, 3, 2, 5], S_00002_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux32, [1,1,5,5])
**VARIABLES**
DISCRETE aux33 #ElementOne([3, 2, 5], aux5)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux33, [2,3,5,5])
**VARIABLES**
DISCRETE aux34 #ElementOne([4, 3, 2, 5], aux3)
{2..5}
DISCRETE aux35 #ElementOne([1, 4, 2, 3, 5], S_00002_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux35, [1,1,5,5])
**VARIABLES**
DISCRETE aux36 #ElementOne([2, 3, 5], aux5)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux36, [2,3,5,5])
**VARIABLES**
DISCRETE aux37 #ElementOne([4, 2, 3, 5], aux3)
{2..5}
DISCRETE aux38 #ElementOne([1, 3, 2, 4, 5], S_00002_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux38, [1,1,5,5])
**VARIABLES**
DISCRETE aux39 #ElementOne([2, 4, 5], aux5)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux39, [2,2,4,5])
**VARIABLES**
DISCRETE aux40 #ElementOne([3, 2, 4, 5], aux3)
{2..5}
**TUPLELIST**
perms 5 5
1 2 4 3 5 
1 4 2 3 5 
1 4 3 2 5 
1 3 4 2 5 
1 3 2 4 5 
**VARIABLES**
ALIAS perms[5,5]=[[1, 2, 4, 3, 5], [1, 4, 2, 3, 5], [1, 4, 3, 2, 5], [1, 3, 4, 2, 5], [1, 3, 2, 4, 5]]
**TUPLELIST**
inverses 5 5
1 2 4 3 5 
1 3 4 2 5 
1 4 3 2 5 
1 4 2 3 5 
1 3 2 4 5 
**VARIABLES**
ALIAS inverses[5,5]=[[1, 2, 4, 3, 5], [1, 3, 4, 2, 5], [1, 4, 3, 2, 5], [1, 4, 2, 3, 5], [1, 3, 2, 4, 5]]
**TUPLELIST**
M 5 5
1 1 1 1 1 
1 1 1 1 1 
1 1 1 1 1 
1 1 1 1 1 
1 1 1 1 5 
**VARIABLES**
ALIAS M[5,5]=[[1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 5]]
**SEARCH**
PRINT[[S_00002_00001],[S_00004_00002],[S_00004_00003],[S_00004_00004]]
VARORDER STATIC [S_00002_00001, S_00004_00002, S_00004_00003, S_00004_00004]
**CONSTRAINTS**
watchelement_one([1, 2, 4, 3, 5], S_00002_00001, aux26)
watchelement_one([2, 4, 3, 5], aux3, aux27)
watchelement_one([4, 3, 5], aux5, aux28)
watchelement_one([1, 3, 4, 2, 5], S_00002_00001, aux29)
watchelement_one([3, 4, 2, 5], aux3, aux30)
watchelement_one([4, 2, 5], aux5, aux31)
watchelement_one([1, 4, 3, 2, 5], S_00002_00001, aux32)
watchelement_one([3, 2, 5], aux5, aux33)
watchelement_one([4, 3, 2, 5], aux3, aux34)
watchelement_one([1, 4, 2, 3, 5], S_00002_00001, aux35)
watchelement_one([2, 3, 5], aux5, aux36)
watchelement_one([4, 2, 3, 5], aux3, aux37)
watchelement_one([1, 3, 2, 4, 5], S_00002_00001, aux38)
watchelement_one([2, 4, 5], aux5, aux39)
watchelement_one([3, 2, 4, 5], aux3, aux40)
watchelement_one([4, 5], aux4, S_00004_00004)
watchelement_one([3, 5], aux4, aux1)
watchelement_one([2, 5], aux4, aux2)
watchelement_one([1, 1, 1, 1, 1], S_00002_00001, 1)
watchelement_one([1, 1, 1, 1], aux3, 1)
watchelement_one([1, 1, 1], aux5, 1)
watchelement_one([1, 1], aux4, 1)
watchelement_one([S_00002_00001, S_00002_00001, S_00002_00001, S_00002_00001, 1], S_00002_00001, 1)
watchelement_one([S_00004_00002, S_00004_00002, S_00004_00002, S_00004_00002, 2], S_00002_00001, 2)
watchelement_one([S_00004_00003, S_00004_00003, S_00004_00003, S_00004_00003, 3], S_00002_00001, 3)
watchelement_one([S_00004_00004, S_00004_00004, S_00004_00004, S_00004_00004, 4], S_00002_00001, 4)
watchelement_one([S_00002_00001, S_00002_00001, S_00002_00001, 1], aux3, 1)
watchelement_one([S_00004_00002, S_00004_00002, S_00004_00002, 2], aux3, 2)
watchelement_one([S_00004_00003, S_00004_00003, S_00004_00003, 3], aux3, 3)
watchelement_one([S_00004_00004, S_00004_00004, S_00004_00004, 4], aux3, 4)
watchelement_one([S_00002_00001, S_00002_00001, 1], aux5, 1)
watchelement_one([S_00004_00002, S_00004_00002, 2], aux5, 2)
watchelement_one([S_00004_00003, S_00004_00003, 3], aux5, 3)
watchelement_one([S_00004_00004, S_00004_00004, 4], aux5, 4)
watchelement_one([S_00002_00001, 1], aux4, 1)
watchelement_one([S_00004_00002, 2], aux4, 2)
watchelement_one([S_00004_00003, 3], aux4, 3)
watchelement_one([S_00004_00004, 4], aux4, 4)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5], aux6, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5], aux7, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5], aux8, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5], aux9, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5], aux10, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5], aux11, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5], aux12, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5], aux13, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5], aux14, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5], aux15, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5], aux16, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5], aux17, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5], aux18, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5], aux19, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5], aux20, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 5], aux21, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 5], aux22, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 5], aux23, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 5], aux24, S_00002_00001)
watchelement_one([1, 1, 1, 1, 1, 5], aux25, S_00002_00001)
watchelement_one([1, 1, 1, 1, 5], S_00002_00001, S_00002_00001)
watchelement_one([1, 1, 1, 5], aux3, S_00002_00001)
watchelement_one([1, 1, 5], aux5, S_00002_00001)
watchelement_one([1, 5], aux4, S_00002_00001)
watchelement_one([S_00002_00001, S_00004_00002, S_00004_00003, S_00004_00004, 5], S_00002_00001, S_00002_00001)
watchelement_one([S_00004_00002, S_00004_00003, S_00004_00004, 5], aux3, S_00004_00002)
watchelement_one([S_00004_00003, S_00004_00004, 5], aux5, S_00004_00003)
watchelement_one([S_00004_00004, 5], aux4, S_00004_00004)
watchelement_one([1, 2, 3, 4, 5], S_00002_00001, S_00002_00001)
watchelement_one([2, 3, 4, 5], aux3, S_00004_00002)
watchelement_one([3, 4, 5], aux5, S_00004_00003)
lexleq([S_00002_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux26, aux27, aux1, aux28])
lexleq([S_00002_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux29, aux2, aux30, aux31])
lexleq([S_00002_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux32, aux2, aux33, aux34])
lexleq([S_00002_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux35, aux36, aux1, aux37])
lexleq([S_00002_00001, S_00004_00002, S_00004_00003],[aux38, aux39, aux40])
weightedsumleq([1,6],[-5,S_00002_00001],aux6)
weightedsumgeq([1,6],[-5,S_00002_00001],aux6)
weightedsumleq([1,1,5],[S_00004_00002,-6,S_00002_00001],aux7)
weightedsumgeq([1,1,5],[S_00004_00002,-6,S_00002_00001],aux7)
weightedsumleq([1,1,5],[S_00004_00003,-7,S_00002_00001],aux8)
weightedsumgeq([1,1,5],[S_00004_00003,-7,S_00002_00001],aux8)
weightedsumleq([1,1,5],[S_00004_00004,-8,S_00002_00001],aux9)
weightedsumgeq([1,1,5],[S_00004_00004,-8,S_00002_00001],aux9)
weightedsumleq([1,5],[-4,S_00002_00001],aux10)
weightedsumgeq([1,5],[-4,S_00002_00001],aux10)
weightedsumleq([5,1,1],[S_00004_00002,-10,S_00002_00001],aux11)
weightedsumgeq([5,1,1],[S_00004_00002,-10,S_00002_00001],aux11)
weightedsumleq([6,1],[S_00004_00002,-11],aux12)
weightedsumgeq([6,1],[S_00004_00002,-11],aux12)
weightedsumleq([5,1,1],[S_00004_00002,S_00004_00003,-12],aux13)
weightedsumgeq([5,1,1],[S_00004_00002,S_00004_00003,-12],aux13)
weightedsumleq([5,1,1],[S_00004_00002,S_00004_00004,-13],aux14)
weightedsumgeq([5,1,1],[S_00004_00002,S_00004_00004,-13],aux14)
weightedsumleq([5,1],[S_00004_00002,-9],aux15)
weightedsumgeq([5,1],[S_00004_00002,-9],aux15)
weightedsumleq([5,1,1],[S_00004_00003,-15,S_00002_00001],aux16)
weightedsumgeq([5,1,1],[S_00004_00003,-15,S_00002_00001],aux16)
weightedsumleq([1,5,1],[S_00004_00002,S_00004_00003,-16],aux17)
weightedsumgeq([1,5,1],[S_00004_00002,S_00004_00003,-16],aux17)
weightedsumleq([6,1],[S_00004_00003,-17],aux18)
weightedsumgeq([6,1],[S_00004_00003,-17],aux18)
weightedsumleq([5,1,1],[S_00004_00003,S_00004_00004,-18],aux19)
weightedsumgeq([5,1,1],[S_00004_00003,S_00004_00004,-18],aux19)
weightedsumleq([5,1],[S_00004_00003,-14],aux20)
weightedsumgeq([5,1],[S_00004_00003,-14],aux20)
weightedsumleq([5,1,1],[S_00004_00004,-20,S_00002_00001],aux21)
weightedsumgeq([5,1,1],[S_00004_00004,-20,S_00002_00001],aux21)
weightedsumleq([1,5,1],[S_00004_00002,S_00004_00004,-21],aux22)
weightedsumgeq([1,5,1],[S_00004_00002,S_00004_00004,-21],aux22)
weightedsumleq([1,5,1],[S_00004_00003,S_00004_00004,-22],aux23)
weightedsumgeq([1,5,1],[S_00004_00003,S_00004_00004,-22],aux23)
weightedsumleq([6,1],[S_00004_00004,-23],aux24)
weightedsumgeq([6,1],[S_00004_00004,-23],aux24)
weightedsumleq([5,1],[S_00004_00004,-19],aux25)
weightedsumgeq([5,1],[S_00004_00004,-19],aux25)
sumleq([S_00004_00002,-1],aux3)
sumgeq([S_00004_00002,-1],aux3)
sumleq([S_00004_00004,-3],aux4)
sumgeq([S_00004_00004,-3],aux4)
sumleq([S_00004_00003,-2],aux5)
sumgeq([S_00004_00003,-2],aux5)
**EOF**
