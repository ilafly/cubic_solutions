MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 2
# CSE_active_eliminated_expressions = 12
# CSE_active_total_size = 6
**VARIABLES**
DISCRETE S_00001_00001 #
{1..2}
DISCRETE S_00001_00003 #
{1..2}
DISCRETE S_00003_00001 #
{2..3}
DISCRETE S_00003_00003 #
{2..3}
DISCRETE aux0 #Active-CSE: 6 occurrences of this expression or equivalent: (-1 + S_00003_00003)
{1..2}
DISCRETE aux1 #Active-CSE: 6 occurrences of this expression or equivalent: (-1 + S_00003_00001)
{1..2}
DISCRETE aux2 #ElementOne([2, 1], aux0)
{1..2}
DISCRETE aux3 #ElementOne([2, 1], aux1)
{1..2}
DISCRETE aux4 #ElementOne([3, 2], S_00001_00003)
{2..3}
DISCRETE aux5 #ElementOne([3, 2], S_00001_00001)
{2..3}
DISCRETE aux6 #(4*S_00001_00001 + -3)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux6, [1,1,5,5])
**VARIABLES**
DISCRETE aux7 #(3*S_00001_00001 + -2)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux7, [1,1,4,4])
**VARIABLES**
DISCRETE aux8 #(3*S_00001_00001 + S_00001_00003 + -3)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux8, [1,2,4,5])
**VARIABLES**
DISCRETE aux9 #(S_00001_00001 + 3*S_00001_00003 + -3)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux9, [1,2,4,5])
**VARIABLES**
DISCRETE aux10 #(3*S_00001_00003 + -2)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux10, [1,1,4,4])
**VARIABLES**
DISCRETE aux11 #(4*S_00001_00003 + -3)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux11, [1,1,5,5])
**VARIABLES**
DISCRETE aux12 #(-7 + 4*S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux12, [1,1,5,5])
**VARIABLES**
DISCRETE aux13 #(-5 + 3*S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux13, [1,1,4,4])
**VARIABLES**
DISCRETE aux14 #(-7 + 3*S_00003_00001 + S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux14, [1,2,4,5])
**VARIABLES**
DISCRETE aux15 #(-7 + S_00003_00001 + 3*S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux15, [1,2,4,5])
**VARIABLES**
DISCRETE aux16 #(-5 + 3*S_00003_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux16, [1,1,4,4])
**VARIABLES**
DISCRETE aux17 #(-7 + 4*S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux17, [1,1,5,5])
**VARIABLES**
**TUPLELIST**
perms 1 3
3 2 1 
**VARIABLES**
ALIAS perms[1,3]=[[3, 2, 1]]
**TUPLELIST**
inverses 1 3
3 2 1 
**VARIABLES**
ALIAS inverses[1,3]=[[3, 2, 1]]
**TUPLELIST**
M 3 3
1 1 3 
1 2 3 
1 3 3 
**VARIABLES**
ALIAS M[3,3]=[[1, 1, 3], [1, 2, 3], [1, 3, 3]]
**SEARCH**
PRINT[[S_00001_00001],[S_00001_00003],[S_00003_00001],[S_00003_00003]]
VARORDER STATIC [S_00001_00001, S_00001_00003, S_00003_00001, S_00003_00003]
**CONSTRAINTS**
watchelement_one([2, 1], aux0, aux2)
watchelement_one([2, 1], aux1, aux3)
watchelement_one([3, 2], S_00001_00003, aux4)
watchelement_one([3, 2], S_00001_00001, aux5)
lexleq([S_00001_00001, S_00001_00003, S_00003_00001, S_00003_00003],[aux2, aux3, aux4, aux5])
watchelement_one([1, 1], S_00001_00001, 1)
watchelement_one([3, 3], aux1, 3)
watchelement_one([1, 1], S_00001_00003, 1)
watchelement_one([3, 3], aux0, 3)
watchelement_one([S_00001_00001, 1], S_00001_00001, 1)
watchelement_one([3, S_00003_00003], aux1, 3)
watchelement_one([S_00001_00001, 1], S_00001_00003, 1)
watchelement_one([3, S_00003_00003], aux0, 3)
watchelement_one([1, 1, 3, 1, 2], aux6, S_00001_00001)
watchelement_one([1, 3, 1, 2], aux7, S_00001_00001)
watchelement_one([1, 1, 3, 1, 2], aux8, S_00001_00003)
watchelement_one([1, 2], S_00001_00001, S_00001_00001)
watchelement_one([1, 2], S_00001_00003, S_00001_00003)
watchelement_one([1, 1, 3, 1, 2], aux9, S_00001_00001)
watchelement_one([1, 3, 1, 2], aux10, S_00001_00003)
watchelement_one([1, 1, 3, 1, 2], aux11, S_00001_00003)
watchelement_one([2, 3, 1, 3, 3], aux12, S_00003_00001)
watchelement_one([2, 3, 1, 3], aux13, S_00003_00001)
watchelement_one([2, 3, 1, 3, 3], aux14, S_00003_00003)
watchelement_one([2, 3], aux1, S_00003_00001)
watchelement_one([2, 3], aux0, S_00003_00003)
watchelement_one([2, 3, 1, 3, 3], aux15, S_00003_00001)
watchelement_one([2, 3, 1, 3], aux16, S_00003_00003)
watchelement_one([2, 3, 1, 3, 3], aux17, S_00003_00003)
watchelement_one([S_00001_00001, 2], S_00001_00001, S_00001_00001)
watchelement_one([S_00001_00001, 2], S_00001_00003, S_00001_00003)
watchelement_one([S_00003_00001, 2], S_00001_00001, S_00003_00001)
watchelement_one([S_00003_00001, 2], S_00001_00003, S_00003_00003)
watchelement_one([2, S_00001_00003], aux1, S_00001_00001)
watchelement_one([2, S_00001_00003], aux0, S_00001_00003)
watchelement_one([2, S_00003_00003], aux1, S_00003_00001)
watchelement_one([2, S_00003_00003], aux0, S_00003_00003)
weightedsumleq([4,1],[S_00001_00001,-3],aux6)
weightedsumgeq([4,1],[S_00001_00001,-3],aux6)
weightedsumleq([3,1],[S_00001_00001,-2],aux7)
weightedsumgeq([3,1],[S_00001_00001,-2],aux7)
weightedsumleq([3,1,1],[S_00001_00001,S_00001_00003,-3],aux8)
weightedsumgeq([3,1,1],[S_00001_00001,S_00001_00003,-3],aux8)
weightedsumleq([1,3,1],[S_00001_00001,S_00001_00003,-3],aux9)
weightedsumgeq([1,3,1],[S_00001_00001,S_00001_00003,-3],aux9)
weightedsumleq([3,1],[S_00001_00003,-2],aux10)
weightedsumgeq([3,1],[S_00001_00003,-2],aux10)
weightedsumleq([4,1],[S_00001_00003,-3],aux11)
weightedsumgeq([4,1],[S_00001_00003,-3],aux11)
weightedsumleq([1,4],[-7,S_00003_00001],aux12)
weightedsumgeq([1,4],[-7,S_00003_00001],aux12)
weightedsumleq([1,3],[-5,S_00003_00001],aux13)
weightedsumgeq([1,3],[-5,S_00003_00001],aux13)
weightedsumleq([1,3,1],[-7,S_00003_00001,S_00003_00003],aux14)
weightedsumgeq([1,3,1],[-7,S_00003_00001,S_00003_00003],aux14)
weightedsumleq([1,1,3],[-7,S_00003_00001,S_00003_00003],aux15)
weightedsumgeq([1,1,3],[-7,S_00003_00001,S_00003_00003],aux15)
weightedsumleq([1,3],[-5,S_00003_00003],aux16)
weightedsumgeq([1,3],[-5,S_00003_00003],aux16)
weightedsumleq([1,4],[-7,S_00003_00003],aux17)
weightedsumgeq([1,4],[-7,S_00003_00003],aux17)
sumleq([-1,S_00003_00003],aux0)
sumgeq([-1,S_00003_00003],aux0)
sumleq([-1,S_00003_00001],aux1)
sumgeq([-1,S_00003_00001],aux1)
**EOF**
