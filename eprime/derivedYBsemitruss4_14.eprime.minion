MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 2
# CSE_active_eliminated_expressions = 16
# CSE_active_total_size = 6
**VARIABLES**
DISCRETE S_00002_00002 #
{2..4}
**CONSTRAINTS**
w-inintervalset(S_00002_00002, [2,2,4,4])
**VARIABLES**
DISCRETE S_00002_00003 #
{3..4}
DISCRETE S_00003_00001 #
{1..4}
**CONSTRAINTS**
w-inintervalset(S_00003_00001, [1,1,4,4])
**VARIABLES**
DISCRETE aux0 #Active-CSE: 8 occurrences of this expression or equivalent: (-2 + S_00002_00003)
{1..2}
DISCRETE aux1 #Active-CSE: 8 occurrences of this expression or equivalent: (-1 + S_00002_00002)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux1, [1,1,3,3])
**VARIABLES**
DISCRETE aux2 #ElementOne([1, 3, 2, 4], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux2, [1,1,4,4])
**VARIABLES**
DISCRETE aux3 #ElementOne([2, 4], aux0)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux3, [2,2,4,4])
**VARIABLES**
DISCRETE aux4 #ElementOne([3, 2, 4], aux1)
{2..4}
DISCRETE aux5 #(-4 + 5*S_00003_00001)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux5, [1,1,16,16])
**VARIABLES**
DISCRETE aux6 #(-5 + S_00002_00002 + 4*S_00003_00001)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux6, [1,1,3,3,13,13,15,15])
**VARIABLES**
DISCRETE aux7 #(-6 + S_00002_00003 + 4*S_00003_00001)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux7, [1,2,13,14])
**VARIABLES**
DISCRETE aux8 #(-3 + 4*S_00003_00001)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux8, [1,1,13,13])
**VARIABLES**
DISCRETE aux9 #(-8 + 4*S_00002_00002 + S_00003_00001)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux9, [1,1,4,4,9,9,12,12])
**VARIABLES**
DISCRETE aux10 #(-9 + 5*S_00002_00002)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux10, [1,1,11,11])
**VARIABLES**
DISCRETE aux11 #(-10 + 4*S_00002_00002 + S_00002_00003)
{1..10}
**CONSTRAINTS**
w-inintervalset(aux11, [1,2,9,10])
**VARIABLES**
DISCRETE aux12 #(-7 + 4*S_00002_00002)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux12, [1,1,9,9])
**VARIABLES**
DISCRETE aux13 #(-12 + 4*S_00002_00003 + S_00003_00001)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux13, [1,1,4,5,8,8])
**VARIABLES**
DISCRETE aux14 #(-13 + S_00002_00002 + 4*S_00002_00003)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux14, [1,1,3,3,5,5,7,7])
**VARIABLES**
DISCRETE aux15 #(-14 + 5*S_00002_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux15, [1,1,6,6])
**VARIABLES**
DISCRETE aux16 #(-11 + 4*S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux16, [1,1,5,5])
**VARIABLES**
**TUPLELIST**
perms 1 4
1 3 2 4 
**VARIABLES**
ALIAS perms[1,4]=[[1, 3, 2, 4]]
**TUPLELIST**
inverses 1 4
1 3 2 4 
**VARIABLES**
ALIAS inverses[1,4]=[[1, 3, 2, 4]]
**TUPLELIST**
M 4 4
1 1 1 1 
1 1 1 1 
1 1 1 1 
1 1 1 4 
**VARIABLES**
ALIAS M[4,4]=[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 4]]
**SEARCH**
PRINT[[S_00002_00002],[S_00002_00003],[S_00003_00001]]
VARORDER STATIC [S_00003_00001, S_00002_00002, S_00002_00003]
**CONSTRAINTS**
watchelement_one([1, 3, 2, 4], S_00003_00001, aux2)
watchelement_one([2, 4], aux0, aux3)
watchelement_one([3, 2, 4], aux1, aux4)
lexleq([S_00003_00001, S_00002_00002, S_00002_00003],[aux2, aux3, aux4])
watchelement_one([1, 1, 1, 1], S_00003_00001, 1)
watchelement_one([1, 1, 1], aux1, 1)
watchelement_one([1, 1], aux0, 1)
watchelement_one([S_00003_00001, S_00003_00001, S_00003_00001, 1], S_00003_00001, 1)
watchelement_one([S_00002_00002, S_00002_00002, S_00002_00002, 2], S_00003_00001, 2)
watchelement_one([S_00002_00003, S_00002_00003, S_00002_00003, 3], S_00003_00001, 3)
watchelement_one([S_00003_00001, S_00003_00001, 1], aux1, 1)
watchelement_one([S_00002_00002, S_00002_00002, 2], aux1, 2)
watchelement_one([S_00002_00003, S_00002_00003, 3], aux1, 3)
watchelement_one([S_00003_00001, 1], aux0, 1)
watchelement_one([S_00002_00002, 2], aux0, 2)
watchelement_one([S_00002_00003, 3], aux0, 3)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4], aux5, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4], aux6, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4], aux7, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4], aux8, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4], aux9, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4], aux10, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 1, 4], aux11, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 1, 4], aux12, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 1, 4], aux13, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 1, 4], aux14, S_00003_00001)
watchelement_one([1, 1, 1, 1, 1, 4], aux15, S_00003_00001)
watchelement_one([1, 1, 1, 1, 4], aux16, S_00003_00001)
watchelement_one([1, 1, 1, 4], S_00003_00001, S_00003_00001)
watchelement_one([1, 1, 4], aux1, S_00003_00001)
watchelement_one([1, 4], aux0, S_00003_00001)
watchelement_one([S_00003_00001, S_00002_00002, S_00002_00003, 4], S_00003_00001, S_00003_00001)
watchelement_one([S_00002_00002, S_00002_00003, 4], aux1, S_00002_00002)
watchelement_one([S_00002_00003, 4], aux0, S_00002_00003)
watchelement_one([1, 2, 3, 4], S_00003_00001, S_00003_00001)
watchelement_one([2, 3, 4], aux1, S_00002_00002)
watchelement_one([3, 4], aux0, S_00002_00003)
weightedsumleq([1,5],[-4,S_00003_00001],aux5)
weightedsumgeq([1,5],[-4,S_00003_00001],aux5)
weightedsumleq([1,1,4],[-5,S_00002_00002,S_00003_00001],aux6)
weightedsumgeq([1,1,4],[-5,S_00002_00002,S_00003_00001],aux6)
weightedsumleq([1,1,4],[-6,S_00002_00003,S_00003_00001],aux7)
weightedsumgeq([1,1,4],[-6,S_00002_00003,S_00003_00001],aux7)
weightedsumleq([1,4],[-3,S_00003_00001],aux8)
weightedsumgeq([1,4],[-3,S_00003_00001],aux8)
weightedsumleq([1,4,1],[-8,S_00002_00002,S_00003_00001],aux9)
weightedsumgeq([1,4,1],[-8,S_00002_00002,S_00003_00001],aux9)
weightedsumleq([1,5],[-9,S_00002_00002],aux10)
weightedsumgeq([1,5],[-9,S_00002_00002],aux10)
weightedsumleq([1,4,1],[-10,S_00002_00002,S_00002_00003],aux11)
weightedsumgeq([1,4,1],[-10,S_00002_00002,S_00002_00003],aux11)
weightedsumleq([1,4],[-7,S_00002_00002],aux12)
weightedsumgeq([1,4],[-7,S_00002_00002],aux12)
weightedsumleq([1,4,1],[-12,S_00002_00003,S_00003_00001],aux13)
weightedsumgeq([1,4,1],[-12,S_00002_00003,S_00003_00001],aux13)
weightedsumleq([1,1,4],[-13,S_00002_00002,S_00002_00003],aux14)
weightedsumgeq([1,1,4],[-13,S_00002_00002,S_00002_00003],aux14)
weightedsumleq([1,5],[-14,S_00002_00003],aux15)
weightedsumgeq([1,5],[-14,S_00002_00003],aux15)
weightedsumleq([1,4],[-11,S_00002_00003],aux16)
weightedsumgeq([1,4],[-11,S_00002_00003],aux16)
sumleq([-2,S_00002_00003],aux0)
sumgeq([-2,S_00002_00003],aux0)
sumleq([-1,S_00002_00002],aux1)
sumgeq([-1,S_00002_00002],aux1)
**EOF**
