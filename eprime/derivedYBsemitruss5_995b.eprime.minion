MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 8
# CSE_active_eliminated_expressions = 36
# CSE_active_total_size = 24
**VARIABLES**
DISCRETE S_00003_00003 #
{3..4}
DISCRETE S_00003_00005 #
{3..4}
DISCRETE S_00005_00003 #
{4..5}
DISCRETE S_00005_00005 #
{4..5}
DISCRETE aux0 #Active-CSE: 3 occurrences of this expression or equivalent: (5*S_00005_00003 + -19)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux0, [1,1,6,6])
**VARIABLES**
DISCRETE aux1 #Active-CSE: 3 occurrences of this expression or equivalent: (5*S_00005_00005 + -19)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1, [1,1,6,6])
**VARIABLES**
DISCRETE aux2 #Active-CSE: 3 occurrences of this expression or equivalent: (-14 + 5*S_00003_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux2, [1,1,6,6])
**VARIABLES**
DISCRETE aux3 #Active-CSE: 3 occurrences of this expression or equivalent: (-14 + 5*S_00003_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux3, [1,1,6,6])
**VARIABLES**
DISCRETE aux4 #Active-CSE: 6 occurrences of this expression or equivalent: (-2 + S_00003_00005)
{1..2}
DISCRETE aux5 #Active-CSE: 6 occurrences of this expression or equivalent: (-2 + S_00003_00003)
{1..2}
DISCRETE aux6 #Active-CSE: 6 occurrences of this expression or equivalent: (S_00005_00003 + -3)
{1..2}
DISCRETE aux7 #Active-CSE: 6 occurrences of this expression or equivalent: (S_00005_00005 + -3)
{1..2}
DISCRETE aux8 #ElementOne([4, 3], aux7)
{3..4}
DISCRETE aux9 #ElementOne([4, 3], aux6)
{3..4}
DISCRETE aux10 #ElementOne([5, 4], aux4)
{4..5}
DISCRETE aux11 #ElementOne([5, 4], aux5)
{4..5}
DISCRETE aux12 #(-17 + 6*S_00003_00003)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux12, [1,1,7,7])
**VARIABLES**
DISCRETE aux13 #(-17 + 5*S_00003_00003 + S_00003_00005)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux13, [1,2,6,7])
**VARIABLES**
DISCRETE aux14 #(-17 + S_00003_00003 + 5*S_00003_00005)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux14, [1,2,6,7])
**VARIABLES**
DISCRETE aux15 #(-17 + 6*S_00003_00005)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux15, [1,1,7,7])
**VARIABLES**
DISCRETE aux16 #(6*S_00005_00003 + -23)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux16, [1,1,7,7])
**VARIABLES**
DISCRETE aux17 #(5*S_00005_00003 + S_00005_00005 + -23)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux17, [1,2,6,7])
**VARIABLES**
DISCRETE aux18 #(S_00005_00003 + 5*S_00005_00005 + -23)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux18, [1,2,6,7])
**VARIABLES**
DISCRETE aux19 #(6*S_00005_00005 + -23)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux19, [1,1,7,7])
**VARIABLES**
**TUPLELIST**
perms 1 5
1 2 5 4 3 
**VARIABLES**
ALIAS perms[1,5]=[[1, 2, 5, 4, 3]]
**TUPLELIST**
inverses 1 5
1 2 5 4 3 
**VARIABLES**
ALIAS inverses[1,5]=[[1, 2, 5, 4, 3]]
**TUPLELIST**
M 5 5
1 2 3 4 5 
2 1 3 4 5 
3 3 3 3 5 
4 4 3 4 5 
5 5 3 5 5 
**VARIABLES**
ALIAS M[5,5]=[[1, 2, 3, 4, 5], [2, 1, 3, 4, 5], [3, 3, 3, 3, 5], [4, 4, 3, 4, 5], [5, 5, 3, 5, 5]]
**SEARCH**
PRINT[[S_00003_00003],[S_00003_00005],[S_00005_00003],[S_00005_00005]]
VARORDER STATIC [S_00003_00003, S_00003_00005, S_00005_00003, S_00005_00005]
**CONSTRAINTS**
watchelement_one([4, 3], aux7, aux8)
watchelement_one([4, 3], aux6, aux9)
watchelement_one([5, 4], aux4, aux10)
watchelement_one([5, 4], aux5, aux11)
lexleq([S_00003_00003, S_00003_00005, S_00005_00003, S_00005_00005],[aux8, aux9, aux10, aux11])
watchelement_one([3, 3], aux5, 3)
watchelement_one([5, 5], aux6, 5)
watchelement_one([3, 3], aux4, 3)
watchelement_one([5, 5], aux7, 5)
watchelement_one([S_00003_00003, 3], aux5, 3)
watchelement_one([5, S_00005_00005], aux6, 5)
watchelement_one([S_00003_00003, 3], aux4, 3)
watchelement_one([5, S_00005_00005], aux7, 5)
watchelement_one([3, 4], aux5, S_00003_00003)
watchelement_one([3, 4], aux4, S_00003_00005)
watchelement_one([3, 3, 3, 3, 5, 4], aux2, S_00003_00003)
watchelement_one([3, 3, 3, 5, 4, 4], aux2, S_00003_00003)
watchelement_one([3, 3, 5, 4, 4, 3, 4], aux12, S_00003_00003)
watchelement_one([3, 5, 4, 4, 3, 4], aux2, S_00003_00003)
watchelement_one([3, 3, 5, 4, 4, 3, 4], aux13, S_00003_00005)
watchelement_one([3, 3, 3, 3, 5, 4], aux3, S_00003_00005)
watchelement_one([3, 3, 3, 5, 4, 4], aux3, S_00003_00005)
watchelement_one([3, 3, 5, 4, 4, 3, 4], aux14, S_00003_00003)
watchelement_one([3, 5, 4, 4, 3, 4], aux3, S_00003_00005)
watchelement_one([3, 3, 5, 4, 4, 3, 4], aux15, S_00003_00005)
watchelement_one([4, 5], aux6, S_00005_00003)
watchelement_one([4, 5], aux7, S_00005_00005)
watchelement_one([4, 4, 3, 4, 5, 5], aux0, S_00005_00003)
watchelement_one([4, 3, 4, 5, 5, 5], aux0, S_00005_00003)
watchelement_one([4, 5, 5, 5, 3, 5, 5], aux16, S_00005_00003)
watchelement_one([4, 5, 5, 5, 3, 5], aux0, S_00005_00003)
watchelement_one([4, 5, 5, 5, 3, 5, 5], aux17, S_00005_00005)
watchelement_one([4, 4, 3, 4, 5, 5], aux1, S_00005_00005)
watchelement_one([4, 3, 4, 5, 5, 5], aux1, S_00005_00005)
watchelement_one([4, 5, 5, 5, 3, 5, 5], aux18, S_00005_00003)
watchelement_one([4, 5, 5, 5, 3, 5], aux1, S_00005_00005)
watchelement_one([4, 5, 5, 5, 3, 5, 5], aux19, S_00005_00005)
watchelement_one([S_00003_00003, 4], aux5, S_00003_00003)
watchelement_one([S_00003_00003, 4], aux4, S_00003_00005)
watchelement_one([S_00005_00003, 4], aux5, S_00005_00003)
watchelement_one([S_00005_00003, 4], aux4, S_00005_00005)
watchelement_one([4, S_00003_00005], aux6, S_00003_00003)
watchelement_one([4, S_00003_00005], aux7, S_00003_00005)
watchelement_one([4, S_00005_00005], aux6, S_00005_00003)
watchelement_one([4, S_00005_00005], aux7, S_00005_00005)
weightedsumleq([1,6],[-17,S_00003_00003],aux12)
weightedsumgeq([1,6],[-17,S_00003_00003],aux12)
weightedsumleq([1,5,1],[-17,S_00003_00003,S_00003_00005],aux13)
weightedsumgeq([1,5,1],[-17,S_00003_00003,S_00003_00005],aux13)
weightedsumleq([1,1,5],[-17,S_00003_00003,S_00003_00005],aux14)
weightedsumgeq([1,1,5],[-17,S_00003_00003,S_00003_00005],aux14)
weightedsumleq([1,6],[-17,S_00003_00005],aux15)
weightedsumgeq([1,6],[-17,S_00003_00005],aux15)
weightedsumleq([6,1],[S_00005_00003,-23],aux16)
weightedsumgeq([6,1],[S_00005_00003,-23],aux16)
weightedsumleq([5,1,1],[S_00005_00003,S_00005_00005,-23],aux17)
weightedsumgeq([5,1,1],[S_00005_00003,S_00005_00005,-23],aux17)
weightedsumleq([1,5,1],[S_00005_00003,S_00005_00005,-23],aux18)
weightedsumgeq([1,5,1],[S_00005_00003,S_00005_00005,-23],aux18)
weightedsumleq([6,1],[S_00005_00005,-23],aux19)
weightedsumgeq([6,1],[S_00005_00005,-23],aux19)
weightedsumleq([5,1],[S_00005_00003,-19],aux0)
weightedsumgeq([5,1],[S_00005_00003,-19],aux0)
weightedsumleq([5,1],[S_00005_00005,-19],aux1)
weightedsumgeq([5,1],[S_00005_00005,-19],aux1)
weightedsumleq([1,5],[-14,S_00003_00003],aux2)
weightedsumgeq([1,5],[-14,S_00003_00003],aux2)
weightedsumleq([1,5],[-14,S_00003_00005],aux3)
weightedsumgeq([1,5],[-14,S_00003_00005],aux3)
sumleq([-2,S_00003_00005],aux4)
sumgeq([-2,S_00003_00005],aux4)
sumleq([-2,S_00003_00003],aux5)
sumgeq([-2,S_00003_00003],aux5)
sumleq([S_00005_00003,-3],aux6)
sumgeq([S_00005_00003,-3],aux6)
sumleq([S_00005_00005,-3],aux7)
sumgeq([S_00005_00005,-3],aux7)
**EOF**
