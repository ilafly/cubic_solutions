MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 8
# CSE_active_eliminated_expressions = 37
# CSE_active_total_size = 24
**VARIABLES**
DISCRETE S_00001_00002 #
{2..3}
DISCRETE S_00001_00004 #
{4..5}
DISCRETE S_00004_00001 #
{1..3}
**CONSTRAINTS**
w-inintervalset(S_00004_00001, [1,1,3,3])
**VARIABLES**
DISCRETE S_00004_00004 #
{1..5}
**CONSTRAINTS**
w-inintervalset(S_00004_00004, [1,1,3,5])
**VARIABLES**
DISCRETE S_00005_00004 #
{1..4}
**CONSTRAINTS**
w-inintervalset(S_00005_00004, [1,1,4,4])
**VARIABLES**
DISCRETE S_00005_00005 #
{3..5}
**CONSTRAINTS**
w-inintervalset(S_00005_00005, [3,3,5,5])
**VARIABLES**
DISCRETE aux0 #Active-CSE: 7 occurrences of this expression or equivalent: (S_00001_00004 + -3)
{1..2}
DISCRETE aux1 #Active-CSE: 3 occurrences of this expression or equivalent: (5*S_00005_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux1, [1,1,16,16])
**VARIABLES**
DISCRETE aux2 #Active-CSE: 3 occurrences of this expression or equivalent: (5*S_00005_00005 + -14)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux2, [1,1,11,11])
**VARIABLES**
DISCRETE aux3 #Active-CSE: 2 occurrences of this expression or equivalent: (5*S_00001_00004 + -19)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux3, [1,1,6,6])
**VARIABLES**
DISCRETE aux4 #Active-CSE: 2 occurrences of this expression or equivalent: (5*S_00001_00002 + -9)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux4, [1,1,6,6])
**VARIABLES**
DISCRETE aux5 #Active-CSE: 9 occurrences of this expression or equivalent: (S_00001_00002 + -1)
{1..2}
DISCRETE aux6 #Active-CSE: 2 occurrences of this expression or equivalent: (5*S_00004_00001 + -4)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux6, [1,1,11,11])
**VARIABLES**
DISCRETE aux7 #Active-CSE: 9 occurrences of this expression or equivalent: (S_00005_00005 + -2)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux7, [1,1,3,3])
**VARIABLES**
DISCRETE aux8 #(6*S_00004_00001 + -5)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux8, [1,1,13,13])
**VARIABLES**
DISCRETE aux9 #(5*S_00004_00001 + S_00001_00002 + -6)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux9, [1,2,11,12])
**VARIABLES**
DISCRETE aux10 #(5*S_00004_00001 + S_00001_00004 + -8)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux10, [1,2,11,12])
**VARIABLES**
DISCRETE aux11 #(S_00004_00001 + 5*S_00001_00002 + -10)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux11, [1,1,3,3,6,6,8,8])
**VARIABLES**
DISCRETE aux12 #(6*S_00001_00002 + -11)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux12, [1,1,7,7])
**VARIABLES**
DISCRETE aux13 #(5*S_00001_00002 + S_00001_00004 + -13)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux13, [1,2,6,7])
**VARIABLES**
DISCRETE aux14 #(S_00004_00001 + 5*S_00001_00004 + -20)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux14, [1,1,3,3,6,6,8,8])
**VARIABLES**
DISCRETE aux15 #(S_00001_00002 + 5*S_00001_00004 + -21)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux15, [1,2,6,7])
**VARIABLES**
DISCRETE aux16 #(6*S_00001_00004 + -23)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux16, [1,1,7,7])
**VARIABLES**
DISCRETE aux17 #(5*S_00004_00001 + S_00004_00004 + -5)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux17, [1,1,3,5,11,11,13,15])
**VARIABLES**
DISCRETE aux18 #(5*S_00004_00001 + S_00005_00005 + -7)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux18, [1,1,3,3,11,11,13,13])
**VARIABLES**
DISCRETE aux19 #(S_00004_00004 + 5*S_00001_00002 + -10)
{1..10}
**CONSTRAINTS**
w-inintervalset(aux19, [1,1,3,6,8,10])
**VARIABLES**
DISCRETE aux20 #(S_00005_00005 + 5*S_00001_00002 + -12)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux20, [1,1,3,3,6,6,8,8])
**VARIABLES**
DISCRETE aux21 #(S_00004_00001 + 5*S_00004_00004 + -5)
{1..23}
**CONSTRAINTS**
w-inintervalset(aux21, [1,1,3,3,11,11,13,13,16,16,18,18,21,21,23,23])
**VARIABLES**
DISCRETE aux22 #(5*S_00004_00004 + S_00001_00002 + -6)
{1..22}
**CONSTRAINTS**
w-inintervalset(aux22, [1,2,11,12,16,17,21,22])
**VARIABLES**
DISCRETE aux23 #(5*S_00004_00004 + -4)
{1..21}
**CONSTRAINTS**
w-inintervalset(aux23, [1,1,11,11,16,16,21,21])
**VARIABLES**
DISCRETE aux24 #(6*S_00004_00004 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux24, [1,1,13,13,19,19,25,25])
**VARIABLES**
DISCRETE aux25 #(5*S_00004_00004 + S_00005_00005 + -7)
{1..23}
**CONSTRAINTS**
w-inintervalset(aux25, [1,1,3,3,11,11,13,13,16,16,18,18,21,21,23,23])
**VARIABLES**
DISCRETE aux26 #(S_00004_00001 + 5*S_00005_00005 + -15)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux26, [1,1,3,3,11,11,13,13])
**VARIABLES**
DISCRETE aux27 #(5*S_00005_00005 + S_00001_00002 + -16)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux27, [1,2,11,12])
**VARIABLES**
DISCRETE aux28 #(S_00004_00004 + 5*S_00005_00005 + -15)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux28, [1,1,3,5,11,11,13,15])
**VARIABLES**
DISCRETE aux29 #(6*S_00005_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux29, [1,1,13,13])
**VARIABLES**
DISCRETE aux30 #(6*S_00005_00004 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux30, [1,1,19,19])
**VARIABLES**
DISCRETE aux31 #(5*S_00005_00004 + S_00005_00005 + -7)
{1..18}
**CONSTRAINTS**
w-inintervalset(aux31, [1,1,3,3,16,16,18,18])
**VARIABLES**
DISCRETE aux32 #(S_00005_00004 + 5*S_00005_00005 + -15)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux32, [1,1,4,4,11,11,14,14])
**VARIABLES**
**TUPLELIST**
M 5 5
1 1 1 4 4 
1 1 1 4 4 
1 1 3 4 5 
4 4 4 4 4 
4 4 5 4 5 
**VARIABLES**
ALIAS M[5,5]=[[1, 1, 1, 4, 4], [1, 1, 1, 4, 4], [1, 1, 3, 4, 5], [4, 4, 4, 4, 4], [4, 4, 5, 4, 5]]
**SEARCH**
PRINT[[S_00001_00002],[S_00001_00004],[S_00004_00001],[S_00004_00004],[S_00005_00004],[S_00005_00005]]
VARORDER STATIC [S_00004_00001, S_00001_00002, S_00001_00004, S_00004_00004, S_00005_00005, S_00005_00004]
**CONSTRAINTS**
watchelement_one([1, 1, 1], S_00004_00001, 1)
watchelement_one([4, 4, 4], S_00004_00001, 4)
watchelement_one([1, 1], aux5, 1)
watchelement_one([4, 4], aux5, 4)
watchelement_one([4, 4], aux0, 4)
watchelement_one([4, 4, 4, 4, 4], S_00004_00004, 4)
watchelement_one([4, 4, 5, 4], S_00005_00004, 4)
watchelement_one([4, 4, 4], aux7, 4)
watchelement_one([5, 4, 5], aux7, 5)
watchelement_one([S_00004_00001, S_00004_00001, 1], S_00004_00001, 1)
watchelement_one([S_00001_00002, S_00001_00002, 2], S_00004_00001, 2)
watchelement_one([S_00001_00004, S_00001_00004, 4], S_00004_00001, 4)
watchelement_one([S_00004_00001, 1], aux5, 1)
watchelement_one([S_00001_00002, 2], aux5, 2)
watchelement_one([S_00001_00004, 4], aux5, 4)
watchelement_one([S_00004_00001, 1], aux0, 1)
watchelement_one([S_00001_00002, 2], aux0, 2)
watchelement_one([S_00001_00004, S_00001_00004, 4, S_00004_00004, S_00005_00004], S_00004_00004, 4)
watchelement_one([5, 5, 5, S_00005_00005], S_00005_00004, 5)
watchelement_one([4, S_00004_00004, S_00005_00004], aux7, 4)
watchelement_one([5, S_00005_00005, S_00005_00005], aux7, 5)
watchelement_one([1, 1, 1, 4, 4, 1, 1, 1, 4, 4, 1, 1, 3], aux8, S_00004_00001)
watchelement_one([1, 1, 4, 4, 1, 1, 1, 4, 4, 1, 1, 3], aux9, S_00004_00001)
watchelement_one([1, 4, 4, 1, 1, 1, 4, 4, 1, 1, 3], aux6, S_00004_00001)
watchelement_one([4, 4, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux10, S_00001_00004)
watchelement_one([4, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux6, S_00001_00004)
watchelement_one([1, 1, 1, 4, 4, 1, 1, 3], aux11, S_00004_00001)
watchelement_one([1, 1, 4, 4, 1, 1, 3], aux12, S_00004_00001)
watchelement_one([1, 4, 4, 1, 1, 3], aux4, S_00004_00001)
watchelement_one([4, 4, 1, 1, 3, 4, 5], aux13, S_00001_00004)
watchelement_one([4, 1, 1, 3, 4, 5], aux4, S_00001_00004)
watchelement_one([1, 1, 3], S_00004_00001, S_00004_00001)
watchelement_one([1, 3], aux5, S_00004_00001)
watchelement_one([4, 5], aux0, S_00001_00004)
watchelement_one([4, 4, 4, 4, 4, 4, 4, 5], aux14, S_00001_00004)
watchelement_one([4, 4, 4, 4, 4, 4, 5], aux15, S_00001_00004)
watchelement_one([4, 4, 4, 4, 4, 5], aux3, S_00001_00004)
watchelement_one([4, 4, 4, 4, 5, 4, 5], aux16, S_00001_00004)
watchelement_one([4, 4, 4, 5, 4, 5], aux3, S_00001_00004)
watchelement_one([4, 4, 5], S_00004_00001, S_00001_00004)
watchelement_one([4, 5], aux5, S_00001_00004)
watchelement_one([1, 1, 1, 4, 4, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux17, S_00004_00004)
watchelement_one([1, 4, 4, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux18, S_00004_00004)
watchelement_one([1, 1, 1, 4, 4, 1, 1, 3, 4, 5], aux19, S_00004_00004)
watchelement_one([1, 4, 4, 1, 1, 3, 4, 5], aux20, S_00004_00004)
watchelement_one([1, 1, 3, 4, 5], S_00004_00004, S_00004_00004)
watchelement_one([3, 4, 5], aux7, S_00005_00005)
watchelement_one([1, 1, 1, 4, 4, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5, 4, 4, 4, 4, 4, 4, 4, 5], aux21, S_00004_00004)
watchelement_one([1, 1, 4, 4, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5, 4, 4, 4, 4, 4, 4, 4, 5], aux22, S_00004_00004)
watchelement_one([1, 4, 4, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5, 4, 4, 4, 4, 4, 4, 4, 5], aux23, S_00004_00004)
watchelement_one([1, 1, 1, 4, 4, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5, 4, 4, 4, 4, 4, 4, 4, 5, 4, 5], aux24, S_00004_00004)
watchelement_one([1, 4, 4, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5, 4, 4, 4, 4, 4, 4, 4, 5, 4, 5], aux25, S_00004_00004)
watchelement_one([1, 1, 3, 4, 5, 4, 4, 4, 4, 4, 4, 4, 5], aux26, S_00004_00004)
watchelement_one([1, 3, 4, 5, 4, 4, 4, 4, 4, 4, 4, 5], aux27, S_00004_00004)
watchelement_one([3, 4, 5, 4, 4, 4, 4, 4, 4, 4, 5], aux2, S_00005_00005)
watchelement_one([1, 1, 3, 4, 5, 4, 4, 4, 4, 4, 4, 4, 5, 4, 5], aux28, S_00004_00004)
watchelement_one([3, 4, 5, 4, 4, 4, 4, 4, 4, 4, 5, 4, 5], aux29, S_00005_00005)
watchelement_one([1, 1, 1, 4], S_00005_00004, S_00005_00004)
watchelement_one([1, 4, 4], aux7, S_00005_00004)
watchelement_one([1, 1, 3, 4], S_00005_00004, S_00005_00004)
watchelement_one([1, 1, 1, 4, 4, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5, 4], aux1, S_00005_00004)
watchelement_one([1, 1, 4, 4, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5, 4, 4], aux1, S_00005_00004)
watchelement_one([1, 4, 4, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5, 4, 4, 4], aux1, S_00005_00004)
watchelement_one([1, 1, 1, 4, 4, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5, 4, 4, 4, 4], aux30, S_00005_00004)
watchelement_one([1, 4, 4, 1, 1, 1, 4, 4, 1, 1, 3, 4, 5, 4, 4, 4, 4, 4], aux31, S_00005_00004)
watchelement_one([1, 1, 3, 4, 5, 4, 4, 4, 4, 4, 4], aux2, S_00005_00004)
watchelement_one([1, 3, 4, 5, 4, 4, 4, 4, 4, 4, 4], aux2, S_00005_00004)
watchelement_one([1, 1, 3, 4, 5, 4, 4, 4, 4, 4, 4, 4, 5, 4], aux32, S_00005_00004)
watchelement_one([S_00004_00001, S_00001_00002, 3], S_00004_00001, S_00004_00001)
watchelement_one([S_00001_00002, 3], aux5, S_00001_00002)
watchelement_one([S_00001_00004, 5], aux0, S_00001_00004)
watchelement_one([1, 2, 3], S_00004_00001, S_00004_00001)
watchelement_one([2, 3], aux5, S_00001_00002)
watchelement_one([S_00004_00004, S_00005_00005], aux0, S_00004_00004)
watchelement_one([S_00005_00004, S_00005_00005], aux0, S_00004_00004)
watchelement_one([S_00004_00001, S_00001_00002, 3, S_00001_00004, 5], S_00004_00004, S_00004_00004)
watchelement_one([3, S_00001_00004, 5], aux7, S_00005_00005)
watchelement_one([1, 2, 3, 4, 5], S_00004_00004, S_00004_00004)
watchelement_one([S_00004_00001, S_00001_00002, 3, S_00004_00004, S_00005_00005], S_00004_00004, S_00004_00004)
watchelement_one([3, S_00004_00004, S_00005_00005], aux7, S_00005_00005)
watchelement_one([1, 2, 3, S_00005_00004, S_00005_00005], S_00004_00004, S_00004_00004)
watchelement_one([3, S_00005_00004, S_00005_00005], aux7, S_00005_00005)
watchelement_one([S_00004_00001, S_00001_00002, 3, S_00001_00004], S_00005_00004, S_00004_00004)
watchelement_one([1, 2, 3, 4], S_00005_00004, S_00005_00004)
watchelement_one([S_00004_00001, S_00001_00002, 3, S_00004_00004], S_00005_00004, S_00004_00004)
watchelement_one([1, 2, 3, S_00005_00004], S_00005_00004, S_00005_00004)
weightedsumleq([6,1],[S_00004_00001,-5],aux8)
weightedsumgeq([6,1],[S_00004_00001,-5],aux8)
weightedsumleq([5,1,1],[S_00004_00001,S_00001_00002,-6],aux9)
weightedsumgeq([5,1,1],[S_00004_00001,S_00001_00002,-6],aux9)
weightedsumleq([5,1,1],[S_00004_00001,S_00001_00004,-8],aux10)
weightedsumgeq([5,1,1],[S_00004_00001,S_00001_00004,-8],aux10)
weightedsumleq([1,5,1],[S_00004_00001,S_00001_00002,-10],aux11)
weightedsumgeq([1,5,1],[S_00004_00001,S_00001_00002,-10],aux11)
weightedsumleq([6,1],[S_00001_00002,-11],aux12)
weightedsumgeq([6,1],[S_00001_00002,-11],aux12)
weightedsumleq([5,1,1],[S_00001_00002,S_00001_00004,-13],aux13)
weightedsumgeq([5,1,1],[S_00001_00002,S_00001_00004,-13],aux13)
weightedsumleq([1,5,1],[S_00004_00001,S_00001_00004,-20],aux14)
weightedsumgeq([1,5,1],[S_00004_00001,S_00001_00004,-20],aux14)
weightedsumleq([1,5,1],[S_00001_00002,S_00001_00004,-21],aux15)
weightedsumgeq([1,5,1],[S_00001_00002,S_00001_00004,-21],aux15)
weightedsumleq([6,1],[S_00001_00004,-23],aux16)
weightedsumgeq([6,1],[S_00001_00004,-23],aux16)
weightedsumleq([5,1,1],[S_00004_00001,S_00004_00004,-5],aux17)
weightedsumgeq([5,1,1],[S_00004_00001,S_00004_00004,-5],aux17)
weightedsumleq([5,1,1],[S_00004_00001,S_00005_00005,-7],aux18)
weightedsumgeq([5,1,1],[S_00004_00001,S_00005_00005,-7],aux18)
weightedsumleq([1,5,1],[S_00004_00004,S_00001_00002,-10],aux19)
weightedsumgeq([1,5,1],[S_00004_00004,S_00001_00002,-10],aux19)
weightedsumleq([1,5,1],[S_00005_00005,S_00001_00002,-12],aux20)
weightedsumgeq([1,5,1],[S_00005_00005,S_00001_00002,-12],aux20)
weightedsumleq([1,5,1],[S_00004_00001,S_00004_00004,-5],aux21)
weightedsumgeq([1,5,1],[S_00004_00001,S_00004_00004,-5],aux21)
weightedsumleq([5,1,1],[S_00004_00004,S_00001_00002,-6],aux22)
weightedsumgeq([5,1,1],[S_00004_00004,S_00001_00002,-6],aux22)
weightedsumleq([5,1],[S_00004_00004,-4],aux23)
weightedsumgeq([5,1],[S_00004_00004,-4],aux23)
weightedsumleq([6,1],[S_00004_00004,-5],aux24)
weightedsumgeq([6,1],[S_00004_00004,-5],aux24)
weightedsumleq([5,1,1],[S_00004_00004,S_00005_00005,-7],aux25)
weightedsumgeq([5,1,1],[S_00004_00004,S_00005_00005,-7],aux25)
weightedsumleq([1,5,1],[S_00004_00001,S_00005_00005,-15],aux26)
weightedsumgeq([1,5,1],[S_00004_00001,S_00005_00005,-15],aux26)
weightedsumleq([5,1,1],[S_00005_00005,S_00001_00002,-16],aux27)
weightedsumgeq([5,1,1],[S_00005_00005,S_00001_00002,-16],aux27)
weightedsumleq([1,5,1],[S_00004_00004,S_00005_00005,-15],aux28)
weightedsumgeq([1,5,1],[S_00004_00004,S_00005_00005,-15],aux28)
weightedsumleq([6,1],[S_00005_00005,-17],aux29)
weightedsumgeq([6,1],[S_00005_00005,-17],aux29)
weightedsumleq([6,1],[S_00005_00004,-5],aux30)
weightedsumgeq([6,1],[S_00005_00004,-5],aux30)
weightedsumleq([5,1,1],[S_00005_00004,S_00005_00005,-7],aux31)
weightedsumgeq([5,1,1],[S_00005_00004,S_00005_00005,-7],aux31)
weightedsumleq([1,5,1],[S_00005_00004,S_00005_00005,-15],aux32)
weightedsumgeq([1,5,1],[S_00005_00004,S_00005_00005,-15],aux32)
sumleq([S_00001_00004,-3],aux0)
sumgeq([S_00001_00004,-3],aux0)
weightedsumleq([5,1],[S_00005_00004,-4],aux1)
weightedsumgeq([5,1],[S_00005_00004,-4],aux1)
weightedsumleq([5,1],[S_00005_00005,-14],aux2)
weightedsumgeq([5,1],[S_00005_00005,-14],aux2)
weightedsumleq([5,1],[S_00001_00004,-19],aux3)
weightedsumgeq([5,1],[S_00001_00004,-19],aux3)
weightedsumleq([5,1],[S_00001_00002,-9],aux4)
weightedsumgeq([5,1],[S_00001_00002,-9],aux4)
sumleq([S_00001_00002,-1],aux5)
sumgeq([S_00001_00002,-1],aux5)
weightedsumleq([5,1],[S_00004_00001,-4],aux6)
weightedsumgeq([5,1],[S_00004_00001,-4],aux6)
sumleq([S_00005_00005,-2],aux7)
sumgeq([S_00005_00005,-2],aux7)
**EOF**
