MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 6
# CSE_active_eliminated_expressions = 22
# CSE_active_total_size = 18
**VARIABLES**
DISCRETE S_00001_00001 #
{1..2}
DISCRETE S_00001_00004 #
{1..2}
DISCRETE S_00004_00001 #
{2..4}
**CONSTRAINTS**
w-inintervalset(S_00004_00001, [2,2,4,4])
**VARIABLES**
DISCRETE S_00004_00004 #
{2..4}
**CONSTRAINTS**
w-inintervalset(S_00004_00004, [2,2,4,4])
**VARIABLES**
DISCRETE aux0 #Active-CSE: 2 occurrences of this expression or equivalent: (4*S_00001_00004 + -3)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux0, [1,1,5,5])
**VARIABLES**
DISCRETE aux1 #Active-CSE: 2 occurrences of this expression or equivalent: (4*S_00001_00001 + -3)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1, [1,1,5,5])
**VARIABLES**
DISCRETE aux2 #Active-CSE: 2 occurrences of this expression or equivalent: (4*S_00004_00001 + -7)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux2, [1,1,9,9])
**VARIABLES**
DISCRETE aux3 #Active-CSE: 2 occurrences of this expression or equivalent: (4*S_00004_00004 + -7)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux3, [1,1,9,9])
**VARIABLES**
DISCRETE aux4 #Active-CSE: 7 occurrences of this expression or equivalent: (S_00004_00004 + -1)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux4, [1,1,3,3])
**VARIABLES**
DISCRETE aux5 #Active-CSE: 7 occurrences of this expression or equivalent: (S_00004_00001 + -1)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux5, [1,1,3,3])
**VARIABLES**
DISCRETE aux6 #ElementOne([2, 3, 1], aux4)
{1..3}
DISCRETE aux7 #ElementOne([2, 3, 1], aux5)
{1..3}
DISCRETE aux8 #ElementOne([4, 2], S_00001_00004)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux8, [2,2,4,4])
**VARIABLES**
DISCRETE aux9 #ElementOne([4, 2], S_00001_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux9, [2,2,4,4])
**VARIABLES**
DISCRETE aux10 #(5*S_00001_00001 + -4)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux10, [1,1,6,6])
**VARIABLES**
DISCRETE aux11 #(4*S_00001_00001 + S_00001_00004 + -4)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux11, [1,2,5,6])
**VARIABLES**
DISCRETE aux12 #(S_00001_00001 + 4*S_00001_00004 + -4)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux12, [1,2,5,6])
**VARIABLES**
DISCRETE aux13 #(5*S_00001_00004 + -4)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux13, [1,1,6,6])
**VARIABLES**
DISCRETE aux14 #(5*S_00004_00001 + -9)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux14, [1,1,11,11])
**VARIABLES**
DISCRETE aux15 #(4*S_00004_00001 + S_00004_00004 + -9)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux15, [1,1,3,3,9,9,11,11])
**VARIABLES**
DISCRETE aux16 #(S_00004_00001 + 4*S_00004_00004 + -9)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux16, [1,1,3,3,9,9,11,11])
**VARIABLES**
DISCRETE aux17 #(5*S_00004_00004 + -9)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux17, [1,1,11,11])
**VARIABLES**
**TUPLELIST**
perms 1 4
4 2 3 1 
**VARIABLES**
ALIAS perms[1,4]=[[4, 2, 3, 1]]
**TUPLELIST**
inverses 1 4
4 2 3 1 
**VARIABLES**
ALIAS inverses[1,4]=[[4, 2, 3, 1]]
**TUPLELIST**
M 4 4
1 1 1 4 
1 2 2 4 
1 2 3 4 
1 4 4 4 
**VARIABLES**
ALIAS M[4,4]=[[1, 1, 1, 4], [1, 2, 2, 4], [1, 2, 3, 4], [1, 4, 4, 4]]
**SEARCH**
PRINT[[S_00001_00001],[S_00001_00004],[S_00004_00001],[S_00004_00004]]
VARORDER STATIC [S_00001_00001, S_00001_00004, S_00004_00001, S_00004_00004]
**CONSTRAINTS**
watchelement_one([2, 3, 1], aux4, aux6)
watchelement_one([2, 3, 1], aux5, aux7)
watchelement_one([4, 2], S_00001_00004, aux8)
watchelement_one([4, 2], S_00001_00001, aux9)
lexleq([S_00001_00001, S_00001_00004, S_00004_00001, S_00004_00004],[aux6, aux7, aux8, aux9])
watchelement_one([1, 1], S_00001_00001, 1)
watchelement_one([4, 4, 4], aux5, 4)
watchelement_one([1, 1], S_00001_00004, 1)
watchelement_one([4, 4, 4], aux4, 4)
watchelement_one([S_00001_00001, 1], S_00001_00001, 1)
watchelement_one([4, 4, S_00004_00004], aux5, 4)
watchelement_one([S_00001_00001, 1], S_00001_00004, 1)
watchelement_one([4, 4, S_00004_00004], aux4, 4)
watchelement_one([1, 1, 1, 4, 1, 2], aux10, S_00001_00001)
watchelement_one([1, 1, 4, 1, 2], aux1, S_00001_00001)
watchelement_one([1, 4, 1, 2, 2], aux1, S_00001_00001)
watchelement_one([1, 1, 1, 4, 1, 2], aux11, S_00001_00004)
watchelement_one([1, 2], S_00001_00001, S_00001_00001)
watchelement_one([1, 2], S_00001_00004, S_00001_00004)
watchelement_one([1, 1, 1, 4, 1, 2], aux12, S_00001_00001)
watchelement_one([1, 1, 4, 1, 2], aux0, S_00001_00004)
watchelement_one([1, 4, 1, 2, 2], aux0, S_00001_00004)
watchelement_one([1, 1, 1, 4, 1, 2], aux13, S_00001_00004)
watchelement_one([2, 2, 4, 1, 2, 3, 4, 1, 4, 4, 4], aux14, S_00004_00001)
watchelement_one([2, 2, 4, 1, 2, 3, 4, 1, 4], aux2, S_00004_00001)
watchelement_one([2, 4, 1, 2, 3, 4, 1, 4, 4], aux2, S_00004_00001)
watchelement_one([2, 2, 4, 1, 2, 3, 4, 1, 4, 4, 4], aux15, S_00004_00004)
watchelement_one([2, 2, 4], aux5, S_00004_00001)
watchelement_one([2, 2, 4], aux4, S_00004_00004)
watchelement_one([2, 3, 4], aux5, S_00004_00001)
watchelement_one([2, 3, 4], aux4, S_00004_00004)
watchelement_one([2, 2, 4, 1, 2, 3, 4, 1, 4, 4, 4], aux16, S_00004_00001)
watchelement_one([2, 2, 4, 1, 2, 3, 4, 1, 4], aux3, S_00004_00004)
watchelement_one([2, 4, 1, 2, 3, 4, 1, 4, 4], aux3, S_00004_00004)
watchelement_one([2, 2, 4, 1, 2, 3, 4, 1, 4, 4, 4], aux17, S_00004_00004)
watchelement_one([S_00001_00001, 2], S_00001_00001, S_00001_00001)
watchelement_one([S_00001_00001, 2], S_00001_00004, S_00001_00004)
watchelement_one([S_00004_00001, 2], S_00001_00001, S_00004_00001)
watchelement_one([S_00004_00001, 2], S_00001_00004, S_00004_00004)
watchelement_one([2, 3, S_00001_00004], aux5, S_00001_00001)
watchelement_one([2, 3, S_00001_00004], aux4, S_00001_00004)
watchelement_one([2, 3, S_00004_00004], aux5, S_00004_00001)
watchelement_one([2, 3, S_00004_00004], aux4, S_00004_00004)
weightedsumleq([5,1],[S_00001_00001,-4],aux10)
weightedsumgeq([5,1],[S_00001_00001,-4],aux10)
weightedsumleq([4,1,1],[S_00001_00001,S_00001_00004,-4],aux11)
weightedsumgeq([4,1,1],[S_00001_00001,S_00001_00004,-4],aux11)
weightedsumleq([1,4,1],[S_00001_00001,S_00001_00004,-4],aux12)
weightedsumgeq([1,4,1],[S_00001_00001,S_00001_00004,-4],aux12)
weightedsumleq([5,1],[S_00001_00004,-4],aux13)
weightedsumgeq([5,1],[S_00001_00004,-4],aux13)
weightedsumleq([5,1],[S_00004_00001,-9],aux14)
weightedsumgeq([5,1],[S_00004_00001,-9],aux14)
weightedsumleq([4,1,1],[S_00004_00001,S_00004_00004,-9],aux15)
weightedsumgeq([4,1,1],[S_00004_00001,S_00004_00004,-9],aux15)
weightedsumleq([1,4,1],[S_00004_00001,S_00004_00004,-9],aux16)
weightedsumgeq([1,4,1],[S_00004_00001,S_00004_00004,-9],aux16)
weightedsumleq([5,1],[S_00004_00004,-9],aux17)
weightedsumgeq([5,1],[S_00004_00004,-9],aux17)
weightedsumleq([4,1],[S_00001_00004,-3],aux0)
weightedsumgeq([4,1],[S_00001_00004,-3],aux0)
weightedsumleq([4,1],[S_00001_00001,-3],aux1)
weightedsumgeq([4,1],[S_00001_00001,-3],aux1)
weightedsumleq([4,1],[S_00004_00001,-7],aux2)
weightedsumgeq([4,1],[S_00004_00001,-7],aux2)
weightedsumleq([4,1],[S_00004_00004,-7],aux3)
weightedsumgeq([4,1],[S_00004_00004,-7],aux3)
sumleq([S_00004_00004,-1],aux4)
sumgeq([S_00004_00004,-1],aux4)
sumleq([S_00004_00001,-1],aux5)
sumgeq([S_00004_00001,-1],aux5)
**EOF**
