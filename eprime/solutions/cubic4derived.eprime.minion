MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 33
# CSE_active_eliminated_expressions = 66
# CSE_active_total_size = 198
**VARIABLES**
DISCRETE S_00001_00002 #
{1..2}
DISCRETE S_00001_00003 #
{1..3}
**CONSTRAINTS**
w-inintervalset(S_00001_00003, [1,1,3,3])
**VARIABLES**
DISCRETE S_00001_00004 #
{1..4}
**CONSTRAINTS**
w-inintervalset(S_00001_00004, [1,1,3,4])
**VARIABLES**
DISCRETE S_00002_00001 #
{1..2}
DISCRETE S_00002_00002 #
{1..2}
DISCRETE S_00002_00003 #
{1..4}
DISCRETE S_00002_00004 #
{1..4}
DISCRETE S_00003_00001 #
{1..3}
**CONSTRAINTS**
w-inintervalset(S_00003_00001, [1,1,3,3])
**VARIABLES**
DISCRETE S_00003_00002 #
{1..4}
DISCRETE S_00003_00003 #
{1..3}
**CONSTRAINTS**
w-inintervalset(S_00003_00003, [1,1,3,3])
**VARIABLES**
DISCRETE S_00003_00004 #
{1..4}
**CONSTRAINTS**
w-inintervalset(S_00003_00004, [1,1,3,4])
**VARIABLES**
DISCRETE S_00004_00001 #
{1..4}
**CONSTRAINTS**
w-inintervalset(S_00004_00001, [1,2,4,4])
**VARIABLES**
DISCRETE S_00004_00002 #
{1..4}
DISCRETE S_00004_00003 #
{1..4}
DISCRETE S_00004_00004 #
{1..4}
DISCRETE aux0 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 3], S_00002_00001)
{2..3}
DISCRETE aux1 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 3], S_00002_00002)
{2..3}
DISCRETE aux2 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 4], S_00002_00002)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux2, [2,2,4,4])
**VARIABLES**
DISCRETE aux3 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 4], S_00002_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux3, [2,2,4,4])
**VARIABLES**
DISCRETE aux4 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 1], S_00002_00001)
{1..2}
DISCRETE aux5 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 1], S_00002_00002)
{1..2}
DISCRETE aux6 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 3], S_00002_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux6, [1,1,3,3])
**VARIABLES**
DISCRETE aux7 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 3], S_00002_00002)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux7, [1,1,3,3])
**VARIABLES**
DISCRETE aux8 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 4], S_00002_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux8, [1,1,4,4])
**VARIABLES**
DISCRETE aux9 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 4], S_00002_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux9, [1,1,4,4])
**VARIABLES**
DISCRETE aux10 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 2], S_00002_00002)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux10, [2,2,4,4])
**VARIABLES**
DISCRETE aux11 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 2], S_00002_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux11, [2,2,4,4])
**VARIABLES**
DISCRETE aux12 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3], S_00002_00001)
{3..4}
DISCRETE aux13 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3], S_00002_00002)
{3..4}
DISCRETE aux14 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4], S_00002_00002)
{3..4}
DISCRETE aux15 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4], S_00002_00001)
{3..4}
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 2], S_00002_00001)
{2..3}
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 2], S_00002_00002)
{2..3}
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 1], S_00002_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux18, [1,1,3,3])
**VARIABLES**
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 1], S_00002_00002)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux19, [1,1,3,3])
**VARIABLES**
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 1], S_00002_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux20, [1,1,4,4])
**VARIABLES**
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 1], S_00002_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux21, [1,1,4,4])
**VARIABLES**
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 1], S_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux22, [1,1,4,4])
**VARIABLES**
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 2], S_00001_00002)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux23, [2,2,4,4])
**VARIABLES**
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3], S_00001_00002)
{3..4}
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 3], S_00001_00002)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux25, [1,1,3,3])
**VARIABLES**
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 4], S_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux26, [1,1,4,4])
**VARIABLES**
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 4], S_00001_00002)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux27, [2,2,4,4])
**VARIABLES**
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 3], S_00001_00002)
{2..3}
DISCRETE aux29 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 1], S_00001_00002)
{1..2}
DISCRETE aux30 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 1], S_00001_00002)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux30, [1,1,3,3])
**VARIABLES**
DISCRETE aux31 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4], S_00001_00002)
{3..4}
DISCRETE aux32 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 2], S_00001_00002)
{2..3}
DISCRETE aux33 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001], (4*S_00001_00002 + -3)) --- ElementOne([1, S_00001_00002], S_00002_00001)
{1..2}
DISCRETE aux34 #ElementOne([S_00002_00001, S_00002_00002], S_00002_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002], (-4 + S_00002_00001 + 4*S_00002_00002))
{1..2}
DISCRETE aux35 #ElementOne([S_00003_00001, S_00003_00002], S_00002_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003], (-4 + S_00003_00001 + 4*S_00003_00002))
{1..4}
DISCRETE aux36 #ElementOne([S_00004_00001, S_00004_00002], S_00002_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (S_00004_00001 + 4*S_00004_00002 + -4))
{1..4}
DISCRETE aux37 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001], (4*S_00001_00003 + -3)) --- ElementOne([1, S_00001_00002, S_00001_00003], S_00003_00001)
{1..3}
DISCRETE aux38 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003], S_00003_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002], (-4 + S_00002_00001 + 4*S_00002_00003))
{1..4}
DISCRETE aux39 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003], S_00003_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003], (-4 + S_00003_00001 + 4*S_00003_00003))
{1..4}
DISCRETE aux40 #ElementOne([S_00004_00001, S_00004_00002, S_00004_00003], S_00003_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (S_00004_00001 + 4*S_00004_00003 + -4))
{1..4}
DISCRETE aux41 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00004_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001], (4*S_00001_00004 + -3))
{1..4}
DISCRETE aux42 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00004_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002], (-4 + S_00002_00001 + 4*S_00002_00004))
{1..2}
DISCRETE aux43 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003], (-4 + S_00003_00001 + 4*S_00003_00004)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00004_00001)
{1..4}
DISCRETE aux44 #ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00004_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (S_00004_00001 + 4*S_00004_00004 + -4))
{1..4}
DISCRETE aux45 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002], (-4 + 4*S_00002_00001 + S_00002_00002)) --- ElementOne([S_00002_00001, S_00002_00002], S_00001_00002)
{1..2}
DISCRETE aux46 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], (-4 + 4*S_00003_00001 + S_00003_00002)) --- ElementOne([S_00003_00001, S_00003_00002], S_00001_00002)
{1..4}
DISCRETE aux47 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (4*S_00004_00001 + S_00004_00002 + -4)) --- ElementOne([S_00004_00001, S_00004_00002], S_00001_00002)
{1..4}
DISCRETE aux48 #ElementOne([1, S_00001_00002], S_00002_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002], (5*S_00001_00002 + -4))
{1..2}
DISCRETE aux49 #ElementOne([S_00002_00001, S_00002_00002], S_00002_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002], (-4 + 5*S_00002_00002))
{1..2}
DISCRETE aux50 #ElementOne([S_00003_00001, S_00003_00002], S_00002_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (-4 + 5*S_00003_00002))
{1..4}
DISCRETE aux51 #ElementOne([S_00004_00001, S_00004_00002], S_00002_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (5*S_00004_00002 + -4))
{1..4}
DISCRETE aux52 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00003_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002], (S_00001_00002 + 4*S_00001_00003 + -4))
{1..4}
DISCRETE aux53 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00003_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002], (-4 + S_00002_00002 + 4*S_00002_00003))
{1..2}
DISCRETE aux54 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00003_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], (-4 + S_00003_00002 + 4*S_00003_00003))
{1..4}
DISCRETE aux55 #ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00003_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (S_00004_00002 + 4*S_00004_00003 + -4))
{1..4}
DISCRETE aux56 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002], (S_00001_00002 + 4*S_00001_00004 + -4)) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00004_00002)
{1..4}
DISCRETE aux57 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00004_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002], (-4 + S_00002_00002 + 4*S_00002_00004))
{1..2}
DISCRETE aux58 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (-4 + S_00003_00002 + 4*S_00003_00004)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00004_00002)
{1..4}
DISCRETE aux59 #ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00004_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (S_00004_00002 + 4*S_00004_00004 + -4))
{1..4}
DISCRETE aux60 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003], S_00001_00003) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], (-4 + 4*S_00002_00001 + S_00002_00003))
{1..4}
DISCRETE aux61 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003], (-4 + 4*S_00003_00001 + S_00003_00003)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003], S_00001_00003)
{1..4}
DISCRETE aux62 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (4*S_00004_00001 + S_00004_00003 + -4)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003], S_00001_00003)
{1..4}
DISCRETE aux63 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00002_00003) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003], (4*S_00001_00002 + S_00001_00003 + -4))
{1..4}
DISCRETE aux64 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00002_00003) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], (-4 + 4*S_00002_00002 + S_00002_00003))
{1..4}
DISCRETE aux65 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003], (-4 + 4*S_00003_00002 + S_00003_00003)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00002_00003)
{1..4}
DISCRETE aux66 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (4*S_00004_00002 + S_00004_00003 + -4)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00002_00003)
{1..4}
DISCRETE aux67 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003], (5*S_00001_00003 + -4)) --- ElementOne([1, S_00001_00002, S_00001_00003], S_00003_00003)
{1..3}
DISCRETE aux68 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (-4 + 5*S_00002_00003)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003], S_00003_00003)
{1..4}
DISCRETE aux69 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003], S_00003_00003) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003], (-4 + 5*S_00003_00003))
{1..4}
DISCRETE aux70 #ElementOne([S_00004_00001, S_00004_00002, S_00004_00003], S_00003_00003) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (5*S_00004_00003 + -4))
{1..4}
DISCRETE aux71 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003], (S_00001_00003 + 4*S_00001_00004 + -4)) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00004_00003)
{1..4}
DISCRETE aux72 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (-4 + S_00002_00003 + 4*S_00002_00004)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00004_00003)
{1..4}
DISCRETE aux73 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003], (-4 + S_00003_00003 + 4*S_00003_00004)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00004_00003)
{1..4}
DISCRETE aux74 #ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00004_00003) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (S_00004_00003 + 4*S_00004_00004 + -4))
{1..4}
DISCRETE aux75 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00001_00004) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], (-4 + 4*S_00002_00001 + S_00002_00004))
{1..4}
DISCRETE aux76 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00001_00004) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], (-4 + 4*S_00003_00001 + S_00003_00004))
{1..4}
DISCRETE aux77 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (4*S_00004_00001 + S_00004_00004 + -4)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00001_00004)
{1..4}
DISCRETE aux78 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], (4*S_00001_00002 + S_00001_00004 + -4)) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00002_00004)
{1..4}
DISCRETE aux79 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00002_00004) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], (-4 + 4*S_00002_00002 + S_00002_00004))
{1..4}
DISCRETE aux80 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00002_00004) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (-4 + 4*S_00003_00002 + S_00003_00004))
{1..4}
DISCRETE aux81 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (4*S_00004_00002 + S_00004_00004 + -4)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00002_00004)
{1..4}
DISCRETE aux82 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], (4*S_00001_00003 + S_00001_00004 + -4)) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00003_00004)
{1..4}
DISCRETE aux83 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (-4 + 4*S_00002_00003 + S_00002_00004)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00003_00004)
{1..4}
DISCRETE aux84 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00003_00004) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], (-4 + 4*S_00003_00003 + S_00003_00004))
{1..4}
DISCRETE aux85 #ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00003_00004) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (4*S_00004_00003 + S_00004_00004 + -4))
{1..4}
DISCRETE aux86 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (5*S_00001_00004 + -4)) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00004_00004)
{1..4}
DISCRETE aux87 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (-4 + 5*S_00002_00004)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00004_00004)
{1..4}
DISCRETE aux88 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (-4 + 5*S_00003_00004)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00004_00004)
{1..4}
DISCRETE aux89 #ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00004_00004) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (5*S_00004_00004 + -4))
{1..4}
DISCRETE aux90 #(-4 + 5*S_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux90, [1,1,6,6])
**VARIABLES**
DISCRETE aux91 #(-4 + 5*S_00003_00001)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux91, [1,1,11,11])
**VARIABLES**
DISCRETE aux92 #(5*S_00004_00001 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux92, [1,1,6,6,16,16])
**VARIABLES**
DISCRETE aux93 #ElementOne([1, 2], S_00001_00002)
{1..2}
DISCRETE aux94 #ElementOne([1, 2, 4, 3], S_00001_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux94, [1,1,3,4])
**VARIABLES**
DISCRETE aux95 #ElementOne([1, 2, 4], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux95, [1,2,4,4])
**VARIABLES**
DISCRETE aux96 #ElementOne([1, 2], S_00002_00001)
{1..2}
DISCRETE aux97 #ElementOne([1, 2], S_00002_00002)
{1..2}
DISCRETE aux98 #ElementOne([1, 2, 4, 3], S_00002_00004)
{1..4}
DISCRETE aux99 #ElementOne([1, 2, 4, 3], S_00002_00003)
{1..4}
DISCRETE aux100 #ElementOne([1, 2, 4, 3], S_00004_00001)
{1..3}
DISCRETE aux101 #ElementOne([1, 2, 4, 3], S_00004_00002)
{1..4}
DISCRETE aux102 #ElementOne([1, 2, 4, 3], S_00004_00004)
{1..4}
DISCRETE aux103 #ElementOne([1, 2, 4, 3], S_00004_00003)
{1..4}
DISCRETE aux104 #ElementOne([1, 2, 4], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux104, [1,2,4,4])
**VARIABLES**
DISCRETE aux105 #ElementOne([1, 2, 4, 3], S_00003_00002)
{1..4}
DISCRETE aux106 #ElementOne([1, 2, 4, 3], S_00003_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux106, [1,1,3,4])
**VARIABLES**
DISCRETE aux107 #ElementOne([1, 2, 4], S_00003_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux107, [1,2,4,4])
**VARIABLES**
DISCRETE aux108 #ElementOne([1, 3, 2], S_00001_00003)
{1..3}
DISCRETE aux109 #ElementOne([1, 3, 2, 4], S_00001_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux109, [1,2,4,4])
**VARIABLES**
DISCRETE aux110 #ElementOne([1, 3, 2], S_00003_00001)
{1..3}
DISCRETE aux111 #ElementOne([1, 3, 2], S_00003_00003)
{1..3}
DISCRETE aux112 #ElementOne([1, 3, 2, 4], S_00003_00002)
{1..4}
DISCRETE aux113 #ElementOne([1, 3, 2, 4], S_00003_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux113, [1,2,4,4])
**VARIABLES**
DISCRETE aux114 #ElementOne([1, 3, 2, 4], S_00002_00003)
{1..4}
DISCRETE aux115 #ElementOne([1, 3, 2, 4], S_00002_00004)
{1..4}
DISCRETE aux116 #ElementOne([1, 3, 2, 4], S_00004_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux116, [1,1,3,4])
**VARIABLES**
DISCRETE aux117 #ElementOne([1, 3, 2, 4], S_00004_00003)
{1..4}
DISCRETE aux118 #ElementOne([1, 3, 2, 4], S_00004_00002)
{1..4}
DISCRETE aux119 #ElementOne([1, 3, 2, 4], S_00004_00004)
{1..4}
DISCRETE aux120 #ElementOne([1, 4, 2], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux120, [1,2,4,4])
**VARIABLES**
DISCRETE aux121 #ElementOne([1, 4, 2, 3], S_00001_00004)
{1..3}
DISCRETE aux122 #ElementOne([1, 4, 2], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux122, [1,2,4,4])
**VARIABLES**
DISCRETE aux123 #ElementOne([1, 4, 2], S_00003_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux123, [1,2,4,4])
**VARIABLES**
DISCRETE aux124 #ElementOne([1, 4, 2, 3], S_00003_00004)
{1..3}
DISCRETE aux125 #ElementOne([1, 4, 2, 3], S_00003_00002)
{1..4}
DISCRETE aux126 #ElementOne([1, 4, 2, 3], S_00004_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux126, [1,1,3,4])
**VARIABLES**
DISCRETE aux127 #ElementOne([1, 4, 2, 3], S_00004_00003)
{1..4}
DISCRETE aux128 #ElementOne([1, 4, 2, 3], S_00004_00004)
{1..4}
DISCRETE aux129 #ElementOne([1, 4, 2, 3], S_00004_00002)
{1..4}
DISCRETE aux130 #ElementOne([1, 4, 2, 3], S_00002_00003)
{1..4}
DISCRETE aux131 #ElementOne([1, 4, 2, 3], S_00002_00004)
{1..4}
DISCRETE aux132 #ElementOne([1, 3, 4, 2], S_00001_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux132, [1,2,4,4])
**VARIABLES**
DISCRETE aux133 #ElementOne([1, 3, 4], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux133, [1,1,3,4])
**VARIABLES**
DISCRETE aux134 #ElementOne([1, 3, 4, 2], S_00004_00001)
{1..3}
DISCRETE aux135 #ElementOne([1, 3, 4, 2], S_00004_00004)
{1..4}
DISCRETE aux136 #ElementOne([1, 3, 4, 2], S_00004_00002)
{1..4}
DISCRETE aux137 #ElementOne([1, 3, 4, 2], S_00004_00003)
{1..4}
DISCRETE aux138 #ElementOne([1, 3, 4, 2], S_00002_00004)
{1..4}
DISCRETE aux139 #ElementOne([1, 3, 4, 2], S_00002_00003)
{1..4}
DISCRETE aux140 #ElementOne([1, 3, 4], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux140, [1,1,3,4])
**VARIABLES**
DISCRETE aux141 #ElementOne([1, 3, 4, 2], S_00003_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux141, [1,2,4,4])
**VARIABLES**
DISCRETE aux142 #ElementOne([1, 3, 4, 2], S_00003_00002)
{1..4}
DISCRETE aux143 #ElementOne([1, 3, 4], S_00003_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux143, [1,1,3,4])
**VARIABLES**
DISCRETE aux144 #ElementOne([1, 4, 3, 2], S_00001_00004)
{1..3}
DISCRETE aux145 #ElementOne([1, 4, 3], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux145, [1,1,3,4])
**VARIABLES**
DISCRETE aux146 #ElementOne([1, 4, 3, 2], S_00004_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux146, [1,2,4,4])
**VARIABLES**
DISCRETE aux147 #ElementOne([1, 4, 3, 2], S_00004_00004)
{1..4}
DISCRETE aux148 #ElementOne([1, 4, 3, 2], S_00004_00003)
{1..4}
DISCRETE aux149 #ElementOne([1, 4, 3, 2], S_00004_00002)
{1..4}
DISCRETE aux150 #ElementOne([1, 4, 3], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux150, [1,1,3,4])
**VARIABLES**
DISCRETE aux151 #ElementOne([1, 4, 3, 2], S_00003_00004)
{1..3}
DISCRETE aux152 #ElementOne([1, 4, 3], S_00003_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux152, [1,1,3,4])
**VARIABLES**
DISCRETE aux153 #ElementOne([1, 4, 3, 2], S_00003_00002)
{1..4}
DISCRETE aux154 #ElementOne([1, 4, 3, 2], S_00002_00004)
{1..4}
DISCRETE aux155 #ElementOne([1, 4, 3, 2], S_00002_00003)
{1..4}
DISCRETE aux156 #ElementOne([2, 1, 3, 4], S_00002_00003)
{1..4}
DISCRETE aux157 #ElementOne([2, 1, 3, 4], S_00002_00004)
{1..4}
DISCRETE aux158 #ElementOne([2, 1, 3], S_00001_00003)
{1..3}
DISCRETE aux159 #ElementOne([2, 1, 3, 4], S_00001_00004)
{2..4}
DISCRETE aux160 #ElementOne([2, 1, 3, 4], S_00003_00002)
{1..4}
DISCRETE aux161 #ElementOne([2, 1, 3], S_00003_00001)
{1..3}
DISCRETE aux162 #ElementOne([2, 1, 3], S_00003_00003)
{1..3}
DISCRETE aux163 #ElementOne([2, 1, 3, 4], S_00003_00004)
{2..4}
DISCRETE aux164 #ElementOne([2, 1, 3, 4], S_00004_00002)
{1..4}
DISCRETE aux165 #ElementOne([2, 1, 3, 4], S_00004_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux165, [1,2,4,4])
**VARIABLES**
DISCRETE aux166 #ElementOne([2, 1, 3, 4], S_00004_00003)
{1..4}
DISCRETE aux167 #ElementOne([2, 1, 3, 4], S_00004_00004)
{1..4}
DISCRETE aux168 #ElementOne([2, 1, 4, 3], S_00002_00004)
{1..4}
DISCRETE aux169 #ElementOne([2, 1, 4, 3], S_00002_00003)
{1..4}
DISCRETE aux170 #ElementOne([2, 1, 4, 3], S_00001_00004)
{2..4}
DISCRETE aux171 #ElementOne([2, 1, 4], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux171, [1,2,4,4])
**VARIABLES**
DISCRETE aux172 #ElementOne([2, 1, 4, 3], S_00004_00002)
{1..4}
DISCRETE aux173 #ElementOne([2, 1, 4, 3], S_00004_00001)
{1..3}
DISCRETE aux174 #ElementOne([2, 1, 4, 3], S_00004_00004)
{1..4}
DISCRETE aux175 #ElementOne([2, 1, 4, 3], S_00004_00003)
{1..4}
DISCRETE aux176 #ElementOne([2, 1, 4, 3], S_00003_00002)
{1..4}
DISCRETE aux177 #ElementOne([2, 1, 4], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux177, [1,2,4,4])
**VARIABLES**
DISCRETE aux178 #ElementOne([2, 1, 4, 3], S_00003_00004)
{2..4}
DISCRETE aux179 #ElementOne([2, 1, 4], S_00003_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux179, [1,2,4,4])
**VARIABLES**
DISCRETE aux180 #ElementOne([3, 1, 2, 4], S_00002_00003)
{1..4}
DISCRETE aux181 #ElementOne([3, 1, 2, 4], S_00002_00004)
{1..4}
DISCRETE aux182 #ElementOne([3, 1, 2, 4], S_00003_00002)
{1..4}
DISCRETE aux183 #ElementOne([3, 1, 2], S_00003_00003)
{1..3}
DISCRETE aux184 #ElementOne([3, 1, 2], S_00003_00001)
{1..3}
DISCRETE aux185 #ElementOne([3, 1, 2, 4], S_00003_00004)
{2..4}
DISCRETE aux186 #ElementOne([3, 1, 2], S_00001_00003)
{1..3}
DISCRETE aux187 #ElementOne([3, 1, 2, 4], S_00001_00004)
{2..4}
DISCRETE aux188 #ElementOne([3, 1, 2, 4], S_00004_00002)
{1..4}
DISCRETE aux189 #ElementOne([3, 1, 2, 4], S_00004_00003)
{1..4}
DISCRETE aux190 #ElementOne([3, 1, 2, 4], S_00004_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux190, [1,1,3,4])
**VARIABLES**
DISCRETE aux191 #ElementOne([3, 1, 2, 4], S_00004_00004)
{1..4}
DISCRETE aux192 #ElementOne([4, 1, 2, 3], S_00002_00003)
{1..4}
DISCRETE aux193 #ElementOne([4, 1, 2, 3], S_00002_00004)
{1..4}
DISCRETE aux194 #ElementOne([4, 1, 2, 3], S_00003_00002)
{1..4}
DISCRETE aux195 #ElementOne([4, 1, 2], S_00003_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux195, [1,2,4,4])
**VARIABLES**
DISCRETE aux196 #ElementOne([4, 1, 2, 3], S_00003_00004)
{2..4}
DISCRETE aux197 #ElementOne([4, 1, 2], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux197, [1,2,4,4])
**VARIABLES**
DISCRETE aux198 #ElementOne([4, 1, 2, 3], S_00004_00002)
{1..4}
DISCRETE aux199 #ElementOne([4, 1, 2, 3], S_00004_00003)
{1..4}
DISCRETE aux200 #ElementOne([4, 1, 2, 3], S_00004_00004)
{1..4}
DISCRETE aux201 #ElementOne([4, 1, 2, 3], S_00004_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux201, [1,1,3,4])
**VARIABLES**
DISCRETE aux202 #ElementOne([4, 1, 2], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux202, [1,2,4,4])
**VARIABLES**
DISCRETE aux203 #ElementOne([4, 1, 2, 3], S_00001_00004)
{2..4}
DISCRETE aux204 #ElementOne([3, 1, 4, 2], S_00002_00004)
{1..4}
DISCRETE aux205 #ElementOne([3, 1, 4, 2], S_00002_00003)
{1..4}
DISCRETE aux206 #ElementOne([3, 1, 4, 2], S_00004_00002)
{1..4}
DISCRETE aux207 #ElementOne([3, 1, 4, 2], S_00004_00004)
{1..4}
DISCRETE aux208 #ElementOne([3, 1, 4, 2], S_00004_00001)
{1..3}
DISCRETE aux209 #ElementOne([3, 1, 4, 2], S_00004_00003)
{1..4}
DISCRETE aux210 #ElementOne([3, 1, 4, 2], S_00001_00004)
{2..4}
DISCRETE aux211 #ElementOne([3, 1, 4], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux211, [1,1,3,4])
**VARIABLES**
DISCRETE aux212 #ElementOne([3, 1, 4, 2], S_00003_00002)
{1..4}
DISCRETE aux213 #ElementOne([3, 1, 4, 2], S_00003_00004)
{2..4}
DISCRETE aux214 #ElementOne([3, 1, 4], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux214, [1,1,3,4])
**VARIABLES**
DISCRETE aux215 #ElementOne([3, 1, 4], S_00003_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux215, [1,1,3,4])
**VARIABLES**
DISCRETE aux216 #ElementOne([4, 1, 3, 2], S_00002_00004)
{1..4}
DISCRETE aux217 #ElementOne([4, 1, 3, 2], S_00002_00003)
{1..4}
DISCRETE aux218 #ElementOne([4, 1, 3, 2], S_00004_00002)
{1..4}
DISCRETE aux219 #ElementOne([4, 1, 3, 2], S_00004_00004)
{1..4}
DISCRETE aux220 #ElementOne([4, 1, 3, 2], S_00004_00003)
{1..4}
DISCRETE aux221 #ElementOne([4, 1, 3, 2], S_00004_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux221, [1,2,4,4])
**VARIABLES**
DISCRETE aux222 #ElementOne([4, 1, 3, 2], S_00003_00002)
{1..4}
DISCRETE aux223 #ElementOne([4, 1, 3, 2], S_00003_00004)
{2..4}
DISCRETE aux224 #ElementOne([4, 1, 3], S_00003_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux224, [1,1,3,4])
**VARIABLES**
DISCRETE aux225 #ElementOne([4, 1, 3], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux225, [1,1,3,4])
**VARIABLES**
DISCRETE aux226 #ElementOne([4, 1, 3, 2], S_00001_00004)
{2..4}
DISCRETE aux227 #ElementOne([4, 1, 3], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux227, [1,1,3,4])
**VARIABLES**
DISCRETE aux228 #ElementOne([2, 3, 1], S_00003_00003)
{1..3}
DISCRETE aux229 #ElementOne([2, 3, 1], S_00003_00001)
{1..3}
DISCRETE aux230 #ElementOne([2, 3, 1, 4], S_00003_00002)
{1..4}
DISCRETE aux231 #ElementOne([2, 3, 1, 4], S_00003_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux231, [1,2,4,4])
**VARIABLES**
DISCRETE aux232 #ElementOne([2, 3, 1], S_00001_00003)
{1..3}
DISCRETE aux233 #ElementOne([2, 3, 1, 4], S_00001_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux233, [1,2,4,4])
**VARIABLES**
DISCRETE aux234 #ElementOne([2, 3, 1, 4], S_00002_00003)
{1..4}
DISCRETE aux235 #ElementOne([2, 3, 1, 4], S_00002_00004)
{1..4}
DISCRETE aux236 #ElementOne([2, 3, 1, 4], S_00004_00003)
{1..4}
DISCRETE aux237 #ElementOne([2, 3, 1, 4], S_00004_00001)
{2..4}
DISCRETE aux238 #ElementOne([2, 3, 1, 4], S_00004_00002)
{1..4}
DISCRETE aux239 #ElementOne([2, 3, 1, 4], S_00004_00004)
{1..4}
DISCRETE aux240 #ElementOne([2, 4, 1], S_00003_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux240, [1,2,4,4])
**VARIABLES**
DISCRETE aux241 #ElementOne([2, 4, 1], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux241, [1,2,4,4])
**VARIABLES**
DISCRETE aux242 #ElementOne([2, 4, 1, 3], S_00003_00004)
{1..3}
DISCRETE aux243 #ElementOne([2, 4, 1, 3], S_00003_00002)
{1..4}
DISCRETE aux244 #ElementOne([2, 4, 1], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux244, [1,2,4,4])
**VARIABLES**
DISCRETE aux245 #ElementOne([2, 4, 1, 3], S_00001_00004)
{1..3}
DISCRETE aux246 #ElementOne([2, 4, 1, 3], S_00004_00003)
{1..4}
DISCRETE aux247 #ElementOne([2, 4, 1, 3], S_00004_00001)
{2..4}
DISCRETE aux248 #ElementOne([2, 4, 1, 3], S_00004_00004)
{1..4}
DISCRETE aux249 #ElementOne([2, 4, 1, 3], S_00004_00002)
{1..4}
DISCRETE aux250 #ElementOne([2, 4, 1, 3], S_00002_00003)
{1..4}
DISCRETE aux251 #ElementOne([2, 4, 1, 3], S_00002_00004)
{1..4}
DISCRETE aux252 #ElementOne([3, 2, 1], S_00003_00003)
{1..3}
DISCRETE aux253 #ElementOne([3, 2, 1, 4], S_00003_00002)
{1..4}
DISCRETE aux254 #ElementOne([3, 2, 1], S_00003_00001)
{1..3}
DISCRETE aux255 #ElementOne([3, 2, 1, 4], S_00003_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux255, [1,1,3,4])
**VARIABLES**
DISCRETE aux256 #ElementOne([3, 2, 1, 4], S_00002_00003)
{1..4}
DISCRETE aux257 #ElementOne([3, 2, 1, 4], S_00002_00004)
{1..4}
DISCRETE aux258 #ElementOne([3, 2, 1], S_00001_00003)
{1..3}
DISCRETE aux259 #ElementOne([3, 2, 1, 4], S_00001_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux259, [1,1,3,4])
**VARIABLES**
DISCRETE aux260 #ElementOne([3, 2, 1, 4], S_00004_00003)
{1..4}
DISCRETE aux261 #ElementOne([3, 2, 1, 4], S_00004_00002)
{1..4}
DISCRETE aux262 #ElementOne([3, 2, 1, 4], S_00004_00001)
{2..4}
DISCRETE aux263 #ElementOne([3, 2, 1, 4], S_00004_00004)
{1..4}
DISCRETE aux264 #ElementOne([4, 2, 1], S_00003_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux264, [1,2,4,4])
**VARIABLES**
DISCRETE aux265 #ElementOne([4, 2, 1, 3], S_00003_00002)
{1..4}
DISCRETE aux266 #ElementOne([4, 2, 1, 3], S_00003_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux266, [1,1,3,4])
**VARIABLES**
DISCRETE aux267 #ElementOne([4, 2, 1], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux267, [1,2,4,4])
**VARIABLES**
DISCRETE aux268 #ElementOne([4, 2, 1, 3], S_00002_00003)
{1..4}
DISCRETE aux269 #ElementOne([4, 2, 1, 3], S_00002_00004)
{1..4}
DISCRETE aux270 #ElementOne([4, 2, 1, 3], S_00004_00003)
{1..4}
DISCRETE aux271 #ElementOne([4, 2, 1, 3], S_00004_00002)
{1..4}
DISCRETE aux272 #ElementOne([4, 2, 1, 3], S_00004_00004)
{1..4}
DISCRETE aux273 #ElementOne([4, 2, 1, 3], S_00004_00001)
{2..4}
DISCRETE aux274 #ElementOne([4, 2, 1], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux274, [1,2,4,4])
**VARIABLES**
DISCRETE aux275 #ElementOne([4, 2, 1, 3], S_00001_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux275, [1,1,3,4])
**VARIABLES**
DISCRETE aux276 #ElementOne([3, 4, 1], S_00003_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux276, [1,1,3,4])
**VARIABLES**
DISCRETE aux277 #ElementOne([3, 4, 1, 2], S_00003_00004)
{1..3}
DISCRETE aux278 #ElementOne([3, 4, 1], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux278, [1,1,3,4])
**VARIABLES**
DISCRETE aux279 #ElementOne([3, 4, 1, 2], S_00003_00002)
{1..4}
DISCRETE aux280 #ElementOne([3, 4, 1, 2], S_00004_00003)
{1..4}
DISCRETE aux281 #ElementOne([3, 4, 1, 2], S_00004_00004)
{1..4}
DISCRETE aux282 #ElementOne([3, 4, 1, 2], S_00004_00001)
{2..4}
DISCRETE aux283 #ElementOne([3, 4, 1, 2], S_00004_00002)
{1..4}
DISCRETE aux284 #ElementOne([3, 4, 1], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux284, [1,1,3,4])
**VARIABLES**
DISCRETE aux285 #ElementOne([3, 4, 1, 2], S_00001_00004)
{1..3}
DISCRETE aux286 #ElementOne([3, 4, 1, 2], S_00002_00003)
{1..4}
DISCRETE aux287 #ElementOne([3, 4, 1, 2], S_00002_00004)
{1..4}
DISCRETE aux288 #ElementOne([4, 3, 1], S_00003_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux288, [1,1,3,4])
**VARIABLES**
DISCRETE aux289 #ElementOne([4, 3, 1, 2], S_00003_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux289, [1,2,4,4])
**VARIABLES**
DISCRETE aux290 #ElementOne([4, 3, 1, 2], S_00003_00002)
{1..4}
DISCRETE aux291 #ElementOne([4, 3, 1], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux291, [1,1,3,4])
**VARIABLES**
DISCRETE aux292 #ElementOne([4, 3, 1, 2], S_00004_00003)
{1..4}
DISCRETE aux293 #ElementOne([4, 3, 1, 2], S_00004_00004)
{1..4}
DISCRETE aux294 #ElementOne([4, 3, 1, 2], S_00004_00002)
{1..4}
DISCRETE aux295 #ElementOne([4, 3, 1, 2], S_00004_00001)
{2..4}
DISCRETE aux296 #ElementOne([4, 3, 1, 2], S_00002_00003)
{1..4}
DISCRETE aux297 #ElementOne([4, 3, 1, 2], S_00002_00004)
{1..4}
DISCRETE aux298 #ElementOne([4, 3, 1], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux298, [1,1,3,4])
**VARIABLES**
DISCRETE aux299 #ElementOne([4, 3, 1, 2], S_00001_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux299, [1,2,4,4])
**VARIABLES**
DISCRETE aux300 #ElementOne([2, 3, 4, 1], S_00004_00004)
{1..4}
DISCRETE aux301 #ElementOne([2, 3, 4, 1], S_00004_00001)
{1..3}
DISCRETE aux302 #ElementOne([2, 3, 4, 1], S_00004_00002)
{1..4}
DISCRETE aux303 #ElementOne([2, 3, 4, 1], S_00004_00003)
{1..4}
DISCRETE aux304 #ElementOne([2, 3, 4, 1], S_00001_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux304, [1,2,4,4])
**VARIABLES**
DISCRETE aux305 #ElementOne([2, 3, 4], S_00001_00003)
{2..4}
DISCRETE aux306 #ElementOne([2, 3, 4, 1], S_00002_00004)
{1..4}
DISCRETE aux307 #ElementOne([2, 3, 4, 1], S_00002_00003)
{1..4}
DISCRETE aux308 #ElementOne([2, 3, 4, 1], S_00003_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux308, [1,2,4,4])
**VARIABLES**
DISCRETE aux309 #ElementOne([2, 3, 4], S_00003_00001)
{2..4}
DISCRETE aux310 #ElementOne([2, 3, 4, 1], S_00003_00002)
{1..4}
DISCRETE aux311 #ElementOne([2, 3, 4], S_00003_00003)
{2..4}
DISCRETE aux312 #ElementOne([2, 4, 3, 1], S_00004_00004)
{1..4}
DISCRETE aux313 #ElementOne([2, 4, 3, 1], S_00004_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux313, [1,2,4,4])
**VARIABLES**
DISCRETE aux314 #ElementOne([2, 4, 3, 1], S_00004_00003)
{1..4}
DISCRETE aux315 #ElementOne([2, 4, 3, 1], S_00004_00002)
{1..4}
DISCRETE aux316 #ElementOne([2, 4, 3, 1], S_00001_00004)
{1..3}
DISCRETE aux317 #ElementOne([2, 4, 3], S_00001_00003)
{2..4}
DISCRETE aux318 #ElementOne([2, 4, 3, 1], S_00003_00004)
{1..3}
DISCRETE aux319 #ElementOne([2, 4, 3], S_00003_00001)
{2..4}
DISCRETE aux320 #ElementOne([2, 4, 3], S_00003_00003)
{2..4}
DISCRETE aux321 #ElementOne([2, 4, 3, 1], S_00003_00002)
{1..4}
DISCRETE aux322 #ElementOne([2, 4, 3, 1], S_00002_00004)
{1..4}
DISCRETE aux323 #ElementOne([2, 4, 3, 1], S_00002_00003)
{1..4}
DISCRETE aux324 #ElementOne([3, 2, 4, 1], S_00004_00004)
{1..4}
DISCRETE aux325 #ElementOne([3, 2, 4, 1], S_00004_00002)
{1..4}
DISCRETE aux326 #ElementOne([3, 2, 4, 1], S_00004_00001)
{1..3}
DISCRETE aux327 #ElementOne([3, 2, 4, 1], S_00004_00003)
{1..4}
DISCRETE aux328 #ElementOne([3, 2, 4, 1], S_00002_00004)
{1..4}
DISCRETE aux329 #ElementOne([3, 2, 4, 1], S_00002_00003)
{1..4}
DISCRETE aux330 #ElementOne([3, 2, 4, 1], S_00001_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux330, [1,1,3,4])
**VARIABLES**
DISCRETE aux331 #ElementOne([3, 2, 4], S_00001_00003)
{2..4}
DISCRETE aux332 #ElementOne([3, 2, 4, 1], S_00003_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux332, [1,1,3,4])
**VARIABLES**
DISCRETE aux333 #ElementOne([3, 2, 4, 1], S_00003_00002)
{1..4}
DISCRETE aux334 #ElementOne([3, 2, 4], S_00003_00001)
{2..4}
DISCRETE aux335 #ElementOne([3, 2, 4], S_00003_00003)
{2..4}
DISCRETE aux336 #ElementOne([4, 2, 3, 1], S_00004_00004)
{1..4}
DISCRETE aux337 #ElementOne([4, 2, 3, 1], S_00004_00002)
{1..4}
DISCRETE aux338 #ElementOne([4, 2, 3, 1], S_00004_00003)
{1..4}
DISCRETE aux339 #ElementOne([4, 2, 3, 1], S_00004_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux339, [1,2,4,4])
**VARIABLES**
DISCRETE aux340 #ElementOne([4, 2, 3, 1], S_00002_00004)
{1..4}
DISCRETE aux341 #ElementOne([4, 2, 3, 1], S_00002_00003)
{1..4}
DISCRETE aux342 #ElementOne([4, 2, 3, 1], S_00003_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux342, [1,1,3,4])
**VARIABLES**
DISCRETE aux343 #ElementOne([4, 2, 3, 1], S_00003_00002)
{1..4}
DISCRETE aux344 #ElementOne([4, 2, 3], S_00003_00003)
{2..4}
DISCRETE aux345 #ElementOne([4, 2, 3], S_00003_00001)
{2..4}
DISCRETE aux346 #ElementOne([4, 2, 3, 1], S_00001_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux346, [1,1,3,4])
**VARIABLES**
DISCRETE aux347 #ElementOne([4, 2, 3], S_00001_00003)
{2..4}
DISCRETE aux348 #ElementOne([3, 4, 2, 1], S_00004_00004)
{1..4}
DISCRETE aux349 #ElementOne([3, 4, 2, 1], S_00004_00003)
{1..4}
DISCRETE aux350 #ElementOne([3, 4, 2, 1], S_00004_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux350, [1,1,3,4])
**VARIABLES**
DISCRETE aux351 #ElementOne([3, 4, 2, 1], S_00004_00002)
{1..4}
DISCRETE aux352 #ElementOne([3, 4, 2, 1], S_00003_00004)
{1..3}
DISCRETE aux353 #ElementOne([3, 4, 2], S_00003_00003)
{2..4}
DISCRETE aux354 #ElementOne([3, 4, 2], S_00003_00001)
{2..4}
DISCRETE aux355 #ElementOne([3, 4, 2, 1], S_00003_00002)
{1..4}
DISCRETE aux356 #ElementOne([3, 4, 2, 1], S_00001_00004)
{1..3}
DISCRETE aux357 #ElementOne([3, 4, 2], S_00001_00003)
{2..4}
DISCRETE aux358 #ElementOne([3, 4, 2, 1], S_00002_00004)
{1..4}
DISCRETE aux359 #ElementOne([3, 4, 2, 1], S_00002_00003)
{1..4}
DISCRETE aux360 #ElementOne([4, 3, 2, 1], S_00004_00004)
{1..4}
DISCRETE aux361 #ElementOne([4, 3, 2, 1], S_00004_00003)
{1..4}
DISCRETE aux362 #ElementOne([4, 3, 2, 1], S_00004_00002)
{1..4}
DISCRETE aux363 #ElementOne([4, 3, 2, 1], S_00004_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux363, [1,1,3,4])
**VARIABLES**
DISCRETE aux364 #ElementOne([4, 3, 2, 1], S_00003_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux364, [1,2,4,4])
**VARIABLES**
DISCRETE aux365 #ElementOne([4, 3, 2], S_00003_00003)
{2..4}
DISCRETE aux366 #ElementOne([4, 3, 2, 1], S_00003_00002)
{1..4}
DISCRETE aux367 #ElementOne([4, 3, 2], S_00003_00001)
{2..4}
DISCRETE aux368 #ElementOne([4, 3, 2, 1], S_00002_00004)
{1..4}
DISCRETE aux369 #ElementOne([4, 3, 2, 1], S_00002_00003)
{1..4}
DISCRETE aux370 #ElementOne([4, 3, 2, 1], S_00001_00004)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux370, [1,2,4,4])
**VARIABLES**
DISCRETE aux371 #ElementOne([4, 3, 2], S_00001_00003)
{2..4}
DISCRETE aux372 #(4*S_00001_00002 + -3)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux372, [1,1,5,5])
**VARIABLES**
DISCRETE aux373 #(-4 + S_00002_00001 + 4*S_00002_00002)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux373, [1,2,5,6])
**VARIABLES**
DISCRETE aux374 #(-4 + S_00003_00001 + 4*S_00003_00002)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux374, [1,1,3,3,5,5,7,7,9,9,11,11,13,13])
**VARIABLES**
DISCRETE aux375 #(S_00004_00001 + 4*S_00004_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux375, [1,2,4,6,8,10,12,14,16,16])
**VARIABLES**
DISCRETE aux376 #(4*S_00001_00003 + -3)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux376, [1,1,9,9])
**VARIABLES**
DISCRETE aux377 #(-4 + S_00002_00001 + 4*S_00002_00003)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux377, [1,2,5,6,9,10,13,14])
**VARIABLES**
DISCRETE aux378 #(-4 + S_00003_00001 + 4*S_00003_00003)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux378, [1,1,3,3,9,9,11,11])
**VARIABLES**
DISCRETE aux379 #(S_00004_00001 + 4*S_00004_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux379, [1,2,4,6,8,10,12,14,16,16])
**VARIABLES**
DISCRETE aux380 #(4*S_00001_00004 + -3)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux380, [1,1,9,9,13,13])
**VARIABLES**
DISCRETE aux381 #(-4 + S_00002_00001 + 4*S_00002_00004)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux381, [1,2,5,6,9,10,13,14])
**VARIABLES**
DISCRETE aux382 #(-4 + S_00003_00001 + 4*S_00003_00004)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux382, [1,1,3,3,9,9,11,11,13,13,15,15])
**VARIABLES**
DISCRETE aux383 #(S_00004_00001 + 4*S_00004_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux383, [1,2,4,6,8,10,12,14,16,16])
**VARIABLES**
DISCRETE aux384 #(-4 + 4*S_00002_00001 + S_00002_00002)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux384, [1,2,5,6])
**VARIABLES**
DISCRETE aux385 #(-4 + 4*S_00003_00001 + S_00003_00002)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux385, [1,4,9,11])
**VARIABLES**
DISCRETE aux386 #(4*S_00004_00001 + S_00004_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux386, [1,8,13,16])
**VARIABLES**
DISCRETE aux387 #(5*S_00001_00002 + -4)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux387, [1,1,6,6])
**VARIABLES**
DISCRETE aux388 #(-4 + 5*S_00002_00002)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux388, [1,1,6,6])
**VARIABLES**
DISCRETE aux389 #(-4 + 5*S_00003_00002)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux389, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux390 #(5*S_00004_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux390, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux391 #(S_00001_00002 + 4*S_00001_00003 + -4)
{1..10}
**CONSTRAINTS**
w-inintervalset(aux391, [1,2,9,10])
**VARIABLES**
DISCRETE aux392 #(-4 + S_00002_00002 + 4*S_00002_00003)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux392, [1,2,5,6,9,10,13,14])
**VARIABLES**
DISCRETE aux393 #(-4 + S_00003_00002 + 4*S_00003_00003)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux393, [1,4,9,11])
**VARIABLES**
DISCRETE aux394 #(S_00004_00002 + 4*S_00004_00003 + -4)
{1..16}
DISCRETE aux395 #(S_00001_00002 + 4*S_00001_00004 + -4)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux395, [1,2,9,10,13,14])
**VARIABLES**
DISCRETE aux396 #(-4 + S_00002_00002 + 4*S_00002_00004)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux396, [1,2,5,6,9,10,13,14])
**VARIABLES**
DISCRETE aux397 #(-4 + S_00003_00002 + 4*S_00003_00004)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux397, [1,4,9,16])
**VARIABLES**
DISCRETE aux398 #(S_00004_00002 + 4*S_00004_00004 + -4)
{1..16}
DISCRETE aux399 #(-4 + 4*S_00002_00001 + S_00002_00003)
{1..8}
DISCRETE aux400 #(-4 + 4*S_00003_00001 + S_00003_00003)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux400, [1,1,3,3,9,9,11,11])
**VARIABLES**
DISCRETE aux401 #(4*S_00004_00001 + S_00004_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux401, [1,8,13,16])
**VARIABLES**
DISCRETE aux402 #(4*S_00001_00002 + S_00001_00003 + -4)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux402, [1,1,3,3,5,5,7,7])
**VARIABLES**
DISCRETE aux403 #(-4 + 4*S_00002_00002 + S_00002_00003)
{1..8}
DISCRETE aux404 #(-4 + 4*S_00003_00002 + S_00003_00003)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux404, [1,1,3,3,5,5,7,7,9,9,11,11,13,13])
**VARIABLES**
DISCRETE aux405 #(4*S_00004_00002 + S_00004_00003 + -4)
{1..16}
DISCRETE aux406 #(5*S_00001_00003 + -4)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux406, [1,1,11,11])
**VARIABLES**
DISCRETE aux407 #(-4 + 5*S_00002_00003)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux407, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux408 #(-4 + 5*S_00003_00003)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux408, [1,1,11,11])
**VARIABLES**
DISCRETE aux409 #(5*S_00004_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux409, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux410 #(S_00001_00003 + 4*S_00001_00004 + -4)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux410, [1,1,3,3,9,9,11,11,13,13,15,15])
**VARIABLES**
DISCRETE aux411 #(-4 + S_00002_00003 + 4*S_00002_00004)
{1..16}
DISCRETE aux412 #(-4 + S_00003_00003 + 4*S_00003_00004)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux412, [1,1,3,3,9,9,11,11,13,13,15,15])
**VARIABLES**
DISCRETE aux413 #(S_00004_00003 + 4*S_00004_00004 + -4)
{1..16}
DISCRETE aux414 #(-4 + 4*S_00002_00001 + S_00002_00004)
{1..8}
DISCRETE aux415 #(-4 + 4*S_00003_00001 + S_00003_00004)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux415, [1,1,3,4,9,9,11,12])
**VARIABLES**
DISCRETE aux416 #(4*S_00004_00001 + S_00004_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux416, [1,8,13,16])
**VARIABLES**
DISCRETE aux417 #(4*S_00001_00002 + S_00001_00004 + -4)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux417, [1,1,3,5,7,8])
**VARIABLES**
DISCRETE aux418 #(-4 + 4*S_00002_00002 + S_00002_00004)
{1..8}
DISCRETE aux419 #(-4 + 4*S_00003_00002 + S_00003_00004)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux419, [1,1,3,5,7,9,11,13,15,16])
**VARIABLES**
DISCRETE aux420 #(4*S_00004_00002 + S_00004_00004 + -4)
{1..16}
DISCRETE aux421 #(4*S_00001_00003 + S_00001_00004 + -4)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux421, [1,1,3,4,9,9,11,12])
**VARIABLES**
DISCRETE aux422 #(-4 + 4*S_00002_00003 + S_00002_00004)
{1..16}
DISCRETE aux423 #(-4 + 4*S_00003_00003 + S_00003_00004)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux423, [1,1,3,4,9,9,11,12])
**VARIABLES**
DISCRETE aux424 #(4*S_00004_00003 + S_00004_00004 + -4)
{1..16}
DISCRETE aux425 #(5*S_00001_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux425, [1,1,11,11,16,16])
**VARIABLES**
DISCRETE aux426 #(-4 + 5*S_00002_00004)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux426, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux427 #(-4 + 5*S_00003_00004)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux427, [1,1,11,11,16,16])
**VARIABLES**
DISCRETE aux428 #(5*S_00004_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux428, [1,1,6,6,11,11,16,16])
**VARIABLES**
**TUPLELIST**
perms 23 4
1 2 4 3 
1 3 2 4 
1 3 4 2 
1 4 2 3 
1 4 3 2 
2 1 3 4 
2 1 4 3 
2 3 1 4 
2 3 4 1 
2 4 1 3 
2 4 3 1 
3 1 2 4 
3 1 4 2 
3 2 1 4 
3 2 4 1 
3 4 1 2 
3 4 2 1 
4 1 2 3 
4 1 3 2 
4 2 1 3 
4 2 3 1 
4 3 1 2 
4 3 2 1 
**VARIABLES**
ALIAS perms[23,4]=[[1, 2, 4, 3], [1, 3, 2, 4], [1, 3, 4, 2], [1, 4, 2, 3], [1, 4, 3, 2], [2, 1, 3, 4], [2, 1, 4, 3], [2, 3, 1, 4], [2, 3, 4, 1], [2, 4, 1, 3], [2, 4, 3, 1], [3, 1, 2, 4], [3, 1, 4, 2], [3, 2, 1, 4], [3, 2, 4, 1], [3, 4, 1, 2], [3, 4, 2, 1], [4, 1, 2, 3], [4, 1, 3, 2], [4, 2, 1, 3], [4, 2, 3, 1], [4, 3, 1, 2], [4, 3, 2, 1]]
**TUPLELIST**
inverses 23 4
1 2 4 3 
1 3 2 4 
1 4 2 3 
1 3 4 2 
1 4 3 2 
2 1 3 4 
2 1 4 3 
3 1 2 4 
4 1 2 3 
3 1 4 2 
4 1 3 2 
2 3 1 4 
2 4 1 3 
3 2 1 4 
4 2 1 3 
3 4 1 2 
4 3 1 2 
2 3 4 1 
2 4 3 1 
3 2 4 1 
4 2 3 1 
3 4 2 1 
4 3 2 1 
**VARIABLES**
ALIAS inverses[23,4]=[[1, 2, 4, 3], [1, 3, 2, 4], [1, 4, 2, 3], [1, 3, 4, 2], [1, 4, 3, 2], [2, 1, 3, 4], [2, 1, 4, 3], [3, 1, 2, 4], [4, 1, 2, 3], [3, 1, 4, 2], [4, 1, 3, 2], [2, 3, 1, 4], [2, 4, 1, 3], [3, 2, 1, 4], [4, 2, 1, 3], [3, 4, 1, 2], [4, 3, 1, 2], [2, 3, 4, 1], [2, 4, 3, 1], [3, 2, 4, 1], [4, 2, 3, 1], [3, 4, 2, 1], [4, 3, 2, 1]]
**SEARCH**
PRINT[[S_00001_00002],[S_00001_00003],[S_00001_00004],[S_00002_00001],[S_00002_00002],[S_00002_00003],[S_00002_00004],[S_00003_00001],[S_00003_00002],[S_00003_00003],[S_00003_00004],[S_00004_00001],[S_00004_00002],[S_00004_00003],[S_00004_00004]]
VARORDER STATIC [S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004]
**CONSTRAINTS**
watchelement_one([1, 2], S_00001_00002, aux93)
watchelement_one([1, 2, 4, 3], S_00001_00004, aux94)
watchelement_one([1, 2, 4], S_00001_00003, aux95)
watchelement_one([1, 2], S_00002_00001, aux96)
watchelement_one([1, 2], S_00002_00002, aux97)
watchelement_one([1, 2, 4, 3], S_00002_00004, aux98)
watchelement_one([1, 2, 4, 3], S_00002_00003, aux99)
watchelement_one([1, 2, 4, 3], S_00004_00001, aux100)
watchelement_one([1, 2, 4, 3], S_00004_00002, aux101)
watchelement_one([1, 2, 4, 3], S_00004_00004, aux102)
watchelement_one([1, 2, 4, 3], S_00004_00003, aux103)
watchelement_one([1, 2, 4], S_00003_00001, aux104)
watchelement_one([1, 2, 4, 3], S_00003_00002, aux105)
watchelement_one([1, 2, 4, 3], S_00003_00004, aux106)
watchelement_one([1, 2, 4], S_00003_00003, aux107)
watchelement_one([1, 3, 2], S_00001_00003, aux108)
watchelement_one([1, 3, 2, 4], S_00001_00004, aux109)
watchelement_one([1, 3, 2], S_00003_00001, aux110)
watchelement_one([1, 3, 2], S_00003_00003, aux111)
watchelement_one([1, 3, 2, 4], S_00003_00002, aux112)
watchelement_one([1, 3, 2, 4], S_00003_00004, aux113)
watchelement_one([1, 3, 2, 4], S_00002_00003, aux114)
watchelement_one([1, 3, 2, 4], S_00002_00004, aux115)
watchelement_one([1, 3, 2, 4], S_00004_00001, aux116)
watchelement_one([1, 3, 2, 4], S_00004_00003, aux117)
watchelement_one([1, 3, 2, 4], S_00004_00002, aux118)
watchelement_one([1, 3, 2, 4], S_00004_00004, aux119)
watchelement_one([1, 4, 2], S_00001_00003, aux120)
watchelement_one([1, 4, 2, 3], S_00001_00004, aux121)
watchelement_one([1, 4, 2], S_00003_00001, aux122)
watchelement_one([1, 4, 2], S_00003_00003, aux123)
watchelement_one([1, 4, 2, 3], S_00003_00004, aux124)
watchelement_one([1, 4, 2, 3], S_00003_00002, aux125)
watchelement_one([1, 4, 2, 3], S_00004_00001, aux126)
watchelement_one([1, 4, 2, 3], S_00004_00003, aux127)
watchelement_one([1, 4, 2, 3], S_00004_00004, aux128)
watchelement_one([1, 4, 2, 3], S_00004_00002, aux129)
watchelement_one([1, 4, 2, 3], S_00002_00003, aux130)
watchelement_one([1, 4, 2, 3], S_00002_00004, aux131)
watchelement_one([1, 3, 4, 2], S_00001_00004, aux132)
watchelement_one([1, 3, 4], S_00001_00003, aux133)
watchelement_one([1, 3, 4, 2], S_00004_00001, aux134)
watchelement_one([1, 3, 4, 2], S_00004_00004, aux135)
watchelement_one([1, 3, 4, 2], S_00004_00002, aux136)
watchelement_one([1, 3, 4, 2], S_00004_00003, aux137)
watchelement_one([1, 3, 4, 2], S_00002_00004, aux138)
watchelement_one([1, 3, 4, 2], S_00002_00003, aux139)
watchelement_one([1, 3, 4], S_00003_00001, aux140)
watchelement_one([1, 3, 4, 2], S_00003_00004, aux141)
watchelement_one([1, 3, 4, 2], S_00003_00002, aux142)
watchelement_one([1, 3, 4], S_00003_00003, aux143)
watchelement_one([1, 4, 3, 2], S_00001_00004, aux144)
watchelement_one([1, 4, 3], S_00001_00003, aux145)
watchelement_one([1, 4, 3, 2], S_00004_00001, aux146)
watchelement_one([1, 4, 3, 2], S_00004_00004, aux147)
watchelement_one([1, 4, 3, 2], S_00004_00003, aux148)
watchelement_one([1, 4, 3, 2], S_00004_00002, aux149)
watchelement_one([1, 4, 3], S_00003_00001, aux150)
watchelement_one([1, 4, 3, 2], S_00003_00004, aux151)
watchelement_one([1, 4, 3], S_00003_00003, aux152)
watchelement_one([1, 4, 3, 2], S_00003_00002, aux153)
watchelement_one([1, 4, 3, 2], S_00002_00004, aux154)
watchelement_one([1, 4, 3, 2], S_00002_00003, aux155)
watchelement_one([2, 1, 3, 4], S_00002_00003, aux156)
watchelement_one([2, 1, 3, 4], S_00002_00004, aux157)
watchelement_one([2, 1, 3], S_00001_00003, aux158)
watchelement_one([2, 1, 3, 4], S_00001_00004, aux159)
watchelement_one([2, 1, 3, 4], S_00003_00002, aux160)
watchelement_one([2, 1, 3], S_00003_00001, aux161)
watchelement_one([2, 1, 3], S_00003_00003, aux162)
watchelement_one([2, 1, 3, 4], S_00003_00004, aux163)
watchelement_one([2, 1, 3, 4], S_00004_00002, aux164)
watchelement_one([2, 1, 3, 4], S_00004_00001, aux165)
watchelement_one([2, 1, 3, 4], S_00004_00003, aux166)
watchelement_one([2, 1, 3, 4], S_00004_00004, aux167)
watchelement_one([2, 1, 4, 3], S_00002_00004, aux168)
watchelement_one([2, 1, 4, 3], S_00002_00003, aux169)
watchelement_one([2, 1, 4, 3], S_00001_00004, aux170)
watchelement_one([2, 1, 4], S_00001_00003, aux171)
watchelement_one([2, 1, 4, 3], S_00004_00002, aux172)
watchelement_one([2, 1, 4, 3], S_00004_00001, aux173)
watchelement_one([2, 1, 4, 3], S_00004_00004, aux174)
watchelement_one([2, 1, 4, 3], S_00004_00003, aux175)
watchelement_one([2, 1, 4, 3], S_00003_00002, aux176)
watchelement_one([2, 1, 4], S_00003_00001, aux177)
watchelement_one([2, 1, 4, 3], S_00003_00004, aux178)
watchelement_one([2, 1, 4], S_00003_00003, aux179)
watchelement_one([3, 1, 2, 4], S_00002_00003, aux180)
watchelement_one([3, 1, 2, 4], S_00002_00004, aux181)
watchelement_one([3, 1, 2, 4], S_00003_00002, aux182)
watchelement_one([3, 1, 2], S_00003_00003, aux183)
watchelement_one([3, 1, 2], S_00003_00001, aux184)
watchelement_one([3, 1, 2, 4], S_00003_00004, aux185)
watchelement_one([3, 1, 2], S_00001_00003, aux186)
watchelement_one([3, 1, 2, 4], S_00001_00004, aux187)
watchelement_one([3, 1, 2, 4], S_00004_00002, aux188)
watchelement_one([3, 1, 2, 4], S_00004_00003, aux189)
watchelement_one([3, 1, 2, 4], S_00004_00001, aux190)
watchelement_one([3, 1, 2, 4], S_00004_00004, aux191)
watchelement_one([4, 1, 2, 3], S_00002_00003, aux192)
watchelement_one([4, 1, 2, 3], S_00002_00004, aux193)
watchelement_one([4, 1, 2, 3], S_00003_00002, aux194)
watchelement_one([4, 1, 2], S_00003_00003, aux195)
watchelement_one([4, 1, 2, 3], S_00003_00004, aux196)
watchelement_one([4, 1, 2], S_00003_00001, aux197)
watchelement_one([4, 1, 2, 3], S_00004_00002, aux198)
watchelement_one([4, 1, 2, 3], S_00004_00003, aux199)
watchelement_one([4, 1, 2, 3], S_00004_00004, aux200)
watchelement_one([4, 1, 2, 3], S_00004_00001, aux201)
watchelement_one([4, 1, 2], S_00001_00003, aux202)
watchelement_one([4, 1, 2, 3], S_00001_00004, aux203)
watchelement_one([3, 1, 4, 2], S_00002_00004, aux204)
watchelement_one([3, 1, 4, 2], S_00002_00003, aux205)
watchelement_one([3, 1, 4, 2], S_00004_00002, aux206)
watchelement_one([3, 1, 4, 2], S_00004_00004, aux207)
watchelement_one([3, 1, 4, 2], S_00004_00001, aux208)
watchelement_one([3, 1, 4, 2], S_00004_00003, aux209)
watchelement_one([3, 1, 4, 2], S_00001_00004, aux210)
watchelement_one([3, 1, 4], S_00001_00003, aux211)
watchelement_one([3, 1, 4, 2], S_00003_00002, aux212)
watchelement_one([3, 1, 4, 2], S_00003_00004, aux213)
watchelement_one([3, 1, 4], S_00003_00001, aux214)
watchelement_one([3, 1, 4], S_00003_00003, aux215)
watchelement_one([4, 1, 3, 2], S_00002_00004, aux216)
watchelement_one([4, 1, 3, 2], S_00002_00003, aux217)
watchelement_one([4, 1, 3, 2], S_00004_00002, aux218)
watchelement_one([4, 1, 3, 2], S_00004_00004, aux219)
watchelement_one([4, 1, 3, 2], S_00004_00003, aux220)
watchelement_one([4, 1, 3, 2], S_00004_00001, aux221)
watchelement_one([4, 1, 3, 2], S_00003_00002, aux222)
watchelement_one([4, 1, 3, 2], S_00003_00004, aux223)
watchelement_one([4, 1, 3], S_00003_00003, aux224)
watchelement_one([4, 1, 3], S_00003_00001, aux225)
watchelement_one([4, 1, 3, 2], S_00001_00004, aux226)
watchelement_one([4, 1, 3], S_00001_00003, aux227)
watchelement_one([2, 3, 1], S_00003_00003, aux228)
watchelement_one([2, 3, 1], S_00003_00001, aux229)
watchelement_one([2, 3, 1, 4], S_00003_00002, aux230)
watchelement_one([2, 3, 1, 4], S_00003_00004, aux231)
watchelement_one([2, 3, 1], S_00001_00003, aux232)
watchelement_one([2, 3, 1, 4], S_00001_00004, aux233)
watchelement_one([2, 3, 1, 4], S_00002_00003, aux234)
watchelement_one([2, 3, 1, 4], S_00002_00004, aux235)
watchelement_one([2, 3, 1, 4], S_00004_00003, aux236)
watchelement_one([2, 3, 1, 4], S_00004_00001, aux237)
watchelement_one([2, 3, 1, 4], S_00004_00002, aux238)
watchelement_one([2, 3, 1, 4], S_00004_00004, aux239)
watchelement_one([2, 4, 1], S_00003_00003, aux240)
watchelement_one([2, 4, 1], S_00003_00001, aux241)
watchelement_one([2, 4, 1, 3], S_00003_00004, aux242)
watchelement_one([2, 4, 1, 3], S_00003_00002, aux243)
watchelement_one([2, 4, 1], S_00001_00003, aux244)
watchelement_one([2, 4, 1, 3], S_00001_00004, aux245)
watchelement_one([2, 4, 1, 3], S_00004_00003, aux246)
watchelement_one([2, 4, 1, 3], S_00004_00001, aux247)
watchelement_one([2, 4, 1, 3], S_00004_00004, aux248)
watchelement_one([2, 4, 1, 3], S_00004_00002, aux249)
watchelement_one([2, 4, 1, 3], S_00002_00003, aux250)
watchelement_one([2, 4, 1, 3], S_00002_00004, aux251)
watchelement_one([3, 2, 1], S_00003_00003, aux252)
watchelement_one([3, 2, 1, 4], S_00003_00002, aux253)
watchelement_one([3, 2, 1], S_00003_00001, aux254)
watchelement_one([3, 2, 1, 4], S_00003_00004, aux255)
watchelement_one([3, 2, 1, 4], S_00002_00003, aux256)
watchelement_one([3, 2, 1, 4], S_00002_00004, aux257)
watchelement_one([3, 2, 1], S_00001_00003, aux258)
watchelement_one([3, 2, 1, 4], S_00001_00004, aux259)
watchelement_one([3, 2, 1, 4], S_00004_00003, aux260)
watchelement_one([3, 2, 1, 4], S_00004_00002, aux261)
watchelement_one([3, 2, 1, 4], S_00004_00001, aux262)
watchelement_one([3, 2, 1, 4], S_00004_00004, aux263)
watchelement_one([4, 2, 1], S_00003_00003, aux264)
watchelement_one([4, 2, 1, 3], S_00003_00002, aux265)
watchelement_one([4, 2, 1, 3], S_00003_00004, aux266)
watchelement_one([4, 2, 1], S_00003_00001, aux267)
watchelement_one([4, 2, 1, 3], S_00002_00003, aux268)
watchelement_one([4, 2, 1, 3], S_00002_00004, aux269)
watchelement_one([4, 2, 1, 3], S_00004_00003, aux270)
watchelement_one([4, 2, 1, 3], S_00004_00002, aux271)
watchelement_one([4, 2, 1, 3], S_00004_00004, aux272)
watchelement_one([4, 2, 1, 3], S_00004_00001, aux273)
watchelement_one([4, 2, 1], S_00001_00003, aux274)
watchelement_one([4, 2, 1, 3], S_00001_00004, aux275)
watchelement_one([3, 4, 1], S_00003_00003, aux276)
watchelement_one([3, 4, 1, 2], S_00003_00004, aux277)
watchelement_one([3, 4, 1], S_00003_00001, aux278)
watchelement_one([3, 4, 1, 2], S_00003_00002, aux279)
watchelement_one([3, 4, 1, 2], S_00004_00003, aux280)
watchelement_one([3, 4, 1, 2], S_00004_00004, aux281)
watchelement_one([3, 4, 1, 2], S_00004_00001, aux282)
watchelement_one([3, 4, 1, 2], S_00004_00002, aux283)
watchelement_one([3, 4, 1], S_00001_00003, aux284)
watchelement_one([3, 4, 1, 2], S_00001_00004, aux285)
watchelement_one([3, 4, 1, 2], S_00002_00003, aux286)
watchelement_one([3, 4, 1, 2], S_00002_00004, aux287)
watchelement_one([4, 3, 1], S_00003_00003, aux288)
watchelement_one([4, 3, 1, 2], S_00003_00004, aux289)
watchelement_one([4, 3, 1, 2], S_00003_00002, aux290)
watchelement_one([4, 3, 1], S_00003_00001, aux291)
watchelement_one([4, 3, 1, 2], S_00004_00003, aux292)
watchelement_one([4, 3, 1, 2], S_00004_00004, aux293)
watchelement_one([4, 3, 1, 2], S_00004_00002, aux294)
watchelement_one([4, 3, 1, 2], S_00004_00001, aux295)
watchelement_one([4, 3, 1, 2], S_00002_00003, aux296)
watchelement_one([4, 3, 1, 2], S_00002_00004, aux297)
watchelement_one([4, 3, 1], S_00001_00003, aux298)
watchelement_one([4, 3, 1, 2], S_00001_00004, aux299)
watchelement_one([2, 3, 4, 1], S_00004_00004, aux300)
watchelement_one([2, 3, 4, 1], S_00004_00001, aux301)
watchelement_one([2, 3, 4, 1], S_00004_00002, aux302)
watchelement_one([2, 3, 4, 1], S_00004_00003, aux303)
watchelement_one([2, 3, 4, 1], S_00001_00004, aux304)
watchelement_one([2, 3, 4], S_00001_00003, aux305)
watchelement_one([2, 3, 4, 1], S_00002_00004, aux306)
watchelement_one([2, 3, 4, 1], S_00002_00003, aux307)
watchelement_one([2, 3, 4, 1], S_00003_00004, aux308)
watchelement_one([2, 3, 4], S_00003_00001, aux309)
watchelement_one([2, 3, 4, 1], S_00003_00002, aux310)
watchelement_one([2, 3, 4], S_00003_00003, aux311)
watchelement_one([2, 4, 3, 1], S_00004_00004, aux312)
watchelement_one([2, 4, 3, 1], S_00004_00001, aux313)
watchelement_one([2, 4, 3, 1], S_00004_00003, aux314)
watchelement_one([2, 4, 3, 1], S_00004_00002, aux315)
watchelement_one([2, 4, 3, 1], S_00001_00004, aux316)
watchelement_one([2, 4, 3], S_00001_00003, aux317)
watchelement_one([2, 4, 3, 1], S_00003_00004, aux318)
watchelement_one([2, 4, 3], S_00003_00001, aux319)
watchelement_one([2, 4, 3], S_00003_00003, aux320)
watchelement_one([2, 4, 3, 1], S_00003_00002, aux321)
watchelement_one([2, 4, 3, 1], S_00002_00004, aux322)
watchelement_one([2, 4, 3, 1], S_00002_00003, aux323)
watchelement_one([3, 2, 4, 1], S_00004_00004, aux324)
watchelement_one([3, 2, 4, 1], S_00004_00002, aux325)
watchelement_one([3, 2, 4, 1], S_00004_00001, aux326)
watchelement_one([3, 2, 4, 1], S_00004_00003, aux327)
watchelement_one([3, 2, 4, 1], S_00002_00004, aux328)
watchelement_one([3, 2, 4, 1], S_00002_00003, aux329)
watchelement_one([3, 2, 4, 1], S_00001_00004, aux330)
watchelement_one([3, 2, 4], S_00001_00003, aux331)
watchelement_one([3, 2, 4, 1], S_00003_00004, aux332)
watchelement_one([3, 2, 4, 1], S_00003_00002, aux333)
watchelement_one([3, 2, 4], S_00003_00001, aux334)
watchelement_one([3, 2, 4], S_00003_00003, aux335)
watchelement_one([4, 2, 3, 1], S_00004_00004, aux336)
watchelement_one([4, 2, 3, 1], S_00004_00002, aux337)
watchelement_one([4, 2, 3, 1], S_00004_00003, aux338)
watchelement_one([4, 2, 3, 1], S_00004_00001, aux339)
watchelement_one([4, 2, 3, 1], S_00002_00004, aux340)
watchelement_one([4, 2, 3, 1], S_00002_00003, aux341)
watchelement_one([4, 2, 3, 1], S_00003_00004, aux342)
watchelement_one([4, 2, 3, 1], S_00003_00002, aux343)
watchelement_one([4, 2, 3], S_00003_00003, aux344)
watchelement_one([4, 2, 3], S_00003_00001, aux345)
watchelement_one([4, 2, 3, 1], S_00001_00004, aux346)
watchelement_one([4, 2, 3], S_00001_00003, aux347)
watchelement_one([3, 4, 2, 1], S_00004_00004, aux348)
watchelement_one([3, 4, 2, 1], S_00004_00003, aux349)
watchelement_one([3, 4, 2, 1], S_00004_00001, aux350)
watchelement_one([3, 4, 2, 1], S_00004_00002, aux351)
watchelement_one([3, 4, 2, 1], S_00003_00004, aux352)
watchelement_one([3, 4, 2], S_00003_00003, aux353)
watchelement_one([3, 4, 2], S_00003_00001, aux354)
watchelement_one([3, 4, 2, 1], S_00003_00002, aux355)
watchelement_one([3, 4, 2, 1], S_00001_00004, aux356)
watchelement_one([3, 4, 2], S_00001_00003, aux357)
watchelement_one([3, 4, 2, 1], S_00002_00004, aux358)
watchelement_one([3, 4, 2, 1], S_00002_00003, aux359)
watchelement_one([4, 3, 2, 1], S_00004_00004, aux360)
watchelement_one([4, 3, 2, 1], S_00004_00003, aux361)
watchelement_one([4, 3, 2, 1], S_00004_00002, aux362)
watchelement_one([4, 3, 2, 1], S_00004_00001, aux363)
watchelement_one([4, 3, 2, 1], S_00003_00004, aux364)
watchelement_one([4, 3, 2], S_00003_00003, aux365)
watchelement_one([4, 3, 2, 1], S_00003_00002, aux366)
watchelement_one([4, 3, 2], S_00003_00001, aux367)
watchelement_one([4, 3, 2, 1], S_00002_00004, aux368)
watchelement_one([4, 3, 2, 1], S_00002_00003, aux369)
watchelement_one([4, 3, 2, 1], S_00001_00004, aux370)
watchelement_one([4, 3, 2], S_00001_00003, aux371)
watchelement_one([2, 3], S_00002_00001, aux0)
watchelement_one([2, 3], S_00002_00002, aux1)
watchelement_one([2, 4], S_00002_00002, aux2)
watchelement_one([2, 4], S_00002_00001, aux3)
watchelement_one([2, 1], S_00002_00001, aux4)
watchelement_one([2, 1], S_00002_00002, aux5)
watchelement_one([1, 3], S_00002_00001, aux6)
watchelement_one([1, 3], S_00002_00002, aux7)
watchelement_one([1, 4], S_00002_00001, aux8)
watchelement_one([1, 4], S_00002_00002, aux9)
watchelement_one([4, 2], S_00002_00002, aux10)
watchelement_one([4, 2], S_00002_00001, aux11)
watchelement_one([4, 3], S_00002_00001, aux12)
watchelement_one([4, 3], S_00002_00002, aux13)
watchelement_one([3, 4], S_00002_00002, aux14)
watchelement_one([3, 4], S_00002_00001, aux15)
watchelement_one([3, 2], S_00002_00001, aux16)
watchelement_one([3, 2], S_00002_00002, aux17)
watchelement_one([3, 1], S_00002_00001, aux18)
watchelement_one([3, 1], S_00002_00002, aux19)
watchelement_one([4, 1], S_00002_00002, aux20)
watchelement_one([4, 1], S_00002_00001, aux21)
watchelement_one([4, 1], S_00001_00002, aux22)
watchelement_one([4, 2], S_00001_00002, aux23)
watchelement_one([4, 3], S_00001_00002, aux24)
watchelement_one([1, 3], S_00001_00002, aux25)
watchelement_one([1, 4], S_00001_00002, aux26)
watchelement_one([2, 4], S_00001_00002, aux27)
watchelement_one([2, 3], S_00001_00002, aux28)
watchelement_one([2, 1], S_00001_00002, aux29)
watchelement_one([3, 1], S_00001_00002, aux30)
watchelement_one([3, 4], S_00001_00002, aux31)
watchelement_one([3, 2], S_00001_00002, aux32)
watchelement_one([S_00001_00002, S_00002_00002], S_00002_00001, 2)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003], S_00003_00001, 3)
watchelement_one([S_00001_00004, S_00002_00004, S_00003_00004, S_00004_00004], S_00004_00001, 4)
watchelement_one([1, S_00002_00001], S_00001_00002, 1)
watchelement_one([S_00001_00002, S_00002_00002], S_00002_00002, 2)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003, S_00004_00003], S_00003_00002, 3)
watchelement_one([S_00001_00004, S_00002_00004, S_00003_00004, S_00004_00004], S_00004_00002, 4)
watchelement_one([1, S_00002_00001, S_00003_00001], S_00001_00003, 1)
watchelement_one([S_00001_00002, S_00002_00002, S_00003_00002, S_00004_00002], S_00002_00003, 2)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003], S_00003_00003, 3)
watchelement_one([S_00001_00004, S_00002_00004, S_00003_00004, S_00004_00004], S_00004_00003, 4)
watchelement_one([1, S_00002_00001, S_00003_00001, S_00004_00001], S_00001_00004, 1)
watchelement_one([S_00001_00002, S_00002_00002, S_00003_00002, S_00004_00002], S_00002_00004, 2)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003, S_00004_00003], S_00003_00004, 3)
watchelement_one([S_00001_00004, S_00002_00004, S_00003_00004, S_00004_00004], S_00004_00004, 4)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002], aux90, S_00002_00001)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003], aux91, S_00003_00001)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux92, S_00004_00001)
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux93, aux94, aux95, aux96, aux97, aux98, aux99, aux100, aux101, aux102, aux103, aux104, aux105, aux106, aux107])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux108, aux25, aux109, aux110, aux111, aux112, aux113, aux6, aux114, aux7, aux115, aux116, aux117, aux118, aux119])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux120, aux121, aux26, aux122, aux123, aux124, aux125, aux126, aux127, aux128, aux129, aux8, aux130, aux131, aux9])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux132, aux25, aux133, aux134, aux135, aux136, aux137, aux6, aux138, aux7, aux139, aux140, aux141, aux142, aux143])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux144, aux145, aux26, aux146, aux147, aux148, aux149, aux150, aux151, aux152, aux153, aux8, aux154, aux155, aux9])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux5, aux4, aux156, aux157, aux29, 2, aux158, aux159, aux160, aux161, aux162, aux163, aux164, aux165, aux166, aux167])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux5, aux4, aux168, aux169, aux29, 2, aux170, aux171, aux172, aux173, aux174, aux175, aux176, aux177, aux178, aux179])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux19, aux180, aux18, aux181, aux182, aux183, aux184, aux185, aux30, aux186, 3, aux187, aux188, aux189, aux190, aux191])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux20, aux192, aux193, aux21, aux194, aux195, aux196, aux197, aux198, aux199, aux200, aux201, aux22, aux202, aux203, 4])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux19, aux204, aux18, aux205, aux206, aux207, aux208, aux209, aux30, aux210, 3, aux211, aux212, aux213, aux214, aux215])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux20, aux216, aux217, aux21, aux218, aux219, aux220, aux221, aux222, aux223, aux224, aux225, aux22, aux226, aux227, 4])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux228, aux229, aux230, aux231, aux232, 2, aux28, aux233, aux234, aux0, aux1, aux235, aux236, aux237, aux238, aux239])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux240, aux241, aux242, aux243, aux244, 2, aux245, aux27, aux246, aux247, aux248, aux249, aux250, aux3, aux251, aux2])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux252, aux253, aux254, aux255, aux256, aux17, aux16, aux257, aux258, aux32, 3, aux259, aux260, aux261, aux262, aux263])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux264, aux265, aux266, aux267, aux268, aux10, aux269, aux11, aux270, aux271, aux272, aux273, aux274, aux23, aux275, 4])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux276, aux277, aux278, aux279, aux280, aux281, aux282, aux283, aux284, aux285, 3, aux31, aux286, aux287, aux15, aux14])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux288, aux289, aux290, aux291, aux292, aux293, aux294, aux295, aux296, aux297, aux13, aux12, aux298, aux299, aux24, 4])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux300, aux301, aux302, aux303, aux304, 2, aux28, aux305, aux306, aux0, aux1, aux307, aux308, aux309, aux310, aux311])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux312, aux313, aux314, aux315, aux316, 2, aux317, aux27, aux318, aux319, aux320, aux321, aux322, aux3, aux323, aux2])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux324, aux325, aux326, aux327, aux328, aux17, aux16, aux329, aux330, aux32, 3, aux331, aux332, aux333, aux334, aux335])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux336, aux337, aux338, aux339, aux340, aux10, aux341, aux11, aux342, aux343, aux344, aux345, aux346, aux23, aux347, 4])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux348, aux349, aux350, aux351, aux352, aux353, aux354, aux355, aux356, aux357, 3, aux31, aux358, aux359, aux15, aux14])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004],[aux360, aux361, aux362, aux363, aux364, aux365, aux366, aux367, aux368, aux369, aux13, aux12, aux370, aux371, aux24, 4])
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001], aux372, aux33)
watchelement_one([1, S_00001_00002], S_00002_00001, aux33)
watchelement_one([S_00002_00001, S_00002_00002], S_00002_00001, aux34)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002], aux373, aux34)
watchelement_one([S_00003_00001, S_00003_00002], S_00002_00001, aux35)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001], aux374, aux35)
watchelement_one([S_00004_00001, S_00004_00002], S_00002_00001, aux36)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux375, aux36)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001], aux376, aux37)
watchelement_one([1, S_00001_00002, S_00001_00003], S_00003_00001, aux37)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003], S_00003_00001, aux38)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002], aux377, aux38)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003], S_00003_00001, aux39)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003], aux378, aux39)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003], S_00003_00001, aux40)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux379, aux40)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00004_00001, aux41)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001], aux380, aux41)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00004_00001, aux42)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002], aux381, aux42)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003], aux382, aux43)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00004_00001, aux43)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00004_00001, aux44)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux383, aux44)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002], aux384, aux45)
watchelement_one([S_00002_00001, S_00002_00002], S_00001_00002, aux45)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003], aux385, aux46)
watchelement_one([S_00003_00001, S_00003_00002], S_00001_00002, aux46)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux386, aux47)
watchelement_one([S_00004_00001, S_00004_00002], S_00001_00002, aux47)
watchelement_one([1, S_00001_00002], S_00002_00002, aux48)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002], aux387, aux48)
watchelement_one([S_00002_00001, S_00002_00002], S_00002_00002, aux49)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002], aux388, aux49)
watchelement_one([S_00003_00001, S_00003_00002], S_00002_00002, aux50)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux389, aux50)
watchelement_one([S_00004_00001, S_00004_00002], S_00002_00002, aux51)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux390, aux51)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00003_00002, aux52)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002], aux391, aux52)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00003_00002, aux53)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002], aux392, aux53)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00003_00002, aux54)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003], aux393, aux54)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00003_00002, aux55)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux394, aux55)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002], aux395, aux56)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00004_00002, aux56)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00004_00002, aux57)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002], aux396, aux57)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux397, aux58)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00004_00002, aux58)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00004_00002, aux59)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux398, aux59)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003], S_00001_00003, aux60)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], aux399, aux60)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003], aux400, aux61)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003], S_00001_00003, aux61)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux401, aux62)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003], S_00001_00003, aux62)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00002_00003, aux63)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003], aux402, aux63)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00002_00003, aux64)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], aux403, aux64)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001], aux404, aux65)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00002_00003, aux65)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux405, aux66)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00002_00003, aux66)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003], aux406, aux67)
watchelement_one([1, S_00001_00002, S_00001_00003], S_00003_00003, aux67)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux407, aux68)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003], S_00003_00003, aux68)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003], S_00003_00003, aux69)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003], aux408, aux69)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003], S_00003_00003, aux70)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux409, aux70)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003], aux410, aux71)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00004_00003, aux71)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux411, aux72)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00004_00003, aux72)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003], aux412, aux73)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00004_00003, aux73)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00004_00003, aux74)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux413, aux74)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00001_00004, aux75)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], aux414, aux75)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00001_00004, aux76)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], aux415, aux76)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux416, aux77)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00001_00004, aux77)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], aux417, aux78)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00002_00004, aux78)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00002_00004, aux79)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], aux418, aux79)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00002_00004, aux80)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux419, aux80)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux420, aux81)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00002_00004, aux81)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], aux421, aux82)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00003_00004, aux82)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux422, aux83)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00003_00004, aux83)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00003_00004, aux84)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], aux423, aux84)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00003_00004, aux85)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux424, aux85)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux425, aux86)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00004_00004, aux86)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux426, aux87)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00004_00004, aux87)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux427, aux88)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00004_00004, aux88)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00004_00004, aux89)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux428, aux89)
weightedsumleq([1,5],[-4,S_00002_00001],aux90)
weightedsumgeq([1,5],[-4,S_00002_00001],aux90)
weightedsumleq([1,5],[-4,S_00003_00001],aux91)
weightedsumgeq([1,5],[-4,S_00003_00001],aux91)
weightedsumleq([5,1],[S_00004_00001,-4],aux92)
weightedsumgeq([5,1],[S_00004_00001,-4],aux92)
weightedsumleq([4,1],[S_00001_00002,-3],aux372)
weightedsumgeq([4,1],[S_00001_00002,-3],aux372)
weightedsumleq([1,1,4],[-4,S_00002_00001,S_00002_00002],aux373)
weightedsumgeq([1,1,4],[-4,S_00002_00001,S_00002_00002],aux373)
weightedsumleq([1,1,4],[-4,S_00003_00001,S_00003_00002],aux374)
weightedsumgeq([1,1,4],[-4,S_00003_00001,S_00003_00002],aux374)
weightedsumleq([1,4,1],[S_00004_00001,S_00004_00002,-4],aux375)
weightedsumgeq([1,4,1],[S_00004_00001,S_00004_00002,-4],aux375)
weightedsumleq([4,1],[S_00001_00003,-3],aux376)
weightedsumgeq([4,1],[S_00001_00003,-3],aux376)
weightedsumleq([1,1,4],[-4,S_00002_00001,S_00002_00003],aux377)
weightedsumgeq([1,1,4],[-4,S_00002_00001,S_00002_00003],aux377)
weightedsumleq([1,1,4],[-4,S_00003_00001,S_00003_00003],aux378)
weightedsumgeq([1,1,4],[-4,S_00003_00001,S_00003_00003],aux378)
weightedsumleq([1,4,1],[S_00004_00001,S_00004_00003,-4],aux379)
weightedsumgeq([1,4,1],[S_00004_00001,S_00004_00003,-4],aux379)
weightedsumleq([4,1],[S_00001_00004,-3],aux380)
weightedsumgeq([4,1],[S_00001_00004,-3],aux380)
weightedsumleq([1,1,4],[-4,S_00002_00001,S_00002_00004],aux381)
weightedsumgeq([1,1,4],[-4,S_00002_00001,S_00002_00004],aux381)
weightedsumleq([1,1,4],[-4,S_00003_00001,S_00003_00004],aux382)
weightedsumgeq([1,1,4],[-4,S_00003_00001,S_00003_00004],aux382)
weightedsumleq([1,4,1],[S_00004_00001,S_00004_00004,-4],aux383)
weightedsumgeq([1,4,1],[S_00004_00001,S_00004_00004,-4],aux383)
weightedsumleq([1,4,1],[-4,S_00002_00001,S_00002_00002],aux384)
weightedsumgeq([1,4,1],[-4,S_00002_00001,S_00002_00002],aux384)
weightedsumleq([1,4,1],[-4,S_00003_00001,S_00003_00002],aux385)
weightedsumgeq([1,4,1],[-4,S_00003_00001,S_00003_00002],aux385)
weightedsumleq([4,1,1],[S_00004_00001,S_00004_00002,-4],aux386)
weightedsumgeq([4,1,1],[S_00004_00001,S_00004_00002,-4],aux386)
weightedsumleq([5,1],[S_00001_00002,-4],aux387)
weightedsumgeq([5,1],[S_00001_00002,-4],aux387)
weightedsumleq([1,5],[-4,S_00002_00002],aux388)
weightedsumgeq([1,5],[-4,S_00002_00002],aux388)
weightedsumleq([1,5],[-4,S_00003_00002],aux389)
weightedsumgeq([1,5],[-4,S_00003_00002],aux389)
weightedsumleq([5,1],[S_00004_00002,-4],aux390)
weightedsumgeq([5,1],[S_00004_00002,-4],aux390)
weightedsumleq([1,4,1],[S_00001_00002,S_00001_00003,-4],aux391)
weightedsumgeq([1,4,1],[S_00001_00002,S_00001_00003,-4],aux391)
weightedsumleq([1,1,4],[-4,S_00002_00002,S_00002_00003],aux392)
weightedsumgeq([1,1,4],[-4,S_00002_00002,S_00002_00003],aux392)
weightedsumleq([1,1,4],[-4,S_00003_00002,S_00003_00003],aux393)
weightedsumgeq([1,1,4],[-4,S_00003_00002,S_00003_00003],aux393)
weightedsumleq([1,4,1],[S_00004_00002,S_00004_00003,-4],aux394)
weightedsumgeq([1,4,1],[S_00004_00002,S_00004_00003,-4],aux394)
weightedsumleq([1,4,1],[S_00001_00002,S_00001_00004,-4],aux395)
weightedsumgeq([1,4,1],[S_00001_00002,S_00001_00004,-4],aux395)
weightedsumleq([1,1,4],[-4,S_00002_00002,S_00002_00004],aux396)
weightedsumgeq([1,1,4],[-4,S_00002_00002,S_00002_00004],aux396)
weightedsumleq([1,1,4],[-4,S_00003_00002,S_00003_00004],aux397)
weightedsumgeq([1,1,4],[-4,S_00003_00002,S_00003_00004],aux397)
weightedsumleq([1,4,1],[S_00004_00002,S_00004_00004,-4],aux398)
weightedsumgeq([1,4,1],[S_00004_00002,S_00004_00004,-4],aux398)
weightedsumleq([1,4,1],[-4,S_00002_00001,S_00002_00003],aux399)
weightedsumgeq([1,4,1],[-4,S_00002_00001,S_00002_00003],aux399)
weightedsumleq([1,4,1],[-4,S_00003_00001,S_00003_00003],aux400)
weightedsumgeq([1,4,1],[-4,S_00003_00001,S_00003_00003],aux400)
weightedsumleq([4,1,1],[S_00004_00001,S_00004_00003,-4],aux401)
weightedsumgeq([4,1,1],[S_00004_00001,S_00004_00003,-4],aux401)
weightedsumleq([4,1,1],[S_00001_00002,S_00001_00003,-4],aux402)
weightedsumgeq([4,1,1],[S_00001_00002,S_00001_00003,-4],aux402)
weightedsumleq([1,4,1],[-4,S_00002_00002,S_00002_00003],aux403)
weightedsumgeq([1,4,1],[-4,S_00002_00002,S_00002_00003],aux403)
weightedsumleq([1,4,1],[-4,S_00003_00002,S_00003_00003],aux404)
weightedsumgeq([1,4,1],[-4,S_00003_00002,S_00003_00003],aux404)
weightedsumleq([4,1,1],[S_00004_00002,S_00004_00003,-4],aux405)
weightedsumgeq([4,1,1],[S_00004_00002,S_00004_00003,-4],aux405)
weightedsumleq([5,1],[S_00001_00003,-4],aux406)
weightedsumgeq([5,1],[S_00001_00003,-4],aux406)
weightedsumleq([1,5],[-4,S_00002_00003],aux407)
weightedsumgeq([1,5],[-4,S_00002_00003],aux407)
weightedsumleq([1,5],[-4,S_00003_00003],aux408)
weightedsumgeq([1,5],[-4,S_00003_00003],aux408)
weightedsumleq([5,1],[S_00004_00003,-4],aux409)
weightedsumgeq([5,1],[S_00004_00003,-4],aux409)
weightedsumleq([1,4,1],[S_00001_00003,S_00001_00004,-4],aux410)
weightedsumgeq([1,4,1],[S_00001_00003,S_00001_00004,-4],aux410)
weightedsumleq([1,1,4],[-4,S_00002_00003,S_00002_00004],aux411)
weightedsumgeq([1,1,4],[-4,S_00002_00003,S_00002_00004],aux411)
weightedsumleq([1,1,4],[-4,S_00003_00003,S_00003_00004],aux412)
weightedsumgeq([1,1,4],[-4,S_00003_00003,S_00003_00004],aux412)
weightedsumleq([1,4,1],[S_00004_00003,S_00004_00004,-4],aux413)
weightedsumgeq([1,4,1],[S_00004_00003,S_00004_00004,-4],aux413)
weightedsumleq([1,4,1],[-4,S_00002_00001,S_00002_00004],aux414)
weightedsumgeq([1,4,1],[-4,S_00002_00001,S_00002_00004],aux414)
weightedsumleq([1,4,1],[-4,S_00003_00001,S_00003_00004],aux415)
weightedsumgeq([1,4,1],[-4,S_00003_00001,S_00003_00004],aux415)
weightedsumleq([4,1,1],[S_00004_00001,S_00004_00004,-4],aux416)
weightedsumgeq([4,1,1],[S_00004_00001,S_00004_00004,-4],aux416)
weightedsumleq([4,1,1],[S_00001_00002,S_00001_00004,-4],aux417)
weightedsumgeq([4,1,1],[S_00001_00002,S_00001_00004,-4],aux417)
weightedsumleq([1,4,1],[-4,S_00002_00002,S_00002_00004],aux418)
weightedsumgeq([1,4,1],[-4,S_00002_00002,S_00002_00004],aux418)
weightedsumleq([1,4,1],[-4,S_00003_00002,S_00003_00004],aux419)
weightedsumgeq([1,4,1],[-4,S_00003_00002,S_00003_00004],aux419)
weightedsumleq([4,1,1],[S_00004_00002,S_00004_00004,-4],aux420)
weightedsumgeq([4,1,1],[S_00004_00002,S_00004_00004,-4],aux420)
weightedsumleq([4,1,1],[S_00001_00003,S_00001_00004,-4],aux421)
weightedsumgeq([4,1,1],[S_00001_00003,S_00001_00004,-4],aux421)
weightedsumleq([1,4,1],[-4,S_00002_00003,S_00002_00004],aux422)
weightedsumgeq([1,4,1],[-4,S_00002_00003,S_00002_00004],aux422)
weightedsumleq([1,4,1],[-4,S_00003_00003,S_00003_00004],aux423)
weightedsumgeq([1,4,1],[-4,S_00003_00003,S_00003_00004],aux423)
weightedsumleq([4,1,1],[S_00004_00003,S_00004_00004,-4],aux424)
weightedsumgeq([4,1,1],[S_00004_00003,S_00004_00004,-4],aux424)
weightedsumleq([5,1],[S_00001_00004,-4],aux425)
weightedsumgeq([5,1],[S_00001_00004,-4],aux425)
weightedsumleq([1,5],[-4,S_00002_00004],aux426)
weightedsumgeq([1,5],[-4,S_00002_00004],aux426)
weightedsumleq([1,5],[-4,S_00003_00004],aux427)
weightedsumgeq([1,5],[-4,S_00003_00004],aux427)
weightedsumleq([5,1],[S_00004_00004,-4],aux428)
weightedsumgeq([5,1],[S_00004_00004,-4],aux428)
**EOF**
