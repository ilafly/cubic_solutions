MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 235
# CSE_active_eliminated_expressions = 610
# CSE_active_total_size = 1381
**VARIABLES**
DISCRETE M_00001_00001 #
{1..2}
DISCRETE M_00001_00002 #
{1..2}
DISCRETE M_00001_00003 #
{3..4}
DISCRETE M_00001_00004 #
{4..5}
DISCRETE M_00001_00005 #
{3..5}
DISCRETE M_00002_00001 #
{1..2}
DISCRETE M_00002_00002 #
{1..2}
DISCRETE M_00002_00003 #
{3..5}
DISCRETE M_00002_00004 #
{3..5}
DISCRETE M_00002_00005 #
{3..5}
DISCRETE M_00003_00001 #
{1..2}
DISCRETE M_00003_00002 #
{1..2}
DISCRETE M_00003_00003 #
{3..5}
DISCRETE M_00003_00004 #
{3..5}
DISCRETE M_00003_00005 #
{3..5}
DISCRETE M_00004_00001 #
{1..2}
DISCRETE M_00004_00002 #
{1..2}
DISCRETE M_00004_00003 #
{3..5}
DISCRETE M_00004_00004 #
{3..5}
DISCRETE M_00004_00005 #
{3..5}
DISCRETE M_00005_00001 #
{1..2}
DISCRETE M_00005_00002 #
{1..2}
DISCRETE M_00005_00003 #
{3..5}
DISCRETE M_00005_00004 #
{3..5}
DISCRETE M_00005_00005 #
{3..5}
DISCRETE aux0 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 5], (M_00003_00005 + -2))
{3..5}
DISCRETE aux1 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 5], (M_00003_00003 + -2))
{3..5}
DISCRETE aux2 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 5], (M_00003_00004 + -2))
{3..5}
DISCRETE aux3 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 4], (M_00003_00005 + -2))
{3..5}
DISCRETE aux4 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 4], (M_00003_00004 + -2))
{3..5}
DISCRETE aux5 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 4], (M_00003_00003 + -2))
{3..5}
DISCRETE aux6 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 3], (M_00003_00004 + -2))
{3..5}
DISCRETE aux7 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 3], (M_00003_00003 + -2))
{3..5}
DISCRETE aux8 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 3], (M_00003_00005 + -2))
{3..5}
DISCRETE aux9 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 5], (M_00003_00004 + -2))
{3..5}
DISCRETE aux10 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 5], (M_00003_00005 + -2))
{3..5}
DISCRETE aux11 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 5], (M_00003_00003 + -2))
{3..5}
DISCRETE aux12 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 3], (M_00003_00005 + -2))
{3..5}
DISCRETE aux13 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 3], (M_00003_00003 + -2))
{3..5}
DISCRETE aux14 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 3], (M_00003_00004 + -2))
{3..5}
DISCRETE aux15 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 4], (M_00003_00004 + -2))
{3..5}
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 4], (M_00003_00005 + -2))
{3..5}
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 4], (M_00003_00003 + -2))
{3..5}
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 4], (-2 + M_00005_00005))
{3..5}
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 4], (-2 + M_00005_00004))
{3..5}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 4], (-2 + M_00005_00003))
{3..5}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 5], (-2 + M_00005_00005))
{3..5}
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 5], (-2 + M_00005_00003))
{3..5}
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 5], (-2 + M_00005_00004))
{3..5}
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 5], (-2 + M_00005_00005))
{3..5}
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 5], (-2 + M_00005_00004))
{3..5}
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 5], (-2 + M_00005_00003))
{3..5}
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 3], (-2 + M_00005_00004))
{3..5}
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 3], (-2 + M_00005_00003))
{3..5}
DISCRETE aux29 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 3], (-2 + M_00005_00005))
{3..5}
DISCRETE aux30 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 3], (-2 + M_00005_00005))
{3..5}
DISCRETE aux31 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 3], (-2 + M_00005_00003))
{3..5}
DISCRETE aux32 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 3], (-2 + M_00005_00004))
{3..5}
DISCRETE aux33 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 4], (-2 + M_00005_00004))
{3..5}
DISCRETE aux34 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 4], (-2 + M_00005_00003))
{3..5}
DISCRETE aux35 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 4], (-2 + M_00005_00005))
{3..5}
DISCRETE aux36 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 3], (M_00004_00004 + -2))
{3..5}
DISCRETE aux37 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 3], (M_00004_00005 + -2))
{3..5}
DISCRETE aux38 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 3], (M_00004_00003 + -2))
{3..5}
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 4], (M_00004_00004 + -2))
{3..5}
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 4], (M_00004_00003 + -2))
{3..5}
DISCRETE aux41 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 4], (M_00004_00005 + -2))
{3..5}
DISCRETE aux42 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 4], (M_00004_00003 + -2))
{3..5}
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 4], (M_00004_00004 + -2))
{3..5}
DISCRETE aux44 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 5], (M_00004_00003 + -2))
{3..5}
DISCRETE aux45 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 5], (M_00004_00004 + -2))
{3..5}
DISCRETE aux46 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 5], (M_00004_00005 + -2))
{3..5}
DISCRETE aux47 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 4], (M_00004_00005 + -2))
{3..5}
DISCRETE aux48 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 5], (M_00004_00005 + -2))
{3..5}
DISCRETE aux49 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 5], (M_00004_00003 + -2))
{3..5}
DISCRETE aux50 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 5], (M_00004_00004 + -2))
{3..5}
DISCRETE aux51 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 3], (M_00004_00005 + -2))
{3..5}
DISCRETE aux52 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 3], (M_00004_00003 + -2))
{3..5}
DISCRETE aux53 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 3], (M_00004_00004 + -2))
{3..5}
DISCRETE aux54 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 5], (M_00002_00004 + -2))
{3..5}
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 5], (M_00002_00003 + -2))
{3..5}
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 5], (M_00002_00005 + -2))
{3..5}
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 3], (M_00002_00005 + -2))
{3..5}
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 3], (M_00002_00004 + -2))
{3..5}
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 3], (M_00002_00003 + -2))
{3..5}
DISCRETE aux60 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 3], (M_00002_00003 + -2))
{3..5}
DISCRETE aux61 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 3], (M_00002_00005 + -2))
{3..5}
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 3], (M_00002_00004 + -2))
{3..5}
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 4], (M_00002_00003 + -2))
{3..5}
DISCRETE aux64 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 4], (M_00002_00004 + -2))
{3..5}
DISCRETE aux65 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 4], (M_00002_00005 + -2))
{3..5}
DISCRETE aux66 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 4], (M_00002_00005 + -2))
{3..5}
DISCRETE aux67 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 4], (M_00002_00004 + -2))
{3..5}
DISCRETE aux68 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 4], (M_00002_00003 + -2))
{3..5}
DISCRETE aux69 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 5], (M_00002_00003 + -2))
{3..5}
DISCRETE aux70 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 5], (M_00002_00005 + -2))
{3..5}
DISCRETE aux71 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 5], (M_00002_00004 + -2))
{3..5}
DISCRETE aux72 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 4], (-2 + M_00001_00005))
{3..5}
DISCRETE aux73 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 5], (-2 + M_00001_00005))
{3..5}
DISCRETE aux74 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 5], (-2 + M_00001_00005))
{3..5}
DISCRETE aux75 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 3], (-2 + M_00001_00005))
{3..5}
DISCRETE aux76 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 3], (-2 + M_00001_00005))
{3..5}
DISCRETE aux77 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 4], (-2 + M_00001_00005))
{3..5}
DISCRETE aux78 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3], (-2 + M_00001_00003))
{3..5}
**CONSTRAINTS**
w-inintervalset(aux78, [3,3,5,5])
**VARIABLES**
DISCRETE aux79 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3], (-3 + M_00001_00004))
{3..5}
**CONSTRAINTS**
w-inintervalset(aux79, [3,3,5,5])
**VARIABLES**
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4], (-2 + M_00001_00003))
{4..5}
DISCRETE aux81 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4], (-3 + M_00001_00004))
{4..5}
DISCRETE aux82 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5], (-2 + M_00001_00003))
{4..5}
DISCRETE aux83 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5], (-3 + M_00001_00004))
{4..5}
DISCRETE aux84 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3], (-2 + M_00001_00003))
{3..4}
DISCRETE aux85 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3], (-3 + M_00001_00004))
{3..4}
DISCRETE aux86 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5], (-2 + M_00001_00003))
{3..5}
**CONSTRAINTS**
w-inintervalset(aux86, [3,3,5,5])
**VARIABLES**
DISCRETE aux87 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4], (-2 + M_00001_00003))
{3..4}
DISCRETE aux88 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5], (-3 + M_00001_00004))
{3..5}
**CONSTRAINTS**
w-inintervalset(aux88, [3,3,5,5])
**VARIABLES**
DISCRETE aux89 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4], (-3 + M_00001_00004))
{3..4}
DISCRETE aux90 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 2], M_00001_00002)
{1..2}
DISCRETE aux91 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 2], M_00001_00001)
{1..2}
DISCRETE aux92 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 2], M_00002_00002)
{1..2}
DISCRETE aux93 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 2], M_00003_00001)
{1..2}
DISCRETE aux94 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 2], M_00003_00002)
{1..2}
DISCRETE aux95 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 2], M_00002_00001)
{1..2}
DISCRETE aux96 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 2], M_00004_00002)
{1..2}
DISCRETE aux97 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 2], M_00004_00001)
{1..2}
DISCRETE aux98 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 2], M_00005_00001)
{1..2}
DISCRETE aux99 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 2], M_00005_00002)
{1..2}
DISCRETE aux100 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1], M_00001_00002)
{1..2}
DISCRETE aux101 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1], M_00001_00001)
{1..2}
DISCRETE aux102 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1], M_00004_00002)
{1..2}
DISCRETE aux103 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1], M_00004_00001)
{1..2}
DISCRETE aux104 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1], M_00003_00001)
{1..2}
DISCRETE aux105 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1], M_00003_00002)
{1..2}
DISCRETE aux106 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1], M_00002_00002)
{1..2}
DISCRETE aux107 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1], M_00002_00001)
{1..2}
DISCRETE aux108 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1], M_00005_00001)
{1..2}
DISCRETE aux109 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1], M_00005_00002)
{1..2}
DISCRETE aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 5*M_00002_00003 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux110, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux111 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 5*M_00002_00002 + -5)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux111, [2,2,6,6])
**VARIABLES**
DISCRETE aux112 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002 + 5*M_00002_00003 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux112, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux113 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002 + 5*M_00002_00004 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux113, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux114 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 5*M_00002_00004 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux114, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002 + 5*M_00002_00005 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux115, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 5*M_00002_00005 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux116, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux117 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003 + 5*M_00002_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux117, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux118 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003 + 5*M_00002_00004 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux118, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux119 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00004 + 5*M_00002_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux119, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux120 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00001 + M_00002_00005 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux120, [1,3,6,8])
**VARIABLES**
DISCRETE aux121 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00001 + M_00002_00004 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux121, [1,3,6,8])
**VARIABLES**
DISCRETE aux122 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00001 + M_00002_00003 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux122, [1,3,6,8])
**VARIABLES**
DISCRETE aux123 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00001 + M_00002_00002 + -5)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux123, [2,2,6,6])
**VARIABLES**
DISCRETE aux124 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00004 + M_00002_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux124, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux125 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00002 + M_00002_00003 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux125, [1,3,6,8])
**VARIABLES**
DISCRETE aux126 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00002 + M_00002_00004 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux126, [1,3,6,8])
**VARIABLES**
DISCRETE aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00002 + M_00002_00005 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux127, [1,3,6,8])
**VARIABLES**
DISCRETE aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00003 + M_00002_00004 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux128, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00003 + M_00002_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux129, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00001 + M_00004_00003 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux130, [1,3,6,8])
**VARIABLES**
DISCRETE aux131 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00001 + M_00004_00002 + -5)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux131, [2,2,6,6])
**VARIABLES**
DISCRETE aux132 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00001 + M_00004_00005 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux132, [1,3,6,8])
**VARIABLES**
DISCRETE aux133 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00001 + M_00004_00004 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux133, [1,3,6,8])
**VARIABLES**
DISCRETE aux134 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00002 + M_00004_00004 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux134, [1,3,6,8])
**VARIABLES**
DISCRETE aux135 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00002 + M_00004_00005 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux135, [1,3,6,8])
**VARIABLES**
DISCRETE aux136 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00002 + M_00004_00003 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux136, [1,3,6,8])
**VARIABLES**
DISCRETE aux137 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00003 + M_00004_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux137, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux138 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00003 + M_00004_00004 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux138, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux139 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00002 + 5*M_00004_00005 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux139, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux140 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00002 + 5*M_00004_00003 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux140, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux141 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003 + 5*M_00004_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux141, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux142 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 5*M_00004_00003 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux142, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux143 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 5*M_00004_00002 + -5)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux143, [2,2,6,6])
**VARIABLES**
DISCRETE aux144 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 5*M_00004_00005 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux144, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux145 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00004 + 5*M_00004_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux145, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux146 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00002 + M_00003_00005 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux146, [1,3,6,8])
**VARIABLES**
DISCRETE aux147 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00002 + M_00003_00004 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux147, [1,3,6,8])
**VARIABLES**
DISCRETE aux148 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00002 + M_00003_00003 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux148, [1,3,6,8])
**VARIABLES**
DISCRETE aux149 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00001 + M_00003_00003 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux149, [1,3,6,8])
**VARIABLES**
DISCRETE aux150 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00001 + M_00003_00004 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux150, [1,3,6,8])
**VARIABLES**
DISCRETE aux151 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00001 + M_00003_00002 + -5)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux151, [2,2,6,6])
**VARIABLES**
DISCRETE aux152 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00001 + M_00003_00005 + -7)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux152, [1,3,6,8])
**VARIABLES**
DISCRETE aux153 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00004 + M_00003_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux153, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux154 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00002 + 5*M_00003_00005 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux154, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux155 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00002 + 5*M_00003_00004 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux155, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux156 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 5*M_00003_00005 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux156, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux157 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 5*M_00003_00002 + -5)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux157, [2,2,6,6])
**VARIABLES**
DISCRETE aux158 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 5*M_00003_00004 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux158, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux159 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00004 + 5*M_00003_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux159, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux160 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003 + 5*M_00003_00004 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux160, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux161 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003 + 5*M_00003_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux161, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux162 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + M_00005_00003 + 5*M_00005_00004)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux162, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux163 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + 5*M_00005_00004 + M_00005_00005)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux163, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux164 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + 5*M_00005_00003 + M_00005_00005)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux164, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux165 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + 5*M_00005_00003 + M_00005_00004)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux165, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux166 #Active-CSE: 2 occurrences of this expression or equivalent: (-15 + M_00005_00002 + 5*M_00005_00003)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux166, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux167 #Active-CSE: 2 occurrences of this expression or equivalent: (-15 + M_00005_00002 + 5*M_00005_00004)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux167, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux168 #Active-CSE: 2 occurrences of this expression or equivalent: (-15 + M_00005_00001 + 5*M_00005_00004)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux168, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux169 #Active-CSE: 2 occurrences of this expression or equivalent: (-15 + M_00005_00001 + 5*M_00005_00003)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux169, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux170 #Active-CSE: 2 occurrences of this expression or equivalent: (-7 + 5*M_00005_00002 + M_00005_00003)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux170, [1,3,6,8])
**VARIABLES**
DISCRETE aux171 #Active-CSE: 2 occurrences of this expression or equivalent: (-7 + 5*M_00005_00002 + M_00005_00005)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux171, [1,3,6,8])
**VARIABLES**
DISCRETE aux172 #Active-CSE: 2 occurrences of this expression or equivalent: (-7 + 5*M_00005_00002 + M_00005_00004)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux172, [1,3,6,8])
**VARIABLES**
DISCRETE aux173 #Active-CSE: 2 occurrences of this expression or equivalent: (-7 + 5*M_00005_00001 + M_00005_00005)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux173, [1,3,6,8])
**VARIABLES**
DISCRETE aux174 #Active-CSE: 2 occurrences of this expression or equivalent: (-7 + 5*M_00005_00001 + M_00005_00003)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux174, [1,3,6,8])
**VARIABLES**
DISCRETE aux175 #Active-CSE: 2 occurrences of this expression or equivalent: (-7 + 5*M_00005_00001 + M_00005_00004)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux175, [1,3,6,8])
**VARIABLES**
DISCRETE aux176 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00005_00001 + 5*M_00005_00002)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux176, [2,2,6,6])
**VARIABLES**
DISCRETE aux177 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00005_00001 + M_00005_00002)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux177, [2,2,6,6])
**VARIABLES**
DISCRETE aux178 #Active-CSE: 2 occurrences of this expression or equivalent: (-22 + M_00001_00003 + 5*M_00001_00004)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux178, [1,2,6,7])
**VARIABLES**
DISCRETE aux179 #Active-CSE: 2 occurrences of this expression or equivalent: (-20 + M_00001_00002 + 5*M_00001_00004)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux179, [1,2,6,7])
**VARIABLES**
DISCRETE aux180 #Active-CSE: 2 occurrences of this expression or equivalent: (-20 + M_00001_00001 + 5*M_00001_00004)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux180, [1,2,6,7])
**VARIABLES**
DISCRETE aux181 #Active-CSE: 2 occurrences of this expression or equivalent: (-22 + 5*M_00001_00004 + M_00001_00005)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux181, [1,3,6,8])
**VARIABLES**
DISCRETE aux182 #Active-CSE: 2 occurrences of this expression or equivalent: (-8 + 5*M_00001_00002 + M_00001_00004)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux182, [1,2,6,7])
**VARIABLES**
DISCRETE aux183 #Active-CSE: 2 occurrences of this expression or equivalent: (-8 + 5*M_00001_00001 + M_00001_00004)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux183, [1,2,6,7])
**VARIABLES**
DISCRETE aux184 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00001_00001 + M_00001_00002)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux184, [2,2,6,6])
**VARIABLES**
DISCRETE aux185 #Active-CSE: 2 occurrences of this expression or equivalent: (-7 + 5*M_00001_00001 + M_00001_00005)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux185, [1,3,6,8])
**VARIABLES**
DISCRETE aux186 #Active-CSE: 2 occurrences of this expression or equivalent: (-7 + 5*M_00001_00001 + M_00001_00003)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux186, [1,2,6,7])
**VARIABLES**
DISCRETE aux187 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00001_00001 + 5*M_00001_00002)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux187, [2,2,6,6])
**VARIABLES**
DISCRETE aux188 #Active-CSE: 2 occurrences of this expression or equivalent: (-7 + 5*M_00001_00002 + M_00001_00005)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux188, [1,3,6,8])
**VARIABLES**
DISCRETE aux189 #Active-CSE: 2 occurrences of this expression or equivalent: (-7 + 5*M_00001_00002 + M_00001_00003)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux189, [1,2,6,7])
**VARIABLES**
DISCRETE aux190 #Active-CSE: 2 occurrences of this expression or equivalent: (-18 + 5*M_00001_00003 + M_00001_00004)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux190, [1,2,6,7])
**VARIABLES**
DISCRETE aux191 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + 5*M_00001_00003 + M_00001_00005)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux191, [1,3,6,8])
**VARIABLES**
DISCRETE aux192 #Active-CSE: 2 occurrences of this expression or equivalent: (-15 + M_00001_00002 + 5*M_00001_00005)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux192, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux193 #Active-CSE: 2 occurrences of this expression or equivalent: (-15 + M_00001_00002 + 5*M_00001_00003)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux193, [1,2,6,7])
**VARIABLES**
DISCRETE aux194 #Active-CSE: 2 occurrences of this expression or equivalent: (-15 + M_00001_00001 + 5*M_00001_00003)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux194, [1,2,6,7])
**VARIABLES**
DISCRETE aux195 #Active-CSE: 2 occurrences of this expression or equivalent: (-15 + M_00001_00001 + 5*M_00001_00005)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux195, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux196 #Active-CSE: 2 occurrences of this expression or equivalent: (-18 + M_00001_00004 + 5*M_00001_00005)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux196, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux197 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + M_00001_00003 + 5*M_00001_00005)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux197, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux198 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00001 + -5)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux198, [1,1,7,7])
**VARIABLES**
DISCRETE aux199 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00004 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux199, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux200 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux200, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux201 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00002 + -5)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux201, [1,1,7,7])
**VARIABLES**
DISCRETE aux202 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00003 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux202, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux203 #Active-CSE: 6 occurrences of this expression or equivalent: (-2 + M_00005_00003)
{1..3}
DISCRETE aux204 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00005 + -2)
{1..3}
DISCRETE aux205 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00003_00005 + -2)
{1..3}
DISCRETE aux206 #Active-CSE: 6 occurrences of this expression or equivalent: (-2 + M_00005_00004)
{1..3}
DISCRETE aux207 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00004_00003 + -2)
{1..3}
DISCRETE aux208 #Active-CSE: 2 occurrences of this expression or equivalent: (-23 + 6*M_00001_00004)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux208, [1,1,7,7])
**VARIABLES**
DISCRETE aux209 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00001_00002)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux209, [1,1,7,7])
**VARIABLES**
DISCRETE aux210 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00001_00001)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux210, [1,1,7,7])
**VARIABLES**
DISCRETE aux211 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + 6*M_00001_00003)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux211, [1,1,7,7])
**VARIABLES**
DISCRETE aux212 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + 6*M_00001_00005)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux212, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux213 #Active-CSE: 6 occurrences of this expression or equivalent: (-2 + M_00001_00005)
{1..3}
DISCRETE aux214 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00004_00004 + -2)
{1..3}
DISCRETE aux215 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00003_00004 + -2)
{1..3}
DISCRETE aux216 #Active-CSE: 6 occurrences of this expression or equivalent: (-3 + M_00001_00004)
{1..2}
DISCRETE aux217 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00005_00001)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux217, [1,1,7,7])
**VARIABLES**
DISCRETE aux218 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00005_00002)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux218, [1,1,7,7])
**VARIABLES**
DISCRETE aux219 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + 6*M_00005_00003)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux219, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux220 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + 6*M_00005_00004)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux220, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux221 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00004 + -2)
{1..3}
DISCRETE aux222 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00003_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux222, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux223 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00003_00004 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux223, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux224 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00003_00001 + -5)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux224, [1,1,7,7])
**VARIABLES**
DISCRETE aux225 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00003_00002 + -5)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux225, [1,1,7,7])
**VARIABLES**
DISCRETE aux226 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00003_00003 + -2)
{1..3}
DISCRETE aux227 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00004_00005 + -2)
{1..3}
DISCRETE aux228 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00004_00001 + -5)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux228, [1,1,7,7])
**VARIABLES**
DISCRETE aux229 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00004_00003 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux229, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux230 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00004_00002 + -5)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux230, [1,1,7,7])
**VARIABLES**
DISCRETE aux231 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00004_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux231, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux232 #Active-CSE: 6 occurrences of this expression or equivalent: (-2 + M_00001_00003)
{1..2}
DISCRETE aux233 #Active-CSE: 6 occurrences of this expression or equivalent: (-2 + M_00005_00005)
{1..3}
DISCRETE aux234 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00003 + -2)
{1..3}
DISCRETE aux235 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux210) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux198)
{1..5}
DISCRETE aux236 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux123) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux184)
{1..5}
DISCRETE aux237 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux122) --- ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux186)
{1..5}
DISCRETE aux238 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux121) --- ElementOne([M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux183)
{1..5}
DISCRETE aux239 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux120) --- ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux185)
{1..5}
DISCRETE aux240 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux224) --- ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002], aux194)
{1..5}
DISCRETE aux241 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux151) --- ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002], aux193)
{1..5}
DISCRETE aux242 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux211) --- ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux149)
{1..5}
DISCRETE aux243 #ElementOne([M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005], aux190) --- ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux150)
{1..5}
DISCRETE aux244 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005], aux191) --- ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux152)
{1..5}
DISCRETE aux245 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux228) --- ElementOne([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux180)
{1..5}
DISCRETE aux246 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux131) --- ElementOne([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux179)
{1..5}
DISCRETE aux247 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux130) --- ElementOne([M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], aux178)
{1..5}
DISCRETE aux248 #ElementOne([M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux208) --- ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux133)
{1..5}
DISCRETE aux249 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux132) --- ElementOne([M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux181)
{1..5}
DISCRETE aux250 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux217) --- ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux195)
{1..5}
DISCRETE aux251 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux177) --- ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux192)
{1..5}
DISCRETE aux252 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux174) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], aux197)
{1..5}
DISCRETE aux253 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux175) --- ElementOne([M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux196)
{1..5}
DISCRETE aux254 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux173) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux212)
{1..5}
DISCRETE aux255 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux111) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux187)
{1..5}
DISCRETE aux256 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux209) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux201)
{1..5}
DISCRETE aux257 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux125) --- ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux189)
{1..5}
DISCRETE aux258 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux126) --- ElementOne([M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux182)
{1..5}
DISCRETE aux259 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux127) --- ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux188)
{1..5}
DISCRETE aux260 #ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux110) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux157)
{1..5}
DISCRETE aux261 #ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux112) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux225)
{1..5}
DISCRETE aux262 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux148) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux202)
{1..5}
DISCRETE aux263 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux147) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux128)
{1..5}
DISCRETE aux264 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux146) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux129)
{1..5}
DISCRETE aux265 #ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux114) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux143)
{1..5}
DISCRETE aux266 #ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux113) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux230)
{1..5}
DISCRETE aux267 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux136) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux118)
{1..5}
DISCRETE aux268 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux134) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux199)
{1..5}
DISCRETE aux269 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux135) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux124)
{1..5}
DISCRETE aux270 #ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux116) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux176)
{1..5}
DISCRETE aux271 #ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux115) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux218)
{1..5}
DISCRETE aux272 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux170) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux117)
{1..5}
DISCRETE aux273 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux172) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux119)
{1..5}
DISCRETE aux274 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux171) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux200)
{1..5}
DISCRETE aux275 #ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux142) --- ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux158)
{1..5}
DISCRETE aux276 #ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux140) --- ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux155)
{1..5}
DISCRETE aux277 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux160) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux229)
{1..5}
DISCRETE aux278 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux223) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux138)
{1..5}
DISCRETE aux279 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux137) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux153)
{1..5}
DISCRETE aux280 #ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux169) --- ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux156)
{1..5}
DISCRETE aux281 #ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux166) --- ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux154)
{1..5}
DISCRETE aux282 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux161) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux219)
{1..5}
DISCRETE aux283 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux165) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux159)
{1..5}
DISCRETE aux284 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux222) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux164)
{1..5}
DISCRETE aux285 #ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux168) --- ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux144)
{1..5}
DISCRETE aux286 #ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux167) --- ElementOne([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux139)
{1..5}
DISCRETE aux287 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux162) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux141)
{1..5}
DISCRETE aux288 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux145) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux220)
{1..5}
DISCRETE aux289 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux163) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux231)
{1..5}
DISCRETE aux290 #(M_00003_00001 + 5*M_00003_00003 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux290, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux291 #(M_00003_00002 + 5*M_00003_00003 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux291, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux292 #(6*M_00003_00003 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux292, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux293 #(5*M_00003_00003 + M_00003_00004 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux293, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux294 #(5*M_00003_00003 + M_00003_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux294, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux295 #(M_00004_00001 + 5*M_00004_00004 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux295, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux296 #(M_00004_00002 + 5*M_00004_00004 + -15)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux296, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux297 #(M_00004_00003 + 5*M_00004_00004 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux297, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux298 #(6*M_00004_00004 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux298, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux299 #(5*M_00004_00004 + M_00004_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux299, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux300 #(-15 + M_00005_00001 + 5*M_00005_00005)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux300, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux301 #(-15 + M_00005_00002 + 5*M_00005_00005)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux301, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux302 #(-17 + M_00005_00003 + 5*M_00005_00005)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux302, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux303 #(-17 + M_00005_00004 + 5*M_00005_00005)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux303, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux304 #(-17 + 6*M_00005_00005)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux304, [1,1,7,7,13,13])
**VARIABLES**
**TUPLELIST**
rack 5 5
1 1 3 4 5 
2 2 3 4 5 
1 2 3 4 5 
1 2 3 4 5 
1 2 3 4 5 
**VARIABLES**
ALIAS rack[5,5]=[[1, 1, 3, 4, 5], [2, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]]
**TUPLELIST**
perms 12 5
1 2 3 4 5 
1 2 3 5 4 
1 2 5 4 3 
1 2 5 3 4 
1 2 4 5 3 
1 2 4 3 5 
2 1 3 4 5 
2 1 3 5 4 
2 1 5 4 3 
2 1 5 3 4 
2 1 4 5 3 
2 1 4 3 5 
**VARIABLES**
ALIAS perms[12,5]=[[1, 2, 3, 4, 5], [1, 2, 3, 5, 4], [1, 2, 5, 4, 3], [1, 2, 5, 3, 4], [1, 2, 4, 5, 3], [1, 2, 4, 3, 5], [2, 1, 3, 4, 5], [2, 1, 3, 5, 4], [2, 1, 5, 4, 3], [2, 1, 5, 3, 4], [2, 1, 4, 5, 3], [2, 1, 4, 3, 5]]
**TUPLELIST**
inverses 12 5
1 2 3 4 5 
1 2 3 5 4 
1 2 5 4 3 
1 2 4 5 3 
1 2 5 3 4 
1 2 4 3 5 
2 1 3 4 5 
2 1 3 5 4 
2 1 5 4 3 
2 1 4 5 3 
2 1 5 3 4 
2 1 4 3 5 
**VARIABLES**
ALIAS inverses[12,5]=[[1, 2, 3, 4, 5], [1, 2, 3, 5, 4], [1, 2, 5, 4, 3], [1, 2, 4, 5, 3], [1, 2, 5, 3, 4], [1, 2, 4, 3, 5], [2, 1, 3, 4, 5], [2, 1, 3, 5, 4], [2, 1, 5, 4, 3], [2, 1, 4, 5, 3], [2, 1, 5, 3, 4], [2, 1, 4, 3, 5]]
**SEARCH**
PRINT[[M_00001_00001],[M_00001_00002],[M_00001_00003],[M_00001_00004],[M_00001_00005],[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005]]
VARORDER STATIC [M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005]
**CONSTRAINTS**
watchelement_one([3, 4, 5], aux205, aux0)
watchelement_one([3, 4, 5], aux226, aux1)
watchelement_one([3, 4, 5], aux215, aux2)
watchelement_one([3, 5, 4], aux205, aux3)
watchelement_one([3, 5, 4], aux215, aux4)
watchelement_one([3, 5, 4], aux226, aux5)
watchelement_one([4, 5, 3], aux215, aux6)
watchelement_one([4, 5, 3], aux226, aux7)
watchelement_one([4, 5, 3], aux205, aux8)
watchelement_one([4, 3, 5], aux215, aux9)
watchelement_one([4, 3, 5], aux205, aux10)
watchelement_one([4, 3, 5], aux226, aux11)
watchelement_one([5, 4, 3], aux205, aux12)
watchelement_one([5, 4, 3], aux226, aux13)
watchelement_one([5, 4, 3], aux215, aux14)
watchelement_one([5, 3, 4], aux215, aux15)
watchelement_one([5, 3, 4], aux205, aux16)
watchelement_one([5, 3, 4], aux226, aux17)
watchelement_one([3, 5, 4], aux233, aux18)
watchelement_one([3, 5, 4], aux206, aux19)
watchelement_one([3, 5, 4], aux203, aux20)
watchelement_one([3, 4, 5], aux233, aux21)
watchelement_one([3, 4, 5], aux203, aux22)
watchelement_one([3, 4, 5], aux206, aux23)
watchelement_one([4, 3, 5], aux233, aux24)
watchelement_one([4, 3, 5], aux206, aux25)
watchelement_one([4, 3, 5], aux203, aux26)
watchelement_one([4, 5, 3], aux206, aux27)
watchelement_one([4, 5, 3], aux203, aux28)
watchelement_one([4, 5, 3], aux233, aux29)
watchelement_one([5, 4, 3], aux233, aux30)
watchelement_one([5, 4, 3], aux203, aux31)
watchelement_one([5, 4, 3], aux206, aux32)
watchelement_one([5, 3, 4], aux206, aux33)
watchelement_one([5, 3, 4], aux203, aux34)
watchelement_one([5, 3, 4], aux233, aux35)
watchelement_one([5, 4, 3], aux214, aux36)
watchelement_one([5, 4, 3], aux227, aux37)
watchelement_one([5, 4, 3], aux207, aux38)
watchelement_one([5, 3, 4], aux214, aux39)
watchelement_one([5, 3, 4], aux207, aux40)
watchelement_one([5, 3, 4], aux227, aux41)
watchelement_one([3, 5, 4], aux207, aux42)
watchelement_one([3, 5, 4], aux214, aux43)
watchelement_one([3, 4, 5], aux207, aux44)
watchelement_one([3, 4, 5], aux214, aux45)
watchelement_one([3, 4, 5], aux227, aux46)
watchelement_one([3, 5, 4], aux227, aux47)
watchelement_one([4, 3, 5], aux227, aux48)
watchelement_one([4, 3, 5], aux207, aux49)
watchelement_one([4, 3, 5], aux214, aux50)
watchelement_one([4, 5, 3], aux227, aux51)
watchelement_one([4, 5, 3], aux207, aux52)
watchelement_one([4, 5, 3], aux214, aux53)
watchelement_one([4, 3, 5], aux221, aux54)
watchelement_one([4, 3, 5], aux234, aux55)
watchelement_one([4, 3, 5], aux204, aux56)
watchelement_one([4, 5, 3], aux204, aux57)
watchelement_one([4, 5, 3], aux221, aux58)
watchelement_one([4, 5, 3], aux234, aux59)
watchelement_one([5, 4, 3], aux234, aux60)
watchelement_one([5, 4, 3], aux204, aux61)
watchelement_one([5, 4, 3], aux221, aux62)
watchelement_one([5, 3, 4], aux234, aux63)
watchelement_one([5, 3, 4], aux221, aux64)
watchelement_one([5, 3, 4], aux204, aux65)
watchelement_one([3, 5, 4], aux204, aux66)
watchelement_one([3, 5, 4], aux221, aux67)
watchelement_one([3, 5, 4], aux234, aux68)
watchelement_one([3, 4, 5], aux234, aux69)
watchelement_one([3, 4, 5], aux204, aux70)
watchelement_one([3, 4, 5], aux221, aux71)
watchelement_one([3, 5, 4], aux213, aux72)
watchelement_one([3, 4, 5], aux213, aux73)
watchelement_one([4, 3, 5], aux213, aux74)
watchelement_one([4, 5, 3], aux213, aux75)
watchelement_one([5, 4, 3], aux213, aux76)
watchelement_one([5, 3, 4], aux213, aux77)
watchelement_one([5, 3], aux232, aux78)
watchelement_one([5, 3], aux216, aux79)
watchelement_one([5, 4], aux232, aux80)
watchelement_one([5, 4], aux216, aux81)
watchelement_one([4, 5], aux232, aux82)
watchelement_one([4, 5], aux216, aux83)
watchelement_one([4, 3], aux232, aux84)
watchelement_one([4, 3], aux216, aux85)
watchelement_one([3, 5], aux232, aux86)
watchelement_one([3, 4], aux232, aux87)
watchelement_one([3, 5], aux216, aux88)
watchelement_one([3, 4], aux216, aux89)
watchelement_one([1, 2], M_00001_00002, aux90)
watchelement_one([1, 2], M_00001_00001, aux91)
watchelement_one([1, 2], M_00002_00002, aux92)
watchelement_one([1, 2], M_00003_00001, aux93)
watchelement_one([1, 2], M_00003_00002, aux94)
watchelement_one([1, 2], M_00002_00001, aux95)
watchelement_one([1, 2], M_00004_00002, aux96)
watchelement_one([1, 2], M_00004_00001, aux97)
watchelement_one([1, 2], M_00005_00001, aux98)
watchelement_one([1, 2], M_00005_00002, aux99)
watchelement_one([2, 1], M_00001_00002, aux100)
watchelement_one([2, 1], M_00001_00001, aux101)
watchelement_one([2, 1], M_00004_00002, aux102)
watchelement_one([2, 1], M_00004_00001, aux103)
watchelement_one([2, 1], M_00003_00001, aux104)
watchelement_one([2, 1], M_00003_00002, aux105)
watchelement_one([2, 1], M_00002_00002, aux106)
watchelement_one([2, 1], M_00002_00001, aux107)
watchelement_one([2, 1], M_00005_00001, aux108)
watchelement_one([2, 1], M_00005_00002, aux109)
gacalldiff([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005])
gacalldiff([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005])
gacalldiff([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005])
gacalldiff([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005])
gacalldiff([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005])
watchelement_one([1, 1, 3, 4, 5, 2, 2], aux210, M_00001_00001)
watchelement_one([1, 1, 3, 4, 5, 2], aux184, M_00001_00001)
watchelement_one([3, 4, 5, 2, 2, 3, 4], aux186, M_00001_00003)
watchelement_one([4, 5, 2, 2, 3, 4, 5], aux183, M_00001_00004)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux185, M_00001_00005)
watchelement_one([1, 1, 3, 4, 5, 2], aux187, M_00001_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2], aux209, M_00001_00002)
watchelement_one([3, 4, 5, 2, 2, 3, 4], aux189, M_00001_00003)
watchelement_one([4, 5, 2, 2, 3, 4, 5], aux182, M_00001_00004)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux188, M_00001_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2], aux194, M_00001_00001)
watchelement_one([1, 2, 3, 4, 5, 1, 2], aux193, M_00001_00002)
watchelement_one([3, 4, 5, 1, 2, 3, 4], aux211, M_00001_00003)
watchelement_one([4, 5, 1, 2, 3, 4, 5], aux190, M_00001_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5], aux191, M_00001_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2], aux180, M_00001_00001)
watchelement_one([1, 2, 3, 4, 5, 1, 2], aux179, M_00001_00002)
watchelement_one([3, 4, 5, 1, 2, 3, 4], aux178, M_00001_00003)
watchelement_one([4, 5, 1, 2, 3, 4, 5], aux208, M_00001_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5], aux181, M_00001_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux195, M_00001_00001)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux192, M_00001_00002)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4], aux197, M_00001_00003)
watchelement_one([4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux196, M_00001_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux212, M_00001_00005)
watchelement_one([1, 1, 3, 4, 5, 2, 2], aux198, M_00002_00001)
watchelement_one([1, 1, 3, 4, 5, 2], aux123, M_00002_00001)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux122, M_00002_00003)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux121, M_00002_00004)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux120, M_00002_00005)
watchelement_one([1, 1, 3, 4, 5, 2], aux111, M_00002_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2], aux201, M_00002_00002)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux125, M_00002_00003)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux126, M_00002_00004)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux127, M_00002_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux110, M_00002_00001)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux112, M_00002_00002)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux202, M_00002_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux128, M_00002_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux129, M_00002_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux114, M_00002_00001)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux113, M_00002_00002)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux118, M_00002_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux199, M_00002_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux124, M_00002_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux116, M_00002_00001)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux115, M_00002_00002)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux117, M_00002_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux119, M_00002_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux200, M_00002_00005)
watchelement_one([1, 1, 3, 4, 5, 2, 2], aux224, M_00003_00001)
watchelement_one([1, 1, 3, 4, 5, 2], aux151, M_00003_00001)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux149, M_00003_00003)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux150, M_00003_00004)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux152, M_00003_00005)
watchelement_one([1, 1, 3, 4, 5, 2], aux157, M_00003_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2], aux225, M_00003_00002)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux148, M_00003_00003)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux147, M_00003_00004)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux146, M_00003_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux290, M_00003_00001)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux291, M_00003_00002)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux292, M_00003_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux293, M_00003_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux294, M_00003_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux158, M_00003_00001)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux155, M_00003_00002)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux160, M_00003_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux223, M_00003_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux153, M_00003_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux156, M_00003_00001)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux154, M_00003_00002)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux161, M_00003_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux159, M_00003_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux222, M_00003_00005)
watchelement_one([1, 1, 3, 4, 5, 2, 2], aux228, M_00004_00001)
watchelement_one([1, 1, 3, 4, 5, 2], aux131, M_00004_00001)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux130, M_00004_00003)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux133, M_00004_00004)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux132, M_00004_00005)
watchelement_one([1, 1, 3, 4, 5, 2], aux143, M_00004_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2], aux230, M_00004_00002)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux136, M_00004_00003)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux134, M_00004_00004)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux135, M_00004_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux142, M_00004_00001)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux140, M_00004_00002)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux229, M_00004_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux138, M_00004_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux137, M_00004_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux295, M_00004_00001)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux296, M_00004_00002)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux297, M_00004_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux298, M_00004_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux299, M_00004_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux144, M_00004_00001)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux139, M_00004_00002)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux141, M_00004_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux145, M_00004_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux231, M_00004_00005)
watchelement_one([1, 1, 3, 4, 5, 2, 2], aux217, M_00005_00001)
watchelement_one([1, 1, 3, 4, 5, 2], aux177, M_00005_00001)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux174, M_00005_00003)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux175, M_00005_00004)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux173, M_00005_00005)
watchelement_one([1, 1, 3, 4, 5, 2], aux176, M_00005_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2], aux218, M_00005_00002)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux170, M_00005_00003)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux172, M_00005_00004)
watchelement_one([3, 4, 5, 2, 2, 3, 4, 5], aux171, M_00005_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux169, M_00005_00001)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux166, M_00005_00002)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux219, M_00005_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux165, M_00005_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux164, M_00005_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux168, M_00005_00001)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux167, M_00005_00002)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux162, M_00005_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux220, M_00005_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux163, M_00005_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux300, M_00005_00001)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux301, M_00005_00002)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux302, M_00005_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux303, M_00005_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux304, M_00005_00005)
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005],[aux91, aux90, aux87, aux83, aux73, aux95, aux92, aux69, aux71, aux70, aux93, aux94, aux1, aux2, aux0, aux97, aux96, aux44, aux45, aux46, aux98, aux99, aux22, aux23, aux21])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005],[aux91, aux90, aux86, aux72, aux81, aux95, aux92, aux68, aux66, aux67, aux93, aux94, aux5, aux3, aux4, aux98, aux99, aux20, aux18, aux19, aux97, aux96, aux42, aux47, aux43])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005],[aux91, aux90, aux76, aux85, aux80, aux95, aux92, aux61, aux62, aux60, aux98, aux99, aux30, aux32, aux31, aux97, aux96, aux37, aux36, aux38, aux93, aux94, aux12, aux14, aux13])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005],[aux91, aux90, aux75, aux82, aux79, aux95, aux92, aux57, aux59, aux58, aux98, aux99, aux29, aux28, aux27, aux93, aux94, aux8, aux7, aux6, aux97, aux96, aux51, aux52, aux53])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005],[aux91, aux90, aux89, aux77, aux78, aux95, aux92, aux64, aux65, aux63, aux97, aux96, aux39, aux41, aux40, aux98, aux99, aux33, aux35, aux34, aux93, aux94, aux15, aux16, aux17])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005],[aux91, aux90, aux88, aux84, aux74, aux95, aux92, aux54, aux55, aux56, aux97, aux96, aux50, aux49, aux48, aux93, aux94, aux9, aux11, aux10, aux98, aux99, aux25, aux26, aux24])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005],[aux106, aux107, aux69, aux71, aux70, aux100, aux101, aux87, aux83, aux73, aux105, aux104, aux1, aux2, aux0, aux102, aux103, aux44, aux45, aux46, aux109, aux108, aux22, aux23, aux21])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005],[aux106, aux107, aux68, aux66, aux67, aux100, aux101, aux86, aux72, aux81, aux105, aux104, aux5, aux3, aux4, aux109, aux108, aux20, aux18, aux19, aux102, aux103, aux42, aux47, aux43])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005],[aux106, aux107, aux61, aux62, aux60, aux100, aux101, aux76, aux85, aux80, aux109, aux108, aux30, aux32, aux31, aux102, aux103, aux37, aux36, aux38, aux105, aux104, aux12, aux14, aux13])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005],[aux106, aux107, aux57, aux59, aux58, aux100, aux101, aux75, aux82, aux79, aux109, aux108, aux29, aux28, aux27, aux105, aux104, aux8, aux7, aux6, aux102, aux103, aux51, aux52, aux53])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005],[aux106, aux107, aux64, aux65, aux63, aux100, aux101, aux89, aux77, aux78, aux102, aux103, aux39, aux41, aux40, aux109, aux108, aux33, aux35, aux34, aux105, aux104, aux15, aux16, aux17])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005],[aux106, aux107, aux54, aux55, aux56, aux100, aux101, aux88, aux84, aux74, aux102, aux103, aux50, aux49, aux48, aux105, aux104, aux9, aux11, aux10, aux109, aux108, aux25, aux26, aux24])
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux210, aux235)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux198, aux235)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux123, aux236)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux184, aux236)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux122, aux237)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux186, aux237)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux121, aux238)
watchelement_one([M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux183, aux238)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux120, aux239)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux185, aux239)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux224, aux240)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002], aux194, aux240)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux151, aux241)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002], aux193, aux241)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux211, aux242)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux149, aux242)
watchelement_one([M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005], aux190, aux243)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux150, aux243)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005], aux191, aux244)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux152, aux244)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux228, aux245)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux180, aux245)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux131, aux246)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux179, aux246)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux130, aux247)
watchelement_one([M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], aux178, aux247)
watchelement_one([M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux208, aux248)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux133, aux248)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux132, aux249)
watchelement_one([M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux181, aux249)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux217, aux250)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux195, aux250)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux177, aux251)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux192, aux251)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux174, aux252)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], aux197, aux252)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux175, aux253)
watchelement_one([M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux196, aux253)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux173, aux254)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux212, aux254)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux111, aux255)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux187, aux255)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux209, aux256)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux201, aux256)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux125, aux257)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux189, aux257)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux126, aux258)
watchelement_one([M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux182, aux258)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux127, aux259)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux188, aux259)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux110, aux260)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux157, aux260)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux112, aux261)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux225, aux261)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux148, aux262)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux202, aux262)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux147, aux263)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux128, aux263)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux146, aux264)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux129, aux264)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux114, aux265)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux143, aux265)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux113, aux266)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux230, aux266)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux136, aux267)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux118, aux267)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux134, aux268)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux199, aux268)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux135, aux269)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux124, aux269)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux116, aux270)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001], aux176, aux270)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux115, aux271)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002], aux218, aux271)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux170, aux272)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux117, aux272)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux172, aux273)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux119, aux273)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005], aux171, aux274)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux200, aux274)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux142, aux275)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux158, aux275)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux140, aux276)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux155, aux276)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux160, aux277)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux229, aux277)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux223, aux278)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux138, aux278)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux137, aux279)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux153, aux279)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux169, aux280)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux156, aux280)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux166, aux281)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux154, aux281)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux161, aux282)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux219, aux282)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux165, aux283)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux159, aux283)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux222, aux284)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux164, aux284)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux168, aux285)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux144, aux285)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux167, aux286)
watchelement_one([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002], aux139, aux286)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux162, aux287)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux141, aux287)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux145, aux288)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux220, aux288)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux163, aux289)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005], aux231, aux289)
weightedsumleq([1,5,1],[M_00003_00001,M_00003_00003,-15],aux290)
weightedsumgeq([1,5,1],[M_00003_00001,M_00003_00003,-15],aux290)
weightedsumleq([1,5,1],[M_00003_00002,M_00003_00003,-15],aux291)
weightedsumgeq([1,5,1],[M_00003_00002,M_00003_00003,-15],aux291)
weightedsumleq([6,1],[M_00003_00003,-17],aux292)
weightedsumgeq([6,1],[M_00003_00003,-17],aux292)
weightedsumleq([5,1,1],[M_00003_00003,M_00003_00004,-17],aux293)
weightedsumgeq([5,1,1],[M_00003_00003,M_00003_00004,-17],aux293)
weightedsumleq([5,1,1],[M_00003_00003,M_00003_00005,-17],aux294)
weightedsumgeq([5,1,1],[M_00003_00003,M_00003_00005,-17],aux294)
weightedsumleq([1,5,1],[M_00004_00001,M_00004_00004,-15],aux295)
weightedsumgeq([1,5,1],[M_00004_00001,M_00004_00004,-15],aux295)
weightedsumleq([1,5,1],[M_00004_00002,M_00004_00004,-15],aux296)
weightedsumgeq([1,5,1],[M_00004_00002,M_00004_00004,-15],aux296)
weightedsumleq([1,5,1],[M_00004_00003,M_00004_00004,-17],aux297)
weightedsumgeq([1,5,1],[M_00004_00003,M_00004_00004,-17],aux297)
weightedsumleq([6,1],[M_00004_00004,-17],aux298)
weightedsumgeq([6,1],[M_00004_00004,-17],aux298)
weightedsumleq([5,1,1],[M_00004_00004,M_00004_00005,-17],aux299)
weightedsumgeq([5,1,1],[M_00004_00004,M_00004_00005,-17],aux299)
weightedsumleq([1,1,5],[-15,M_00005_00001,M_00005_00005],aux300)
weightedsumgeq([1,1,5],[-15,M_00005_00001,M_00005_00005],aux300)
weightedsumleq([1,1,5],[-15,M_00005_00002,M_00005_00005],aux301)
weightedsumgeq([1,1,5],[-15,M_00005_00002,M_00005_00005],aux301)
weightedsumleq([1,1,5],[-17,M_00005_00003,M_00005_00005],aux302)
weightedsumgeq([1,1,5],[-17,M_00005_00003,M_00005_00005],aux302)
weightedsumleq([1,1,5],[-17,M_00005_00004,M_00005_00005],aux303)
weightedsumgeq([1,1,5],[-17,M_00005_00004,M_00005_00005],aux303)
weightedsumleq([1,6],[-17,M_00005_00005],aux304)
weightedsumgeq([1,6],[-17,M_00005_00005],aux304)
weightedsumleq([1,5,1],[M_00002_00001,M_00002_00003,-15],aux110)
weightedsumgeq([1,5,1],[M_00002_00001,M_00002_00003,-15],aux110)
weightedsumleq([1,5,1],[M_00002_00001,M_00002_00002,-5],aux111)
weightedsumgeq([1,5,1],[M_00002_00001,M_00002_00002,-5],aux111)
weightedsumleq([1,5,1],[M_00002_00002,M_00002_00003,-15],aux112)
weightedsumgeq([1,5,1],[M_00002_00002,M_00002_00003,-15],aux112)
weightedsumleq([1,5,1],[M_00002_00002,M_00002_00004,-15],aux113)
weightedsumgeq([1,5,1],[M_00002_00002,M_00002_00004,-15],aux113)
weightedsumleq([1,5,1],[M_00002_00001,M_00002_00004,-15],aux114)
weightedsumgeq([1,5,1],[M_00002_00001,M_00002_00004,-15],aux114)
weightedsumleq([1,5,1],[M_00002_00002,M_00002_00005,-15],aux115)
weightedsumgeq([1,5,1],[M_00002_00002,M_00002_00005,-15],aux115)
weightedsumleq([1,5,1],[M_00002_00001,M_00002_00005,-15],aux116)
weightedsumgeq([1,5,1],[M_00002_00001,M_00002_00005,-15],aux116)
weightedsumleq([1,5,1],[M_00002_00003,M_00002_00005,-17],aux117)
weightedsumgeq([1,5,1],[M_00002_00003,M_00002_00005,-17],aux117)
weightedsumleq([1,5,1],[M_00002_00003,M_00002_00004,-17],aux118)
weightedsumgeq([1,5,1],[M_00002_00003,M_00002_00004,-17],aux118)
weightedsumleq([1,5,1],[M_00002_00004,M_00002_00005,-17],aux119)
weightedsumgeq([1,5,1],[M_00002_00004,M_00002_00005,-17],aux119)
weightedsumleq([5,1,1],[M_00002_00001,M_00002_00005,-7],aux120)
weightedsumgeq([5,1,1],[M_00002_00001,M_00002_00005,-7],aux120)
weightedsumleq([5,1,1],[M_00002_00001,M_00002_00004,-7],aux121)
weightedsumgeq([5,1,1],[M_00002_00001,M_00002_00004,-7],aux121)
weightedsumleq([5,1,1],[M_00002_00001,M_00002_00003,-7],aux122)
weightedsumgeq([5,1,1],[M_00002_00001,M_00002_00003,-7],aux122)
weightedsumleq([5,1,1],[M_00002_00001,M_00002_00002,-5],aux123)
weightedsumgeq([5,1,1],[M_00002_00001,M_00002_00002,-5],aux123)
weightedsumleq([5,1,1],[M_00002_00004,M_00002_00005,-17],aux124)
weightedsumgeq([5,1,1],[M_00002_00004,M_00002_00005,-17],aux124)
weightedsumleq([5,1,1],[M_00002_00002,M_00002_00003,-7],aux125)
weightedsumgeq([5,1,1],[M_00002_00002,M_00002_00003,-7],aux125)
weightedsumleq([5,1,1],[M_00002_00002,M_00002_00004,-7],aux126)
weightedsumgeq([5,1,1],[M_00002_00002,M_00002_00004,-7],aux126)
weightedsumleq([5,1,1],[M_00002_00002,M_00002_00005,-7],aux127)
weightedsumgeq([5,1,1],[M_00002_00002,M_00002_00005,-7],aux127)
weightedsumleq([5,1,1],[M_00002_00003,M_00002_00004,-17],aux128)
weightedsumgeq([5,1,1],[M_00002_00003,M_00002_00004,-17],aux128)
weightedsumleq([5,1,1],[M_00002_00003,M_00002_00005,-17],aux129)
weightedsumgeq([5,1,1],[M_00002_00003,M_00002_00005,-17],aux129)
weightedsumleq([5,1,1],[M_00004_00001,M_00004_00003,-7],aux130)
weightedsumgeq([5,1,1],[M_00004_00001,M_00004_00003,-7],aux130)
weightedsumleq([5,1,1],[M_00004_00001,M_00004_00002,-5],aux131)
weightedsumgeq([5,1,1],[M_00004_00001,M_00004_00002,-5],aux131)
weightedsumleq([5,1,1],[M_00004_00001,M_00004_00005,-7],aux132)
weightedsumgeq([5,1,1],[M_00004_00001,M_00004_00005,-7],aux132)
weightedsumleq([5,1,1],[M_00004_00001,M_00004_00004,-7],aux133)
weightedsumgeq([5,1,1],[M_00004_00001,M_00004_00004,-7],aux133)
weightedsumleq([5,1,1],[M_00004_00002,M_00004_00004,-7],aux134)
weightedsumgeq([5,1,1],[M_00004_00002,M_00004_00004,-7],aux134)
weightedsumleq([5,1,1],[M_00004_00002,M_00004_00005,-7],aux135)
weightedsumgeq([5,1,1],[M_00004_00002,M_00004_00005,-7],aux135)
weightedsumleq([5,1,1],[M_00004_00002,M_00004_00003,-7],aux136)
weightedsumgeq([5,1,1],[M_00004_00002,M_00004_00003,-7],aux136)
weightedsumleq([5,1,1],[M_00004_00003,M_00004_00005,-17],aux137)
weightedsumgeq([5,1,1],[M_00004_00003,M_00004_00005,-17],aux137)
weightedsumleq([5,1,1],[M_00004_00003,M_00004_00004,-17],aux138)
weightedsumgeq([5,1,1],[M_00004_00003,M_00004_00004,-17],aux138)
weightedsumleq([1,5,1],[M_00004_00002,M_00004_00005,-15],aux139)
weightedsumgeq([1,5,1],[M_00004_00002,M_00004_00005,-15],aux139)
weightedsumleq([1,5,1],[M_00004_00002,M_00004_00003,-15],aux140)
weightedsumgeq([1,5,1],[M_00004_00002,M_00004_00003,-15],aux140)
weightedsumleq([1,5,1],[M_00004_00003,M_00004_00005,-17],aux141)
weightedsumgeq([1,5,1],[M_00004_00003,M_00004_00005,-17],aux141)
weightedsumleq([1,5,1],[M_00004_00001,M_00004_00003,-15],aux142)
weightedsumgeq([1,5,1],[M_00004_00001,M_00004_00003,-15],aux142)
weightedsumleq([1,5,1],[M_00004_00001,M_00004_00002,-5],aux143)
weightedsumgeq([1,5,1],[M_00004_00001,M_00004_00002,-5],aux143)
weightedsumleq([1,5,1],[M_00004_00001,M_00004_00005,-15],aux144)
weightedsumgeq([1,5,1],[M_00004_00001,M_00004_00005,-15],aux144)
weightedsumleq([1,5,1],[M_00004_00004,M_00004_00005,-17],aux145)
weightedsumgeq([1,5,1],[M_00004_00004,M_00004_00005,-17],aux145)
weightedsumleq([5,1,1],[M_00003_00002,M_00003_00005,-7],aux146)
weightedsumgeq([5,1,1],[M_00003_00002,M_00003_00005,-7],aux146)
weightedsumleq([5,1,1],[M_00003_00002,M_00003_00004,-7],aux147)
weightedsumgeq([5,1,1],[M_00003_00002,M_00003_00004,-7],aux147)
weightedsumleq([5,1,1],[M_00003_00002,M_00003_00003,-7],aux148)
weightedsumgeq([5,1,1],[M_00003_00002,M_00003_00003,-7],aux148)
weightedsumleq([5,1,1],[M_00003_00001,M_00003_00003,-7],aux149)
weightedsumgeq([5,1,1],[M_00003_00001,M_00003_00003,-7],aux149)
weightedsumleq([5,1,1],[M_00003_00001,M_00003_00004,-7],aux150)
weightedsumgeq([5,1,1],[M_00003_00001,M_00003_00004,-7],aux150)
weightedsumleq([5,1,1],[M_00003_00001,M_00003_00002,-5],aux151)
weightedsumgeq([5,1,1],[M_00003_00001,M_00003_00002,-5],aux151)
weightedsumleq([5,1,1],[M_00003_00001,M_00003_00005,-7],aux152)
weightedsumgeq([5,1,1],[M_00003_00001,M_00003_00005,-7],aux152)
weightedsumleq([5,1,1],[M_00003_00004,M_00003_00005,-17],aux153)
weightedsumgeq([5,1,1],[M_00003_00004,M_00003_00005,-17],aux153)
weightedsumleq([1,5,1],[M_00003_00002,M_00003_00005,-15],aux154)
weightedsumgeq([1,5,1],[M_00003_00002,M_00003_00005,-15],aux154)
weightedsumleq([1,5,1],[M_00003_00002,M_00003_00004,-15],aux155)
weightedsumgeq([1,5,1],[M_00003_00002,M_00003_00004,-15],aux155)
weightedsumleq([1,5,1],[M_00003_00001,M_00003_00005,-15],aux156)
weightedsumgeq([1,5,1],[M_00003_00001,M_00003_00005,-15],aux156)
weightedsumleq([1,5,1],[M_00003_00001,M_00003_00002,-5],aux157)
weightedsumgeq([1,5,1],[M_00003_00001,M_00003_00002,-5],aux157)
weightedsumleq([1,5,1],[M_00003_00001,M_00003_00004,-15],aux158)
weightedsumgeq([1,5,1],[M_00003_00001,M_00003_00004,-15],aux158)
weightedsumleq([1,5,1],[M_00003_00004,M_00003_00005,-17],aux159)
weightedsumgeq([1,5,1],[M_00003_00004,M_00003_00005,-17],aux159)
weightedsumleq([1,5,1],[M_00003_00003,M_00003_00004,-17],aux160)
weightedsumgeq([1,5,1],[M_00003_00003,M_00003_00004,-17],aux160)
weightedsumleq([1,5,1],[M_00003_00003,M_00003_00005,-17],aux161)
weightedsumgeq([1,5,1],[M_00003_00003,M_00003_00005,-17],aux161)
weightedsumleq([1,1,5],[-17,M_00005_00003,M_00005_00004],aux162)
weightedsumgeq([1,1,5],[-17,M_00005_00003,M_00005_00004],aux162)
weightedsumleq([1,5,1],[-17,M_00005_00004,M_00005_00005],aux163)
weightedsumgeq([1,5,1],[-17,M_00005_00004,M_00005_00005],aux163)
weightedsumleq([1,5,1],[-17,M_00005_00003,M_00005_00005],aux164)
weightedsumgeq([1,5,1],[-17,M_00005_00003,M_00005_00005],aux164)
weightedsumleq([1,5,1],[-17,M_00005_00003,M_00005_00004],aux165)
weightedsumgeq([1,5,1],[-17,M_00005_00003,M_00005_00004],aux165)
weightedsumleq([1,1,5],[-15,M_00005_00002,M_00005_00003],aux166)
weightedsumgeq([1,1,5],[-15,M_00005_00002,M_00005_00003],aux166)
weightedsumleq([1,1,5],[-15,M_00005_00002,M_00005_00004],aux167)
weightedsumgeq([1,1,5],[-15,M_00005_00002,M_00005_00004],aux167)
weightedsumleq([1,1,5],[-15,M_00005_00001,M_00005_00004],aux168)
weightedsumgeq([1,1,5],[-15,M_00005_00001,M_00005_00004],aux168)
weightedsumleq([1,1,5],[-15,M_00005_00001,M_00005_00003],aux169)
weightedsumgeq([1,1,5],[-15,M_00005_00001,M_00005_00003],aux169)
weightedsumleq([1,5,1],[-7,M_00005_00002,M_00005_00003],aux170)
weightedsumgeq([1,5,1],[-7,M_00005_00002,M_00005_00003],aux170)
weightedsumleq([1,5,1],[-7,M_00005_00002,M_00005_00005],aux171)
weightedsumgeq([1,5,1],[-7,M_00005_00002,M_00005_00005],aux171)
weightedsumleq([1,5,1],[-7,M_00005_00002,M_00005_00004],aux172)
weightedsumgeq([1,5,1],[-7,M_00005_00002,M_00005_00004],aux172)
weightedsumleq([1,5,1],[-7,M_00005_00001,M_00005_00005],aux173)
weightedsumgeq([1,5,1],[-7,M_00005_00001,M_00005_00005],aux173)
weightedsumleq([1,5,1],[-7,M_00005_00001,M_00005_00003],aux174)
weightedsumgeq([1,5,1],[-7,M_00005_00001,M_00005_00003],aux174)
weightedsumleq([1,5,1],[-7,M_00005_00001,M_00005_00004],aux175)
weightedsumgeq([1,5,1],[-7,M_00005_00001,M_00005_00004],aux175)
weightedsumleq([1,1,5],[-5,M_00005_00001,M_00005_00002],aux176)
weightedsumgeq([1,1,5],[-5,M_00005_00001,M_00005_00002],aux176)
weightedsumleq([1,5,1],[-5,M_00005_00001,M_00005_00002],aux177)
weightedsumgeq([1,5,1],[-5,M_00005_00001,M_00005_00002],aux177)
weightedsumleq([1,1,5],[-22,M_00001_00003,M_00001_00004],aux178)
weightedsumgeq([1,1,5],[-22,M_00001_00003,M_00001_00004],aux178)
weightedsumleq([1,1,5],[-20,M_00001_00002,M_00001_00004],aux179)
weightedsumgeq([1,1,5],[-20,M_00001_00002,M_00001_00004],aux179)
weightedsumleq([1,1,5],[-20,M_00001_00001,M_00001_00004],aux180)
weightedsumgeq([1,1,5],[-20,M_00001_00001,M_00001_00004],aux180)
weightedsumleq([1,5,1],[-22,M_00001_00004,M_00001_00005],aux181)
weightedsumgeq([1,5,1],[-22,M_00001_00004,M_00001_00005],aux181)
weightedsumleq([1,5,1],[-8,M_00001_00002,M_00001_00004],aux182)
weightedsumgeq([1,5,1],[-8,M_00001_00002,M_00001_00004],aux182)
weightedsumleq([1,5,1],[-8,M_00001_00001,M_00001_00004],aux183)
weightedsumgeq([1,5,1],[-8,M_00001_00001,M_00001_00004],aux183)
weightedsumleq([1,5,1],[-5,M_00001_00001,M_00001_00002],aux184)
weightedsumgeq([1,5,1],[-5,M_00001_00001,M_00001_00002],aux184)
weightedsumleq([1,5,1],[-7,M_00001_00001,M_00001_00005],aux185)
weightedsumgeq([1,5,1],[-7,M_00001_00001,M_00001_00005],aux185)
weightedsumleq([1,5,1],[-7,M_00001_00001,M_00001_00003],aux186)
weightedsumgeq([1,5,1],[-7,M_00001_00001,M_00001_00003],aux186)
weightedsumleq([1,1,5],[-5,M_00001_00001,M_00001_00002],aux187)
weightedsumgeq([1,1,5],[-5,M_00001_00001,M_00001_00002],aux187)
weightedsumleq([1,5,1],[-7,M_00001_00002,M_00001_00005],aux188)
weightedsumgeq([1,5,1],[-7,M_00001_00002,M_00001_00005],aux188)
weightedsumleq([1,5,1],[-7,M_00001_00002,M_00001_00003],aux189)
weightedsumgeq([1,5,1],[-7,M_00001_00002,M_00001_00003],aux189)
weightedsumleq([1,5,1],[-18,M_00001_00003,M_00001_00004],aux190)
weightedsumgeq([1,5,1],[-18,M_00001_00003,M_00001_00004],aux190)
weightedsumleq([1,5,1],[-17,M_00001_00003,M_00001_00005],aux191)
weightedsumgeq([1,5,1],[-17,M_00001_00003,M_00001_00005],aux191)
weightedsumleq([1,1,5],[-15,M_00001_00002,M_00001_00005],aux192)
weightedsumgeq([1,1,5],[-15,M_00001_00002,M_00001_00005],aux192)
weightedsumleq([1,1,5],[-15,M_00001_00002,M_00001_00003],aux193)
weightedsumgeq([1,1,5],[-15,M_00001_00002,M_00001_00003],aux193)
weightedsumleq([1,1,5],[-15,M_00001_00001,M_00001_00003],aux194)
weightedsumgeq([1,1,5],[-15,M_00001_00001,M_00001_00003],aux194)
weightedsumleq([1,1,5],[-15,M_00001_00001,M_00001_00005],aux195)
weightedsumgeq([1,1,5],[-15,M_00001_00001,M_00001_00005],aux195)
weightedsumleq([1,1,5],[-18,M_00001_00004,M_00001_00005],aux196)
weightedsumgeq([1,1,5],[-18,M_00001_00004,M_00001_00005],aux196)
weightedsumleq([1,1,5],[-17,M_00001_00003,M_00001_00005],aux197)
weightedsumgeq([1,1,5],[-17,M_00001_00003,M_00001_00005],aux197)
weightedsumleq([6,1],[M_00002_00001,-5],aux198)
weightedsumgeq([6,1],[M_00002_00001,-5],aux198)
weightedsumleq([6,1],[M_00002_00004,-17],aux199)
weightedsumgeq([6,1],[M_00002_00004,-17],aux199)
weightedsumleq([6,1],[M_00002_00005,-17],aux200)
weightedsumgeq([6,1],[M_00002_00005,-17],aux200)
weightedsumleq([6,1],[M_00002_00002,-5],aux201)
weightedsumgeq([6,1],[M_00002_00002,-5],aux201)
weightedsumleq([6,1],[M_00002_00003,-17],aux202)
weightedsumgeq([6,1],[M_00002_00003,-17],aux202)
sumleq([-2,M_00005_00003],aux203)
sumgeq([-2,M_00005_00003],aux203)
sumleq([M_00002_00005,-2],aux204)
sumgeq([M_00002_00005,-2],aux204)
sumleq([M_00003_00005,-2],aux205)
sumgeq([M_00003_00005,-2],aux205)
sumleq([-2,M_00005_00004],aux206)
sumgeq([-2,M_00005_00004],aux206)
sumleq([M_00004_00003,-2],aux207)
sumgeq([M_00004_00003,-2],aux207)
weightedsumleq([1,6],[-23,M_00001_00004],aux208)
weightedsumgeq([1,6],[-23,M_00001_00004],aux208)
weightedsumleq([1,6],[-5,M_00001_00002],aux209)
weightedsumgeq([1,6],[-5,M_00001_00002],aux209)
weightedsumleq([1,6],[-5,M_00001_00001],aux210)
weightedsumgeq([1,6],[-5,M_00001_00001],aux210)
weightedsumleq([1,6],[-17,M_00001_00003],aux211)
weightedsumgeq([1,6],[-17,M_00001_00003],aux211)
weightedsumleq([1,6],[-17,M_00001_00005],aux212)
weightedsumgeq([1,6],[-17,M_00001_00005],aux212)
sumleq([-2,M_00001_00005],aux213)
sumgeq([-2,M_00001_00005],aux213)
sumleq([M_00004_00004,-2],aux214)
sumgeq([M_00004_00004,-2],aux214)
sumleq([M_00003_00004,-2],aux215)
sumgeq([M_00003_00004,-2],aux215)
sumleq([-3,M_00001_00004],aux216)
sumgeq([-3,M_00001_00004],aux216)
weightedsumleq([1,6],[-5,M_00005_00001],aux217)
weightedsumgeq([1,6],[-5,M_00005_00001],aux217)
weightedsumleq([1,6],[-5,M_00005_00002],aux218)
weightedsumgeq([1,6],[-5,M_00005_00002],aux218)
weightedsumleq([1,6],[-17,M_00005_00003],aux219)
weightedsumgeq([1,6],[-17,M_00005_00003],aux219)
weightedsumleq([1,6],[-17,M_00005_00004],aux220)
weightedsumgeq([1,6],[-17,M_00005_00004],aux220)
sumleq([M_00002_00004,-2],aux221)
sumgeq([M_00002_00004,-2],aux221)
weightedsumleq([6,1],[M_00003_00005,-17],aux222)
weightedsumgeq([6,1],[M_00003_00005,-17],aux222)
weightedsumleq([6,1],[M_00003_00004,-17],aux223)
weightedsumgeq([6,1],[M_00003_00004,-17],aux223)
weightedsumleq([6,1],[M_00003_00001,-5],aux224)
weightedsumgeq([6,1],[M_00003_00001,-5],aux224)
weightedsumleq([6,1],[M_00003_00002,-5],aux225)
weightedsumgeq([6,1],[M_00003_00002,-5],aux225)
sumleq([M_00003_00003,-2],aux226)
sumgeq([M_00003_00003,-2],aux226)
sumleq([M_00004_00005,-2],aux227)
sumgeq([M_00004_00005,-2],aux227)
weightedsumleq([6,1],[M_00004_00001,-5],aux228)
weightedsumgeq([6,1],[M_00004_00001,-5],aux228)
weightedsumleq([6,1],[M_00004_00003,-17],aux229)
weightedsumgeq([6,1],[M_00004_00003,-17],aux229)
weightedsumleq([6,1],[M_00004_00002,-5],aux230)
weightedsumgeq([6,1],[M_00004_00002,-5],aux230)
weightedsumleq([6,1],[M_00004_00005,-17],aux231)
weightedsumgeq([6,1],[M_00004_00005,-17],aux231)
sumleq([-2,M_00001_00003],aux232)
sumgeq([-2,M_00001_00003],aux232)
sumleq([-2,M_00005_00005],aux233)
sumgeq([-2,M_00005_00005],aux233)
sumleq([M_00002_00003,-2],aux234)
sumgeq([M_00002_00003,-2],aux234)
**EOF**
