MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 178
# CSE_active_eliminated_expressions = 593
# CSE_active_total_size = 1186
**VARIABLES**
DISCRETE S_00001_00002 #
{1..2}
DISCRETE S_00001_00003 #
{1..3}
**CONSTRAINTS**
w-inintervalset(S_00001_00003, [1,1,3,3])
**VARIABLES**
DISCRETE S_00001_00004 #
{1..4}
**CONSTRAINTS**
w-inintervalset(S_00001_00004, [1,1,3,4])
**VARIABLES**
DISCRETE S_00001_00005 #
{1..5}
**CONSTRAINTS**
w-inintervalset(S_00001_00005, [1,1,5,5])
**VARIABLES**
DISCRETE S_00002_00001 #
{1..2}
DISCRETE S_00002_00002 #
{1..2}
DISCRETE S_00002_00003 #
{1..4}
DISCRETE S_00002_00004 #
{1..4}
DISCRETE S_00002_00005 #
{1..5}
**CONSTRAINTS**
w-inintervalset(S_00002_00005, [1,2,4,5])
**VARIABLES**
DISCRETE S_00003_00001 #
{1..3}
**CONSTRAINTS**
w-inintervalset(S_00003_00001, [1,1,3,3])
**VARIABLES**
DISCRETE S_00003_00002 #
{1..4}
DISCRETE S_00003_00003 #
{1..5}
**CONSTRAINTS**
w-inintervalset(S_00003_00003, [1,1,3,5])
**VARIABLES**
DISCRETE S_00003_00004 #
{1..5}
DISCRETE S_00003_00005 #
{1..5}
DISCRETE S_00004_00001 #
{1..4}
**CONSTRAINTS**
w-inintervalset(S_00004_00001, [1,2,4,4])
**VARIABLES**
DISCRETE S_00004_00002 #
{1..5}
DISCRETE S_00004_00003 #
{1..5}
DISCRETE S_00004_00004 #
{1..5}
DISCRETE S_00004_00005 #
{1..5}
DISCRETE S_00005_00001 #
{1..5}
**CONSTRAINTS**
w-inintervalset(S_00005_00001, [1,1,5,5])
**VARIABLES**
DISCRETE S_00005_00002 #
{1..5}
DISCRETE S_00005_00003 #
{1..5}
**CONSTRAINTS**
w-inintervalset(S_00005_00003, [1,1,3,5])
**VARIABLES**
DISCRETE S_00005_00004 #
{1..5}
DISCRETE S_00005_00005 #
{1..5}
**CONSTRAINTS**
w-inintervalset(S_00005_00005, [1,1,3,5])
**VARIABLES**
DISCRETE aux0 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 5], S_00001_00003)
{3..5}
DISCRETE aux1 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 2], S_00001_00003)
{2..4}
DISCRETE aux2 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 1], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux2, [1,1,3,4])
**VARIABLES**
DISCRETE aux3 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 2, 1], S_00001_00003)
{1..3}
DISCRETE aux4 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 2, 5], S_00001_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux4, [2,3,5,5])
**VARIABLES**
DISCRETE aux5 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 2, 4], S_00001_00003)
{2..4}
DISCRETE aux6 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 1, 5], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux6, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux7 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 1, 4], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux7, [1,1,3,4])
**VARIABLES**
DISCRETE aux8 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 1, 2], S_00001_00003)
{1..3}
DISCRETE aux9 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 4], S_00001_00003)
{3..5}
DISCRETE aux10 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 1], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux10, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux11 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 2], S_00001_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux11, [2,3,5,5])
**VARIABLES**
DISCRETE aux12 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 1, 5], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux12, [1,2,5,5])
**VARIABLES**
DISCRETE aux13 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 1, 4], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux13, [1,2,4,4])
**VARIABLES**
DISCRETE aux14 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 1, 3], S_00001_00003)
{1..3}
DISCRETE aux15 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 4, 5], S_00001_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux15, [2,2,4,5])
**VARIABLES**
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 4, 3], S_00001_00003)
{2..4}
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 4, 1], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux17, [1,2,4,4])
**VARIABLES**
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 5, 1], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux18, [1,2,5,5])
**VARIABLES**
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 5, 4], S_00001_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux19, [2,2,4,5])
**VARIABLES**
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 5, 3], S_00001_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux20, [2,3,5,5])
**VARIABLES**
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 3, 5], S_00001_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux21, [2,3,5,5])
**VARIABLES**
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 3, 4], S_00001_00003)
{2..4}
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 3, 1], S_00001_00003)
{1..3}
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 2, 5], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux24, [1,2,5,5])
**VARIABLES**
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 2, 4], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux25, [1,2,4,4])
**VARIABLES**
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 4, 3], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux26, [1,1,3,4])
**VARIABLES**
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 4, 5], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux27, [1,1,4,5])
**VARIABLES**
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 4, 2], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux28, [1,2,4,4])
**VARIABLES**
DISCRETE aux29 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 3, 5], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux29, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux30 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 3, 2], S_00001_00003)
{1..3}
DISCRETE aux31 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 3, 4], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux31, [1,1,3,4])
**VARIABLES**
DISCRETE aux32 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 5, 3], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux32, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux33 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 5, 4], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux33, [1,1,4,5])
**VARIABLES**
DISCRETE aux34 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 5, 2], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux34, [1,2,5,5])
**VARIABLES**
DISCRETE aux35 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 2], S_00001_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux35, [2,2,4,5])
**VARIABLES**
DISCRETE aux36 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 1], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux36, [1,1,4,5])
**VARIABLES**
DISCRETE aux37 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 2], S_00001_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux37, [2,3,5,5])
**VARIABLES**
DISCRETE aux38 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 1], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux38, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 4], S_00001_00003)
{3..5}
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 2, 1], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux40, [1,2,5,5])
**VARIABLES**
DISCRETE aux41 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 2, 3], S_00001_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux41, [2,3,5,5])
**VARIABLES**
DISCRETE aux42 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 2, 4], S_00001_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux42, [2,2,4,5])
**VARIABLES**
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 3], S_00001_00003)
{3..5}
DISCRETE aux44 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 1, 4], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux44, [1,1,4,5])
**VARIABLES**
DISCRETE aux45 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 1, 3], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux45, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux46 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 1, 2], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux46, [1,2,5,5])
**VARIABLES**
DISCRETE aux47 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 5], S_00001_00003)
{3..5}
DISCRETE aux48 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 1], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux48, [1,1,4,5])
**VARIABLES**
DISCRETE aux49 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 3], S_00001_00003)
{3..5}
DISCRETE aux50 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 2], S_00001_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux50, [2,2,4,5])
**VARIABLES**
DISCRETE aux51 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 2, 1], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux51, [1,2,4,4])
**VARIABLES**
DISCRETE aux52 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 1, 3], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux52, [1,1,3,4])
**VARIABLES**
DISCRETE aux53 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 1, 2], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux53, [1,2,4,4])
**VARIABLES**
DISCRETE aux54 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 1, 5], S_00001_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux54, [1,1,4,5])
**VARIABLES**
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 2], S_00001_00003)
{2..4}
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 1], S_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux56, [1,1,3,4])
**VARIABLES**
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 2, 5], S_00001_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux57, [2,2,4,5])
**VARIABLES**
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 2, 3], S_00001_00003)
{2..4}
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 3, 4], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux59, [1,1,3,4])
**VARIABLES**
DISCRETE aux60 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 3, 2], S_00003_00001)
{1..3}
DISCRETE aux61 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 3, 5], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux61, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 4, 5], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux62, [1,1,4,5])
**VARIABLES**
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 4, 3], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux63, [1,1,3,4])
**VARIABLES**
DISCRETE aux64 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 4, 2], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux64, [1,2,4,4])
**VARIABLES**
DISCRETE aux65 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 2, 4], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux65, [1,2,4,4])
**VARIABLES**
DISCRETE aux66 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 2, 5], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux66, [1,2,5,5])
**VARIABLES**
DISCRETE aux67 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 5, 2], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux67, [1,2,5,5])
**VARIABLES**
DISCRETE aux68 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 5, 3], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux68, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux69 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 5, 4], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux69, [1,1,4,5])
**VARIABLES**
DISCRETE aux70 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 5, 3], S_00003_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux70, [2,3,5,5])
**VARIABLES**
DISCRETE aux71 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 5, 4], S_00003_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux71, [2,2,4,5])
**VARIABLES**
DISCRETE aux72 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 5, 1], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux72, [1,2,5,5])
**VARIABLES**
DISCRETE aux73 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 4, 1], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux73, [1,2,4,4])
**VARIABLES**
DISCRETE aux74 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 4, 3], S_00003_00001)
{2..4}
DISCRETE aux75 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 4, 5], S_00003_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux75, [2,2,4,5])
**VARIABLES**
DISCRETE aux76 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 3, 5], S_00003_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux76, [2,3,5,5])
**VARIABLES**
DISCRETE aux77 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 3, 4], S_00003_00001)
{2..4}
DISCRETE aux78 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 3, 1], S_00003_00001)
{1..3}
DISCRETE aux79 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 1, 4], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux79, [1,2,4,4])
**VARIABLES**
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 1, 3], S_00003_00001)
{1..3}
DISCRETE aux81 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 1, 5], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux81, [1,2,5,5])
**VARIABLES**
DISCRETE aux82 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 5], S_00003_00001)
{3..5}
DISCRETE aux83 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 2], S_00003_00001)
{2..4}
DISCRETE aux84 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 1], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux84, [1,1,3,4])
**VARIABLES**
DISCRETE aux85 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 4], S_00003_00001)
{3..5}
DISCRETE aux86 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 1], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux86, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux87 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 2], S_00003_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux87, [2,3,5,5])
**VARIABLES**
DISCRETE aux88 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 1, 2], S_00003_00001)
{1..3}
DISCRETE aux89 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 1, 4], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux89, [1,1,3,4])
**VARIABLES**
DISCRETE aux90 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 1, 5], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux90, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux91 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 2, 5], S_00003_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux91, [2,3,5,5])
**VARIABLES**
DISCRETE aux92 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 2, 4], S_00003_00001)
{2..4}
DISCRETE aux93 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 2, 1], S_00003_00001)
{1..3}
DISCRETE aux94 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 1, 5], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux94, [1,1,4,5])
**VARIABLES**
DISCRETE aux95 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 1, 3], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux95, [1,1,3,4])
**VARIABLES**
DISCRETE aux96 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 1, 2], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux96, [1,2,4,4])
**VARIABLES**
DISCRETE aux97 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 1], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux97, [1,1,3,4])
**VARIABLES**
DISCRETE aux98 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 2], S_00003_00001)
{2..4}
DISCRETE aux99 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 5], S_00003_00001)
{3..5}
DISCRETE aux100 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 2, 1], S_00003_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux100, [1,2,4,4])
**VARIABLES**
DISCRETE aux101 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 2, 3], S_00003_00001)
{2..4}
DISCRETE aux102 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 2, 5], S_00003_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux102, [2,2,4,5])
**VARIABLES**
DISCRETE aux103 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 3], S_00003_00001)
{3..5}
DISCRETE aux104 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 2], S_00003_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux104, [2,2,4,5])
**VARIABLES**
DISCRETE aux105 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 1], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux105, [1,1,4,5])
**VARIABLES**
DISCRETE aux106 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 4], S_00003_00001)
{3..5}
DISCRETE aux107 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 1], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux107, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux108 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 2], S_00003_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux108, [2,3,5,5])
**VARIABLES**
DISCRETE aux109 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 3], S_00003_00001)
{3..5}
DISCRETE aux110 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 2], S_00003_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux110, [2,2,4,5])
**VARIABLES**
DISCRETE aux111 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 1], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux111, [1,1,4,5])
**VARIABLES**
DISCRETE aux112 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 1, 2], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux112, [1,2,5,5])
**VARIABLES**
DISCRETE aux113 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 1, 3], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux113, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux114 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 1, 4], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux114, [1,1,4,5])
**VARIABLES**
DISCRETE aux115 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 2, 4], S_00003_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux115, [2,2,4,5])
**VARIABLES**
DISCRETE aux116 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 2, 3], S_00003_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux116, [2,3,5,5])
**VARIABLES**
DISCRETE aux117 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 2, 1], S_00003_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux117, [1,2,5,5])
**VARIABLES**
DISCRETE aux118 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 3], S_00002_00002)
{3..4}
DISCRETE aux119 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 3], S_00002_00001)
{3..4}
DISCRETE aux120 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 1], S_00002_00002)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux120, [1,1,3,3])
**VARIABLES**
DISCRETE aux121 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 1], S_00002_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux121, [1,1,3,3])
**VARIABLES**
DISCRETE aux122 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 4], S_00002_00002)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux122, [2,2,4,4])
**VARIABLES**
DISCRETE aux123 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 4], S_00002_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux123, [2,2,4,4])
**VARIABLES**
DISCRETE aux124 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 3], S_00002_00002)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux124, [1,1,3,3])
**VARIABLES**
DISCRETE aux125 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 3], S_00002_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux125, [1,1,3,3])
**VARIABLES**
DISCRETE aux126 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 2], S_00002_00001)
{2..3}
DISCRETE aux127 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 2], S_00002_00002)
{2..3}
DISCRETE aux128 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 3], S_00001_00002)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux128, [3,3,5,5])
**VARIABLES**
DISCRETE aux129 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 4], S_00001_00002)
{3..4}
DISCRETE aux130 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 5], S_00001_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux130, [1,1,5,5])
**VARIABLES**
DISCRETE aux131 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 1], S_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux131, [1,1,4,4])
**VARIABLES**
DISCRETE aux132 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 5], S_00002_00002)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux132, [2,2,5,5])
**VARIABLES**
DISCRETE aux133 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 1], S_00002_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux133, [1,1,5,5])
**VARIABLES**
DISCRETE aux134 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 5], S_00002_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux134, [2,2,5,5])
**VARIABLES**
DISCRETE aux135 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 1], S_00002_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux135, [1,1,5,5])
**VARIABLES**
DISCRETE aux136 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 1], S_00001_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux136, [1,1,5,5])
**VARIABLES**
DISCRETE aux137 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 5], S_00001_00002)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux137, [2,2,5,5])
**VARIABLES**
DISCRETE aux138 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 5], S_00001_00002)
{4..5}
DISCRETE aux139 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 2], S_00001_00002)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux139, [2,2,5,5])
**VARIABLES**
DISCRETE aux140 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 2], S_00002_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux140, [2,2,5,5])
**VARIABLES**
DISCRETE aux141 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 2], S_00002_00002)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux141, [2,2,5,5])
**VARIABLES**
DISCRETE aux142 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 5], S_00002_00002)
{4..5}
DISCRETE aux143 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 5], S_00002_00001)
{4..5}
DISCRETE aux144 #Active-CSE: 5 occurrences of this expression or equivalent: ElementOne([1, 2], S_00002_00001)
{1..2}
DISCRETE aux145 #Active-CSE: 5 occurrences of this expression or equivalent: ElementOne([1, 2], S_00002_00002)
{1..2}
DISCRETE aux146 #Active-CSE: 5 occurrences of this expression or equivalent: ElementOne([1, 2], S_00001_00002)
{1..2}
DISCRETE aux147 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1], S_00002_00002)
{1..2}
DISCRETE aux148 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 4], S_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux148, [1,1,4,4])
**VARIABLES**
DISCRETE aux149 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1], S_00002_00001)
{1..2}
DISCRETE aux150 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1], S_00001_00002)
{1..2}
DISCRETE aux151 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 4], S_00002_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux151, [1,1,4,4])
**VARIABLES**
DISCRETE aux152 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 4], S_00002_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux152, [1,1,4,4])
**VARIABLES**
DISCRETE aux153 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 3], S_00001_00002)
{3..4}
DISCRETE aux154 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 4], S_00001_00002)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux154, [2,2,4,4])
**VARIABLES**
DISCRETE aux155 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 1], S_00001_00002)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux155, [1,1,3,3])
**VARIABLES**
DISCRETE aux156 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 3], S_00002_00002)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux156, [3,3,5,5])
**VARIABLES**
DISCRETE aux157 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 2], S_00001_00002)
{2..3}
DISCRETE aux158 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 3], S_00001_00002)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux158, [1,1,3,3])
**VARIABLES**
DISCRETE aux159 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 1], S_00002_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux159, [1,1,4,4])
**VARIABLES**
DISCRETE aux160 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 5], S_00002_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux160, [1,1,5,5])
**VARIABLES**
DISCRETE aux161 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 5], S_00002_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux161, [1,1,5,5])
**VARIABLES**
DISCRETE aux162 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 1], S_00002_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux162, [1,1,4,4])
**VARIABLES**
DISCRETE aux163 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 4], S_00002_00002)
{3..4}
DISCRETE aux164 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 4], S_00002_00001)
{3..4}
DISCRETE aux165 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 3], S_00002_00001)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux165, [3,3,5,5])
**VARIABLES**
DISCRETE aux166 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 3], S_00002_00001)
{2..3}
DISCRETE aux167 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 5], S_00001_00002)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux167, [3,3,5,5])
**VARIABLES**
DISCRETE aux168 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 2], S_00001_00002)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux168, [2,2,4,4])
**VARIABLES**
DISCRETE aux169 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 3], S_00002_00002)
{2..3}
DISCRETE aux170 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 2], S_00002_00002)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux170, [2,2,4,4])
**VARIABLES**
DISCRETE aux171 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 2], S_00002_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux171, [2,2,4,4])
**VARIABLES**
DISCRETE aux172 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 5], S_00002_00001)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux172, [3,3,5,5])
**VARIABLES**
DISCRETE aux173 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 3], S_00001_00002)
{2..3}
DISCRETE aux174 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 5], S_00002_00002)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux174, [3,3,5,5])
**VARIABLES**
DISCRETE aux175 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 4], S_00002_00002)
{4..5}
DISCRETE aux176 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 4], S_00002_00001)
{4..5}
DISCRETE aux177 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 4], S_00001_00002)
{4..5}
DISCRETE aux178 #ElementOne([1, S_00001_00002], S_00002_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001], (5*S_00001_00002 + -4))
{1..2}
DISCRETE aux179 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002], (-5 + S_00002_00001 + 5*S_00002_00002)) --- ElementOne([S_00002_00001, S_00002_00002], S_00002_00001)
{1..2}
DISCRETE aux180 #ElementOne([S_00003_00001, S_00003_00002], S_00002_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003], (-5 + S_00003_00001 + 5*S_00003_00002))
{1..4}
DISCRETE aux181 #ElementOne([S_00004_00001, S_00004_00002], S_00002_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], (S_00004_00001 + 5*S_00004_00002 + -5))
{1..5}
DISCRETE aux182 #ElementOne([S_00005_00001, S_00005_00002], S_00002_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (S_00005_00001 + 5*S_00005_00002 + -5))
{1..5}
DISCRETE aux183 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001], (5*S_00001_00003 + -4)) --- ElementOne([1, S_00001_00002, S_00001_00003], S_00003_00001)
{1..3}
DISCRETE aux184 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003], S_00003_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002], (-5 + S_00002_00001 + 5*S_00002_00003))
{1..4}
DISCRETE aux185 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003], S_00003_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003], (-5 + S_00003_00001 + 5*S_00003_00003))
{1..5}
DISCRETE aux186 #ElementOne([S_00004_00001, S_00004_00002, S_00004_00003], S_00003_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], (S_00004_00001 + 5*S_00004_00003 + -5))
{1..5}
DISCRETE aux187 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (S_00005_00001 + 5*S_00005_00003 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003], S_00003_00001)
{1..5}
DISCRETE aux188 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001], (5*S_00001_00004 + -4)) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00004_00001)
{1..4}
DISCRETE aux189 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00004_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002], (-5 + S_00002_00001 + 5*S_00002_00004))
{1..4}
DISCRETE aux190 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003], (-5 + S_00003_00001 + 5*S_00003_00004)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00004_00001)
{1..5}
DISCRETE aux191 #ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00004_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], (S_00004_00001 + 5*S_00004_00004 + -5))
{1..5}
DISCRETE aux192 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (S_00005_00001 + 5*S_00005_00004 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], S_00004_00001)
{1..5}
DISCRETE aux193 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001], (5*S_00001_00005 + -4)) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00005_00001)
{1..5}
DISCRETE aux194 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00005_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002], (-5 + S_00002_00001 + 5*S_00002_00005))
{1..2}
DISCRETE aux195 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003], (-5 + S_00003_00001 + 5*S_00003_00005)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00005_00001)
{1..5}
DISCRETE aux196 #ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00005_00001) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], (S_00004_00001 + 5*S_00004_00005 + -5))
{1..5}
DISCRETE aux197 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (S_00005_00001 + 5*S_00005_00005 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00005_00001)
{1..5}
DISCRETE aux198 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002], (-5 + 5*S_00002_00001 + S_00002_00002)) --- ElementOne([S_00002_00001, S_00002_00002], S_00001_00002)
{1..2}
DISCRETE aux199 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], (-5 + 5*S_00003_00001 + S_00003_00002)) --- ElementOne([S_00003_00001, S_00003_00002], S_00001_00002)
{1..4}
DISCRETE aux200 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], (5*S_00004_00001 + S_00004_00002 + -5)) --- ElementOne([S_00004_00001, S_00004_00002], S_00001_00002)
{1..5}
DISCRETE aux201 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (5*S_00005_00001 + S_00005_00002 + -5)) --- ElementOne([S_00005_00001, S_00005_00002], S_00001_00002)
{1..5}
DISCRETE aux202 #ElementOne([1, S_00001_00002], S_00002_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002], (6*S_00001_00002 + -5))
{1..2}
DISCRETE aux203 #ElementOne([S_00002_00001, S_00002_00002], S_00002_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002], (-5 + 6*S_00002_00002))
{1..2}
DISCRETE aux204 #ElementOne([S_00003_00001, S_00003_00002], S_00002_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (-5 + 6*S_00003_00002))
{1..4}
DISCRETE aux205 #ElementOne([S_00004_00001, S_00004_00002], S_00002_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (6*S_00004_00002 + -5))
{1..5}
DISCRETE aux206 #ElementOne([S_00005_00001, S_00005_00002], S_00002_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (6*S_00005_00002 + -5))
{1..5}
DISCRETE aux207 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002], (S_00001_00002 + 5*S_00001_00003 + -5)) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00003_00002)
{1..4}
DISCRETE aux208 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00003_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002], (-5 + S_00002_00002 + 5*S_00002_00003))
{1..4}
DISCRETE aux209 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00003_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], (-5 + S_00003_00002 + 5*S_00003_00003))
{1..5}
DISCRETE aux210 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (S_00004_00002 + 5*S_00004_00003 + -5)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00003_00002)
{1..5}
DISCRETE aux211 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (S_00005_00002 + 5*S_00005_00003 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], S_00003_00002)
{1..5}
DISCRETE aux212 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002], (S_00001_00002 + 5*S_00001_00004 + -5)) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00004_00002)
{1..5}
DISCRETE aux213 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00004_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002], (-5 + S_00002_00002 + 5*S_00002_00004))
{1..2}
DISCRETE aux214 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00004_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], (-5 + S_00003_00002 + 5*S_00003_00004))
{1..5}
DISCRETE aux215 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (S_00004_00002 + 5*S_00004_00004 + -5)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00004_00002)
{1..5}
DISCRETE aux216 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (S_00005_00002 + 5*S_00005_00004 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00004_00002)
{1..5}
DISCRETE aux217 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002], (S_00001_00002 + 5*S_00001_00005 + -5)) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00005_00002)
{1..5}
DISCRETE aux218 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00005_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002], (-5 + S_00002_00002 + 5*S_00002_00005))
{1..2}
DISCRETE aux219 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00005_00002) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], (-5 + S_00003_00002 + 5*S_00003_00005))
{1..5}
DISCRETE aux220 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (S_00004_00002 + 5*S_00004_00005 + -5)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00005_00002)
{1..5}
DISCRETE aux221 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (S_00005_00002 + 5*S_00005_00005 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00005_00002)
{1..5}
DISCRETE aux222 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], (-5 + 5*S_00002_00001 + S_00002_00003)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003], S_00001_00003)
{1..4}
DISCRETE aux223 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], (-5 + 5*S_00003_00001 + S_00003_00003)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003], S_00001_00003)
{1..5}
DISCRETE aux224 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], (5*S_00004_00001 + S_00004_00003 + -5)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003], S_00001_00003)
{1..5}
DISCRETE aux225 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (5*S_00005_00001 + S_00005_00003 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003], S_00001_00003)
{1..5}
DISCRETE aux226 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00002_00003) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003], (5*S_00001_00002 + S_00001_00003 + -5))
{1..4}
DISCRETE aux227 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], (-5 + 5*S_00002_00002 + S_00002_00003)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00002_00003)
{1..4}
DISCRETE aux228 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00002_00003) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], (-5 + 5*S_00003_00002 + S_00003_00003))
{1..5}
DISCRETE aux229 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (5*S_00004_00002 + S_00004_00003 + -5)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00002_00003)
{1..5}
DISCRETE aux230 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (5*S_00005_00002 + S_00005_00003 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], S_00002_00003)
{1..5}
DISCRETE aux231 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00003_00003) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003], (6*S_00001_00003 + -5))
{1..5}
DISCRETE aux232 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (-5 + 6*S_00002_00003)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00003_00003)
{1..5}
DISCRETE aux233 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00003_00003) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (-5 + 6*S_00003_00003))
{1..5}
DISCRETE aux234 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (6*S_00004_00003 + -5)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00003_00003)
{1..5}
DISCRETE aux235 #ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00003_00003) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (6*S_00005_00003 + -5))
{1..5}
DISCRETE aux236 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003], (S_00001_00003 + 5*S_00001_00004 + -5)) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00004_00003)
{1..5}
DISCRETE aux237 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00004_00003) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (-5 + S_00002_00003 + 5*S_00002_00004))
{1..5}
DISCRETE aux238 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (-5 + S_00003_00003 + 5*S_00003_00004)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00004_00003)
{1..5}
DISCRETE aux239 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (S_00004_00003 + 5*S_00004_00004 + -5)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00004_00003)
{1..5}
DISCRETE aux240 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (S_00005_00003 + 5*S_00005_00004 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00004_00003)
{1..5}
DISCRETE aux241 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003], (S_00001_00003 + 5*S_00001_00005 + -5)) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00005_00003)
{1..5}
DISCRETE aux242 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], (-5 + S_00002_00003 + 5*S_00002_00005)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00005_00003)
{1..4}
DISCRETE aux243 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (-5 + S_00003_00003 + 5*S_00003_00005)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00005_00003)
{1..5}
DISCRETE aux244 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (S_00004_00003 + 5*S_00004_00005 + -5)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00005_00003)
{1..5}
DISCRETE aux245 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (S_00005_00003 + 5*S_00005_00005 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00005_00003)
{1..5}
DISCRETE aux246 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], (-5 + 5*S_00002_00001 + S_00002_00004)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00001_00004)
{1..4}
DISCRETE aux247 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00001_00004) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], (-5 + 5*S_00003_00001 + S_00003_00004))
{1..5}
DISCRETE aux248 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], (5*S_00004_00001 + S_00004_00004 + -5)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00001_00004)
{1..5}
DISCRETE aux249 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (5*S_00005_00001 + S_00005_00004 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], S_00001_00004)
{1..5}
DISCRETE aux250 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00002_00004) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], (5*S_00001_00002 + S_00001_00004 + -5))
{1..4}
DISCRETE aux251 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], (-5 + 5*S_00002_00002 + S_00002_00004)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00002_00004)
{1..4}
DISCRETE aux252 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00002_00004) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], (-5 + 5*S_00003_00002 + S_00003_00004))
{1..5}
DISCRETE aux253 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (5*S_00004_00002 + S_00004_00004 + -5)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00002_00004)
{1..5}
DISCRETE aux254 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (5*S_00005_00002 + S_00005_00004 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], S_00002_00004)
{1..5}
DISCRETE aux255 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], (5*S_00001_00003 + S_00001_00004 + -5)) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00003_00004)
{1..5}
DISCRETE aux256 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (-5 + 5*S_00002_00003 + S_00002_00004)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00003_00004)
{1..5}
DISCRETE aux257 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (-5 + 5*S_00003_00003 + S_00003_00004)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00003_00004)
{1..5}
DISCRETE aux258 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (5*S_00004_00003 + S_00004_00004 + -5)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00003_00004)
{1..5}
DISCRETE aux259 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (5*S_00005_00003 + S_00005_00004 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00003_00004)
{1..5}
DISCRETE aux260 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00004_00004) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (6*S_00001_00004 + -5))
{1..5}
DISCRETE aux261 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00004_00004) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], (-5 + 6*S_00002_00004))
{1..5}
DISCRETE aux262 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00004_00004) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (-5 + 6*S_00003_00004))
{1..5}
DISCRETE aux263 #ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00004_00004) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (6*S_00004_00004 + -5))
{1..5}
DISCRETE aux264 #ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00004_00004) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (6*S_00005_00004 + -5))
{1..5}
DISCRETE aux265 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], (S_00001_00004 + 5*S_00001_00005 + -5)) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00005_00004)
{1..5}
DISCRETE aux266 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], (-5 + S_00002_00004 + 5*S_00002_00005)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00005_00004)
{1..5}
DISCRETE aux267 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (-5 + S_00003_00004 + 5*S_00003_00005)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00005_00004)
{1..5}
DISCRETE aux268 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (S_00004_00004 + 5*S_00004_00005 + -5)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00005_00004)
{1..5}
DISCRETE aux269 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (S_00005_00004 + 5*S_00005_00005 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00005_00004)
{1..5}
DISCRETE aux270 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], (-5 + 5*S_00002_00001 + S_00002_00005)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00001_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux270, [1,2,4,5])
**VARIABLES**
DISCRETE aux271 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00001_00005) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], (-5 + 5*S_00003_00001 + S_00003_00005))
{1..5}
DISCRETE aux272 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], (5*S_00004_00001 + S_00004_00005 + -5)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00001_00005)
{1..5}
DISCRETE aux273 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (5*S_00005_00001 + S_00005_00005 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00001_00005)
{1..5}
DISCRETE aux274 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00002_00005) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], (5*S_00001_00002 + S_00001_00005 + -5))
{1..5}
DISCRETE aux275 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], (-5 + 5*S_00002_00002 + S_00002_00005)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00002_00005)
{1..5}
DISCRETE aux276 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00002_00005) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], (-5 + 5*S_00003_00002 + S_00003_00005))
{1..5}
DISCRETE aux277 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (5*S_00004_00002 + S_00004_00005 + -5)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00002_00005)
{1..5}
DISCRETE aux278 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (5*S_00005_00002 + S_00005_00005 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00002_00005)
{1..5}
DISCRETE aux279 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], (5*S_00001_00003 + S_00001_00005 + -5)) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00003_00005)
{1..5}
DISCRETE aux280 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], (-5 + 5*S_00002_00003 + S_00002_00005)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00003_00005)
{1..5}
DISCRETE aux281 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (-5 + 5*S_00003_00003 + S_00003_00005)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00003_00005)
{1..5}
DISCRETE aux282 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (5*S_00004_00003 + S_00004_00005 + -5)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00003_00005)
{1..5}
DISCRETE aux283 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (5*S_00005_00003 + S_00005_00005 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00003_00005)
{1..5}
DISCRETE aux284 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], (5*S_00001_00004 + S_00001_00005 + -5)) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00004_00005)
{1..5}
DISCRETE aux285 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], (-5 + 5*S_00002_00004 + S_00002_00005)) --- ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00004_00005)
{1..5}
DISCRETE aux286 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (-5 + 5*S_00003_00004 + S_00003_00005)) --- ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00004_00005)
{1..5}
DISCRETE aux287 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (5*S_00004_00004 + S_00004_00005 + -5)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00004_00005)
{1..5}
DISCRETE aux288 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (5*S_00005_00004 + S_00005_00005 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00004_00005)
{1..5}
DISCRETE aux289 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (6*S_00001_00005 + -5)) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00005_00005)
{1..5}
DISCRETE aux290 #ElementOne([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00005_00005) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (-5 + 6*S_00002_00005))
{1..5}
DISCRETE aux291 #ElementOne([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00005_00005) --- ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (-5 + 6*S_00003_00005))
{1..5}
DISCRETE aux292 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (6*S_00004_00005 + -5)) --- ElementOne([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00005_00005)
{1..5}
DISCRETE aux293 #ElementOne([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], (6*S_00005_00005 + -5)) --- ElementOne([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00005_00005)
{1..5}
DISCRETE aux294 #(-5 + 6*S_00002_00001)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux294, [1,1,7,7])
**VARIABLES**
DISCRETE aux295 #(-5 + 6*S_00003_00001)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux295, [1,1,13,13])
**VARIABLES**
DISCRETE aux296 #(6*S_00004_00001 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux296, [1,1,7,7,19,19])
**VARIABLES**
DISCRETE aux297 #(6*S_00005_00001 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux297, [1,1,25,25])
**VARIABLES**
DISCRETE aux298 #ElementOne([1, 2, 3], S_00001_00003)
{1..3}
DISCRETE aux299 #ElementOne([1, 2, 3, 5, 4], S_00001_00005)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux299, [1,1,4,4])
**VARIABLES**
DISCRETE aux300 #ElementOne([1, 2, 3, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux300, [1,3,5,5])
**VARIABLES**
DISCRETE aux301 #ElementOne([1, 2, 3, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux301, [1,3,5,5])
**VARIABLES**
DISCRETE aux302 #ElementOne([1, 2, 3, 5, 4], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux302, [1,2,4,5])
**VARIABLES**
DISCRETE aux303 #ElementOne([1, 2, 3, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux303, [1,3,5,5])
**VARIABLES**
DISCRETE aux304 #ElementOne([1, 2, 3], S_00003_00001)
{1..3}
DISCRETE aux305 #ElementOne([1, 2, 3, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux305, [1,3,5,5])
**VARIABLES**
DISCRETE aux306 #ElementOne([1, 2, 3, 5, 4], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux306, [1,1,3,5])
**VARIABLES**
DISCRETE aux307 #ElementOne([1, 2, 3, 5, 4], S_00003_00005)
{1..5}
DISCRETE aux308 #ElementOne([1, 2, 3, 5, 4], S_00003_00004)
{1..5}
DISCRETE aux309 #ElementOne([1, 2, 3, 5, 4], S_00005_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux309, [1,1,4,4])
**VARIABLES**
DISCRETE aux310 #ElementOne([1, 2, 3, 5, 4], S_00005_00002)
{1..5}
DISCRETE aux311 #ElementOne([1, 2, 3, 5, 4], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux311, [1,1,3,5])
**VARIABLES**
DISCRETE aux312 #ElementOne([1, 2, 3, 5, 4], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux312, [1,1,3,5])
**VARIABLES**
DISCRETE aux313 #ElementOne([1, 2, 3, 5, 4], S_00005_00004)
{1..5}
DISCRETE aux314 #ElementOne([1, 2, 3, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux314, [1,3,5,5])
**VARIABLES**
DISCRETE aux315 #ElementOne([1, 2, 3, 5, 4], S_00004_00002)
{1..5}
DISCRETE aux316 #ElementOne([1, 2, 3, 5, 4], S_00004_00003)
{1..5}
DISCRETE aux317 #ElementOne([1, 2, 3, 5, 4], S_00004_00005)
{1..5}
DISCRETE aux318 #ElementOne([1, 2, 3, 5, 4], S_00004_00004)
{1..5}
DISCRETE aux319 #ElementOne([1, 2, 4, 3], S_00001_00004)
{1..4}
DISCRETE aux320 #ElementOne([1, 2, 4, 3, 5], S_00001_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux320, [1,1,5,5])
**VARIABLES**
DISCRETE aux321 #ElementOne([1, 2, 4, 3], S_00002_00004)
{1..4}
DISCRETE aux322 #ElementOne([1, 2, 4, 3], S_00002_00003)
{1..4}
DISCRETE aux323 #ElementOne([1, 2, 4, 3, 5], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux323, [1,3,5,5])
**VARIABLES**
DISCRETE aux324 #ElementOne([1, 2, 4, 3], S_00004_00001)
{1..4}
DISCRETE aux325 #ElementOne([1, 2, 4, 3, 5], S_00004_00002)
{1..5}
DISCRETE aux326 #ElementOne([1, 2, 4, 3, 5], S_00004_00004)
{1..5}
DISCRETE aux327 #ElementOne([1, 2, 4, 3, 5], S_00004_00003)
{1..5}
DISCRETE aux328 #ElementOne([1, 2, 4, 3, 5], S_00004_00005)
{1..5}
DISCRETE aux329 #ElementOne([1, 2, 4, 3], S_00003_00002)
{1..4}
DISCRETE aux330 #ElementOne([1, 2, 4, 3, 5], S_00003_00004)
{1..5}
DISCRETE aux331 #ElementOne([1, 2, 4, 3, 5], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux331, [1,1,3,5])
**VARIABLES**
DISCRETE aux332 #ElementOne([1, 2, 4, 3, 5], S_00003_00005)
{1..5}
DISCRETE aux333 #ElementOne([1, 2, 4, 3, 5], S_00005_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux333, [1,1,5,5])
**VARIABLES**
DISCRETE aux334 #ElementOne([1, 2, 4, 3, 5], S_00005_00002)
{1..5}
DISCRETE aux335 #ElementOne([1, 2, 4, 3, 5], S_00005_00004)
{1..5}
DISCRETE aux336 #ElementOne([1, 2, 4, 3, 5], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux336, [1,1,3,5])
**VARIABLES**
DISCRETE aux337 #ElementOne([1, 2, 4, 3, 5], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux337, [1,1,3,5])
**VARIABLES**
DISCRETE aux338 #ElementOne([1, 2, 5, 3], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux338, [1,3,5,5])
**VARIABLES**
DISCRETE aux339 #ElementOne([1, 2, 5, 3, 4], S_00001_00005)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux339, [1,1,4,4])
**VARIABLES**
DISCRETE aux340 #ElementOne([1, 2, 5, 3], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux340, [1,3,5,5])
**VARIABLES**
DISCRETE aux341 #ElementOne([1, 2, 5, 3, 4], S_00002_00005)
{1..4}
DISCRETE aux342 #ElementOne([1, 2, 5, 3], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux342, [1,3,5,5])
**VARIABLES**
DISCRETE aux343 #ElementOne([1, 2, 5, 3], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux343, [1,3,5,5])
**VARIABLES**
DISCRETE aux344 #ElementOne([1, 2, 5, 3, 4], S_00004_00002)
{1..5}
DISCRETE aux345 #ElementOne([1, 2, 5, 3, 4], S_00004_00004)
{1..5}
DISCRETE aux346 #ElementOne([1, 2, 5, 3, 4], S_00004_00005)
{1..5}
DISCRETE aux347 #ElementOne([1, 2, 5, 3, 4], S_00004_00003)
{1..5}
DISCRETE aux348 #ElementOne([1, 2, 5, 3, 4], S_00005_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux348, [1,1,4,4])
**VARIABLES**
DISCRETE aux349 #ElementOne([1, 2, 5, 3, 4], S_00005_00002)
{1..5}
DISCRETE aux350 #ElementOne([1, 2, 5, 3, 4], S_00005_00004)
{1..5}
DISCRETE aux351 #ElementOne([1, 2, 5, 3, 4], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux351, [1,1,3,5])
**VARIABLES**
DISCRETE aux352 #ElementOne([1, 2, 5, 3, 4], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux352, [1,1,3,5])
**VARIABLES**
DISCRETE aux353 #ElementOne([1, 2, 5, 3], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux353, [1,3,5,5])
**VARIABLES**
DISCRETE aux354 #ElementOne([1, 2, 5, 3, 4], S_00003_00004)
{1..5}
DISCRETE aux355 #ElementOne([1, 2, 5, 3, 4], S_00003_00005)
{1..5}
DISCRETE aux356 #ElementOne([1, 2, 5, 3, 4], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux356, [1,1,3,5])
**VARIABLES**
DISCRETE aux357 #ElementOne([1, 2, 4, 5, 3], S_00001_00005)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux357, [1,1,3,3])
**VARIABLES**
DISCRETE aux358 #ElementOne([1, 2, 4, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux358, [1,2,4,5])
**VARIABLES**
DISCRETE aux359 #ElementOne([1, 2, 4, 5, 3], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux359, [1,3,5,5])
**VARIABLES**
DISCRETE aux360 #ElementOne([1, 2, 4, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux360, [1,2,4,5])
**VARIABLES**
DISCRETE aux361 #ElementOne([1, 2, 4, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux361, [1,2,4,5])
**VARIABLES**
DISCRETE aux362 #ElementOne([1, 2, 4, 5, 3], S_00005_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux362, [1,1,3,3])
**VARIABLES**
DISCRETE aux363 #ElementOne([1, 2, 4, 5, 3], S_00005_00002)
{1..5}
DISCRETE aux364 #ElementOne([1, 2, 4, 5, 3], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux364, [1,1,3,5])
**VARIABLES**
DISCRETE aux365 #ElementOne([1, 2, 4, 5, 3], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux365, [1,1,3,5])
**VARIABLES**
DISCRETE aux366 #ElementOne([1, 2, 4, 5, 3], S_00005_00004)
{1..5}
DISCRETE aux367 #ElementOne([1, 2, 4, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux367, [1,2,4,5])
**VARIABLES**
DISCRETE aux368 #ElementOne([1, 2, 4, 5, 3], S_00003_00005)
{1..5}
DISCRETE aux369 #ElementOne([1, 2, 4, 5, 3], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux369, [1,1,3,5])
**VARIABLES**
DISCRETE aux370 #ElementOne([1, 2, 4, 5, 3], S_00003_00004)
{1..5}
DISCRETE aux371 #ElementOne([1, 2, 4, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux371, [1,2,4,5])
**VARIABLES**
DISCRETE aux372 #ElementOne([1, 2, 4, 5, 3], S_00004_00002)
{1..5}
DISCRETE aux373 #ElementOne([1, 2, 4, 5, 3], S_00004_00005)
{1..5}
DISCRETE aux374 #ElementOne([1, 2, 4, 5, 3], S_00004_00003)
{1..5}
DISCRETE aux375 #ElementOne([1, 2, 4, 5, 3], S_00004_00004)
{1..5}
DISCRETE aux376 #ElementOne([1, 2, 5, 4, 3], S_00001_00005)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux376, [1,1,3,3])
**VARIABLES**
DISCRETE aux377 #ElementOne([1, 2, 5, 4], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux377, [1,2,4,5])
**VARIABLES**
DISCRETE aux378 #ElementOne([1, 2, 5, 4, 3], S_00002_00005)
{1..4}
DISCRETE aux379 #ElementOne([1, 2, 5, 4], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux379, [1,2,4,5])
**VARIABLES**
DISCRETE aux380 #ElementOne([1, 2, 5, 4], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux380, [1,2,4,5])
**VARIABLES**
DISCRETE aux381 #ElementOne([1, 2, 5, 4, 3], S_00005_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux381, [1,1,3,3])
**VARIABLES**
DISCRETE aux382 #ElementOne([1, 2, 5, 4, 3], S_00005_00002)
{1..5}
DISCRETE aux383 #ElementOne([1, 2, 5, 4, 3], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux383, [1,1,3,5])
**VARIABLES**
DISCRETE aux384 #ElementOne([1, 2, 5, 4, 3], S_00005_00004)
{1..5}
DISCRETE aux385 #ElementOne([1, 2, 5, 4, 3], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux385, [1,1,3,5])
**VARIABLES**
DISCRETE aux386 #ElementOne([1, 2, 5, 4], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux386, [1,2,4,5])
**VARIABLES**
DISCRETE aux387 #ElementOne([1, 2, 5, 4, 3], S_00004_00002)
{1..5}
DISCRETE aux388 #ElementOne([1, 2, 5, 4, 3], S_00004_00005)
{1..5}
DISCRETE aux389 #ElementOne([1, 2, 5, 4, 3], S_00004_00004)
{1..5}
DISCRETE aux390 #ElementOne([1, 2, 5, 4, 3], S_00004_00003)
{1..5}
DISCRETE aux391 #ElementOne([1, 2, 5, 4], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux391, [1,2,4,5])
**VARIABLES**
DISCRETE aux392 #ElementOne([1, 2, 5, 4, 3], S_00003_00005)
{1..5}
DISCRETE aux393 #ElementOne([1, 2, 5, 4, 3], S_00003_00004)
{1..5}
DISCRETE aux394 #ElementOne([1, 2, 5, 4, 3], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux394, [1,1,3,5])
**VARIABLES**
DISCRETE aux395 #ElementOne([1, 3, 2, 4], S_00001_00004)
{1..4}
DISCRETE aux396 #ElementOne([1, 3, 2, 4, 5], S_00001_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux396, [1,1,5,5])
**VARIABLES**
DISCRETE aux397 #ElementOne([1, 3, 2, 4, 5], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux397, [1,2,4,5])
**VARIABLES**
DISCRETE aux398 #ElementOne([1, 3, 2, 4], S_00003_00002)
{1..4}
DISCRETE aux399 #ElementOne([1, 3, 2, 4, 5], S_00003_00004)
{1..5}
DISCRETE aux400 #ElementOne([1, 3, 2, 4, 5], S_00003_00005)
{1..5}
DISCRETE aux401 #ElementOne([1, 3, 2, 4], S_00002_00003)
{1..4}
DISCRETE aux402 #ElementOne([1, 3, 2, 4], S_00002_00004)
{1..4}
DISCRETE aux403 #ElementOne([1, 3, 2, 4, 5], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux403, [1,1,3,5])
**VARIABLES**
DISCRETE aux404 #ElementOne([1, 3, 2, 4], S_00004_00001)
{1..4}
DISCRETE aux405 #ElementOne([1, 3, 2, 4, 5], S_00004_00003)
{1..5}
DISCRETE aux406 #ElementOne([1, 3, 2, 4, 5], S_00004_00002)
{1..5}
DISCRETE aux407 #ElementOne([1, 3, 2, 4, 5], S_00004_00004)
{1..5}
DISCRETE aux408 #ElementOne([1, 3, 2, 4, 5], S_00004_00005)
{1..5}
DISCRETE aux409 #ElementOne([1, 3, 2, 4, 5], S_00005_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux409, [1,1,5,5])
**VARIABLES**
DISCRETE aux410 #ElementOne([1, 3, 2, 4, 5], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux410, [1,2,4,5])
**VARIABLES**
DISCRETE aux411 #ElementOne([1, 3, 2, 4, 5], S_00005_00002)
{1..5}
DISCRETE aux412 #ElementOne([1, 3, 2, 4, 5], S_00005_00004)
{1..5}
DISCRETE aux413 #ElementOne([1, 3, 2, 4, 5], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux413, [1,2,4,5])
**VARIABLES**
DISCRETE aux414 #ElementOne([1, 3, 2, 5, 4], S_00001_00005)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux414, [1,1,4,4])
**VARIABLES**
DISCRETE aux415 #ElementOne([1, 3, 2, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux415, [1,3,5,5])
**VARIABLES**
DISCRETE aux416 #ElementOne([1, 3, 2, 5, 4], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux416, [1,2,4,5])
**VARIABLES**
DISCRETE aux417 #ElementOne([1, 3, 2, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux417, [1,3,5,5])
**VARIABLES**
DISCRETE aux418 #ElementOne([1, 3, 2, 5, 4], S_00003_00005)
{1..5}
DISCRETE aux419 #ElementOne([1, 3, 2, 5, 4], S_00003_00004)
{1..5}
DISCRETE aux420 #ElementOne([1, 3, 2, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux420, [1,3,5,5])
**VARIABLES**
DISCRETE aux421 #ElementOne([1, 3, 2, 5, 4], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux421, [1,1,3,5])
**VARIABLES**
DISCRETE aux422 #ElementOne([1, 3, 2, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux422, [1,3,5,5])
**VARIABLES**
DISCRETE aux423 #ElementOne([1, 3, 2, 5, 4], S_00005_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux423, [1,1,4,4])
**VARIABLES**
DISCRETE aux424 #ElementOne([1, 3, 2, 5, 4], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux424, [1,2,4,5])
**VARIABLES**
DISCRETE aux425 #ElementOne([1, 3, 2, 5, 4], S_00005_00002)
{1..5}
DISCRETE aux426 #ElementOne([1, 3, 2, 5, 4], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux426, [1,2,4,5])
**VARIABLES**
DISCRETE aux427 #ElementOne([1, 3, 2, 5, 4], S_00005_00004)
{1..5}
DISCRETE aux428 #ElementOne([1, 3, 2, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux428, [1,3,5,5])
**VARIABLES**
DISCRETE aux429 #ElementOne([1, 3, 2, 5, 4], S_00004_00003)
{1..5}
DISCRETE aux430 #ElementOne([1, 3, 2, 5, 4], S_00004_00002)
{1..5}
DISCRETE aux431 #ElementOne([1, 3, 2, 5, 4], S_00004_00005)
{1..5}
DISCRETE aux432 #ElementOne([1, 3, 2, 5, 4], S_00004_00004)
{1..5}
DISCRETE aux433 #ElementOne([1, 4, 2, 3], S_00001_00004)
{1..4}
DISCRETE aux434 #ElementOne([1, 4, 2, 3, 5], S_00001_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux434, [1,1,5,5])
**VARIABLES**
DISCRETE aux435 #ElementOne([1, 4, 2, 3, 5], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux435, [1,3,5,5])
**VARIABLES**
DISCRETE aux436 #ElementOne([1, 4, 2, 3, 5], S_00003_00004)
{1..5}
DISCRETE aux437 #ElementOne([1, 4, 2, 3], S_00003_00002)
{1..4}
DISCRETE aux438 #ElementOne([1, 4, 2, 3, 5], S_00003_00005)
{1..5}
DISCRETE aux439 #ElementOne([1, 4, 2, 3], S_00004_00001)
{1..4}
DISCRETE aux440 #ElementOne([1, 4, 2, 3, 5], S_00004_00003)
{1..5}
DISCRETE aux441 #ElementOne([1, 4, 2, 3, 5], S_00004_00004)
{1..5}
DISCRETE aux442 #ElementOne([1, 4, 2, 3, 5], S_00004_00002)
{1..5}
DISCRETE aux443 #ElementOne([1, 4, 2, 3, 5], S_00004_00005)
{1..5}
DISCRETE aux444 #ElementOne([1, 4, 2, 3], S_00002_00003)
{1..4}
DISCRETE aux445 #ElementOne([1, 4, 2, 3], S_00002_00004)
{1..4}
DISCRETE aux446 #ElementOne([1, 4, 2, 3, 5], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux446, [1,1,3,5])
**VARIABLES**
DISCRETE aux447 #ElementOne([1, 4, 2, 3, 5], S_00005_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux447, [1,1,5,5])
**VARIABLES**
DISCRETE aux448 #ElementOne([1, 4, 2, 3, 5], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux448, [1,3,5,5])
**VARIABLES**
DISCRETE aux449 #ElementOne([1, 4, 2, 3, 5], S_00005_00004)
{1..5}
DISCRETE aux450 #ElementOne([1, 4, 2, 3, 5], S_00005_00002)
{1..5}
DISCRETE aux451 #ElementOne([1, 4, 2, 3, 5], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux451, [1,3,5,5])
**VARIABLES**
DISCRETE aux452 #ElementOne([1, 5, 2, 3], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux452, [1,3,5,5])
**VARIABLES**
DISCRETE aux453 #ElementOne([1, 5, 2, 3, 4], S_00001_00005)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux453, [1,1,4,4])
**VARIABLES**
DISCRETE aux454 #ElementOne([1, 5, 2, 3, 4], S_00003_00003)
{1..4}
DISCRETE aux455 #ElementOne([1, 5, 2, 3, 4], S_00003_00004)
{1..5}
DISCRETE aux456 #ElementOne([1, 5, 2, 3, 4], S_00003_00005)
{1..5}
DISCRETE aux457 #ElementOne([1, 5, 2, 3], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux457, [1,3,5,5])
**VARIABLES**
DISCRETE aux458 #ElementOne([1, 5, 2, 3], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux458, [1,3,5,5])
**VARIABLES**
DISCRETE aux459 #ElementOne([1, 5, 2, 3, 4], S_00004_00003)
{1..5}
DISCRETE aux460 #ElementOne([1, 5, 2, 3, 4], S_00004_00004)
{1..5}
DISCRETE aux461 #ElementOne([1, 5, 2, 3, 4], S_00004_00005)
{1..5}
DISCRETE aux462 #ElementOne([1, 5, 2, 3, 4], S_00004_00002)
{1..5}
DISCRETE aux463 #ElementOne([1, 5, 2, 3, 4], S_00005_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux463, [1,1,4,4])
**VARIABLES**
DISCRETE aux464 #ElementOne([1, 5, 2, 3, 4], S_00005_00003)
{1..4}
DISCRETE aux465 #ElementOne([1, 5, 2, 3, 4], S_00005_00004)
{1..5}
DISCRETE aux466 #ElementOne([1, 5, 2, 3, 4], S_00005_00005)
{1..4}
DISCRETE aux467 #ElementOne([1, 5, 2, 3, 4], S_00005_00002)
{1..5}
DISCRETE aux468 #ElementOne([1, 5, 2, 3], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux468, [1,3,5,5])
**VARIABLES**
DISCRETE aux469 #ElementOne([1, 5, 2, 3], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux469, [1,3,5,5])
**VARIABLES**
DISCRETE aux470 #ElementOne([1, 5, 2, 3, 4], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux470, [1,1,3,5])
**VARIABLES**
DISCRETE aux471 #ElementOne([1, 4, 2, 5, 3], S_00001_00005)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux471, [1,1,3,3])
**VARIABLES**
DISCRETE aux472 #ElementOne([1, 4, 2, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux472, [1,2,4,5])
**VARIABLES**
DISCRETE aux473 #ElementOne([1, 4, 2, 5, 3], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux473, [1,3,5,5])
**VARIABLES**
DISCRETE aux474 #ElementOne([1, 4, 2, 5, 3], S_00003_00005)
{1..5}
DISCRETE aux475 #ElementOne([1, 4, 2, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux475, [1,2,4,5])
**VARIABLES**
DISCRETE aux476 #ElementOne([1, 4, 2, 5, 3], S_00003_00004)
{1..5}
DISCRETE aux477 #ElementOne([1, 4, 2, 5, 3], S_00005_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux477, [1,1,3,3])
**VARIABLES**
DISCRETE aux478 #ElementOne([1, 4, 2, 5, 3], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux478, [1,3,5,5])
**VARIABLES**
DISCRETE aux479 #ElementOne([1, 4, 2, 5, 3], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux479, [1,3,5,5])
**VARIABLES**
DISCRETE aux480 #ElementOne([1, 4, 2, 5, 3], S_00005_00002)
{1..5}
DISCRETE aux481 #ElementOne([1, 4, 2, 5, 3], S_00005_00004)
{1..5}
DISCRETE aux482 #ElementOne([1, 4, 2, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux482, [1,2,4,5])
**VARIABLES**
DISCRETE aux483 #ElementOne([1, 4, 2, 5, 3], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux483, [1,1,3,5])
**VARIABLES**
DISCRETE aux484 #ElementOne([1, 4, 2, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux484, [1,2,4,5])
**VARIABLES**
DISCRETE aux485 #ElementOne([1, 4, 2, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux485, [1,2,4,5])
**VARIABLES**
DISCRETE aux486 #ElementOne([1, 4, 2, 5, 3], S_00004_00003)
{1..5}
DISCRETE aux487 #ElementOne([1, 4, 2, 5, 3], S_00004_00005)
{1..5}
DISCRETE aux488 #ElementOne([1, 4, 2, 5, 3], S_00004_00002)
{1..5}
DISCRETE aux489 #ElementOne([1, 4, 2, 5, 3], S_00004_00004)
{1..5}
DISCRETE aux490 #ElementOne([1, 5, 2, 4, 3], S_00001_00005)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux490, [1,1,3,3])
**VARIABLES**
DISCRETE aux491 #ElementOne([1, 5, 2, 4], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux491, [1,2,4,5])
**VARIABLES**
DISCRETE aux492 #ElementOne([1, 5, 2, 4, 3], S_00003_00003)
{1..4}
DISCRETE aux493 #ElementOne([1, 5, 2, 4, 3], S_00003_00005)
{1..5}
DISCRETE aux494 #ElementOne([1, 5, 2, 4, 3], S_00003_00004)
{1..5}
DISCRETE aux495 #ElementOne([1, 5, 2, 4], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux495, [1,2,4,5])
**VARIABLES**
DISCRETE aux496 #ElementOne([1, 5, 2, 4, 3], S_00005_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux496, [1,1,3,3])
**VARIABLES**
DISCRETE aux497 #ElementOne([1, 5, 2, 4, 3], S_00005_00003)
{1..4}
DISCRETE aux498 #ElementOne([1, 5, 2, 4, 3], S_00005_00005)
{1..4}
DISCRETE aux499 #ElementOne([1, 5, 2, 4, 3], S_00005_00004)
{1..5}
DISCRETE aux500 #ElementOne([1, 5, 2, 4, 3], S_00005_00002)
{1..5}
DISCRETE aux501 #ElementOne([1, 5, 2, 4], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux501, [1,2,4,5])
**VARIABLES**
DISCRETE aux502 #ElementOne([1, 5, 2, 4, 3], S_00004_00003)
{1..5}
DISCRETE aux503 #ElementOne([1, 5, 2, 4, 3], S_00004_00005)
{1..5}
DISCRETE aux504 #ElementOne([1, 5, 2, 4, 3], S_00004_00004)
{1..5}
DISCRETE aux505 #ElementOne([1, 5, 2, 4, 3], S_00004_00002)
{1..5}
DISCRETE aux506 #ElementOne([1, 5, 2, 4], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux506, [1,2,4,5])
**VARIABLES**
DISCRETE aux507 #ElementOne([1, 5, 2, 4, 3], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux507, [1,1,3,5])
**VARIABLES**
DISCRETE aux508 #ElementOne([1, 5, 2, 4], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux508, [1,2,4,5])
**VARIABLES**
DISCRETE aux509 #ElementOne([1, 3, 4, 2], S_00001_00004)
{1..4}
DISCRETE aux510 #ElementOne([1, 3, 4, 2, 5], S_00001_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux510, [1,1,5,5])
**VARIABLES**
DISCRETE aux511 #ElementOne([1, 3, 4, 2], S_00004_00001)
{1..4}
DISCRETE aux512 #ElementOne([1, 3, 4, 2, 5], S_00004_00004)
{1..5}
DISCRETE aux513 #ElementOne([1, 3, 4, 2, 5], S_00004_00002)
{1..5}
DISCRETE aux514 #ElementOne([1, 3, 4, 2, 5], S_00004_00003)
{1..5}
DISCRETE aux515 #ElementOne([1, 3, 4, 2, 5], S_00004_00005)
{1..5}
DISCRETE aux516 #ElementOne([1, 3, 4, 2], S_00002_00004)
{1..4}
DISCRETE aux517 #ElementOne([1, 3, 4, 2], S_00002_00003)
{1..4}
DISCRETE aux518 #ElementOne([1, 3, 4, 2, 5], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux518, [1,3,5,5])
**VARIABLES**
DISCRETE aux519 #ElementOne([1, 3, 4, 2, 5], S_00003_00004)
{1..5}
DISCRETE aux520 #ElementOne([1, 3, 4, 2], S_00003_00002)
{1..4}
DISCRETE aux521 #ElementOne([1, 3, 4, 2, 5], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux521, [1,2,4,5])
**VARIABLES**
DISCRETE aux522 #ElementOne([1, 3, 4, 2, 5], S_00003_00005)
{1..5}
DISCRETE aux523 #ElementOne([1, 3, 4, 2, 5], S_00005_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux523, [1,1,5,5])
**VARIABLES**
DISCRETE aux524 #ElementOne([1, 3, 4, 2, 5], S_00005_00004)
{1..5}
DISCRETE aux525 #ElementOne([1, 3, 4, 2, 5], S_00005_00002)
{1..5}
DISCRETE aux526 #ElementOne([1, 3, 4, 2, 5], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux526, [1,2,4,5])
**VARIABLES**
DISCRETE aux527 #ElementOne([1, 3, 4, 2, 5], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux527, [1,2,4,5])
**VARIABLES**
DISCRETE aux528 #ElementOne([1, 3, 5, 2], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux528, [1,3,5,5])
**VARIABLES**
DISCRETE aux529 #ElementOne([1, 3, 5, 2, 4], S_00001_00005)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux529, [1,1,4,4])
**VARIABLES**
DISCRETE aux530 #ElementOne([1, 3, 5, 2], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux530, [1,3,5,5])
**VARIABLES**
DISCRETE aux531 #ElementOne([1, 3, 5, 2, 4], S_00004_00004)
{1..5}
DISCRETE aux532 #ElementOne([1, 3, 5, 2, 4], S_00004_00002)
{1..5}
DISCRETE aux533 #ElementOne([1, 3, 5, 2, 4], S_00004_00005)
{1..5}
DISCRETE aux534 #ElementOne([1, 3, 5, 2, 4], S_00004_00003)
{1..5}
DISCRETE aux535 #ElementOne([1, 3, 5, 2], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux535, [1,3,5,5])
**VARIABLES**
DISCRETE aux536 #ElementOne([1, 3, 5, 2, 4], S_00002_00005)
{1..4}
DISCRETE aux537 #ElementOne([1, 3, 5, 2], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux537, [1,3,5,5])
**VARIABLES**
DISCRETE aux538 #ElementOne([1, 3, 5, 2, 4], S_00005_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux538, [1,1,4,4])
**VARIABLES**
DISCRETE aux539 #ElementOne([1, 3, 5, 2, 4], S_00005_00004)
{1..5}
DISCRETE aux540 #ElementOne([1, 3, 5, 2, 4], S_00005_00002)
{1..5}
DISCRETE aux541 #ElementOne([1, 3, 5, 2, 4], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux541, [1,2,4,5])
**VARIABLES**
DISCRETE aux542 #ElementOne([1, 3, 5, 2, 4], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux542, [1,2,4,5])
**VARIABLES**
DISCRETE aux543 #ElementOne([1, 3, 5, 2, 4], S_00003_00004)
{1..5}
DISCRETE aux544 #ElementOne([1, 3, 5, 2], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux544, [1,3,5,5])
**VARIABLES**
DISCRETE aux545 #ElementOne([1, 3, 5, 2, 4], S_00003_00005)
{1..5}
DISCRETE aux546 #ElementOne([1, 3, 5, 2, 4], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux546, [1,2,4,5])
**VARIABLES**
DISCRETE aux547 #ElementOne([1, 4, 3, 2], S_00001_00004)
{1..4}
DISCRETE aux548 #ElementOne([1, 4, 3, 2, 5], S_00001_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux548, [1,1,5,5])
**VARIABLES**
DISCRETE aux549 #ElementOne([1, 4, 3, 2], S_00004_00001)
{1..4}
DISCRETE aux550 #ElementOne([1, 4, 3, 2, 5], S_00004_00004)
{1..5}
DISCRETE aux551 #ElementOne([1, 4, 3, 2, 5], S_00004_00003)
{1..5}
DISCRETE aux552 #ElementOne([1, 4, 3, 2, 5], S_00004_00002)
{1..5}
DISCRETE aux553 #ElementOne([1, 4, 3, 2, 5], S_00004_00005)
{1..5}
DISCRETE aux554 #ElementOne([1, 4, 3, 2, 5], S_00003_00004)
{1..5}
DISCRETE aux555 #ElementOne([1, 4, 3, 2, 5], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux555, [1,3,5,5])
**VARIABLES**
DISCRETE aux556 #ElementOne([1, 4, 3, 2], S_00003_00002)
{1..4}
DISCRETE aux557 #ElementOne([1, 4, 3, 2, 5], S_00003_00005)
{1..5}
DISCRETE aux558 #ElementOne([1, 4, 3, 2], S_00002_00004)
{1..4}
DISCRETE aux559 #ElementOne([1, 4, 3, 2], S_00002_00003)
{1..4}
DISCRETE aux560 #ElementOne([1, 4, 3, 2, 5], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux560, [1,2,4,5])
**VARIABLES**
DISCRETE aux561 #ElementOne([1, 4, 3, 2, 5], S_00005_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux561, [1,1,5,5])
**VARIABLES**
DISCRETE aux562 #ElementOne([1, 4, 3, 2, 5], S_00005_00004)
{1..5}
DISCRETE aux563 #ElementOne([1, 4, 3, 2, 5], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux563, [1,3,5,5])
**VARIABLES**
DISCRETE aux564 #ElementOne([1, 4, 3, 2, 5], S_00005_00002)
{1..5}
DISCRETE aux565 #ElementOne([1, 4, 3, 2, 5], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux565, [1,3,5,5])
**VARIABLES**
DISCRETE aux566 #ElementOne([1, 5, 3, 2], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux566, [1,3,5,5])
**VARIABLES**
DISCRETE aux567 #ElementOne([1, 5, 3, 2, 4], S_00001_00005)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux567, [1,1,4,4])
**VARIABLES**
DISCRETE aux568 #ElementOne([1, 5, 3, 2], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux568, [1,3,5,5])
**VARIABLES**
DISCRETE aux569 #ElementOne([1, 5, 3, 2, 4], S_00004_00004)
{1..5}
DISCRETE aux570 #ElementOne([1, 5, 3, 2, 4], S_00004_00003)
{1..5}
DISCRETE aux571 #ElementOne([1, 5, 3, 2, 4], S_00004_00005)
{1..5}
DISCRETE aux572 #ElementOne([1, 5, 3, 2, 4], S_00004_00002)
{1..5}
DISCRETE aux573 #ElementOne([1, 5, 3, 2, 4], S_00003_00004)
{1..5}
DISCRETE aux574 #ElementOne([1, 5, 3, 2, 4], S_00003_00003)
{1..4}
DISCRETE aux575 #ElementOne([1, 5, 3, 2, 4], S_00003_00005)
{1..5}
DISCRETE aux576 #ElementOne([1, 5, 3, 2], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux576, [1,3,5,5])
**VARIABLES**
DISCRETE aux577 #ElementOne([1, 5, 3, 2, 4], S_00005_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux577, [1,1,4,4])
**VARIABLES**
DISCRETE aux578 #ElementOne([1, 5, 3, 2, 4], S_00005_00004)
{1..5}
DISCRETE aux579 #ElementOne([1, 5, 3, 2, 4], S_00005_00003)
{1..4}
DISCRETE aux580 #ElementOne([1, 5, 3, 2, 4], S_00005_00005)
{1..4}
DISCRETE aux581 #ElementOne([1, 5, 3, 2, 4], S_00005_00002)
{1..5}
DISCRETE aux582 #ElementOne([1, 5, 3, 2], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux582, [1,3,5,5])
**VARIABLES**
DISCRETE aux583 #ElementOne([1, 5, 3, 2], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux583, [1,3,5,5])
**VARIABLES**
DISCRETE aux584 #ElementOne([1, 5, 3, 2, 4], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux584, [1,2,4,5])
**VARIABLES**
DISCRETE aux585 #ElementOne([1, 4, 5, 2], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux585, [1,2,4,5])
**VARIABLES**
DISCRETE aux586 #ElementOne([1, 4, 5, 2, 3], S_00001_00005)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux586, [1,1,3,3])
**VARIABLES**
DISCRETE aux587 #ElementOne([1, 4, 5, 2], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux587, [1,2,4,5])
**VARIABLES**
DISCRETE aux588 #ElementOne([1, 4, 5, 2, 3], S_00004_00004)
{1..5}
DISCRETE aux589 #ElementOne([1, 4, 5, 2, 3], S_00004_00005)
{1..5}
DISCRETE aux590 #ElementOne([1, 4, 5, 2, 3], S_00004_00002)
{1..5}
DISCRETE aux591 #ElementOne([1, 4, 5, 2, 3], S_00004_00003)
{1..5}
DISCRETE aux592 #ElementOne([1, 4, 5, 2, 3], S_00005_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux592, [1,1,3,3])
**VARIABLES**
DISCRETE aux593 #ElementOne([1, 4, 5, 2, 3], S_00005_00004)
{1..5}
DISCRETE aux594 #ElementOne([1, 4, 5, 2, 3], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux594, [1,3,5,5])
**VARIABLES**
DISCRETE aux595 #ElementOne([1, 4, 5, 2, 3], S_00005_00002)
{1..5}
DISCRETE aux596 #ElementOne([1, 4, 5, 2, 3], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux596, [1,3,5,5])
**VARIABLES**
DISCRETE aux597 #ElementOne([1, 4, 5, 2], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux597, [1,2,4,5])
**VARIABLES**
DISCRETE aux598 #ElementOne([1, 4, 5, 2, 3], S_00002_00005)
{1..4}
DISCRETE aux599 #ElementOne([1, 4, 5, 2], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux599, [1,2,4,5])
**VARIABLES**
DISCRETE aux600 #ElementOne([1, 4, 5, 2, 3], S_00003_00004)
{1..5}
DISCRETE aux601 #ElementOne([1, 4, 5, 2, 3], S_00003_00005)
{1..5}
DISCRETE aux602 #ElementOne([1, 4, 5, 2], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux602, [1,2,4,5])
**VARIABLES**
DISCRETE aux603 #ElementOne([1, 4, 5, 2, 3], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux603, [1,3,5,5])
**VARIABLES**
DISCRETE aux604 #ElementOne([1, 5, 4, 2], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux604, [1,2,4,5])
**VARIABLES**
DISCRETE aux605 #ElementOne([1, 5, 4, 2, 3], S_00001_00005)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux605, [1,1,3,3])
**VARIABLES**
DISCRETE aux606 #ElementOne([1, 5, 4, 2], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux606, [1,2,4,5])
**VARIABLES**
DISCRETE aux607 #ElementOne([1, 5, 4, 2, 3], S_00004_00004)
{1..5}
DISCRETE aux608 #ElementOne([1, 5, 4, 2, 3], S_00004_00005)
{1..5}
DISCRETE aux609 #ElementOne([1, 5, 4, 2, 3], S_00004_00003)
{1..5}
DISCRETE aux610 #ElementOne([1, 5, 4, 2, 3], S_00004_00002)
{1..5}
DISCRETE aux611 #ElementOne([1, 5, 4, 2, 3], S_00005_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux611, [1,1,3,3])
**VARIABLES**
DISCRETE aux612 #ElementOne([1, 5, 4, 2, 3], S_00005_00004)
{1..5}
DISCRETE aux613 #ElementOne([1, 5, 4, 2, 3], S_00005_00005)
{1..4}
DISCRETE aux614 #ElementOne([1, 5, 4, 2, 3], S_00005_00003)
{1..4}
DISCRETE aux615 #ElementOne([1, 5, 4, 2, 3], S_00005_00002)
{1..5}
DISCRETE aux616 #ElementOne([1, 5, 4, 2, 3], S_00003_00004)
{1..5}
DISCRETE aux617 #ElementOne([1, 5, 4, 2, 3], S_00003_00005)
{1..5}
DISCRETE aux618 #ElementOne([1, 5, 4, 2, 3], S_00003_00003)
{1..4}
DISCRETE aux619 #ElementOne([1, 5, 4, 2], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux619, [1,2,4,5])
**VARIABLES**
DISCRETE aux620 #ElementOne([1, 5, 4, 2], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux620, [1,2,4,5])
**VARIABLES**
DISCRETE aux621 #ElementOne([1, 5, 4, 2, 3], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux621, [1,3,5,5])
**VARIABLES**
DISCRETE aux622 #ElementOne([1, 5, 4, 2], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux622, [1,2,4,5])
**VARIABLES**
DISCRETE aux623 #ElementOne([1, 3, 4, 5, 2], S_00001_00005)
{1..2}
DISCRETE aux624 #ElementOne([1, 3, 4, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux624, [1,1,3,5])
**VARIABLES**
DISCRETE aux625 #ElementOne([1, 3, 4, 5, 2], S_00005_00001)
{1..2}
DISCRETE aux626 #ElementOne([1, 3, 4, 5, 2], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux626, [1,2,4,5])
**VARIABLES**
DISCRETE aux627 #ElementOne([1, 3, 4, 5, 2], S_00005_00002)
{1..5}
DISCRETE aux628 #ElementOne([1, 3, 4, 5, 2], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux628, [1,2,4,5])
**VARIABLES**
DISCRETE aux629 #ElementOne([1, 3, 4, 5, 2], S_00005_00004)
{1..5}
DISCRETE aux630 #ElementOne([1, 3, 4, 5, 2], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux630, [1,3,5,5])
**VARIABLES**
DISCRETE aux631 #ElementOne([1, 3, 4, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux631, [1,1,3,5])
**VARIABLES**
DISCRETE aux632 #ElementOne([1, 3, 4, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux632, [1,1,3,5])
**VARIABLES**
DISCRETE aux633 #ElementOne([1, 3, 4, 5, 2], S_00003_00005)
{1..5}
DISCRETE aux634 #ElementOne([1, 3, 4, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux634, [1,1,3,5])
**VARIABLES**
DISCRETE aux635 #ElementOne([1, 3, 4, 5, 2], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux635, [1,2,4,5])
**VARIABLES**
DISCRETE aux636 #ElementOne([1, 3, 4, 5, 2], S_00003_00004)
{1..5}
DISCRETE aux637 #ElementOne([1, 3, 4, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux637, [1,1,3,5])
**VARIABLES**
DISCRETE aux638 #ElementOne([1, 3, 4, 5, 2], S_00004_00005)
{1..5}
DISCRETE aux639 #ElementOne([1, 3, 4, 5, 2], S_00004_00002)
{1..5}
DISCRETE aux640 #ElementOne([1, 3, 4, 5, 2], S_00004_00003)
{1..5}
DISCRETE aux641 #ElementOne([1, 3, 4, 5, 2], S_00004_00004)
{1..5}
DISCRETE aux642 #ElementOne([1, 3, 5, 4, 2], S_00001_00005)
{1..2}
DISCRETE aux643 #ElementOne([1, 3, 5, 4], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux643, [1,1,3,5])
**VARIABLES**
DISCRETE aux644 #ElementOne([1, 3, 5, 4, 2], S_00005_00001)
{1..2}
DISCRETE aux645 #ElementOne([1, 3, 5, 4, 2], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux645, [1,2,4,5])
**VARIABLES**
DISCRETE aux646 #ElementOne([1, 3, 5, 4, 2], S_00005_00002)
{1..5}
DISCRETE aux647 #ElementOne([1, 3, 5, 4, 2], S_00005_00004)
{1..5}
DISCRETE aux648 #ElementOne([1, 3, 5, 4, 2], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux648, [1,2,4,5])
**VARIABLES**
DISCRETE aux649 #ElementOne([1, 3, 5, 4, 2], S_00002_00005)
{1..4}
DISCRETE aux650 #ElementOne([1, 3, 5, 4], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux650, [1,1,3,5])
**VARIABLES**
DISCRETE aux651 #ElementOne([1, 3, 5, 4], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux651, [1,1,3,5])
**VARIABLES**
DISCRETE aux652 #ElementOne([1, 3, 5, 4], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux652, [1,1,3,5])
**VARIABLES**
DISCRETE aux653 #ElementOne([1, 3, 5, 4, 2], S_00004_00005)
{1..5}
DISCRETE aux654 #ElementOne([1, 3, 5, 4, 2], S_00004_00002)
{1..5}
DISCRETE aux655 #ElementOne([1, 3, 5, 4, 2], S_00004_00004)
{1..5}
DISCRETE aux656 #ElementOne([1, 3, 5, 4, 2], S_00004_00003)
{1..5}
DISCRETE aux657 #ElementOne([1, 3, 5, 4, 2], S_00003_00005)
{1..5}
DISCRETE aux658 #ElementOne([1, 3, 5, 4], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux658, [1,1,3,5])
**VARIABLES**
DISCRETE aux659 #ElementOne([1, 3, 5, 4, 2], S_00003_00004)
{1..5}
DISCRETE aux660 #ElementOne([1, 3, 5, 4, 2], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux660, [1,2,4,5])
**VARIABLES**
DISCRETE aux661 #ElementOne([1, 4, 3, 5, 2], S_00001_00005)
{1..2}
DISCRETE aux662 #ElementOne([1, 4, 3, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux662, [1,1,3,5])
**VARIABLES**
DISCRETE aux663 #ElementOne([1, 4, 3, 5, 2], S_00005_00001)
{1..2}
DISCRETE aux664 #ElementOne([1, 4, 3, 5, 2], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux664, [1,3,5,5])
**VARIABLES**
DISCRETE aux665 #ElementOne([1, 4, 3, 5, 2], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux665, [1,3,5,5])
**VARIABLES**
DISCRETE aux666 #ElementOne([1, 4, 3, 5, 2], S_00005_00002)
{1..5}
DISCRETE aux667 #ElementOne([1, 4, 3, 5, 2], S_00005_00004)
{1..5}
DISCRETE aux668 #ElementOne([1, 4, 3, 5, 2], S_00003_00005)
{1..5}
DISCRETE aux669 #ElementOne([1, 4, 3, 5, 2], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux669, [1,3,5,5])
**VARIABLES**
DISCRETE aux670 #ElementOne([1, 4, 3, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux670, [1,1,3,5])
**VARIABLES**
DISCRETE aux671 #ElementOne([1, 4, 3, 5, 2], S_00003_00004)
{1..5}
DISCRETE aux672 #ElementOne([1, 4, 3, 5, 2], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux672, [1,2,4,5])
**VARIABLES**
DISCRETE aux673 #ElementOne([1, 4, 3, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux673, [1,1,3,5])
**VARIABLES**
DISCRETE aux674 #ElementOne([1, 4, 3, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux674, [1,1,3,5])
**VARIABLES**
DISCRETE aux675 #ElementOne([1, 4, 3, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux675, [1,1,3,5])
**VARIABLES**
DISCRETE aux676 #ElementOne([1, 4, 3, 5, 2], S_00004_00005)
{1..5}
DISCRETE aux677 #ElementOne([1, 4, 3, 5, 2], S_00004_00003)
{1..5}
DISCRETE aux678 #ElementOne([1, 4, 3, 5, 2], S_00004_00002)
{1..5}
DISCRETE aux679 #ElementOne([1, 4, 3, 5, 2], S_00004_00004)
{1..5}
DISCRETE aux680 #ElementOne([1, 5, 3, 4, 2], S_00001_00005)
{1..2}
DISCRETE aux681 #ElementOne([1, 5, 3, 4], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux681, [1,1,3,5])
**VARIABLES**
DISCRETE aux682 #ElementOne([1, 5, 3, 4, 2], S_00005_00001)
{1..2}
DISCRETE aux683 #ElementOne([1, 5, 3, 4, 2], S_00005_00005)
{1..4}
DISCRETE aux684 #ElementOne([1, 5, 3, 4, 2], S_00005_00003)
{1..4}
DISCRETE aux685 #ElementOne([1, 5, 3, 4, 2], S_00005_00004)
{1..5}
DISCRETE aux686 #ElementOne([1, 5, 3, 4, 2], S_00005_00002)
{1..5}
DISCRETE aux687 #ElementOne([1, 5, 3, 4, 2], S_00003_00005)
{1..5}
DISCRETE aux688 #ElementOne([1, 5, 3, 4, 2], S_00003_00003)
{1..4}
DISCRETE aux689 #ElementOne([1, 5, 3, 4, 2], S_00003_00004)
{1..5}
DISCRETE aux690 #ElementOne([1, 5, 3, 4], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux690, [1,1,3,5])
**VARIABLES**
DISCRETE aux691 #ElementOne([1, 5, 3, 4], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux691, [1,1,3,5])
**VARIABLES**
DISCRETE aux692 #ElementOne([1, 5, 3, 4, 2], S_00004_00005)
{1..5}
DISCRETE aux693 #ElementOne([1, 5, 3, 4, 2], S_00004_00003)
{1..5}
DISCRETE aux694 #ElementOne([1, 5, 3, 4, 2], S_00004_00004)
{1..5}
DISCRETE aux695 #ElementOne([1, 5, 3, 4, 2], S_00004_00002)
{1..5}
DISCRETE aux696 #ElementOne([1, 5, 3, 4, 2], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux696, [1,2,4,5])
**VARIABLES**
DISCRETE aux697 #ElementOne([1, 5, 3, 4], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux697, [1,1,3,5])
**VARIABLES**
DISCRETE aux698 #ElementOne([1, 5, 3, 4], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux698, [1,1,3,5])
**VARIABLES**
DISCRETE aux699 #ElementOne([1, 4, 5, 3, 2], S_00001_00005)
{1..2}
DISCRETE aux700 #ElementOne([1, 4, 5, 3], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux700, [1,1,3,5])
**VARIABLES**
DISCRETE aux701 #ElementOne([1, 4, 5, 3, 2], S_00005_00001)
{1..2}
DISCRETE aux702 #ElementOne([1, 4, 5, 3, 2], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux702, [1,3,5,5])
**VARIABLES**
DISCRETE aux703 #ElementOne([1, 4, 5, 3, 2], S_00005_00004)
{1..5}
DISCRETE aux704 #ElementOne([1, 4, 5, 3, 2], S_00005_00002)
{1..5}
DISCRETE aux705 #ElementOne([1, 4, 5, 3, 2], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux705, [1,3,5,5])
**VARIABLES**
DISCRETE aux706 #ElementOne([1, 4, 5, 3], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux706, [1,1,3,5])
**VARIABLES**
DISCRETE aux707 #ElementOne([1, 4, 5, 3, 2], S_00004_00005)
{1..5}
DISCRETE aux708 #ElementOne([1, 4, 5, 3, 2], S_00004_00004)
{1..5}
DISCRETE aux709 #ElementOne([1, 4, 5, 3, 2], S_00004_00002)
{1..5}
DISCRETE aux710 #ElementOne([1, 4, 5, 3, 2], S_00004_00003)
{1..5}
DISCRETE aux711 #ElementOne([1, 4, 5, 3, 2], S_00002_00005)
{1..4}
DISCRETE aux712 #ElementOne([1, 4, 5, 3], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux712, [1,1,3,5])
**VARIABLES**
DISCRETE aux713 #ElementOne([1, 4, 5, 3], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux713, [1,1,3,5])
**VARIABLES**
DISCRETE aux714 #ElementOne([1, 4, 5, 3, 2], S_00003_00005)
{1..5}
DISCRETE aux715 #ElementOne([1, 4, 5, 3, 2], S_00003_00004)
{1..5}
DISCRETE aux716 #ElementOne([1, 4, 5, 3], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux716, [1,1,3,5])
**VARIABLES**
DISCRETE aux717 #ElementOne([1, 4, 5, 3, 2], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux717, [1,3,5,5])
**VARIABLES**
DISCRETE aux718 #ElementOne([1, 5, 4, 3, 2], S_00001_00005)
{1..2}
DISCRETE aux719 #ElementOne([1, 5, 4, 3], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux719, [1,1,3,5])
**VARIABLES**
DISCRETE aux720 #ElementOne([1, 5, 4, 3, 2], S_00005_00001)
{1..2}
DISCRETE aux721 #ElementOne([1, 5, 4, 3, 2], S_00005_00005)
{1..4}
DISCRETE aux722 #ElementOne([1, 5, 4, 3, 2], S_00005_00004)
{1..5}
DISCRETE aux723 #ElementOne([1, 5, 4, 3, 2], S_00005_00003)
{1..4}
DISCRETE aux724 #ElementOne([1, 5, 4, 3, 2], S_00005_00002)
{1..5}
DISCRETE aux725 #ElementOne([1, 5, 4, 3], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux725, [1,1,3,5])
**VARIABLES**
DISCRETE aux726 #ElementOne([1, 5, 4, 3, 2], S_00004_00005)
{1..5}
DISCRETE aux727 #ElementOne([1, 5, 4, 3, 2], S_00004_00004)
{1..5}
DISCRETE aux728 #ElementOne([1, 5, 4, 3, 2], S_00004_00003)
{1..5}
DISCRETE aux729 #ElementOne([1, 5, 4, 3, 2], S_00004_00002)
{1..5}
DISCRETE aux730 #ElementOne([1, 5, 4, 3, 2], S_00003_00005)
{1..5}
DISCRETE aux731 #ElementOne([1, 5, 4, 3, 2], S_00003_00004)
{1..5}
DISCRETE aux732 #ElementOne([1, 5, 4, 3, 2], S_00003_00003)
{1..4}
DISCRETE aux733 #ElementOne([1, 5, 4, 3], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux733, [1,1,3,5])
**VARIABLES**
DISCRETE aux734 #ElementOne([1, 5, 4, 3, 2], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux734, [1,3,5,5])
**VARIABLES**
DISCRETE aux735 #ElementOne([1, 5, 4, 3], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux735, [1,1,3,5])
**VARIABLES**
DISCRETE aux736 #ElementOne([1, 5, 4, 3], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux736, [1,1,3,5])
**VARIABLES**
DISCRETE aux737 #ElementOne([2, 1, 3, 4], S_00002_00003)
{1..4}
DISCRETE aux738 #ElementOne([2, 1, 3, 4], S_00002_00004)
{1..4}
DISCRETE aux739 #ElementOne([2, 1, 3, 4, 5], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux739, [1,2,4,5])
**VARIABLES**
DISCRETE aux740 #ElementOne([2, 1, 3, 4], S_00001_00004)
{1..4}
DISCRETE aux741 #ElementOne([2, 1, 3, 4, 5], S_00001_00005)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux741, [2,2,5,5])
**VARIABLES**
DISCRETE aux742 #ElementOne([2, 1, 3, 4], S_00003_00002)
{1..4}
DISCRETE aux743 #ElementOne([2, 1, 3, 4, 5], S_00003_00003)
{2..5}
DISCRETE aux744 #ElementOne([2, 1, 3, 4, 5], S_00003_00004)
{1..5}
DISCRETE aux745 #ElementOne([2, 1, 3, 4, 5], S_00003_00005)
{1..5}
DISCRETE aux746 #ElementOne([2, 1, 3, 4, 5], S_00004_00002)
{1..5}
DISCRETE aux747 #ElementOne([2, 1, 3, 4], S_00004_00001)
{1..4}
DISCRETE aux748 #ElementOne([2, 1, 3, 4, 5], S_00004_00003)
{1..5}
DISCRETE aux749 #ElementOne([2, 1, 3, 4, 5], S_00004_00004)
{1..5}
DISCRETE aux750 #ElementOne([2, 1, 3, 4, 5], S_00004_00005)
{1..5}
DISCRETE aux751 #ElementOne([2, 1, 3, 4, 5], S_00005_00002)
{1..5}
DISCRETE aux752 #ElementOne([2, 1, 3, 4, 5], S_00005_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux752, [2,2,5,5])
**VARIABLES**
DISCRETE aux753 #ElementOne([2, 1, 3, 4, 5], S_00005_00003)
{2..5}
DISCRETE aux754 #ElementOne([2, 1, 3, 4, 5], S_00005_00004)
{1..5}
DISCRETE aux755 #ElementOne([2, 1, 3, 4, 5], S_00005_00005)
{2..5}
DISCRETE aux756 #ElementOne([2, 1, 3, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux756, [1,3,5,5])
**VARIABLES**
DISCRETE aux757 #ElementOne([2, 1, 3, 5, 4], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux757, [1,2,4,5])
**VARIABLES**
DISCRETE aux758 #ElementOne([2, 1, 3, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux758, [1,3,5,5])
**VARIABLES**
DISCRETE aux759 #ElementOne([2, 1, 3, 5, 4], S_00001_00005)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux759, [2,2,4,4])
**VARIABLES**
DISCRETE aux760 #ElementOne([2, 1, 3, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux760, [1,3,5,5])
**VARIABLES**
DISCRETE aux761 #ElementOne([2, 1, 3, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux761, [1,3,5,5])
**VARIABLES**
DISCRETE aux762 #ElementOne([2, 1, 3, 5, 4], S_00003_00003)
{2..5}
DISCRETE aux763 #ElementOne([2, 1, 3, 5, 4], S_00003_00005)
{1..5}
DISCRETE aux764 #ElementOne([2, 1, 3, 5, 4], S_00003_00004)
{1..5}
DISCRETE aux765 #ElementOne([2, 1, 3, 5, 4], S_00005_00002)
{1..5}
DISCRETE aux766 #ElementOne([2, 1, 3, 5, 4], S_00005_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux766, [2,2,4,4])
**VARIABLES**
DISCRETE aux767 #ElementOne([2, 1, 3, 5, 4], S_00005_00003)
{2..5}
DISCRETE aux768 #ElementOne([2, 1, 3, 5, 4], S_00005_00005)
{2..5}
DISCRETE aux769 #ElementOne([2, 1, 3, 5, 4], S_00005_00004)
{1..5}
DISCRETE aux770 #ElementOne([2, 1, 3, 5, 4], S_00004_00002)
{1..5}
DISCRETE aux771 #ElementOne([2, 1, 3, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux771, [1,3,5,5])
**VARIABLES**
DISCRETE aux772 #ElementOne([2, 1, 3, 5, 4], S_00004_00003)
{1..5}
DISCRETE aux773 #ElementOne([2, 1, 3, 5, 4], S_00004_00005)
{1..5}
DISCRETE aux774 #ElementOne([2, 1, 3, 5, 4], S_00004_00004)
{1..5}
DISCRETE aux775 #ElementOne([2, 1, 4, 3], S_00002_00004)
{1..4}
DISCRETE aux776 #ElementOne([2, 1, 4, 3], S_00002_00003)
{1..4}
DISCRETE aux777 #ElementOne([2, 1, 4, 3, 5], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux777, [1,3,5,5])
**VARIABLES**
DISCRETE aux778 #ElementOne([2, 1, 4, 3], S_00001_00004)
{1..4}
DISCRETE aux779 #ElementOne([2, 1, 4, 3, 5], S_00001_00005)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux779, [2,2,5,5])
**VARIABLES**
DISCRETE aux780 #ElementOne([2, 1, 4, 3, 5], S_00004_00002)
{1..5}
DISCRETE aux781 #ElementOne([2, 1, 4, 3], S_00004_00001)
{1..4}
DISCRETE aux782 #ElementOne([2, 1, 4, 3, 5], S_00004_00004)
{1..5}
DISCRETE aux783 #ElementOne([2, 1, 4, 3, 5], S_00004_00003)
{1..5}
DISCRETE aux784 #ElementOne([2, 1, 4, 3, 5], S_00004_00005)
{1..5}
DISCRETE aux785 #ElementOne([2, 1, 4, 3], S_00003_00002)
{1..4}
DISCRETE aux786 #ElementOne([2, 1, 4, 3, 5], S_00003_00004)
{1..5}
DISCRETE aux787 #ElementOne([2, 1, 4, 3, 5], S_00003_00003)
{2..5}
DISCRETE aux788 #ElementOne([2, 1, 4, 3, 5], S_00003_00005)
{1..5}
DISCRETE aux789 #ElementOne([2, 1, 4, 3, 5], S_00005_00002)
{1..5}
DISCRETE aux790 #ElementOne([2, 1, 4, 3, 5], S_00005_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux790, [2,2,5,5])
**VARIABLES**
DISCRETE aux791 #ElementOne([2, 1, 4, 3, 5], S_00005_00004)
{1..5}
DISCRETE aux792 #ElementOne([2, 1, 4, 3, 5], S_00005_00003)
{2..5}
DISCRETE aux793 #ElementOne([2, 1, 4, 3, 5], S_00005_00005)
{2..5}
DISCRETE aux794 #ElementOne([2, 1, 5, 3], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux794, [1,3,5,5])
**VARIABLES**
DISCRETE aux795 #ElementOne([2, 1, 5, 3, 4], S_00002_00005)
{1..4}
DISCRETE aux796 #ElementOne([2, 1, 5, 3], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux796, [1,3,5,5])
**VARIABLES**
DISCRETE aux797 #ElementOne([2, 1, 5, 3], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux797, [1,3,5,5])
**VARIABLES**
DISCRETE aux798 #ElementOne([2, 1, 5, 3, 4], S_00001_00005)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux798, [2,2,4,4])
**VARIABLES**
DISCRETE aux799 #ElementOne([2, 1, 5, 3, 4], S_00004_00002)
{1..5}
DISCRETE aux800 #ElementOne([2, 1, 5, 3], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux800, [1,3,5,5])
**VARIABLES**
DISCRETE aux801 #ElementOne([2, 1, 5, 3, 4], S_00004_00004)
{1..5}
DISCRETE aux802 #ElementOne([2, 1, 5, 3, 4], S_00004_00005)
{1..5}
DISCRETE aux803 #ElementOne([2, 1, 5, 3, 4], S_00004_00003)
{1..5}
DISCRETE aux804 #ElementOne([2, 1, 5, 3, 4], S_00005_00002)
{1..5}
DISCRETE aux805 #ElementOne([2, 1, 5, 3, 4], S_00005_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux805, [2,2,4,4])
**VARIABLES**
DISCRETE aux806 #ElementOne([2, 1, 5, 3, 4], S_00005_00004)
{1..5}
DISCRETE aux807 #ElementOne([2, 1, 5, 3, 4], S_00005_00005)
{2..5}
DISCRETE aux808 #ElementOne([2, 1, 5, 3, 4], S_00005_00003)
{2..5}
DISCRETE aux809 #ElementOne([2, 1, 5, 3], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux809, [1,3,5,5])
**VARIABLES**
DISCRETE aux810 #ElementOne([2, 1, 5, 3, 4], S_00003_00004)
{1..5}
DISCRETE aux811 #ElementOne([2, 1, 5, 3, 4], S_00003_00005)
{1..5}
DISCRETE aux812 #ElementOne([2, 1, 5, 3, 4], S_00003_00003)
{2..5}
DISCRETE aux813 #ElementOne([2, 1, 4, 5, 3], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux813, [1,3,5,5])
**VARIABLES**
DISCRETE aux814 #ElementOne([2, 1, 4, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux814, [1,2,4,5])
**VARIABLES**
DISCRETE aux815 #ElementOne([2, 1, 4, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux815, [1,2,4,5])
**VARIABLES**
DISCRETE aux816 #ElementOne([2, 1, 4, 5, 3], S_00001_00005)
{2..3}
DISCRETE aux817 #ElementOne([2, 1, 4, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux817, [1,2,4,5])
**VARIABLES**
DISCRETE aux818 #ElementOne([2, 1, 4, 5, 3], S_00005_00002)
{1..5}
DISCRETE aux819 #ElementOne([2, 1, 4, 5, 3], S_00005_00001)
{2..3}
DISCRETE aux820 #ElementOne([2, 1, 4, 5, 3], S_00005_00005)
{2..5}
DISCRETE aux821 #ElementOne([2, 1, 4, 5, 3], S_00005_00003)
{2..5}
DISCRETE aux822 #ElementOne([2, 1, 4, 5, 3], S_00005_00004)
{1..5}
DISCRETE aux823 #ElementOne([2, 1, 4, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux823, [1,2,4,5])
**VARIABLES**
DISCRETE aux824 #ElementOne([2, 1, 4, 5, 3], S_00003_00005)
{1..5}
DISCRETE aux825 #ElementOne([2, 1, 4, 5, 3], S_00003_00003)
{2..5}
DISCRETE aux826 #ElementOne([2, 1, 4, 5, 3], S_00003_00004)
{1..5}
DISCRETE aux827 #ElementOne([2, 1, 4, 5, 3], S_00004_00002)
{1..5}
DISCRETE aux828 #ElementOne([2, 1, 4, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux828, [1,2,4,5])
**VARIABLES**
DISCRETE aux829 #ElementOne([2, 1, 4, 5, 3], S_00004_00005)
{1..5}
DISCRETE aux830 #ElementOne([2, 1, 4, 5, 3], S_00004_00003)
{1..5}
DISCRETE aux831 #ElementOne([2, 1, 4, 5, 3], S_00004_00004)
{1..5}
DISCRETE aux832 #ElementOne([2, 1, 5, 4, 3], S_00002_00005)
{1..4}
DISCRETE aux833 #ElementOne([2, 1, 5, 4], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux833, [1,2,4,5])
**VARIABLES**
DISCRETE aux834 #ElementOne([2, 1, 5, 4], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux834, [1,2,4,5])
**VARIABLES**
DISCRETE aux835 #ElementOne([2, 1, 5, 4, 3], S_00001_00005)
{2..3}
DISCRETE aux836 #ElementOne([2, 1, 5, 4], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux836, [1,2,4,5])
**VARIABLES**
DISCRETE aux837 #ElementOne([2, 1, 5, 4, 3], S_00005_00002)
{1..5}
DISCRETE aux838 #ElementOne([2, 1, 5, 4, 3], S_00005_00001)
{2..3}
DISCRETE aux839 #ElementOne([2, 1, 5, 4, 3], S_00005_00005)
{2..5}
DISCRETE aux840 #ElementOne([2, 1, 5, 4, 3], S_00005_00004)
{1..5}
DISCRETE aux841 #ElementOne([2, 1, 5, 4, 3], S_00005_00003)
{2..5}
DISCRETE aux842 #ElementOne([2, 1, 5, 4, 3], S_00004_00002)
{1..5}
DISCRETE aux843 #ElementOne([2, 1, 5, 4], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux843, [1,2,4,5])
**VARIABLES**
DISCRETE aux844 #ElementOne([2, 1, 5, 4, 3], S_00004_00005)
{1..5}
DISCRETE aux845 #ElementOne([2, 1, 5, 4, 3], S_00004_00004)
{1..5}
DISCRETE aux846 #ElementOne([2, 1, 5, 4, 3], S_00004_00003)
{1..5}
DISCRETE aux847 #ElementOne([2, 1, 5, 4], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux847, [1,2,4,5])
**VARIABLES**
DISCRETE aux848 #ElementOne([2, 1, 5, 4, 3], S_00003_00005)
{1..5}
DISCRETE aux849 #ElementOne([2, 1, 5, 4, 3], S_00003_00004)
{1..5}
DISCRETE aux850 #ElementOne([2, 1, 5, 4, 3], S_00003_00003)
{2..5}
DISCRETE aux851 #ElementOne([3, 1, 2, 4], S_00002_00003)
{1..4}
DISCRETE aux852 #ElementOne([3, 1, 2, 4], S_00002_00004)
{1..4}
DISCRETE aux853 #ElementOne([3, 1, 2, 4, 5], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux853, [1,1,3,5])
**VARIABLES**
DISCRETE aux854 #ElementOne([3, 1, 2, 4], S_00003_00002)
{1..4}
DISCRETE aux855 #ElementOne([3, 1, 2, 4, 5], S_00003_00003)
{2..5}
DISCRETE aux856 #ElementOne([3, 1, 2, 4, 5], S_00003_00004)
{1..5}
DISCRETE aux857 #ElementOne([3, 1, 2, 4, 5], S_00003_00005)
{1..5}
DISCRETE aux858 #ElementOne([3, 1, 2, 4], S_00001_00004)
{1..4}
DISCRETE aux859 #ElementOne([3, 1, 2, 4, 5], S_00001_00005)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux859, [3,3,5,5])
**VARIABLES**
DISCRETE aux860 #ElementOne([3, 1, 2, 4, 5], S_00004_00002)
{1..5}
DISCRETE aux861 #ElementOne([3, 1, 2, 4, 5], S_00004_00003)
{1..5}
DISCRETE aux862 #ElementOne([3, 1, 2, 4], S_00004_00001)
{1..4}
DISCRETE aux863 #ElementOne([3, 1, 2, 4, 5], S_00004_00004)
{1..5}
DISCRETE aux864 #ElementOne([3, 1, 2, 4, 5], S_00004_00005)
{1..5}
DISCRETE aux865 #ElementOne([3, 1, 2, 4, 5], S_00005_00002)
{1..5}
DISCRETE aux866 #ElementOne([3, 1, 2, 4, 5], S_00005_00003)
{2..5}
DISCRETE aux867 #ElementOne([3, 1, 2, 4, 5], S_00005_00001)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux867, [3,3,5,5])
**VARIABLES**
DISCRETE aux868 #ElementOne([3, 1, 2, 4, 5], S_00005_00004)
{1..5}
DISCRETE aux869 #ElementOne([3, 1, 2, 4, 5], S_00005_00005)
{2..5}
DISCRETE aux870 #ElementOne([3, 1, 2, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux870, [1,3,5,5])
**VARIABLES**
DISCRETE aux871 #ElementOne([3, 1, 2, 5, 4], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux871, [1,1,3,5])
**VARIABLES**
DISCRETE aux872 #ElementOne([3, 1, 2, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux872, [1,3,5,5])
**VARIABLES**
DISCRETE aux873 #ElementOne([3, 1, 2, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux873, [1,3,5,5])
**VARIABLES**
DISCRETE aux874 #ElementOne([3, 1, 2, 5, 4], S_00003_00003)
{2..5}
DISCRETE aux875 #ElementOne([3, 1, 2, 5, 4], S_00003_00005)
{1..5}
DISCRETE aux876 #ElementOne([3, 1, 2, 5, 4], S_00003_00004)
{1..5}
DISCRETE aux877 #ElementOne([3, 1, 2, 5, 4], S_00001_00005)
{3..4}
DISCRETE aux878 #ElementOne([3, 1, 2, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux878, [1,3,5,5])
**VARIABLES**
DISCRETE aux879 #ElementOne([3, 1, 2, 5, 4], S_00005_00002)
{1..5}
DISCRETE aux880 #ElementOne([3, 1, 2, 5, 4], S_00005_00003)
{2..5}
DISCRETE aux881 #ElementOne([3, 1, 2, 5, 4], S_00005_00001)
{3..4}
DISCRETE aux882 #ElementOne([3, 1, 2, 5, 4], S_00005_00005)
{2..5}
DISCRETE aux883 #ElementOne([3, 1, 2, 5, 4], S_00005_00004)
{1..5}
DISCRETE aux884 #ElementOne([3, 1, 2, 5, 4], S_00004_00002)
{1..5}
DISCRETE aux885 #ElementOne([3, 1, 2, 5, 4], S_00004_00003)
{1..5}
DISCRETE aux886 #ElementOne([3, 1, 2, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux886, [1,3,5,5])
**VARIABLES**
DISCRETE aux887 #ElementOne([3, 1, 2, 5, 4], S_00004_00005)
{1..5}
DISCRETE aux888 #ElementOne([3, 1, 2, 5, 4], S_00004_00004)
{1..5}
DISCRETE aux889 #ElementOne([4, 1, 2, 3], S_00002_00003)
{1..4}
DISCRETE aux890 #ElementOne([4, 1, 2, 3], S_00002_00004)
{1..4}
DISCRETE aux891 #ElementOne([4, 1, 2, 3, 5], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux891, [1,1,3,5])
**VARIABLES**
DISCRETE aux892 #ElementOne([4, 1, 2, 3], S_00003_00002)
{1..4}
DISCRETE aux893 #ElementOne([4, 1, 2, 3, 5], S_00003_00003)
{2..5}
DISCRETE aux894 #ElementOne([4, 1, 2, 3, 5], S_00003_00004)
{1..5}
DISCRETE aux895 #ElementOne([4, 1, 2, 3, 5], S_00003_00005)
{1..5}
DISCRETE aux896 #ElementOne([4, 1, 2, 3, 5], S_00004_00002)
{1..5}
DISCRETE aux897 #ElementOne([4, 1, 2, 3, 5], S_00004_00003)
{1..5}
DISCRETE aux898 #ElementOne([4, 1, 2, 3, 5], S_00004_00004)
{1..5}
DISCRETE aux899 #ElementOne([4, 1, 2, 3], S_00004_00001)
{1..4}
DISCRETE aux900 #ElementOne([4, 1, 2, 3, 5], S_00004_00005)
{1..5}
DISCRETE aux901 #ElementOne([4, 1, 2, 3], S_00001_00004)
{1..4}
DISCRETE aux902 #ElementOne([4, 1, 2, 3, 5], S_00001_00005)
{4..5}
DISCRETE aux903 #ElementOne([4, 1, 2, 3, 5], S_00005_00002)
{1..5}
DISCRETE aux904 #ElementOne([4, 1, 2, 3, 5], S_00005_00003)
{2..5}
DISCRETE aux905 #ElementOne([4, 1, 2, 3, 5], S_00005_00004)
{1..5}
DISCRETE aux906 #ElementOne([4, 1, 2, 3, 5], S_00005_00001)
{4..5}
DISCRETE aux907 #ElementOne([4, 1, 2, 3, 5], S_00005_00005)
{2..5}
DISCRETE aux908 #ElementOne([5, 1, 2, 3], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux908, [1,3,5,5])
**VARIABLES**
DISCRETE aux909 #ElementOne([5, 1, 2, 3], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux909, [1,3,5,5])
**VARIABLES**
DISCRETE aux910 #ElementOne([5, 1, 2, 3, 4], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux910, [1,1,3,5])
**VARIABLES**
DISCRETE aux911 #ElementOne([5, 1, 2, 3], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux911, [1,3,5,5])
**VARIABLES**
DISCRETE aux912 #ElementOne([5, 1, 2, 3, 4], S_00003_00003)
{2..5}
DISCRETE aux913 #ElementOne([5, 1, 2, 3, 4], S_00003_00004)
{1..5}
DISCRETE aux914 #ElementOne([5, 1, 2, 3, 4], S_00003_00005)
{1..5}
DISCRETE aux915 #ElementOne([5, 1, 2, 3, 4], S_00004_00002)
{1..5}
DISCRETE aux916 #ElementOne([5, 1, 2, 3, 4], S_00004_00003)
{1..5}
DISCRETE aux917 #ElementOne([5, 1, 2, 3, 4], S_00004_00004)
{1..5}
DISCRETE aux918 #ElementOne([5, 1, 2, 3, 4], S_00004_00005)
{1..5}
DISCRETE aux919 #ElementOne([5, 1, 2, 3], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux919, [1,3,5,5])
**VARIABLES**
DISCRETE aux920 #ElementOne([5, 1, 2, 3, 4], S_00005_00002)
{1..5}
DISCRETE aux921 #ElementOne([5, 1, 2, 3, 4], S_00005_00003)
{2..5}
DISCRETE aux922 #ElementOne([5, 1, 2, 3, 4], S_00005_00004)
{1..5}
DISCRETE aux923 #ElementOne([5, 1, 2, 3, 4], S_00005_00005)
{2..5}
DISCRETE aux924 #ElementOne([5, 1, 2, 3, 4], S_00005_00001)
{4..5}
DISCRETE aux925 #ElementOne([5, 1, 2, 3], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux925, [1,3,5,5])
**VARIABLES**
DISCRETE aux926 #ElementOne([5, 1, 2, 3, 4], S_00001_00005)
{4..5}
DISCRETE aux927 #ElementOne([4, 1, 2, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux927, [1,2,4,5])
**VARIABLES**
DISCRETE aux928 #ElementOne([4, 1, 2, 5, 3], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux928, [1,1,3,5])
**VARIABLES**
DISCRETE aux929 #ElementOne([4, 1, 2, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux929, [1,2,4,5])
**VARIABLES**
DISCRETE aux930 #ElementOne([4, 1, 2, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux930, [1,2,4,5])
**VARIABLES**
DISCRETE aux931 #ElementOne([4, 1, 2, 5, 3], S_00003_00003)
{2..5}
DISCRETE aux932 #ElementOne([4, 1, 2, 5, 3], S_00003_00005)
{1..5}
DISCRETE aux933 #ElementOne([4, 1, 2, 5, 3], S_00003_00004)
{1..5}
DISCRETE aux934 #ElementOne([4, 1, 2, 5, 3], S_00005_00002)
{1..5}
DISCRETE aux935 #ElementOne([4, 1, 2, 5, 3], S_00005_00003)
{2..5}
DISCRETE aux936 #ElementOne([4, 1, 2, 5, 3], S_00005_00005)
{2..5}
DISCRETE aux937 #ElementOne([4, 1, 2, 5, 3], S_00005_00001)
{3..4}
DISCRETE aux938 #ElementOne([4, 1, 2, 5, 3], S_00005_00004)
{1..5}
DISCRETE aux939 #ElementOne([4, 1, 2, 5, 3], S_00001_00005)
{3..4}
DISCRETE aux940 #ElementOne([4, 1, 2, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux940, [1,2,4,5])
**VARIABLES**
DISCRETE aux941 #ElementOne([4, 1, 2, 5, 3], S_00004_00002)
{1..5}
DISCRETE aux942 #ElementOne([4, 1, 2, 5, 3], S_00004_00003)
{1..5}
DISCRETE aux943 #ElementOne([4, 1, 2, 5, 3], S_00004_00005)
{1..5}
DISCRETE aux944 #ElementOne([4, 1, 2, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux944, [1,2,4,5])
**VARIABLES**
DISCRETE aux945 #ElementOne([4, 1, 2, 5, 3], S_00004_00004)
{1..5}
DISCRETE aux946 #ElementOne([5, 1, 2, 4], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux946, [1,2,4,5])
**VARIABLES**
DISCRETE aux947 #ElementOne([5, 1, 2, 4, 3], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux947, [1,1,3,5])
**VARIABLES**
DISCRETE aux948 #ElementOne([5, 1, 2, 4], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux948, [1,2,4,5])
**VARIABLES**
DISCRETE aux949 #ElementOne([5, 1, 2, 4], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux949, [1,2,4,5])
**VARIABLES**
DISCRETE aux950 #ElementOne([5, 1, 2, 4, 3], S_00003_00003)
{2..5}
DISCRETE aux951 #ElementOne([5, 1, 2, 4, 3], S_00003_00005)
{1..5}
DISCRETE aux952 #ElementOne([5, 1, 2, 4, 3], S_00003_00004)
{1..5}
DISCRETE aux953 #ElementOne([5, 1, 2, 4, 3], S_00005_00002)
{1..5}
DISCRETE aux954 #ElementOne([5, 1, 2, 4, 3], S_00005_00003)
{2..5}
DISCRETE aux955 #ElementOne([5, 1, 2, 4, 3], S_00005_00005)
{2..5}
DISCRETE aux956 #ElementOne([5, 1, 2, 4, 3], S_00005_00004)
{1..5}
DISCRETE aux957 #ElementOne([5, 1, 2, 4, 3], S_00005_00001)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux957, [3,3,5,5])
**VARIABLES**
DISCRETE aux958 #ElementOne([5, 1, 2, 4, 3], S_00004_00002)
{1..5}
DISCRETE aux959 #ElementOne([5, 1, 2, 4, 3], S_00004_00003)
{1..5}
DISCRETE aux960 #ElementOne([5, 1, 2, 4, 3], S_00004_00005)
{1..5}
DISCRETE aux961 #ElementOne([5, 1, 2, 4, 3], S_00004_00004)
{1..5}
DISCRETE aux962 #ElementOne([5, 1, 2, 4], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux962, [1,2,4,5])
**VARIABLES**
DISCRETE aux963 #ElementOne([5, 1, 2, 4, 3], S_00001_00005)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux963, [3,3,5,5])
**VARIABLES**
DISCRETE aux964 #ElementOne([5, 1, 2, 4], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux964, [1,2,4,5])
**VARIABLES**
DISCRETE aux965 #ElementOne([3, 1, 4, 2], S_00002_00004)
{1..4}
DISCRETE aux966 #ElementOne([3, 1, 4, 2], S_00002_00003)
{1..4}
DISCRETE aux967 #ElementOne([3, 1, 4, 2, 5], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux967, [1,3,5,5])
**VARIABLES**
DISCRETE aux968 #ElementOne([3, 1, 4, 2, 5], S_00004_00002)
{1..5}
DISCRETE aux969 #ElementOne([3, 1, 4, 2, 5], S_00004_00004)
{1..5}
DISCRETE aux970 #ElementOne([3, 1, 4, 2], S_00004_00001)
{1..4}
DISCRETE aux971 #ElementOne([3, 1, 4, 2, 5], S_00004_00003)
{1..5}
DISCRETE aux972 #ElementOne([3, 1, 4, 2, 5], S_00004_00005)
{1..5}
DISCRETE aux973 #ElementOne([3, 1, 4, 2], S_00001_00004)
{1..4}
DISCRETE aux974 #ElementOne([3, 1, 4, 2, 5], S_00001_00005)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux974, [3,3,5,5])
**VARIABLES**
DISCRETE aux975 #ElementOne([3, 1, 4, 2], S_00003_00002)
{1..4}
DISCRETE aux976 #ElementOne([3, 1, 4, 2, 5], S_00003_00004)
{1..5}
DISCRETE aux977 #ElementOne([3, 1, 4, 2, 5], S_00003_00003)
{2..5}
DISCRETE aux978 #ElementOne([3, 1, 4, 2, 5], S_00003_00005)
{1..5}
DISCRETE aux979 #ElementOne([3, 1, 4, 2, 5], S_00005_00002)
{1..5}
DISCRETE aux980 #ElementOne([3, 1, 4, 2, 5], S_00005_00004)
{1..5}
DISCRETE aux981 #ElementOne([3, 1, 4, 2, 5], S_00005_00001)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux981, [3,3,5,5])
**VARIABLES**
DISCRETE aux982 #ElementOne([3, 1, 4, 2, 5], S_00005_00003)
{2..5}
DISCRETE aux983 #ElementOne([3, 1, 4, 2, 5], S_00005_00005)
{2..5}
DISCRETE aux984 #ElementOne([3, 1, 5, 2], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux984, [1,3,5,5])
**VARIABLES**
DISCRETE aux985 #ElementOne([3, 1, 5, 2, 4], S_00002_00005)
{1..4}
DISCRETE aux986 #ElementOne([3, 1, 5, 2], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux986, [1,3,5,5])
**VARIABLES**
DISCRETE aux987 #ElementOne([3, 1, 5, 2, 4], S_00004_00002)
{1..5}
DISCRETE aux988 #ElementOne([3, 1, 5, 2, 4], S_00004_00004)
{1..5}
DISCRETE aux989 #ElementOne([3, 1, 5, 2], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux989, [1,3,5,5])
**VARIABLES**
DISCRETE aux990 #ElementOne([3, 1, 5, 2, 4], S_00004_00005)
{1..5}
DISCRETE aux991 #ElementOne([3, 1, 5, 2, 4], S_00004_00003)
{1..5}
DISCRETE aux992 #ElementOne([3, 1, 5, 2], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux992, [1,3,5,5])
**VARIABLES**
DISCRETE aux993 #ElementOne([3, 1, 5, 2, 4], S_00001_00005)
{3..4}
DISCRETE aux994 #ElementOne([3, 1, 5, 2, 4], S_00005_00002)
{1..5}
DISCRETE aux995 #ElementOne([3, 1, 5, 2, 4], S_00005_00004)
{1..5}
DISCRETE aux996 #ElementOne([3, 1, 5, 2, 4], S_00005_00001)
{3..4}
DISCRETE aux997 #ElementOne([3, 1, 5, 2, 4], S_00005_00005)
{2..5}
DISCRETE aux998 #ElementOne([3, 1, 5, 2, 4], S_00005_00003)
{2..5}
DISCRETE aux999 #ElementOne([3, 1, 5, 2], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux999, [1,3,5,5])
**VARIABLES**
DISCRETE aux1000 #ElementOne([3, 1, 5, 2, 4], S_00003_00004)
{1..5}
DISCRETE aux1001 #ElementOne([3, 1, 5, 2, 4], S_00003_00005)
{1..5}
DISCRETE aux1002 #ElementOne([3, 1, 5, 2, 4], S_00003_00003)
{2..5}
DISCRETE aux1003 #ElementOne([4, 1, 3, 2], S_00002_00004)
{1..4}
DISCRETE aux1004 #ElementOne([4, 1, 3, 2], S_00002_00003)
{1..4}
DISCRETE aux1005 #ElementOne([4, 1, 3, 2, 5], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1005, [1,2,4,5])
**VARIABLES**
DISCRETE aux1006 #ElementOne([4, 1, 3, 2, 5], S_00004_00002)
{1..5}
DISCRETE aux1007 #ElementOne([4, 1, 3, 2, 5], S_00004_00004)
{1..5}
DISCRETE aux1008 #ElementOne([4, 1, 3, 2, 5], S_00004_00003)
{1..5}
DISCRETE aux1009 #ElementOne([4, 1, 3, 2], S_00004_00001)
{1..4}
DISCRETE aux1010 #ElementOne([4, 1, 3, 2, 5], S_00004_00005)
{1..5}
DISCRETE aux1011 #ElementOne([4, 1, 3, 2], S_00003_00002)
{1..4}
DISCRETE aux1012 #ElementOne([4, 1, 3, 2, 5], S_00003_00004)
{1..5}
DISCRETE aux1013 #ElementOne([4, 1, 3, 2, 5], S_00003_00003)
{2..5}
DISCRETE aux1014 #ElementOne([4, 1, 3, 2, 5], S_00003_00005)
{1..5}
DISCRETE aux1015 #ElementOne([4, 1, 3, 2], S_00001_00004)
{1..4}
DISCRETE aux1016 #ElementOne([4, 1, 3, 2, 5], S_00001_00005)
{4..5}
DISCRETE aux1017 #ElementOne([4, 1, 3, 2, 5], S_00005_00002)
{1..5}
DISCRETE aux1018 #ElementOne([4, 1, 3, 2, 5], S_00005_00004)
{1..5}
DISCRETE aux1019 #ElementOne([4, 1, 3, 2, 5], S_00005_00003)
{2..5}
DISCRETE aux1020 #ElementOne([4, 1, 3, 2, 5], S_00005_00001)
{4..5}
DISCRETE aux1021 #ElementOne([4, 1, 3, 2, 5], S_00005_00005)
{2..5}
DISCRETE aux1022 #ElementOne([5, 1, 3, 2], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1022, [1,3,5,5])
**VARIABLES**
DISCRETE aux1023 #ElementOne([5, 1, 3, 2], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1023, [1,3,5,5])
**VARIABLES**
DISCRETE aux1024 #ElementOne([5, 1, 3, 2, 4], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1024, [1,2,4,5])
**VARIABLES**
DISCRETE aux1025 #ElementOne([5, 1, 3, 2, 4], S_00004_00002)
{1..5}
DISCRETE aux1026 #ElementOne([5, 1, 3, 2, 4], S_00004_00004)
{1..5}
DISCRETE aux1027 #ElementOne([5, 1, 3, 2, 4], S_00004_00003)
{1..5}
DISCRETE aux1028 #ElementOne([5, 1, 3, 2, 4], S_00004_00005)
{1..5}
DISCRETE aux1029 #ElementOne([5, 1, 3, 2], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1029, [1,3,5,5])
**VARIABLES**
DISCRETE aux1030 #ElementOne([5, 1, 3, 2], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1030, [1,3,5,5])
**VARIABLES**
DISCRETE aux1031 #ElementOne([5, 1, 3, 2, 4], S_00003_00004)
{1..5}
DISCRETE aux1032 #ElementOne([5, 1, 3, 2, 4], S_00003_00003)
{2..5}
DISCRETE aux1033 #ElementOne([5, 1, 3, 2, 4], S_00003_00005)
{1..5}
DISCRETE aux1034 #ElementOne([5, 1, 3, 2, 4], S_00005_00002)
{1..5}
DISCRETE aux1035 #ElementOne([5, 1, 3, 2, 4], S_00005_00004)
{1..5}
DISCRETE aux1036 #ElementOne([5, 1, 3, 2, 4], S_00005_00003)
{2..5}
DISCRETE aux1037 #ElementOne([5, 1, 3, 2, 4], S_00005_00005)
{2..5}
DISCRETE aux1038 #ElementOne([5, 1, 3, 2, 4], S_00005_00001)
{4..5}
DISCRETE aux1039 #ElementOne([5, 1, 3, 2], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1039, [1,3,5,5])
**VARIABLES**
DISCRETE aux1040 #ElementOne([5, 1, 3, 2, 4], S_00001_00005)
{4..5}
DISCRETE aux1041 #ElementOne([4, 1, 5, 2], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1041, [1,2,4,5])
**VARIABLES**
DISCRETE aux1042 #ElementOne([4, 1, 5, 2, 3], S_00002_00005)
{1..4}
DISCRETE aux1043 #ElementOne([4, 1, 5, 2], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1043, [1,2,4,5])
**VARIABLES**
DISCRETE aux1044 #ElementOne([4, 1, 5, 2, 3], S_00004_00002)
{1..5}
DISCRETE aux1045 #ElementOne([4, 1, 5, 2, 3], S_00004_00004)
{1..5}
DISCRETE aux1046 #ElementOne([4, 1, 5, 2, 3], S_00004_00005)
{1..5}
DISCRETE aux1047 #ElementOne([4, 1, 5, 2], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1047, [1,2,4,5])
**VARIABLES**
DISCRETE aux1048 #ElementOne([4, 1, 5, 2, 3], S_00004_00003)
{1..5}
DISCRETE aux1049 #ElementOne([4, 1, 5, 2, 3], S_00005_00002)
{1..5}
DISCRETE aux1050 #ElementOne([4, 1, 5, 2, 3], S_00005_00004)
{1..5}
DISCRETE aux1051 #ElementOne([4, 1, 5, 2, 3], S_00005_00005)
{2..5}
DISCRETE aux1052 #ElementOne([4, 1, 5, 2, 3], S_00005_00001)
{3..4}
DISCRETE aux1053 #ElementOne([4, 1, 5, 2, 3], S_00005_00003)
{2..5}
DISCRETE aux1054 #ElementOne([4, 1, 5, 2], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1054, [1,2,4,5])
**VARIABLES**
DISCRETE aux1055 #ElementOne([4, 1, 5, 2, 3], S_00001_00005)
{3..4}
DISCRETE aux1056 #ElementOne([4, 1, 5, 2], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1056, [1,2,4,5])
**VARIABLES**
DISCRETE aux1057 #ElementOne([4, 1, 5, 2, 3], S_00003_00004)
{1..5}
DISCRETE aux1058 #ElementOne([4, 1, 5, 2, 3], S_00003_00005)
{1..5}
DISCRETE aux1059 #ElementOne([4, 1, 5, 2, 3], S_00003_00003)
{2..5}
DISCRETE aux1060 #ElementOne([5, 1, 4, 2], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1060, [1,2,4,5])
**VARIABLES**
DISCRETE aux1061 #ElementOne([5, 1, 4, 2, 3], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1061, [1,3,5,5])
**VARIABLES**
DISCRETE aux1062 #ElementOne([5, 1, 4, 2], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1062, [1,2,4,5])
**VARIABLES**
DISCRETE aux1063 #ElementOne([5, 1, 4, 2, 3], S_00004_00002)
{1..5}
DISCRETE aux1064 #ElementOne([5, 1, 4, 2, 3], S_00004_00004)
{1..5}
DISCRETE aux1065 #ElementOne([5, 1, 4, 2, 3], S_00004_00005)
{1..5}
DISCRETE aux1066 #ElementOne([5, 1, 4, 2, 3], S_00004_00003)
{1..5}
DISCRETE aux1067 #ElementOne([5, 1, 4, 2], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1067, [1,2,4,5])
**VARIABLES**
DISCRETE aux1068 #ElementOne([5, 1, 4, 2, 3], S_00005_00002)
{1..5}
DISCRETE aux1069 #ElementOne([5, 1, 4, 2, 3], S_00005_00004)
{1..5}
DISCRETE aux1070 #ElementOne([5, 1, 4, 2, 3], S_00005_00005)
{2..5}
DISCRETE aux1071 #ElementOne([5, 1, 4, 2, 3], S_00005_00003)
{2..5}
DISCRETE aux1072 #ElementOne([5, 1, 4, 2, 3], S_00005_00001)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1072, [3,3,5,5])
**VARIABLES**
DISCRETE aux1073 #ElementOne([5, 1, 4, 2], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1073, [1,2,4,5])
**VARIABLES**
DISCRETE aux1074 #ElementOne([5, 1, 4, 2, 3], S_00003_00004)
{1..5}
DISCRETE aux1075 #ElementOne([5, 1, 4, 2, 3], S_00003_00005)
{1..5}
DISCRETE aux1076 #ElementOne([5, 1, 4, 2, 3], S_00003_00003)
{2..5}
DISCRETE aux1077 #ElementOne([5, 1, 4, 2], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1077, [1,2,4,5])
**VARIABLES**
DISCRETE aux1078 #ElementOne([5, 1, 4, 2, 3], S_00001_00005)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1078, [3,3,5,5])
**VARIABLES**
DISCRETE aux1079 #ElementOne([3, 1, 4, 5, 2], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1079, [1,3,5,5])
**VARIABLES**
DISCRETE aux1080 #ElementOne([3, 1, 4, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1080, [1,1,3,5])
**VARIABLES**
DISCRETE aux1081 #ElementOne([3, 1, 4, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1081, [1,1,3,5])
**VARIABLES**
DISCRETE aux1082 #ElementOne([3, 1, 4, 5, 2], S_00005_00002)
{1..5}
DISCRETE aux1083 #ElementOne([3, 1, 4, 5, 2], S_00005_00005)
{2..5}
DISCRETE aux1084 #ElementOne([3, 1, 4, 5, 2], S_00005_00001)
{2..3}
DISCRETE aux1085 #ElementOne([3, 1, 4, 5, 2], S_00005_00003)
{2..5}
DISCRETE aux1086 #ElementOne([3, 1, 4, 5, 2], S_00005_00004)
{1..5}
DISCRETE aux1087 #ElementOne([3, 1, 4, 5, 2], S_00001_00005)
{2..3}
DISCRETE aux1088 #ElementOne([3, 1, 4, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1088, [1,1,3,5])
**VARIABLES**
DISCRETE aux1089 #ElementOne([3, 1, 4, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1089, [1,1,3,5])
**VARIABLES**
DISCRETE aux1090 #ElementOne([3, 1, 4, 5, 2], S_00003_00005)
{1..5}
DISCRETE aux1091 #ElementOne([3, 1, 4, 5, 2], S_00003_00003)
{2..5}
DISCRETE aux1092 #ElementOne([3, 1, 4, 5, 2], S_00003_00004)
{1..5}
DISCRETE aux1093 #ElementOne([3, 1, 4, 5, 2], S_00004_00002)
{1..5}
DISCRETE aux1094 #ElementOne([3, 1, 4, 5, 2], S_00004_00005)
{1..5}
DISCRETE aux1095 #ElementOne([3, 1, 4, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1095, [1,1,3,5])
**VARIABLES**
DISCRETE aux1096 #ElementOne([3, 1, 4, 5, 2], S_00004_00003)
{1..5}
DISCRETE aux1097 #ElementOne([3, 1, 4, 5, 2], S_00004_00004)
{1..5}
DISCRETE aux1098 #ElementOne([3, 1, 5, 4, 2], S_00002_00005)
{1..4}
DISCRETE aux1099 #ElementOne([3, 1, 5, 4], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1099, [1,1,3,5])
**VARIABLES**
DISCRETE aux1100 #ElementOne([3, 1, 5, 4], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1100, [1,1,3,5])
**VARIABLES**
DISCRETE aux1101 #ElementOne([3, 1, 5, 4, 2], S_00005_00002)
{1..5}
DISCRETE aux1102 #ElementOne([3, 1, 5, 4, 2], S_00005_00005)
{2..5}
DISCRETE aux1103 #ElementOne([3, 1, 5, 4, 2], S_00005_00001)
{2..3}
DISCRETE aux1104 #ElementOne([3, 1, 5, 4, 2], S_00005_00004)
{1..5}
DISCRETE aux1105 #ElementOne([3, 1, 5, 4, 2], S_00005_00003)
{2..5}
DISCRETE aux1106 #ElementOne([3, 1, 5, 4, 2], S_00001_00005)
{2..3}
DISCRETE aux1107 #ElementOne([3, 1, 5, 4], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1107, [1,1,3,5])
**VARIABLES**
DISCRETE aux1108 #ElementOne([3, 1, 5, 4, 2], S_00004_00002)
{1..5}
DISCRETE aux1109 #ElementOne([3, 1, 5, 4, 2], S_00004_00005)
{1..5}
DISCRETE aux1110 #ElementOne([3, 1, 5, 4], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1110, [1,1,3,5])
**VARIABLES**
DISCRETE aux1111 #ElementOne([3, 1, 5, 4, 2], S_00004_00004)
{1..5}
DISCRETE aux1112 #ElementOne([3, 1, 5, 4, 2], S_00004_00003)
{1..5}
DISCRETE aux1113 #ElementOne([3, 1, 5, 4], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1113, [1,1,3,5])
**VARIABLES**
DISCRETE aux1114 #ElementOne([3, 1, 5, 4, 2], S_00003_00005)
{1..5}
DISCRETE aux1115 #ElementOne([3, 1, 5, 4, 2], S_00003_00004)
{1..5}
DISCRETE aux1116 #ElementOne([3, 1, 5, 4, 2], S_00003_00003)
{2..5}
DISCRETE aux1117 #ElementOne([4, 1, 3, 5, 2], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1117, [1,2,4,5])
**VARIABLES**
DISCRETE aux1118 #ElementOne([4, 1, 3, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1118, [1,1,3,5])
**VARIABLES**
DISCRETE aux1119 #ElementOne([4, 1, 3, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1119, [1,1,3,5])
**VARIABLES**
DISCRETE aux1120 #ElementOne([4, 1, 3, 5, 2], S_00005_00002)
{1..5}
DISCRETE aux1121 #ElementOne([4, 1, 3, 5, 2], S_00005_00005)
{2..5}
DISCRETE aux1122 #ElementOne([4, 1, 3, 5, 2], S_00005_00003)
{2..5}
DISCRETE aux1123 #ElementOne([4, 1, 3, 5, 2], S_00005_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux1123, [2,2,4,4])
**VARIABLES**
DISCRETE aux1124 #ElementOne([4, 1, 3, 5, 2], S_00005_00004)
{1..5}
DISCRETE aux1125 #ElementOne([4, 1, 3, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1125, [1,1,3,5])
**VARIABLES**
DISCRETE aux1126 #ElementOne([4, 1, 3, 5, 2], S_00003_00005)
{1..5}
DISCRETE aux1127 #ElementOne([4, 1, 3, 5, 2], S_00003_00003)
{2..5}
DISCRETE aux1128 #ElementOne([4, 1, 3, 5, 2], S_00003_00004)
{1..5}
DISCRETE aux1129 #ElementOne([4, 1, 3, 5, 2], S_00001_00005)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux1129, [2,2,4,4])
**VARIABLES**
DISCRETE aux1130 #ElementOne([4, 1, 3, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1130, [1,1,3,5])
**VARIABLES**
DISCRETE aux1131 #ElementOne([4, 1, 3, 5, 2], S_00004_00002)
{1..5}
DISCRETE aux1132 #ElementOne([4, 1, 3, 5, 2], S_00004_00005)
{1..5}
DISCRETE aux1133 #ElementOne([4, 1, 3, 5, 2], S_00004_00003)
{1..5}
DISCRETE aux1134 #ElementOne([4, 1, 3, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1134, [1,1,3,5])
**VARIABLES**
DISCRETE aux1135 #ElementOne([4, 1, 3, 5, 2], S_00004_00004)
{1..5}
DISCRETE aux1136 #ElementOne([5, 1, 3, 4, 2], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1136, [1,2,4,5])
**VARIABLES**
DISCRETE aux1137 #ElementOne([5, 1, 3, 4], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1137, [1,1,3,5])
**VARIABLES**
DISCRETE aux1138 #ElementOne([5, 1, 3, 4], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1138, [1,1,3,5])
**VARIABLES**
DISCRETE aux1139 #ElementOne([5, 1, 3, 4, 2], S_00005_00002)
{1..5}
DISCRETE aux1140 #ElementOne([5, 1, 3, 4, 2], S_00005_00005)
{2..5}
DISCRETE aux1141 #ElementOne([5, 1, 3, 4, 2], S_00005_00003)
{2..5}
DISCRETE aux1142 #ElementOne([5, 1, 3, 4, 2], S_00005_00004)
{1..5}
DISCRETE aux1143 #ElementOne([5, 1, 3, 4, 2], S_00005_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux1143, [2,2,5,5])
**VARIABLES**
DISCRETE aux1144 #ElementOne([5, 1, 3, 4], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1144, [1,1,3,5])
**VARIABLES**
DISCRETE aux1145 #ElementOne([5, 1, 3, 4, 2], S_00003_00005)
{1..5}
DISCRETE aux1146 #ElementOne([5, 1, 3, 4, 2], S_00003_00003)
{2..5}
DISCRETE aux1147 #ElementOne([5, 1, 3, 4, 2], S_00003_00004)
{1..5}
DISCRETE aux1148 #ElementOne([5, 1, 3, 4, 2], S_00004_00002)
{1..5}
DISCRETE aux1149 #ElementOne([5, 1, 3, 4, 2], S_00004_00005)
{1..5}
DISCRETE aux1150 #ElementOne([5, 1, 3, 4, 2], S_00004_00003)
{1..5}
DISCRETE aux1151 #ElementOne([5, 1, 3, 4, 2], S_00004_00004)
{1..5}
DISCRETE aux1152 #ElementOne([5, 1, 3, 4], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1152, [1,1,3,5])
**VARIABLES**
DISCRETE aux1153 #ElementOne([5, 1, 3, 4, 2], S_00001_00005)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux1153, [2,2,5,5])
**VARIABLES**
DISCRETE aux1154 #ElementOne([5, 1, 3, 4], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1154, [1,1,3,5])
**VARIABLES**
DISCRETE aux1155 #ElementOne([4, 1, 5, 3, 2], S_00002_00005)
{1..4}
DISCRETE aux1156 #ElementOne([4, 1, 5, 3], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1156, [1,1,3,5])
**VARIABLES**
DISCRETE aux1157 #ElementOne([4, 1, 5, 3], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1157, [1,1,3,5])
**VARIABLES**
DISCRETE aux1158 #ElementOne([4, 1, 5, 3, 2], S_00005_00002)
{1..5}
DISCRETE aux1159 #ElementOne([4, 1, 5, 3, 2], S_00005_00005)
{2..5}
DISCRETE aux1160 #ElementOne([4, 1, 5, 3, 2], S_00005_00004)
{1..5}
DISCRETE aux1161 #ElementOne([4, 1, 5, 3, 2], S_00005_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux1161, [2,2,4,4])
**VARIABLES**
DISCRETE aux1162 #ElementOne([4, 1, 5, 3, 2], S_00005_00003)
{2..5}
DISCRETE aux1163 #ElementOne([4, 1, 5, 3, 2], S_00004_00002)
{1..5}
DISCRETE aux1164 #ElementOne([4, 1, 5, 3, 2], S_00004_00005)
{1..5}
DISCRETE aux1165 #ElementOne([4, 1, 5, 3, 2], S_00004_00004)
{1..5}
DISCRETE aux1166 #ElementOne([4, 1, 5, 3], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1166, [1,1,3,5])
**VARIABLES**
DISCRETE aux1167 #ElementOne([4, 1, 5, 3, 2], S_00004_00003)
{1..5}
DISCRETE aux1168 #ElementOne([4, 1, 5, 3, 2], S_00001_00005)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux1168, [2,2,4,4])
**VARIABLES**
DISCRETE aux1169 #ElementOne([4, 1, 5, 3], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1169, [1,1,3,5])
**VARIABLES**
DISCRETE aux1170 #ElementOne([4, 1, 5, 3], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1170, [1,1,3,5])
**VARIABLES**
DISCRETE aux1171 #ElementOne([4, 1, 5, 3, 2], S_00003_00005)
{1..5}
DISCRETE aux1172 #ElementOne([4, 1, 5, 3, 2], S_00003_00004)
{1..5}
DISCRETE aux1173 #ElementOne([4, 1, 5, 3, 2], S_00003_00003)
{2..5}
DISCRETE aux1174 #ElementOne([5, 1, 4, 3, 2], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1174, [1,3,5,5])
**VARIABLES**
DISCRETE aux1175 #ElementOne([5, 1, 4, 3], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1175, [1,1,3,5])
**VARIABLES**
DISCRETE aux1176 #ElementOne([5, 1, 4, 3], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1176, [1,1,3,5])
**VARIABLES**
DISCRETE aux1177 #ElementOne([5, 1, 4, 3, 2], S_00005_00002)
{1..5}
DISCRETE aux1178 #ElementOne([5, 1, 4, 3, 2], S_00005_00005)
{2..5}
DISCRETE aux1179 #ElementOne([5, 1, 4, 3, 2], S_00005_00004)
{1..5}
DISCRETE aux1180 #ElementOne([5, 1, 4, 3, 2], S_00005_00003)
{2..5}
DISCRETE aux1181 #ElementOne([5, 1, 4, 3, 2], S_00005_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux1181, [2,2,5,5])
**VARIABLES**
DISCRETE aux1182 #ElementOne([5, 1, 4, 3, 2], S_00004_00002)
{1..5}
DISCRETE aux1183 #ElementOne([5, 1, 4, 3, 2], S_00004_00005)
{1..5}
DISCRETE aux1184 #ElementOne([5, 1, 4, 3, 2], S_00004_00004)
{1..5}
DISCRETE aux1185 #ElementOne([5, 1, 4, 3, 2], S_00004_00003)
{1..5}
DISCRETE aux1186 #ElementOne([5, 1, 4, 3], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1186, [1,1,3,5])
**VARIABLES**
DISCRETE aux1187 #ElementOne([5, 1, 4, 3], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1187, [1,1,3,5])
**VARIABLES**
DISCRETE aux1188 #ElementOne([5, 1, 4, 3, 2], S_00003_00005)
{1..5}
DISCRETE aux1189 #ElementOne([5, 1, 4, 3, 2], S_00003_00004)
{1..5}
DISCRETE aux1190 #ElementOne([5, 1, 4, 3, 2], S_00003_00003)
{2..5}
DISCRETE aux1191 #ElementOne([5, 1, 4, 3, 2], S_00001_00005)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux1191, [2,2,5,5])
**VARIABLES**
DISCRETE aux1192 #ElementOne([5, 1, 4, 3], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1192, [1,1,3,5])
**VARIABLES**
DISCRETE aux1193 #ElementOne([2, 3, 1, 4, 5], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1193, [1,2,4,5])
**VARIABLES**
DISCRETE aux1194 #ElementOne([2, 3, 1, 4], S_00003_00002)
{1..4}
DISCRETE aux1195 #ElementOne([2, 3, 1, 4, 5], S_00003_00004)
{1..5}
DISCRETE aux1196 #ElementOne([2, 3, 1, 4, 5], S_00003_00005)
{1..5}
DISCRETE aux1197 #ElementOne([2, 3, 1, 4], S_00001_00004)
{1..4}
DISCRETE aux1198 #ElementOne([2, 3, 1, 4, 5], S_00001_00005)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux1198, [2,2,5,5])
**VARIABLES**
DISCRETE aux1199 #ElementOne([2, 3, 1, 4], S_00002_00003)
{1..4}
DISCRETE aux1200 #ElementOne([2, 3, 1, 4], S_00002_00004)
{1..4}
DISCRETE aux1201 #ElementOne([2, 3, 1, 4, 5], S_00002_00005)
{2..5}
DISCRETE aux1202 #ElementOne([2, 3, 1, 4, 5], S_00004_00003)
{1..5}
DISCRETE aux1203 #ElementOne([2, 3, 1, 4], S_00004_00001)
{1..4}
DISCRETE aux1204 #ElementOne([2, 3, 1, 4, 5], S_00004_00002)
{1..5}
DISCRETE aux1205 #ElementOne([2, 3, 1, 4, 5], S_00004_00004)
{1..5}
DISCRETE aux1206 #ElementOne([2, 3, 1, 4, 5], S_00004_00005)
{1..5}
DISCRETE aux1207 #ElementOne([2, 3, 1, 4, 5], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1207, [1,2,4,5])
**VARIABLES**
DISCRETE aux1208 #ElementOne([2, 3, 1, 4, 5], S_00005_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux1208, [2,2,5,5])
**VARIABLES**
DISCRETE aux1209 #ElementOne([2, 3, 1, 4, 5], S_00005_00002)
{1..5}
DISCRETE aux1210 #ElementOne([2, 3, 1, 4, 5], S_00005_00004)
{1..5}
DISCRETE aux1211 #ElementOne([2, 3, 1, 4, 5], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1211, [1,2,4,5])
**VARIABLES**
DISCRETE aux1212 #ElementOne([2, 3, 1, 5, 4], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1212, [1,2,4,5])
**VARIABLES**
DISCRETE aux1213 #ElementOne([2, 3, 1, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1213, [1,3,5,5])
**VARIABLES**
DISCRETE aux1214 #ElementOne([2, 3, 1, 5, 4], S_00003_00005)
{1..5}
DISCRETE aux1215 #ElementOne([2, 3, 1, 5, 4], S_00003_00004)
{1..5}
DISCRETE aux1216 #ElementOne([2, 3, 1, 5, 4], S_00001_00005)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux1216, [2,2,4,4])
**VARIABLES**
DISCRETE aux1217 #ElementOne([2, 3, 1, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1217, [1,3,5,5])
**VARIABLES**
DISCRETE aux1218 #ElementOne([2, 3, 1, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1218, [1,3,5,5])
**VARIABLES**
DISCRETE aux1219 #ElementOne([2, 3, 1, 5, 4], S_00002_00005)
{2..5}
DISCRETE aux1220 #ElementOne([2, 3, 1, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1220, [1,3,5,5])
**VARIABLES**
DISCRETE aux1221 #ElementOne([2, 3, 1, 5, 4], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1221, [1,2,4,5])
**VARIABLES**
DISCRETE aux1222 #ElementOne([2, 3, 1, 5, 4], S_00005_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux1222, [2,2,4,4])
**VARIABLES**
DISCRETE aux1223 #ElementOne([2, 3, 1, 5, 4], S_00005_00002)
{1..5}
DISCRETE aux1224 #ElementOne([2, 3, 1, 5, 4], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1224, [1,2,4,5])
**VARIABLES**
DISCRETE aux1225 #ElementOne([2, 3, 1, 5, 4], S_00005_00004)
{1..5}
DISCRETE aux1226 #ElementOne([2, 3, 1, 5, 4], S_00004_00003)
{1..5}
DISCRETE aux1227 #ElementOne([2, 3, 1, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1227, [1,3,5,5])
**VARIABLES**
DISCRETE aux1228 #ElementOne([2, 3, 1, 5, 4], S_00004_00002)
{1..5}
DISCRETE aux1229 #ElementOne([2, 3, 1, 5, 4], S_00004_00005)
{1..5}
DISCRETE aux1230 #ElementOne([2, 3, 1, 5, 4], S_00004_00004)
{1..5}
DISCRETE aux1231 #ElementOne([2, 4, 1, 3, 5], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1231, [1,3,5,5])
**VARIABLES**
DISCRETE aux1232 #ElementOne([2, 4, 1, 3, 5], S_00003_00004)
{1..5}
DISCRETE aux1233 #ElementOne([2, 4, 1, 3], S_00003_00002)
{1..4}
DISCRETE aux1234 #ElementOne([2, 4, 1, 3, 5], S_00003_00005)
{1..5}
DISCRETE aux1235 #ElementOne([2, 4, 1, 3], S_00001_00004)
{1..4}
DISCRETE aux1236 #ElementOne([2, 4, 1, 3, 5], S_00001_00005)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux1236, [2,2,5,5])
**VARIABLES**
DISCRETE aux1237 #ElementOne([2, 4, 1, 3, 5], S_00004_00003)
{1..5}
DISCRETE aux1238 #ElementOne([2, 4, 1, 3], S_00004_00001)
{1..4}
DISCRETE aux1239 #ElementOne([2, 4, 1, 3, 5], S_00004_00004)
{1..5}
DISCRETE aux1240 #ElementOne([2, 4, 1, 3, 5], S_00004_00002)
{1..5}
DISCRETE aux1241 #ElementOne([2, 4, 1, 3, 5], S_00004_00005)
{1..5}
DISCRETE aux1242 #ElementOne([2, 4, 1, 3], S_00002_00003)
{1..4}
DISCRETE aux1243 #ElementOne([2, 4, 1, 3], S_00002_00004)
{1..4}
DISCRETE aux1244 #ElementOne([2, 4, 1, 3, 5], S_00002_00005)
{2..5}
DISCRETE aux1245 #ElementOne([2, 4, 1, 3, 5], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1245, [1,3,5,5])
**VARIABLES**
DISCRETE aux1246 #ElementOne([2, 4, 1, 3, 5], S_00005_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux1246, [2,2,5,5])
**VARIABLES**
DISCRETE aux1247 #ElementOne([2, 4, 1, 3, 5], S_00005_00004)
{1..5}
DISCRETE aux1248 #ElementOne([2, 4, 1, 3, 5], S_00005_00002)
{1..5}
DISCRETE aux1249 #ElementOne([2, 4, 1, 3, 5], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1249, [1,3,5,5])
**VARIABLES**
DISCRETE aux1250 #ElementOne([2, 5, 1, 3, 4], S_00003_00003)
{1..4}
DISCRETE aux1251 #ElementOne([2, 5, 1, 3, 4], S_00003_00004)
{1..5}
DISCRETE aux1252 #ElementOne([2, 5, 1, 3, 4], S_00003_00005)
{1..5}
DISCRETE aux1253 #ElementOne([2, 5, 1, 3], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1253, [1,3,5,5])
**VARIABLES**
DISCRETE aux1254 #ElementOne([2, 5, 1, 3], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1254, [1,3,5,5])
**VARIABLES**
DISCRETE aux1255 #ElementOne([2, 5, 1, 3, 4], S_00001_00005)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux1255, [2,2,4,4])
**VARIABLES**
DISCRETE aux1256 #ElementOne([2, 5, 1, 3, 4], S_00004_00003)
{1..5}
DISCRETE aux1257 #ElementOne([2, 5, 1, 3], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1257, [1,3,5,5])
**VARIABLES**
DISCRETE aux1258 #ElementOne([2, 5, 1, 3, 4], S_00004_00004)
{1..5}
DISCRETE aux1259 #ElementOne([2, 5, 1, 3, 4], S_00004_00005)
{1..5}
DISCRETE aux1260 #ElementOne([2, 5, 1, 3, 4], S_00004_00002)
{1..5}
DISCRETE aux1261 #ElementOne([2, 5, 1, 3, 4], S_00005_00003)
{1..4}
DISCRETE aux1262 #ElementOne([2, 5, 1, 3, 4], S_00005_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux1262, [2,2,4,4])
**VARIABLES**
DISCRETE aux1263 #ElementOne([2, 5, 1, 3, 4], S_00005_00004)
{1..5}
DISCRETE aux1264 #ElementOne([2, 5, 1, 3, 4], S_00005_00005)
{1..4}
DISCRETE aux1265 #ElementOne([2, 5, 1, 3, 4], S_00005_00002)
{1..5}
DISCRETE aux1266 #ElementOne([2, 5, 1, 3], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1266, [1,3,5,5])
**VARIABLES**
DISCRETE aux1267 #ElementOne([2, 5, 1, 3], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1267, [1,3,5,5])
**VARIABLES**
DISCRETE aux1268 #ElementOne([2, 5, 1, 3, 4], S_00002_00005)
{2..5}
DISCRETE aux1269 #ElementOne([2, 4, 1, 5, 3], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1269, [1,3,5,5])
**VARIABLES**
DISCRETE aux1270 #ElementOne([2, 4, 1, 5, 3], S_00003_00005)
{1..5}
DISCRETE aux1271 #ElementOne([2, 4, 1, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1271, [1,2,4,5])
**VARIABLES**
DISCRETE aux1272 #ElementOne([2, 4, 1, 5, 3], S_00003_00004)
{1..5}
DISCRETE aux1273 #ElementOne([2, 4, 1, 5, 3], S_00001_00005)
{2..3}
DISCRETE aux1274 #ElementOne([2, 4, 1, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1274, [1,2,4,5])
**VARIABLES**
DISCRETE aux1275 #ElementOne([2, 4, 1, 5, 3], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1275, [1,3,5,5])
**VARIABLES**
DISCRETE aux1276 #ElementOne([2, 4, 1, 5, 3], S_00005_00001)
{2..3}
DISCRETE aux1277 #ElementOne([2, 4, 1, 5, 3], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1277, [1,3,5,5])
**VARIABLES**
DISCRETE aux1278 #ElementOne([2, 4, 1, 5, 3], S_00005_00002)
{1..5}
DISCRETE aux1279 #ElementOne([2, 4, 1, 5, 3], S_00005_00004)
{1..5}
DISCRETE aux1280 #ElementOne([2, 4, 1, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1280, [1,2,4,5])
**VARIABLES**
DISCRETE aux1281 #ElementOne([2, 4, 1, 5, 3], S_00002_00005)
{2..5}
DISCRETE aux1282 #ElementOne([2, 4, 1, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1282, [1,2,4,5])
**VARIABLES**
DISCRETE aux1283 #ElementOne([2, 4, 1, 5, 3], S_00004_00003)
{1..5}
DISCRETE aux1284 #ElementOne([2, 4, 1, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1284, [1,2,4,5])
**VARIABLES**
DISCRETE aux1285 #ElementOne([2, 4, 1, 5, 3], S_00004_00005)
{1..5}
DISCRETE aux1286 #ElementOne([2, 4, 1, 5, 3], S_00004_00002)
{1..5}
DISCRETE aux1287 #ElementOne([2, 4, 1, 5, 3], S_00004_00004)
{1..5}
DISCRETE aux1288 #ElementOne([2, 5, 1, 4, 3], S_00003_00003)
{1..4}
DISCRETE aux1289 #ElementOne([2, 5, 1, 4, 3], S_00003_00005)
{1..5}
DISCRETE aux1290 #ElementOne([2, 5, 1, 4, 3], S_00003_00004)
{1..5}
DISCRETE aux1291 #ElementOne([2, 5, 1, 4], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1291, [1,2,4,5])
**VARIABLES**
DISCRETE aux1292 #ElementOne([2, 5, 1, 4, 3], S_00001_00005)
{2..3}
DISCRETE aux1293 #ElementOne([2, 5, 1, 4], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1293, [1,2,4,5])
**VARIABLES**
DISCRETE aux1294 #ElementOne([2, 5, 1, 4, 3], S_00005_00003)
{1..4}
DISCRETE aux1295 #ElementOne([2, 5, 1, 4, 3], S_00005_00001)
{2..3}
DISCRETE aux1296 #ElementOne([2, 5, 1, 4, 3], S_00005_00005)
{1..4}
DISCRETE aux1297 #ElementOne([2, 5, 1, 4, 3], S_00005_00004)
{1..5}
DISCRETE aux1298 #ElementOne([2, 5, 1, 4, 3], S_00005_00002)
{1..5}
DISCRETE aux1299 #ElementOne([2, 5, 1, 4, 3], S_00004_00003)
{1..5}
DISCRETE aux1300 #ElementOne([2, 5, 1, 4], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1300, [1,2,4,5])
**VARIABLES**
DISCRETE aux1301 #ElementOne([2, 5, 1, 4, 3], S_00004_00005)
{1..5}
DISCRETE aux1302 #ElementOne([2, 5, 1, 4, 3], S_00004_00004)
{1..5}
DISCRETE aux1303 #ElementOne([2, 5, 1, 4, 3], S_00004_00002)
{1..5}
DISCRETE aux1304 #ElementOne([2, 5, 1, 4], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1304, [1,2,4,5])
**VARIABLES**
DISCRETE aux1305 #ElementOne([2, 5, 1, 4, 3], S_00002_00005)
{2..5}
DISCRETE aux1306 #ElementOne([2, 5, 1, 4], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1306, [1,2,4,5])
**VARIABLES**
DISCRETE aux1307 #ElementOne([3, 2, 1, 4, 5], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1307, [1,1,3,5])
**VARIABLES**
DISCRETE aux1308 #ElementOne([3, 2, 1, 4], S_00003_00002)
{1..4}
DISCRETE aux1309 #ElementOne([3, 2, 1, 4, 5], S_00003_00004)
{1..5}
DISCRETE aux1310 #ElementOne([3, 2, 1, 4, 5], S_00003_00005)
{1..5}
DISCRETE aux1311 #ElementOne([3, 2, 1, 4], S_00002_00003)
{1..4}
DISCRETE aux1312 #ElementOne([3, 2, 1, 4], S_00002_00004)
{1..4}
DISCRETE aux1313 #ElementOne([3, 2, 1, 4, 5], S_00002_00005)
{2..5}
DISCRETE aux1314 #ElementOne([3, 2, 1, 4], S_00001_00004)
{1..4}
DISCRETE aux1315 #ElementOne([3, 2, 1, 4, 5], S_00001_00005)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1315, [3,3,5,5])
**VARIABLES**
DISCRETE aux1316 #ElementOne([3, 2, 1, 4, 5], S_00004_00003)
{1..5}
DISCRETE aux1317 #ElementOne([3, 2, 1, 4, 5], S_00004_00002)
{1..5}
DISCRETE aux1318 #ElementOne([3, 2, 1, 4], S_00004_00001)
{1..4}
DISCRETE aux1319 #ElementOne([3, 2, 1, 4, 5], S_00004_00004)
{1..5}
DISCRETE aux1320 #ElementOne([3, 2, 1, 4, 5], S_00004_00005)
{1..5}
DISCRETE aux1321 #ElementOne([3, 2, 1, 4, 5], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1321, [1,1,3,5])
**VARIABLES**
DISCRETE aux1322 #ElementOne([3, 2, 1, 4, 5], S_00005_00002)
{1..5}
DISCRETE aux1323 #ElementOne([3, 2, 1, 4, 5], S_00005_00001)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1323, [3,3,5,5])
**VARIABLES**
DISCRETE aux1324 #ElementOne([3, 2, 1, 4, 5], S_00005_00004)
{1..5}
DISCRETE aux1325 #ElementOne([3, 2, 1, 4, 5], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1325, [1,1,3,5])
**VARIABLES**
DISCRETE aux1326 #ElementOne([3, 2, 1, 5, 4], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1326, [1,1,3,5])
**VARIABLES**
DISCRETE aux1327 #ElementOne([3, 2, 1, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1327, [1,3,5,5])
**VARIABLES**
DISCRETE aux1328 #ElementOne([3, 2, 1, 5, 4], S_00003_00005)
{1..5}
DISCRETE aux1329 #ElementOne([3, 2, 1, 5, 4], S_00003_00004)
{1..5}
DISCRETE aux1330 #ElementOne([3, 2, 1, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1330, [1,3,5,5])
**VARIABLES**
DISCRETE aux1331 #ElementOne([3, 2, 1, 5, 4], S_00002_00005)
{2..5}
DISCRETE aux1332 #ElementOne([3, 2, 1, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1332, [1,3,5,5])
**VARIABLES**
DISCRETE aux1333 #ElementOne([3, 2, 1, 5, 4], S_00001_00005)
{3..4}
DISCRETE aux1334 #ElementOne([3, 2, 1, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1334, [1,3,5,5])
**VARIABLES**
DISCRETE aux1335 #ElementOne([3, 2, 1, 5, 4], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1335, [1,1,3,5])
**VARIABLES**
DISCRETE aux1336 #ElementOne([3, 2, 1, 5, 4], S_00005_00002)
{1..5}
DISCRETE aux1337 #ElementOne([3, 2, 1, 5, 4], S_00005_00001)
{3..4}
DISCRETE aux1338 #ElementOne([3, 2, 1, 5, 4], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1338, [1,1,3,5])
**VARIABLES**
DISCRETE aux1339 #ElementOne([3, 2, 1, 5, 4], S_00005_00004)
{1..5}
DISCRETE aux1340 #ElementOne([3, 2, 1, 5, 4], S_00004_00003)
{1..5}
DISCRETE aux1341 #ElementOne([3, 2, 1, 5, 4], S_00004_00002)
{1..5}
DISCRETE aux1342 #ElementOne([3, 2, 1, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1342, [1,3,5,5])
**VARIABLES**
DISCRETE aux1343 #ElementOne([3, 2, 1, 5, 4], S_00004_00005)
{1..5}
DISCRETE aux1344 #ElementOne([3, 2, 1, 5, 4], S_00004_00004)
{1..5}
DISCRETE aux1345 #ElementOne([4, 2, 1, 3, 5], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1345, [1,1,3,5])
**VARIABLES**
DISCRETE aux1346 #ElementOne([4, 2, 1, 3], S_00003_00002)
{1..4}
DISCRETE aux1347 #ElementOne([4, 2, 1, 3, 5], S_00003_00004)
{1..5}
DISCRETE aux1348 #ElementOne([4, 2, 1, 3, 5], S_00003_00005)
{1..5}
DISCRETE aux1349 #ElementOne([4, 2, 1, 3], S_00002_00003)
{1..4}
DISCRETE aux1350 #ElementOne([4, 2, 1, 3], S_00002_00004)
{1..4}
DISCRETE aux1351 #ElementOne([4, 2, 1, 3, 5], S_00002_00005)
{2..5}
DISCRETE aux1352 #ElementOne([4, 2, 1, 3, 5], S_00004_00003)
{1..5}
DISCRETE aux1353 #ElementOne([4, 2, 1, 3, 5], S_00004_00002)
{1..5}
DISCRETE aux1354 #ElementOne([4, 2, 1, 3, 5], S_00004_00004)
{1..5}
DISCRETE aux1355 #ElementOne([4, 2, 1, 3], S_00004_00001)
{1..4}
DISCRETE aux1356 #ElementOne([4, 2, 1, 3, 5], S_00004_00005)
{1..5}
DISCRETE aux1357 #ElementOne([4, 2, 1, 3], S_00001_00004)
{1..4}
DISCRETE aux1358 #ElementOne([4, 2, 1, 3, 5], S_00001_00005)
{4..5}
DISCRETE aux1359 #ElementOne([4, 2, 1, 3, 5], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1359, [1,1,3,5])
**VARIABLES**
DISCRETE aux1360 #ElementOne([4, 2, 1, 3, 5], S_00005_00002)
{1..5}
DISCRETE aux1361 #ElementOne([4, 2, 1, 3, 5], S_00005_00004)
{1..5}
DISCRETE aux1362 #ElementOne([4, 2, 1, 3, 5], S_00005_00001)
{4..5}
DISCRETE aux1363 #ElementOne([4, 2, 1, 3, 5], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1363, [1,1,3,5])
**VARIABLES**
DISCRETE aux1364 #ElementOne([5, 2, 1, 3, 4], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1364, [1,1,3,5])
**VARIABLES**
DISCRETE aux1365 #ElementOne([5, 2, 1, 3], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1365, [1,3,5,5])
**VARIABLES**
DISCRETE aux1366 #ElementOne([5, 2, 1, 3, 4], S_00003_00004)
{1..5}
DISCRETE aux1367 #ElementOne([5, 2, 1, 3, 4], S_00003_00005)
{1..5}
DISCRETE aux1368 #ElementOne([5, 2, 1, 3], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1368, [1,3,5,5])
**VARIABLES**
DISCRETE aux1369 #ElementOne([5, 2, 1, 3], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1369, [1,3,5,5])
**VARIABLES**
DISCRETE aux1370 #ElementOne([5, 2, 1, 3, 4], S_00002_00005)
{2..5}
DISCRETE aux1371 #ElementOne([5, 2, 1, 3, 4], S_00004_00003)
{1..5}
DISCRETE aux1372 #ElementOne([5, 2, 1, 3, 4], S_00004_00002)
{1..5}
DISCRETE aux1373 #ElementOne([5, 2, 1, 3, 4], S_00004_00004)
{1..5}
DISCRETE aux1374 #ElementOne([5, 2, 1, 3, 4], S_00004_00005)
{1..5}
DISCRETE aux1375 #ElementOne([5, 2, 1, 3], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1375, [1,3,5,5])
**VARIABLES**
DISCRETE aux1376 #ElementOne([5, 2, 1, 3, 4], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1376, [1,1,3,5])
**VARIABLES**
DISCRETE aux1377 #ElementOne([5, 2, 1, 3, 4], S_00005_00002)
{1..5}
DISCRETE aux1378 #ElementOne([5, 2, 1, 3, 4], S_00005_00004)
{1..5}
DISCRETE aux1379 #ElementOne([5, 2, 1, 3, 4], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1379, [1,1,3,5])
**VARIABLES**
DISCRETE aux1380 #ElementOne([5, 2, 1, 3, 4], S_00005_00001)
{4..5}
DISCRETE aux1381 #ElementOne([5, 2, 1, 3], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1381, [1,3,5,5])
**VARIABLES**
DISCRETE aux1382 #ElementOne([5, 2, 1, 3, 4], S_00001_00005)
{4..5}
DISCRETE aux1383 #ElementOne([4, 2, 1, 5, 3], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1383, [1,1,3,5])
**VARIABLES**
DISCRETE aux1384 #ElementOne([4, 2, 1, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1384, [1,2,4,5])
**VARIABLES**
DISCRETE aux1385 #ElementOne([4, 2, 1, 5, 3], S_00003_00005)
{1..5}
DISCRETE aux1386 #ElementOne([4, 2, 1, 5, 3], S_00003_00004)
{1..5}
DISCRETE aux1387 #ElementOne([4, 2, 1, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1387, [1,2,4,5])
**VARIABLES**
DISCRETE aux1388 #ElementOne([4, 2, 1, 5, 3], S_00002_00005)
{2..5}
DISCRETE aux1389 #ElementOne([4, 2, 1, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1389, [1,2,4,5])
**VARIABLES**
DISCRETE aux1390 #ElementOne([4, 2, 1, 5, 3], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1390, [1,1,3,5])
**VARIABLES**
DISCRETE aux1391 #ElementOne([4, 2, 1, 5, 3], S_00005_00002)
{1..5}
DISCRETE aux1392 #ElementOne([4, 2, 1, 5, 3], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1392, [1,1,3,5])
**VARIABLES**
DISCRETE aux1393 #ElementOne([4, 2, 1, 5, 3], S_00005_00001)
{3..4}
DISCRETE aux1394 #ElementOne([4, 2, 1, 5, 3], S_00005_00004)
{1..5}
DISCRETE aux1395 #ElementOne([4, 2, 1, 5, 3], S_00001_00005)
{3..4}
DISCRETE aux1396 #ElementOne([4, 2, 1, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1396, [1,2,4,5])
**VARIABLES**
DISCRETE aux1397 #ElementOne([4, 2, 1, 5, 3], S_00004_00003)
{1..5}
DISCRETE aux1398 #ElementOne([4, 2, 1, 5, 3], S_00004_00002)
{1..5}
DISCRETE aux1399 #ElementOne([4, 2, 1, 5, 3], S_00004_00005)
{1..5}
DISCRETE aux1400 #ElementOne([4, 2, 1, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1400, [1,2,4,5])
**VARIABLES**
DISCRETE aux1401 #ElementOne([4, 2, 1, 5, 3], S_00004_00004)
{1..5}
DISCRETE aux1402 #ElementOne([5, 2, 1, 4, 3], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1402, [1,1,3,5])
**VARIABLES**
DISCRETE aux1403 #ElementOne([5, 2, 1, 4], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1403, [1,2,4,5])
**VARIABLES**
DISCRETE aux1404 #ElementOne([5, 2, 1, 4, 3], S_00003_00005)
{1..5}
DISCRETE aux1405 #ElementOne([5, 2, 1, 4, 3], S_00003_00004)
{1..5}
DISCRETE aux1406 #ElementOne([5, 2, 1, 4], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1406, [1,2,4,5])
**VARIABLES**
DISCRETE aux1407 #ElementOne([5, 2, 1, 4, 3], S_00002_00005)
{2..5}
DISCRETE aux1408 #ElementOne([5, 2, 1, 4], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1408, [1,2,4,5])
**VARIABLES**
DISCRETE aux1409 #ElementOne([5, 2, 1, 4, 3], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1409, [1,1,3,5])
**VARIABLES**
DISCRETE aux1410 #ElementOne([5, 2, 1, 4, 3], S_00005_00002)
{1..5}
DISCRETE aux1411 #ElementOne([5, 2, 1, 4, 3], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1411, [1,1,3,5])
**VARIABLES**
DISCRETE aux1412 #ElementOne([5, 2, 1, 4, 3], S_00005_00004)
{1..5}
DISCRETE aux1413 #ElementOne([5, 2, 1, 4, 3], S_00005_00001)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1413, [3,3,5,5])
**VARIABLES**
DISCRETE aux1414 #ElementOne([5, 2, 1, 4, 3], S_00004_00003)
{1..5}
DISCRETE aux1415 #ElementOne([5, 2, 1, 4, 3], S_00004_00002)
{1..5}
DISCRETE aux1416 #ElementOne([5, 2, 1, 4, 3], S_00004_00005)
{1..5}
DISCRETE aux1417 #ElementOne([5, 2, 1, 4, 3], S_00004_00004)
{1..5}
DISCRETE aux1418 #ElementOne([5, 2, 1, 4], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1418, [1,2,4,5])
**VARIABLES**
DISCRETE aux1419 #ElementOne([5, 2, 1, 4, 3], S_00001_00005)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1419, [3,3,5,5])
**VARIABLES**
DISCRETE aux1420 #ElementOne([5, 2, 1, 4], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1420, [1,2,4,5])
**VARIABLES**
DISCRETE aux1421 #ElementOne([3, 4, 1, 2, 5], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1421, [1,3,5,5])
**VARIABLES**
DISCRETE aux1422 #ElementOne([3, 4, 1, 2, 5], S_00003_00004)
{1..5}
DISCRETE aux1423 #ElementOne([3, 4, 1, 2], S_00003_00002)
{1..4}
DISCRETE aux1424 #ElementOne([3, 4, 1, 2, 5], S_00003_00005)
{1..5}
DISCRETE aux1425 #ElementOne([3, 4, 1, 2, 5], S_00004_00003)
{1..5}
DISCRETE aux1426 #ElementOne([3, 4, 1, 2, 5], S_00004_00004)
{1..5}
DISCRETE aux1427 #ElementOne([3, 4, 1, 2], S_00004_00001)
{1..4}
DISCRETE aux1428 #ElementOne([3, 4, 1, 2, 5], S_00004_00002)
{1..5}
DISCRETE aux1429 #ElementOne([3, 4, 1, 2, 5], S_00004_00005)
{1..5}
DISCRETE aux1430 #ElementOne([3, 4, 1, 2], S_00001_00004)
{1..4}
DISCRETE aux1431 #ElementOne([3, 4, 1, 2, 5], S_00001_00005)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1431, [3,3,5,5])
**VARIABLES**
DISCRETE aux1432 #ElementOne([3, 4, 1, 2], S_00002_00003)
{1..4}
DISCRETE aux1433 #ElementOne([3, 4, 1, 2], S_00002_00004)
{1..4}
DISCRETE aux1434 #ElementOne([3, 4, 1, 2, 5], S_00002_00005)
{2..5}
DISCRETE aux1435 #ElementOne([3, 4, 1, 2, 5], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1435, [1,3,5,5])
**VARIABLES**
DISCRETE aux1436 #ElementOne([3, 4, 1, 2, 5], S_00005_00004)
{1..5}
DISCRETE aux1437 #ElementOne([3, 4, 1, 2, 5], S_00005_00001)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1437, [3,3,5,5])
**VARIABLES**
DISCRETE aux1438 #ElementOne([3, 4, 1, 2, 5], S_00005_00002)
{1..5}
DISCRETE aux1439 #ElementOne([3, 4, 1, 2, 5], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1439, [1,3,5,5])
**VARIABLES**
DISCRETE aux1440 #ElementOne([3, 5, 1, 2, 4], S_00003_00003)
{1..4}
DISCRETE aux1441 #ElementOne([3, 5, 1, 2, 4], S_00003_00004)
{1..5}
DISCRETE aux1442 #ElementOne([3, 5, 1, 2, 4], S_00003_00005)
{1..5}
DISCRETE aux1443 #ElementOne([3, 5, 1, 2], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1443, [1,3,5,5])
**VARIABLES**
DISCRETE aux1444 #ElementOne([3, 5, 1, 2, 4], S_00004_00003)
{1..5}
DISCRETE aux1445 #ElementOne([3, 5, 1, 2, 4], S_00004_00004)
{1..5}
DISCRETE aux1446 #ElementOne([3, 5, 1, 2], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1446, [1,3,5,5])
**VARIABLES**
DISCRETE aux1447 #ElementOne([3, 5, 1, 2, 4], S_00004_00005)
{1..5}
DISCRETE aux1448 #ElementOne([3, 5, 1, 2, 4], S_00004_00002)
{1..5}
DISCRETE aux1449 #ElementOne([3, 5, 1, 2], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1449, [1,3,5,5])
**VARIABLES**
DISCRETE aux1450 #ElementOne([3, 5, 1, 2, 4], S_00001_00005)
{3..4}
DISCRETE aux1451 #ElementOne([3, 5, 1, 2, 4], S_00005_00003)
{1..4}
DISCRETE aux1452 #ElementOne([3, 5, 1, 2, 4], S_00005_00004)
{1..5}
DISCRETE aux1453 #ElementOne([3, 5, 1, 2, 4], S_00005_00001)
{3..4}
DISCRETE aux1454 #ElementOne([3, 5, 1, 2, 4], S_00005_00005)
{1..4}
DISCRETE aux1455 #ElementOne([3, 5, 1, 2, 4], S_00005_00002)
{1..5}
DISCRETE aux1456 #ElementOne([3, 5, 1, 2], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1456, [1,3,5,5])
**VARIABLES**
DISCRETE aux1457 #ElementOne([3, 5, 1, 2], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1457, [1,3,5,5])
**VARIABLES**
DISCRETE aux1458 #ElementOne([3, 5, 1, 2, 4], S_00002_00005)
{2..5}
DISCRETE aux1459 #ElementOne([4, 3, 1, 2, 5], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1459, [1,2,4,5])
**VARIABLES**
DISCRETE aux1460 #ElementOne([4, 3, 1, 2, 5], S_00003_00004)
{1..5}
DISCRETE aux1461 #ElementOne([4, 3, 1, 2], S_00003_00002)
{1..4}
DISCRETE aux1462 #ElementOne([4, 3, 1, 2, 5], S_00003_00005)
{1..5}
DISCRETE aux1463 #ElementOne([4, 3, 1, 2, 5], S_00004_00003)
{1..5}
DISCRETE aux1464 #ElementOne([4, 3, 1, 2, 5], S_00004_00004)
{1..5}
DISCRETE aux1465 #ElementOne([4, 3, 1, 2, 5], S_00004_00002)
{1..5}
DISCRETE aux1466 #ElementOne([4, 3, 1, 2], S_00004_00001)
{1..4}
DISCRETE aux1467 #ElementOne([4, 3, 1, 2, 5], S_00004_00005)
{1..5}
DISCRETE aux1468 #ElementOne([4, 3, 1, 2], S_00002_00003)
{1..4}
DISCRETE aux1469 #ElementOne([4, 3, 1, 2], S_00002_00004)
{1..4}
DISCRETE aux1470 #ElementOne([4, 3, 1, 2, 5], S_00002_00005)
{2..5}
DISCRETE aux1471 #ElementOne([4, 3, 1, 2], S_00001_00004)
{1..4}
DISCRETE aux1472 #ElementOne([4, 3, 1, 2, 5], S_00001_00005)
{4..5}
DISCRETE aux1473 #ElementOne([4, 3, 1, 2, 5], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1473, [1,2,4,5])
**VARIABLES**
DISCRETE aux1474 #ElementOne([4, 3, 1, 2, 5], S_00005_00004)
{1..5}
DISCRETE aux1475 #ElementOne([4, 3, 1, 2, 5], S_00005_00002)
{1..5}
DISCRETE aux1476 #ElementOne([4, 3, 1, 2, 5], S_00005_00001)
{4..5}
DISCRETE aux1477 #ElementOne([4, 3, 1, 2, 5], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1477, [1,2,4,5])
**VARIABLES**
DISCRETE aux1478 #ElementOne([5, 3, 1, 2, 4], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1478, [1,2,4,5])
**VARIABLES**
DISCRETE aux1479 #ElementOne([5, 3, 1, 2, 4], S_00003_00004)
{1..5}
DISCRETE aux1480 #ElementOne([5, 3, 1, 2], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1480, [1,3,5,5])
**VARIABLES**
DISCRETE aux1481 #ElementOne([5, 3, 1, 2, 4], S_00003_00005)
{1..5}
DISCRETE aux1482 #ElementOne([5, 3, 1, 2, 4], S_00004_00003)
{1..5}
DISCRETE aux1483 #ElementOne([5, 3, 1, 2, 4], S_00004_00004)
{1..5}
DISCRETE aux1484 #ElementOne([5, 3, 1, 2, 4], S_00004_00002)
{1..5}
DISCRETE aux1485 #ElementOne([5, 3, 1, 2, 4], S_00004_00005)
{1..5}
DISCRETE aux1486 #ElementOne([5, 3, 1, 2], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1486, [1,3,5,5])
**VARIABLES**
DISCRETE aux1487 #ElementOne([5, 3, 1, 2], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1487, [1,3,5,5])
**VARIABLES**
DISCRETE aux1488 #ElementOne([5, 3, 1, 2], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1488, [1,3,5,5])
**VARIABLES**
DISCRETE aux1489 #ElementOne([5, 3, 1, 2, 4], S_00002_00005)
{2..5}
DISCRETE aux1490 #ElementOne([5, 3, 1, 2, 4], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1490, [1,2,4,5])
**VARIABLES**
DISCRETE aux1491 #ElementOne([5, 3, 1, 2, 4], S_00005_00004)
{1..5}
DISCRETE aux1492 #ElementOne([5, 3, 1, 2, 4], S_00005_00002)
{1..5}
DISCRETE aux1493 #ElementOne([5, 3, 1, 2, 4], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1493, [1,2,4,5])
**VARIABLES**
DISCRETE aux1494 #ElementOne([5, 3, 1, 2, 4], S_00005_00001)
{4..5}
DISCRETE aux1495 #ElementOne([5, 3, 1, 2], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1495, [1,3,5,5])
**VARIABLES**
DISCRETE aux1496 #ElementOne([5, 3, 1, 2, 4], S_00001_00005)
{4..5}
DISCRETE aux1497 #ElementOne([4, 5, 1, 2, 3], S_00003_00003)
{1..4}
DISCRETE aux1498 #ElementOne([4, 5, 1, 2, 3], S_00003_00004)
{1..5}
DISCRETE aux1499 #ElementOne([4, 5, 1, 2, 3], S_00003_00005)
{1..5}
DISCRETE aux1500 #ElementOne([4, 5, 1, 2], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1500, [1,2,4,5])
**VARIABLES**
DISCRETE aux1501 #ElementOne([4, 5, 1, 2, 3], S_00004_00003)
{1..5}
DISCRETE aux1502 #ElementOne([4, 5, 1, 2, 3], S_00004_00004)
{1..5}
DISCRETE aux1503 #ElementOne([4, 5, 1, 2, 3], S_00004_00005)
{1..5}
DISCRETE aux1504 #ElementOne([4, 5, 1, 2], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1504, [1,2,4,5])
**VARIABLES**
DISCRETE aux1505 #ElementOne([4, 5, 1, 2, 3], S_00004_00002)
{1..5}
DISCRETE aux1506 #ElementOne([4, 5, 1, 2, 3], S_00005_00003)
{1..4}
DISCRETE aux1507 #ElementOne([4, 5, 1, 2, 3], S_00005_00004)
{1..5}
DISCRETE aux1508 #ElementOne([4, 5, 1, 2, 3], S_00005_00005)
{1..4}
DISCRETE aux1509 #ElementOne([4, 5, 1, 2, 3], S_00005_00001)
{3..4}
DISCRETE aux1510 #ElementOne([4, 5, 1, 2, 3], S_00005_00002)
{1..5}
DISCRETE aux1511 #ElementOne([4, 5, 1, 2], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1511, [1,2,4,5])
**VARIABLES**
DISCRETE aux1512 #ElementOne([4, 5, 1, 2, 3], S_00001_00005)
{3..4}
DISCRETE aux1513 #ElementOne([4, 5, 1, 2], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1513, [1,2,4,5])
**VARIABLES**
DISCRETE aux1514 #ElementOne([4, 5, 1, 2], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1514, [1,2,4,5])
**VARIABLES**
DISCRETE aux1515 #ElementOne([4, 5, 1, 2, 3], S_00002_00005)
{2..5}
DISCRETE aux1516 #ElementOne([5, 4, 1, 2, 3], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1516, [1,3,5,5])
**VARIABLES**
DISCRETE aux1517 #ElementOne([5, 4, 1, 2, 3], S_00003_00004)
{1..5}
DISCRETE aux1518 #ElementOne([5, 4, 1, 2, 3], S_00003_00005)
{1..5}
DISCRETE aux1519 #ElementOne([5, 4, 1, 2], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1519, [1,2,4,5])
**VARIABLES**
DISCRETE aux1520 #ElementOne([5, 4, 1, 2, 3], S_00004_00003)
{1..5}
DISCRETE aux1521 #ElementOne([5, 4, 1, 2, 3], S_00004_00004)
{1..5}
DISCRETE aux1522 #ElementOne([5, 4, 1, 2, 3], S_00004_00005)
{1..5}
DISCRETE aux1523 #ElementOne([5, 4, 1, 2, 3], S_00004_00002)
{1..5}
DISCRETE aux1524 #ElementOne([5, 4, 1, 2], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1524, [1,2,4,5])
**VARIABLES**
DISCRETE aux1525 #ElementOne([5, 4, 1, 2, 3], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1525, [1,3,5,5])
**VARIABLES**
DISCRETE aux1526 #ElementOne([5, 4, 1, 2, 3], S_00005_00004)
{1..5}
DISCRETE aux1527 #ElementOne([5, 4, 1, 2, 3], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1527, [1,3,5,5])
**VARIABLES**
DISCRETE aux1528 #ElementOne([5, 4, 1, 2, 3], S_00005_00002)
{1..5}
DISCRETE aux1529 #ElementOne([5, 4, 1, 2, 3], S_00005_00001)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1529, [3,3,5,5])
**VARIABLES**
DISCRETE aux1530 #ElementOne([5, 4, 1, 2], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1530, [1,2,4,5])
**VARIABLES**
DISCRETE aux1531 #ElementOne([5, 4, 1, 2], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1531, [1,2,4,5])
**VARIABLES**
DISCRETE aux1532 #ElementOne([5, 4, 1, 2, 3], S_00002_00005)
{2..5}
DISCRETE aux1533 #ElementOne([5, 4, 1, 2], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1533, [1,2,4,5])
**VARIABLES**
DISCRETE aux1534 #ElementOne([5, 4, 1, 2, 3], S_00001_00005)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1534, [3,3,5,5])
**VARIABLES**
DISCRETE aux1535 #ElementOne([3, 4, 1, 5, 2], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1535, [1,3,5,5])
**VARIABLES**
DISCRETE aux1536 #ElementOne([3, 4, 1, 5, 2], S_00003_00005)
{1..5}
DISCRETE aux1537 #ElementOne([3, 4, 1, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1537, [1,1,3,5])
**VARIABLES**
DISCRETE aux1538 #ElementOne([3, 4, 1, 5, 2], S_00003_00004)
{1..5}
DISCRETE aux1539 #ElementOne([3, 4, 1, 5, 2], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1539, [1,3,5,5])
**VARIABLES**
DISCRETE aux1540 #ElementOne([3, 4, 1, 5, 2], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1540, [1,3,5,5])
**VARIABLES**
DISCRETE aux1541 #ElementOne([3, 4, 1, 5, 2], S_00005_00001)
{2..3}
DISCRETE aux1542 #ElementOne([3, 4, 1, 5, 2], S_00005_00002)
{1..5}
DISCRETE aux1543 #ElementOne([3, 4, 1, 5, 2], S_00005_00004)
{1..5}
DISCRETE aux1544 #ElementOne([3, 4, 1, 5, 2], S_00001_00005)
{2..3}
DISCRETE aux1545 #ElementOne([3, 4, 1, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1545, [1,1,3,5])
**VARIABLES**
DISCRETE aux1546 #ElementOne([3, 4, 1, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1546, [1,1,3,5])
**VARIABLES**
DISCRETE aux1547 #ElementOne([3, 4, 1, 5, 2], S_00002_00005)
{2..5}
DISCRETE aux1548 #ElementOne([3, 4, 1, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1548, [1,1,3,5])
**VARIABLES**
DISCRETE aux1549 #ElementOne([3, 4, 1, 5, 2], S_00004_00003)
{1..5}
DISCRETE aux1550 #ElementOne([3, 4, 1, 5, 2], S_00004_00005)
{1..5}
DISCRETE aux1551 #ElementOne([3, 4, 1, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1551, [1,1,3,5])
**VARIABLES**
DISCRETE aux1552 #ElementOne([3, 4, 1, 5, 2], S_00004_00002)
{1..5}
DISCRETE aux1553 #ElementOne([3, 4, 1, 5, 2], S_00004_00004)
{1..5}
DISCRETE aux1554 #ElementOne([3, 5, 1, 4, 2], S_00003_00003)
{1..4}
DISCRETE aux1555 #ElementOne([3, 5, 1, 4, 2], S_00003_00005)
{1..5}
DISCRETE aux1556 #ElementOne([3, 5, 1, 4, 2], S_00003_00004)
{1..5}
DISCRETE aux1557 #ElementOne([3, 5, 1, 4], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1557, [1,1,3,5])
**VARIABLES**
DISCRETE aux1558 #ElementOne([3, 5, 1, 4, 2], S_00005_00003)
{1..4}
DISCRETE aux1559 #ElementOne([3, 5, 1, 4, 2], S_00005_00005)
{1..4}
DISCRETE aux1560 #ElementOne([3, 5, 1, 4, 2], S_00005_00001)
{2..3}
DISCRETE aux1561 #ElementOne([3, 5, 1, 4, 2], S_00005_00004)
{1..5}
DISCRETE aux1562 #ElementOne([3, 5, 1, 4, 2], S_00005_00002)
{1..5}
DISCRETE aux1563 #ElementOne([3, 5, 1, 4, 2], S_00001_00005)
{2..3}
DISCRETE aux1564 #ElementOne([3, 5, 1, 4], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1564, [1,1,3,5])
**VARIABLES**
DISCRETE aux1565 #ElementOne([3, 5, 1, 4, 2], S_00004_00003)
{1..5}
DISCRETE aux1566 #ElementOne([3, 5, 1, 4, 2], S_00004_00005)
{1..5}
DISCRETE aux1567 #ElementOne([3, 5, 1, 4], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1567, [1,1,3,5])
**VARIABLES**
DISCRETE aux1568 #ElementOne([3, 5, 1, 4, 2], S_00004_00004)
{1..5}
DISCRETE aux1569 #ElementOne([3, 5, 1, 4, 2], S_00004_00002)
{1..5}
DISCRETE aux1570 #ElementOne([3, 5, 1, 4], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1570, [1,1,3,5])
**VARIABLES**
DISCRETE aux1571 #ElementOne([3, 5, 1, 4, 2], S_00002_00005)
{2..5}
DISCRETE aux1572 #ElementOne([3, 5, 1, 4], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1572, [1,1,3,5])
**VARIABLES**
DISCRETE aux1573 #ElementOne([4, 3, 1, 5, 2], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1573, [1,2,4,5])
**VARIABLES**
DISCRETE aux1574 #ElementOne([4, 3, 1, 5, 2], S_00003_00005)
{1..5}
DISCRETE aux1575 #ElementOne([4, 3, 1, 5], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1575, [1,1,3,5])
**VARIABLES**
DISCRETE aux1576 #ElementOne([4, 3, 1, 5, 2], S_00003_00004)
{1..5}
DISCRETE aux1577 #ElementOne([4, 3, 1, 5, 2], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1577, [1,2,4,5])
**VARIABLES**
DISCRETE aux1578 #ElementOne([4, 3, 1, 5, 2], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1578, [1,2,4,5])
**VARIABLES**
DISCRETE aux1579 #ElementOne([4, 3, 1, 5, 2], S_00005_00002)
{1..5}
DISCRETE aux1580 #ElementOne([4, 3, 1, 5, 2], S_00005_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux1580, [2,2,4,4])
**VARIABLES**
DISCRETE aux1581 #ElementOne([4, 3, 1, 5, 2], S_00005_00004)
{1..5}
DISCRETE aux1582 #ElementOne([4, 3, 1, 5], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1582, [1,1,3,5])
**VARIABLES**
DISCRETE aux1583 #ElementOne([4, 3, 1, 5, 2], S_00002_00005)
{2..5}
DISCRETE aux1584 #ElementOne([4, 3, 1, 5], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1584, [1,1,3,5])
**VARIABLES**
DISCRETE aux1585 #ElementOne([4, 3, 1, 5, 2], S_00001_00005)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux1585, [2,2,4,4])
**VARIABLES**
DISCRETE aux1586 #ElementOne([4, 3, 1, 5], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1586, [1,1,3,5])
**VARIABLES**
DISCRETE aux1587 #ElementOne([4, 3, 1, 5, 2], S_00004_00003)
{1..5}
DISCRETE aux1588 #ElementOne([4, 3, 1, 5, 2], S_00004_00005)
{1..5}
DISCRETE aux1589 #ElementOne([4, 3, 1, 5, 2], S_00004_00002)
{1..5}
DISCRETE aux1590 #ElementOne([4, 3, 1, 5], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1590, [1,1,3,5])
**VARIABLES**
DISCRETE aux1591 #ElementOne([4, 3, 1, 5, 2], S_00004_00004)
{1..5}
DISCRETE aux1592 #ElementOne([5, 3, 1, 4, 2], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1592, [1,2,4,5])
**VARIABLES**
DISCRETE aux1593 #ElementOne([5, 3, 1, 4, 2], S_00003_00005)
{1..5}
DISCRETE aux1594 #ElementOne([5, 3, 1, 4], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1594, [1,1,3,5])
**VARIABLES**
DISCRETE aux1595 #ElementOne([5, 3, 1, 4, 2], S_00003_00004)
{1..5}
DISCRETE aux1596 #ElementOne([5, 3, 1, 4, 2], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1596, [1,2,4,5])
**VARIABLES**
DISCRETE aux1597 #ElementOne([5, 3, 1, 4, 2], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1597, [1,2,4,5])
**VARIABLES**
DISCRETE aux1598 #ElementOne([5, 3, 1, 4, 2], S_00005_00002)
{1..5}
DISCRETE aux1599 #ElementOne([5, 3, 1, 4, 2], S_00005_00004)
{1..5}
DISCRETE aux1600 #ElementOne([5, 3, 1, 4, 2], S_00005_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux1600, [2,2,5,5])
**VARIABLES**
DISCRETE aux1601 #ElementOne([5, 3, 1, 4], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1601, [1,1,3,5])
**VARIABLES**
DISCRETE aux1602 #ElementOne([5, 3, 1, 4, 2], S_00002_00005)
{2..5}
DISCRETE aux1603 #ElementOne([5, 3, 1, 4], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1603, [1,1,3,5])
**VARIABLES**
DISCRETE aux1604 #ElementOne([5, 3, 1, 4, 2], S_00004_00003)
{1..5}
DISCRETE aux1605 #ElementOne([5, 3, 1, 4, 2], S_00004_00005)
{1..5}
DISCRETE aux1606 #ElementOne([5, 3, 1, 4, 2], S_00004_00002)
{1..5}
DISCRETE aux1607 #ElementOne([5, 3, 1, 4, 2], S_00004_00004)
{1..5}
DISCRETE aux1608 #ElementOne([5, 3, 1, 4], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1608, [1,1,3,5])
**VARIABLES**
DISCRETE aux1609 #ElementOne([5, 3, 1, 4, 2], S_00001_00005)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux1609, [2,2,5,5])
**VARIABLES**
DISCRETE aux1610 #ElementOne([5, 3, 1, 4], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1610, [1,1,3,5])
**VARIABLES**
DISCRETE aux1611 #ElementOne([4, 5, 1, 3, 2], S_00003_00003)
{1..4}
DISCRETE aux1612 #ElementOne([4, 5, 1, 3, 2], S_00003_00005)
{1..5}
DISCRETE aux1613 #ElementOne([4, 5, 1, 3, 2], S_00003_00004)
{1..5}
DISCRETE aux1614 #ElementOne([4, 5, 1, 3], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1614, [1,1,3,5])
**VARIABLES**
DISCRETE aux1615 #ElementOne([4, 5, 1, 3, 2], S_00005_00003)
{1..4}
DISCRETE aux1616 #ElementOne([4, 5, 1, 3, 2], S_00005_00005)
{1..4}
DISCRETE aux1617 #ElementOne([4, 5, 1, 3, 2], S_00005_00004)
{1..5}
DISCRETE aux1618 #ElementOne([4, 5, 1, 3, 2], S_00005_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux1618, [2,2,4,4])
**VARIABLES**
DISCRETE aux1619 #ElementOne([4, 5, 1, 3, 2], S_00005_00002)
{1..5}
DISCRETE aux1620 #ElementOne([4, 5, 1, 3, 2], S_00004_00003)
{1..5}
DISCRETE aux1621 #ElementOne([4, 5, 1, 3, 2], S_00004_00005)
{1..5}
DISCRETE aux1622 #ElementOne([4, 5, 1, 3, 2], S_00004_00004)
{1..5}
DISCRETE aux1623 #ElementOne([4, 5, 1, 3], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1623, [1,1,3,5])
**VARIABLES**
DISCRETE aux1624 #ElementOne([4, 5, 1, 3, 2], S_00004_00002)
{1..5}
DISCRETE aux1625 #ElementOne([4, 5, 1, 3, 2], S_00001_00005)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux1625, [2,2,4,4])
**VARIABLES**
DISCRETE aux1626 #ElementOne([4, 5, 1, 3], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1626, [1,1,3,5])
**VARIABLES**
DISCRETE aux1627 #ElementOne([4, 5, 1, 3], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1627, [1,1,3,5])
**VARIABLES**
DISCRETE aux1628 #ElementOne([4, 5, 1, 3, 2], S_00002_00005)
{2..5}
DISCRETE aux1629 #ElementOne([4, 5, 1, 3], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1629, [1,1,3,5])
**VARIABLES**
DISCRETE aux1630 #ElementOne([5, 4, 1, 3, 2], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1630, [1,3,5,5])
**VARIABLES**
DISCRETE aux1631 #ElementOne([5, 4, 1, 3, 2], S_00003_00005)
{1..5}
DISCRETE aux1632 #ElementOne([5, 4, 1, 3, 2], S_00003_00004)
{1..5}
DISCRETE aux1633 #ElementOne([5, 4, 1, 3], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1633, [1,1,3,5])
**VARIABLES**
DISCRETE aux1634 #ElementOne([5, 4, 1, 3, 2], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1634, [1,3,5,5])
**VARIABLES**
DISCRETE aux1635 #ElementOne([5, 4, 1, 3, 2], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1635, [1,3,5,5])
**VARIABLES**
DISCRETE aux1636 #ElementOne([5, 4, 1, 3, 2], S_00005_00004)
{1..5}
DISCRETE aux1637 #ElementOne([5, 4, 1, 3, 2], S_00005_00002)
{1..5}
DISCRETE aux1638 #ElementOne([5, 4, 1, 3, 2], S_00005_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux1638, [2,2,5,5])
**VARIABLES**
DISCRETE aux1639 #ElementOne([5, 4, 1, 3, 2], S_00004_00003)
{1..5}
DISCRETE aux1640 #ElementOne([5, 4, 1, 3, 2], S_00004_00005)
{1..5}
DISCRETE aux1641 #ElementOne([5, 4, 1, 3, 2], S_00004_00004)
{1..5}
DISCRETE aux1642 #ElementOne([5, 4, 1, 3, 2], S_00004_00002)
{1..5}
DISCRETE aux1643 #ElementOne([5, 4, 1, 3], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1643, [1,1,3,5])
**VARIABLES**
DISCRETE aux1644 #ElementOne([5, 4, 1, 3], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1644, [1,1,3,5])
**VARIABLES**
DISCRETE aux1645 #ElementOne([5, 4, 1, 3, 2], S_00002_00005)
{2..5}
DISCRETE aux1646 #ElementOne([5, 4, 1, 3], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1646, [1,1,3,5])
**VARIABLES**
DISCRETE aux1647 #ElementOne([5, 4, 1, 3, 2], S_00001_00005)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux1647, [2,2,5,5])
**VARIABLES**
DISCRETE aux1648 #ElementOne([5, 4, 1, 3], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1648, [1,1,3,5])
**VARIABLES**
DISCRETE aux1649 #ElementOne([2, 3, 4, 1, 5], S_00004_00004)
{1..5}
DISCRETE aux1650 #ElementOne([2, 3, 4, 1], S_00004_00001)
{1..4}
DISCRETE aux1651 #ElementOne([2, 3, 4, 1, 5], S_00004_00002)
{1..5}
DISCRETE aux1652 #ElementOne([2, 3, 4, 1, 5], S_00004_00003)
{1..5}
DISCRETE aux1653 #ElementOne([2, 3, 4, 1, 5], S_00004_00005)
{1..5}
DISCRETE aux1654 #ElementOne([2, 3, 4, 1], S_00001_00004)
{1..4}
DISCRETE aux1655 #ElementOne([2, 3, 4, 1, 5], S_00001_00005)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux1655, [2,2,5,5])
**VARIABLES**
DISCRETE aux1656 #ElementOne([2, 3, 4, 1], S_00002_00004)
{1..4}
DISCRETE aux1657 #ElementOne([2, 3, 4, 1], S_00002_00003)
{1..4}
DISCRETE aux1658 #ElementOne([2, 3, 4, 1, 5], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1658, [1,3,5,5])
**VARIABLES**
DISCRETE aux1659 #ElementOne([2, 3, 4, 1, 5], S_00003_00004)
{1..5}
DISCRETE aux1660 #ElementOne([2, 3, 4, 1], S_00003_00002)
{1..4}
DISCRETE aux1661 #ElementOne([2, 3, 4, 1, 5], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1661, [1,2,4,5])
**VARIABLES**
DISCRETE aux1662 #ElementOne([2, 3, 4, 1, 5], S_00003_00005)
{1..5}
DISCRETE aux1663 #ElementOne([2, 3, 4, 1, 5], S_00005_00004)
{1..5}
DISCRETE aux1664 #ElementOne([2, 3, 4, 1, 5], S_00005_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux1664, [2,2,5,5])
**VARIABLES**
DISCRETE aux1665 #ElementOne([2, 3, 4, 1, 5], S_00005_00002)
{1..5}
DISCRETE aux1666 #ElementOne([2, 3, 4, 1, 5], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1666, [1,2,4,5])
**VARIABLES**
DISCRETE aux1667 #ElementOne([2, 3, 4, 1, 5], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1667, [1,2,4,5])
**VARIABLES**
DISCRETE aux1668 #ElementOne([2, 3, 5, 1, 4], S_00004_00004)
{1..5}
DISCRETE aux1669 #ElementOne([2, 3, 5, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1669, [1,3,5,5])
**VARIABLES**
DISCRETE aux1670 #ElementOne([2, 3, 5, 1, 4], S_00004_00002)
{1..5}
DISCRETE aux1671 #ElementOne([2, 3, 5, 1, 4], S_00004_00005)
{1..5}
DISCRETE aux1672 #ElementOne([2, 3, 5, 1, 4], S_00004_00003)
{1..5}
DISCRETE aux1673 #ElementOne([2, 3, 5, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1673, [1,3,5,5])
**VARIABLES**
DISCRETE aux1674 #ElementOne([2, 3, 5, 1, 4], S_00001_00005)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux1674, [2,2,4,4])
**VARIABLES**
DISCRETE aux1675 #ElementOne([2, 3, 5, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1675, [1,3,5,5])
**VARIABLES**
DISCRETE aux1676 #ElementOne([2, 3, 5, 1, 4], S_00002_00005)
{1..4}
DISCRETE aux1677 #ElementOne([2, 3, 5, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1677, [1,3,5,5])
**VARIABLES**
DISCRETE aux1678 #ElementOne([2, 3, 5, 1, 4], S_00005_00004)
{1..5}
DISCRETE aux1679 #ElementOne([2, 3, 5, 1, 4], S_00005_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux1679, [2,2,4,4])
**VARIABLES**
DISCRETE aux1680 #ElementOne([2, 3, 5, 1, 4], S_00005_00002)
{1..5}
DISCRETE aux1681 #ElementOne([2, 3, 5, 1, 4], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1681, [1,2,4,5])
**VARIABLES**
DISCRETE aux1682 #ElementOne([2, 3, 5, 1, 4], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1682, [1,2,4,5])
**VARIABLES**
DISCRETE aux1683 #ElementOne([2, 3, 5, 1, 4], S_00003_00004)
{1..5}
DISCRETE aux1684 #ElementOne([2, 3, 5, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1684, [1,3,5,5])
**VARIABLES**
DISCRETE aux1685 #ElementOne([2, 3, 5, 1, 4], S_00003_00005)
{1..5}
DISCRETE aux1686 #ElementOne([2, 3, 5, 1, 4], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1686, [1,2,4,5])
**VARIABLES**
DISCRETE aux1687 #ElementOne([2, 4, 3, 1, 5], S_00004_00004)
{1..5}
DISCRETE aux1688 #ElementOne([2, 4, 3, 1], S_00004_00001)
{1..4}
DISCRETE aux1689 #ElementOne([2, 4, 3, 1, 5], S_00004_00003)
{1..5}
DISCRETE aux1690 #ElementOne([2, 4, 3, 1, 5], S_00004_00002)
{1..5}
DISCRETE aux1691 #ElementOne([2, 4, 3, 1, 5], S_00004_00005)
{1..5}
DISCRETE aux1692 #ElementOne([2, 4, 3, 1], S_00001_00004)
{1..4}
DISCRETE aux1693 #ElementOne([2, 4, 3, 1, 5], S_00001_00005)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux1693, [2,2,5,5])
**VARIABLES**
DISCRETE aux1694 #ElementOne([2, 4, 3, 1, 5], S_00003_00004)
{1..5}
DISCRETE aux1695 #ElementOne([2, 4, 3, 1, 5], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1695, [1,3,5,5])
**VARIABLES**
DISCRETE aux1696 #ElementOne([2, 4, 3, 1], S_00003_00002)
{1..4}
DISCRETE aux1697 #ElementOne([2, 4, 3, 1, 5], S_00003_00005)
{1..5}
DISCRETE aux1698 #ElementOne([2, 4, 3, 1], S_00002_00004)
{1..4}
DISCRETE aux1699 #ElementOne([2, 4, 3, 1], S_00002_00003)
{1..4}
DISCRETE aux1700 #ElementOne([2, 4, 3, 1, 5], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1700, [1,2,4,5])
**VARIABLES**
DISCRETE aux1701 #ElementOne([2, 4, 3, 1, 5], S_00005_00004)
{1..5}
DISCRETE aux1702 #ElementOne([2, 4, 3, 1, 5], S_00005_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux1702, [2,2,5,5])
**VARIABLES**
DISCRETE aux1703 #ElementOne([2, 4, 3, 1, 5], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1703, [1,3,5,5])
**VARIABLES**
DISCRETE aux1704 #ElementOne([2, 4, 3, 1, 5], S_00005_00002)
{1..5}
DISCRETE aux1705 #ElementOne([2, 4, 3, 1, 5], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1705, [1,3,5,5])
**VARIABLES**
DISCRETE aux1706 #ElementOne([2, 5, 3, 1, 4], S_00004_00004)
{1..5}
DISCRETE aux1707 #ElementOne([2, 5, 3, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1707, [1,3,5,5])
**VARIABLES**
DISCRETE aux1708 #ElementOne([2, 5, 3, 1, 4], S_00004_00003)
{1..5}
DISCRETE aux1709 #ElementOne([2, 5, 3, 1, 4], S_00004_00005)
{1..5}
DISCRETE aux1710 #ElementOne([2, 5, 3, 1, 4], S_00004_00002)
{1..5}
DISCRETE aux1711 #ElementOne([2, 5, 3, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1711, [1,3,5,5])
**VARIABLES**
DISCRETE aux1712 #ElementOne([2, 5, 3, 1, 4], S_00001_00005)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux1712, [2,2,4,4])
**VARIABLES**
DISCRETE aux1713 #ElementOne([2, 5, 3, 1, 4], S_00003_00004)
{1..5}
DISCRETE aux1714 #ElementOne([2, 5, 3, 1, 4], S_00003_00003)
{1..4}
DISCRETE aux1715 #ElementOne([2, 5, 3, 1, 4], S_00003_00005)
{1..5}
DISCRETE aux1716 #ElementOne([2, 5, 3, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1716, [1,3,5,5])
**VARIABLES**
DISCRETE aux1717 #ElementOne([2, 5, 3, 1, 4], S_00005_00004)
{1..5}
DISCRETE aux1718 #ElementOne([2, 5, 3, 1, 4], S_00005_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux1718, [2,2,4,4])
**VARIABLES**
DISCRETE aux1719 #ElementOne([2, 5, 3, 1, 4], S_00005_00003)
{1..4}
DISCRETE aux1720 #ElementOne([2, 5, 3, 1, 4], S_00005_00005)
{1..4}
DISCRETE aux1721 #ElementOne([2, 5, 3, 1, 4], S_00005_00002)
{1..5}
DISCRETE aux1722 #ElementOne([2, 5, 3, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1722, [1,3,5,5])
**VARIABLES**
DISCRETE aux1723 #ElementOne([2, 5, 3, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1723, [1,3,5,5])
**VARIABLES**
DISCRETE aux1724 #ElementOne([2, 5, 3, 1, 4], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1724, [1,2,4,5])
**VARIABLES**
DISCRETE aux1725 #ElementOne([2, 4, 5, 1, 3], S_00004_00004)
{1..5}
DISCRETE aux1726 #ElementOne([2, 4, 5, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1726, [1,2,4,5])
**VARIABLES**
DISCRETE aux1727 #ElementOne([2, 4, 5, 1, 3], S_00004_00005)
{1..5}
DISCRETE aux1728 #ElementOne([2, 4, 5, 1, 3], S_00004_00002)
{1..5}
DISCRETE aux1729 #ElementOne([2, 4, 5, 1, 3], S_00004_00003)
{1..5}
DISCRETE aux1730 #ElementOne([2, 4, 5, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1730, [1,2,4,5])
**VARIABLES**
DISCRETE aux1731 #ElementOne([2, 4, 5, 1, 3], S_00001_00005)
{2..3}
DISCRETE aux1732 #ElementOne([2, 4, 5, 1, 3], S_00005_00004)
{1..5}
DISCRETE aux1733 #ElementOne([2, 4, 5, 1, 3], S_00005_00001)
{2..3}
DISCRETE aux1734 #ElementOne([2, 4, 5, 1, 3], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1734, [1,3,5,5])
**VARIABLES**
DISCRETE aux1735 #ElementOne([2, 4, 5, 1, 3], S_00005_00002)
{1..5}
DISCRETE aux1736 #ElementOne([2, 4, 5, 1, 3], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1736, [1,3,5,5])
**VARIABLES**
DISCRETE aux1737 #ElementOne([2, 4, 5, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1737, [1,2,4,5])
**VARIABLES**
DISCRETE aux1738 #ElementOne([2, 4, 5, 1, 3], S_00002_00005)
{1..4}
DISCRETE aux1739 #ElementOne([2, 4, 5, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1739, [1,2,4,5])
**VARIABLES**
DISCRETE aux1740 #ElementOne([2, 4, 5, 1, 3], S_00003_00004)
{1..5}
DISCRETE aux1741 #ElementOne([2, 4, 5, 1, 3], S_00003_00005)
{1..5}
DISCRETE aux1742 #ElementOne([2, 4, 5, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1742, [1,2,4,5])
**VARIABLES**
DISCRETE aux1743 #ElementOne([2, 4, 5, 1, 3], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1743, [1,3,5,5])
**VARIABLES**
DISCRETE aux1744 #ElementOne([2, 5, 4, 1, 3], S_00004_00004)
{1..5}
DISCRETE aux1745 #ElementOne([2, 5, 4, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1745, [1,2,4,5])
**VARIABLES**
DISCRETE aux1746 #ElementOne([2, 5, 4, 1, 3], S_00004_00005)
{1..5}
DISCRETE aux1747 #ElementOne([2, 5, 4, 1, 3], S_00004_00003)
{1..5}
DISCRETE aux1748 #ElementOne([2, 5, 4, 1, 3], S_00004_00002)
{1..5}
DISCRETE aux1749 #ElementOne([2, 5, 4, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1749, [1,2,4,5])
**VARIABLES**
DISCRETE aux1750 #ElementOne([2, 5, 4, 1, 3], S_00001_00005)
{2..3}
DISCRETE aux1751 #ElementOne([2, 5, 4, 1, 3], S_00005_00004)
{1..5}
DISCRETE aux1752 #ElementOne([2, 5, 4, 1, 3], S_00005_00001)
{2..3}
DISCRETE aux1753 #ElementOne([2, 5, 4, 1, 3], S_00005_00005)
{1..4}
DISCRETE aux1754 #ElementOne([2, 5, 4, 1, 3], S_00005_00003)
{1..4}
DISCRETE aux1755 #ElementOne([2, 5, 4, 1, 3], S_00005_00002)
{1..5}
DISCRETE aux1756 #ElementOne([2, 5, 4, 1, 3], S_00003_00004)
{1..5}
DISCRETE aux1757 #ElementOne([2, 5, 4, 1, 3], S_00003_00005)
{1..5}
DISCRETE aux1758 #ElementOne([2, 5, 4, 1, 3], S_00003_00003)
{1..4}
DISCRETE aux1759 #ElementOne([2, 5, 4, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1759, [1,2,4,5])
**VARIABLES**
DISCRETE aux1760 #ElementOne([2, 5, 4, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1760, [1,2,4,5])
**VARIABLES**
DISCRETE aux1761 #ElementOne([2, 5, 4, 1, 3], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1761, [1,3,5,5])
**VARIABLES**
DISCRETE aux1762 #ElementOne([2, 5, 4, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1762, [1,2,4,5])
**VARIABLES**
DISCRETE aux1763 #ElementOne([3, 2, 4, 1, 5], S_00004_00004)
{1..5}
DISCRETE aux1764 #ElementOne([3, 2, 4, 1, 5], S_00004_00002)
{1..5}
DISCRETE aux1765 #ElementOne([3, 2, 4, 1], S_00004_00001)
{1..4}
DISCRETE aux1766 #ElementOne([3, 2, 4, 1, 5], S_00004_00003)
{1..5}
DISCRETE aux1767 #ElementOne([3, 2, 4, 1, 5], S_00004_00005)
{1..5}
DISCRETE aux1768 #ElementOne([3, 2, 4, 1], S_00002_00004)
{1..4}
DISCRETE aux1769 #ElementOne([3, 2, 4, 1], S_00002_00003)
{1..4}
DISCRETE aux1770 #ElementOne([3, 2, 4, 1, 5], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1770, [1,3,5,5])
**VARIABLES**
DISCRETE aux1771 #ElementOne([3, 2, 4, 1], S_00001_00004)
{1..4}
DISCRETE aux1772 #ElementOne([3, 2, 4, 1, 5], S_00001_00005)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1772, [3,3,5,5])
**VARIABLES**
DISCRETE aux1773 #ElementOne([3, 2, 4, 1, 5], S_00003_00004)
{1..5}
DISCRETE aux1774 #ElementOne([3, 2, 4, 1], S_00003_00002)
{1..4}
DISCRETE aux1775 #ElementOne([3, 2, 4, 1, 5], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1775, [1,1,3,5])
**VARIABLES**
DISCRETE aux1776 #ElementOne([3, 2, 4, 1, 5], S_00003_00005)
{1..5}
DISCRETE aux1777 #ElementOne([3, 2, 4, 1, 5], S_00005_00004)
{1..5}
DISCRETE aux1778 #ElementOne([3, 2, 4, 1, 5], S_00005_00002)
{1..5}
DISCRETE aux1779 #ElementOne([3, 2, 4, 1, 5], S_00005_00001)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1779, [3,3,5,5])
**VARIABLES**
DISCRETE aux1780 #ElementOne([3, 2, 4, 1, 5], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1780, [1,1,3,5])
**VARIABLES**
DISCRETE aux1781 #ElementOne([3, 2, 4, 1, 5], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1781, [1,1,3,5])
**VARIABLES**
DISCRETE aux1782 #ElementOne([3, 2, 5, 1, 4], S_00004_00004)
{1..5}
DISCRETE aux1783 #ElementOne([3, 2, 5, 1, 4], S_00004_00002)
{1..5}
DISCRETE aux1784 #ElementOne([3, 2, 5, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1784, [1,3,5,5])
**VARIABLES**
DISCRETE aux1785 #ElementOne([3, 2, 5, 1, 4], S_00004_00005)
{1..5}
DISCRETE aux1786 #ElementOne([3, 2, 5, 1, 4], S_00004_00003)
{1..5}
DISCRETE aux1787 #ElementOne([3, 2, 5, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1787, [1,3,5,5])
**VARIABLES**
DISCRETE aux1788 #ElementOne([3, 2, 5, 1, 4], S_00002_00005)
{1..4}
DISCRETE aux1789 #ElementOne([3, 2, 5, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1789, [1,3,5,5])
**VARIABLES**
DISCRETE aux1790 #ElementOne([3, 2, 5, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1790, [1,3,5,5])
**VARIABLES**
DISCRETE aux1791 #ElementOne([3, 2, 5, 1, 4], S_00001_00005)
{3..4}
DISCRETE aux1792 #ElementOne([3, 2, 5, 1, 4], S_00005_00004)
{1..5}
DISCRETE aux1793 #ElementOne([3, 2, 5, 1, 4], S_00005_00002)
{1..5}
DISCRETE aux1794 #ElementOne([3, 2, 5, 1, 4], S_00005_00001)
{3..4}
DISCRETE aux1795 #ElementOne([3, 2, 5, 1, 4], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1795, [1,1,3,5])
**VARIABLES**
DISCRETE aux1796 #ElementOne([3, 2, 5, 1, 4], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1796, [1,1,3,5])
**VARIABLES**
DISCRETE aux1797 #ElementOne([3, 2, 5, 1, 4], S_00003_00004)
{1..5}
DISCRETE aux1798 #ElementOne([3, 2, 5, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1798, [1,3,5,5])
**VARIABLES**
DISCRETE aux1799 #ElementOne([3, 2, 5, 1, 4], S_00003_00005)
{1..5}
DISCRETE aux1800 #ElementOne([3, 2, 5, 1, 4], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1800, [1,1,3,5])
**VARIABLES**
DISCRETE aux1801 #ElementOne([4, 2, 3, 1, 5], S_00004_00004)
{1..5}
DISCRETE aux1802 #ElementOne([4, 2, 3, 1, 5], S_00004_00002)
{1..5}
DISCRETE aux1803 #ElementOne([4, 2, 3, 1, 5], S_00004_00003)
{1..5}
DISCRETE aux1804 #ElementOne([4, 2, 3, 1], S_00004_00001)
{1..4}
DISCRETE aux1805 #ElementOne([4, 2, 3, 1, 5], S_00004_00005)
{1..5}
DISCRETE aux1806 #ElementOne([4, 2, 3, 1], S_00002_00004)
{1..4}
DISCRETE aux1807 #ElementOne([4, 2, 3, 1], S_00002_00003)
{1..4}
DISCRETE aux1808 #ElementOne([4, 2, 3, 1, 5], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1808, [1,2,4,5])
**VARIABLES**
DISCRETE aux1809 #ElementOne([4, 2, 3, 1, 5], S_00003_00004)
{1..5}
DISCRETE aux1810 #ElementOne([4, 2, 3, 1], S_00003_00002)
{1..4}
DISCRETE aux1811 #ElementOne([4, 2, 3, 1, 5], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1811, [1,1,3,5])
**VARIABLES**
DISCRETE aux1812 #ElementOne([4, 2, 3, 1, 5], S_00003_00005)
{1..5}
DISCRETE aux1813 #ElementOne([4, 2, 3, 1], S_00001_00004)
{1..4}
DISCRETE aux1814 #ElementOne([4, 2, 3, 1, 5], S_00001_00005)
{4..5}
DISCRETE aux1815 #ElementOne([4, 2, 3, 1, 5], S_00005_00004)
{1..5}
DISCRETE aux1816 #ElementOne([4, 2, 3, 1, 5], S_00005_00002)
{1..5}
DISCRETE aux1817 #ElementOne([4, 2, 3, 1, 5], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1817, [1,1,3,5])
**VARIABLES**
DISCRETE aux1818 #ElementOne([4, 2, 3, 1, 5], S_00005_00001)
{4..5}
DISCRETE aux1819 #ElementOne([4, 2, 3, 1, 5], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1819, [1,1,3,5])
**VARIABLES**
DISCRETE aux1820 #ElementOne([5, 2, 3, 1, 4], S_00004_00004)
{1..5}
DISCRETE aux1821 #ElementOne([5, 2, 3, 1, 4], S_00004_00002)
{1..5}
DISCRETE aux1822 #ElementOne([5, 2, 3, 1, 4], S_00004_00003)
{1..5}
DISCRETE aux1823 #ElementOne([5, 2, 3, 1, 4], S_00004_00005)
{1..5}
DISCRETE aux1824 #ElementOne([5, 2, 3, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1824, [1,3,5,5])
**VARIABLES**
DISCRETE aux1825 #ElementOne([5, 2, 3, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1825, [1,3,5,5])
**VARIABLES**
DISCRETE aux1826 #ElementOne([5, 2, 3, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1826, [1,3,5,5])
**VARIABLES**
DISCRETE aux1827 #ElementOne([5, 2, 3, 1, 4], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1827, [1,2,4,5])
**VARIABLES**
DISCRETE aux1828 #ElementOne([5, 2, 3, 1, 4], S_00003_00004)
{1..5}
DISCRETE aux1829 #ElementOne([5, 2, 3, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1829, [1,3,5,5])
**VARIABLES**
DISCRETE aux1830 #ElementOne([5, 2, 3, 1, 4], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1830, [1,1,3,5])
**VARIABLES**
DISCRETE aux1831 #ElementOne([5, 2, 3, 1, 4], S_00003_00005)
{1..5}
DISCRETE aux1832 #ElementOne([5, 2, 3, 1, 4], S_00005_00004)
{1..5}
DISCRETE aux1833 #ElementOne([5, 2, 3, 1, 4], S_00005_00002)
{1..5}
DISCRETE aux1834 #ElementOne([5, 2, 3, 1, 4], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1834, [1,1,3,5])
**VARIABLES**
DISCRETE aux1835 #ElementOne([5, 2, 3, 1, 4], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1835, [1,1,3,5])
**VARIABLES**
DISCRETE aux1836 #ElementOne([5, 2, 3, 1, 4], S_00005_00001)
{4..5}
DISCRETE aux1837 #ElementOne([5, 2, 3, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1837, [1,3,5,5])
**VARIABLES**
DISCRETE aux1838 #ElementOne([5, 2, 3, 1, 4], S_00001_00005)
{4..5}
DISCRETE aux1839 #ElementOne([4, 2, 5, 1, 3], S_00004_00004)
{1..5}
DISCRETE aux1840 #ElementOne([4, 2, 5, 1, 3], S_00004_00002)
{1..5}
DISCRETE aux1841 #ElementOne([4, 2, 5, 1, 3], S_00004_00005)
{1..5}
DISCRETE aux1842 #ElementOne([4, 2, 5, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1842, [1,2,4,5])
**VARIABLES**
DISCRETE aux1843 #ElementOne([4, 2, 5, 1, 3], S_00004_00003)
{1..5}
DISCRETE aux1844 #ElementOne([4, 2, 5, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1844, [1,2,4,5])
**VARIABLES**
DISCRETE aux1845 #ElementOne([4, 2, 5, 1, 3], S_00002_00005)
{1..4}
DISCRETE aux1846 #ElementOne([4, 2, 5, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1846, [1,2,4,5])
**VARIABLES**
DISCRETE aux1847 #ElementOne([4, 2, 5, 1, 3], S_00005_00004)
{1..5}
DISCRETE aux1848 #ElementOne([4, 2, 5, 1, 3], S_00005_00002)
{1..5}
DISCRETE aux1849 #ElementOne([4, 2, 5, 1, 3], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1849, [1,1,3,5])
**VARIABLES**
DISCRETE aux1850 #ElementOne([4, 2, 5, 1, 3], S_00005_00001)
{3..4}
DISCRETE aux1851 #ElementOne([4, 2, 5, 1, 3], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1851, [1,1,3,5])
**VARIABLES**
DISCRETE aux1852 #ElementOne([4, 2, 5, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1852, [1,2,4,5])
**VARIABLES**
DISCRETE aux1853 #ElementOne([4, 2, 5, 1, 3], S_00001_00005)
{3..4}
DISCRETE aux1854 #ElementOne([4, 2, 5, 1, 3], S_00003_00004)
{1..5}
DISCRETE aux1855 #ElementOne([4, 2, 5, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1855, [1,2,4,5])
**VARIABLES**
DISCRETE aux1856 #ElementOne([4, 2, 5, 1, 3], S_00003_00005)
{1..5}
DISCRETE aux1857 #ElementOne([4, 2, 5, 1, 3], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1857, [1,1,3,5])
**VARIABLES**
DISCRETE aux1858 #ElementOne([5, 2, 4, 1, 3], S_00004_00004)
{1..5}
DISCRETE aux1859 #ElementOne([5, 2, 4, 1, 3], S_00004_00002)
{1..5}
DISCRETE aux1860 #ElementOne([5, 2, 4, 1, 3], S_00004_00005)
{1..5}
DISCRETE aux1861 #ElementOne([5, 2, 4, 1, 3], S_00004_00003)
{1..5}
DISCRETE aux1862 #ElementOne([5, 2, 4, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1862, [1,2,4,5])
**VARIABLES**
DISCRETE aux1863 #ElementOne([5, 2, 4, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1863, [1,2,4,5])
**VARIABLES**
DISCRETE aux1864 #ElementOne([5, 2, 4, 1, 3], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1864, [1,3,5,5])
**VARIABLES**
DISCRETE aux1865 #ElementOne([5, 2, 4, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1865, [1,2,4,5])
**VARIABLES**
DISCRETE aux1866 #ElementOne([5, 2, 4, 1, 3], S_00005_00004)
{1..5}
DISCRETE aux1867 #ElementOne([5, 2, 4, 1, 3], S_00005_00002)
{1..5}
DISCRETE aux1868 #ElementOne([5, 2, 4, 1, 3], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1868, [1,1,3,5])
**VARIABLES**
DISCRETE aux1869 #ElementOne([5, 2, 4, 1, 3], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1869, [1,1,3,5])
**VARIABLES**
DISCRETE aux1870 #ElementOne([5, 2, 4, 1, 3], S_00005_00001)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1870, [3,3,5,5])
**VARIABLES**
DISCRETE aux1871 #ElementOne([5, 2, 4, 1, 3], S_00003_00004)
{1..5}
DISCRETE aux1872 #ElementOne([5, 2, 4, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1872, [1,2,4,5])
**VARIABLES**
DISCRETE aux1873 #ElementOne([5, 2, 4, 1, 3], S_00003_00005)
{1..5}
DISCRETE aux1874 #ElementOne([5, 2, 4, 1, 3], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1874, [1,1,3,5])
**VARIABLES**
DISCRETE aux1875 #ElementOne([5, 2, 4, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1875, [1,2,4,5])
**VARIABLES**
DISCRETE aux1876 #ElementOne([5, 2, 4, 1, 3], S_00001_00005)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1876, [3,3,5,5])
**VARIABLES**
DISCRETE aux1877 #ElementOne([3, 4, 2, 1, 5], S_00004_00004)
{1..5}
DISCRETE aux1878 #ElementOne([3, 4, 2, 1, 5], S_00004_00003)
{1..5}
DISCRETE aux1879 #ElementOne([3, 4, 2, 1], S_00004_00001)
{1..4}
DISCRETE aux1880 #ElementOne([3, 4, 2, 1, 5], S_00004_00002)
{1..5}
DISCRETE aux1881 #ElementOne([3, 4, 2, 1, 5], S_00004_00005)
{1..5}
DISCRETE aux1882 #ElementOne([3, 4, 2, 1, 5], S_00003_00004)
{1..5}
DISCRETE aux1883 #ElementOne([3, 4, 2, 1, 5], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1883, [1,3,5,5])
**VARIABLES**
DISCRETE aux1884 #ElementOne([3, 4, 2, 1], S_00003_00002)
{1..4}
DISCRETE aux1885 #ElementOne([3, 4, 2, 1, 5], S_00003_00005)
{1..5}
DISCRETE aux1886 #ElementOne([3, 4, 2, 1], S_00001_00004)
{1..4}
DISCRETE aux1887 #ElementOne([3, 4, 2, 1, 5], S_00001_00005)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1887, [3,3,5,5])
**VARIABLES**
DISCRETE aux1888 #ElementOne([3, 4, 2, 1], S_00002_00004)
{1..4}
DISCRETE aux1889 #ElementOne([3, 4, 2, 1], S_00002_00003)
{1..4}
DISCRETE aux1890 #ElementOne([3, 4, 2, 1, 5], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1890, [1,1,3,5])
**VARIABLES**
DISCRETE aux1891 #ElementOne([3, 4, 2, 1, 5], S_00005_00004)
{1..5}
DISCRETE aux1892 #ElementOne([3, 4, 2, 1, 5], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1892, [1,3,5,5])
**VARIABLES**
DISCRETE aux1893 #ElementOne([3, 4, 2, 1, 5], S_00005_00001)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1893, [3,3,5,5])
**VARIABLES**
DISCRETE aux1894 #ElementOne([3, 4, 2, 1, 5], S_00005_00002)
{1..5}
DISCRETE aux1895 #ElementOne([3, 4, 2, 1, 5], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1895, [1,3,5,5])
**VARIABLES**
DISCRETE aux1896 #ElementOne([3, 5, 2, 1, 4], S_00004_00004)
{1..5}
DISCRETE aux1897 #ElementOne([3, 5, 2, 1, 4], S_00004_00003)
{1..5}
DISCRETE aux1898 #ElementOne([3, 5, 2, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1898, [1,3,5,5])
**VARIABLES**
DISCRETE aux1899 #ElementOne([3, 5, 2, 1, 4], S_00004_00005)
{1..5}
DISCRETE aux1900 #ElementOne([3, 5, 2, 1, 4], S_00004_00002)
{1..5}
DISCRETE aux1901 #ElementOne([3, 5, 2, 1, 4], S_00003_00004)
{1..5}
DISCRETE aux1902 #ElementOne([3, 5, 2, 1, 4], S_00003_00003)
{1..4}
DISCRETE aux1903 #ElementOne([3, 5, 2, 1, 4], S_00003_00005)
{1..5}
DISCRETE aux1904 #ElementOne([3, 5, 2, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1904, [1,3,5,5])
**VARIABLES**
DISCRETE aux1905 #ElementOne([3, 5, 2, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1905, [1,3,5,5])
**VARIABLES**
DISCRETE aux1906 #ElementOne([3, 5, 2, 1, 4], S_00001_00005)
{3..4}
DISCRETE aux1907 #ElementOne([3, 5, 2, 1, 4], S_00005_00004)
{1..5}
DISCRETE aux1908 #ElementOne([3, 5, 2, 1, 4], S_00005_00003)
{1..4}
DISCRETE aux1909 #ElementOne([3, 5, 2, 1, 4], S_00005_00001)
{3..4}
DISCRETE aux1910 #ElementOne([3, 5, 2, 1, 4], S_00005_00005)
{1..4}
DISCRETE aux1911 #ElementOne([3, 5, 2, 1, 4], S_00005_00002)
{1..5}
DISCRETE aux1912 #ElementOne([3, 5, 2, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1912, [1,3,5,5])
**VARIABLES**
DISCRETE aux1913 #ElementOne([3, 5, 2, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1913, [1,3,5,5])
**VARIABLES**
DISCRETE aux1914 #ElementOne([3, 5, 2, 1, 4], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1914, [1,1,3,5])
**VARIABLES**
DISCRETE aux1915 #ElementOne([4, 3, 2, 1, 5], S_00004_00004)
{1..5}
DISCRETE aux1916 #ElementOne([4, 3, 2, 1, 5], S_00004_00003)
{1..5}
DISCRETE aux1917 #ElementOne([4, 3, 2, 1, 5], S_00004_00002)
{1..5}
DISCRETE aux1918 #ElementOne([4, 3, 2, 1], S_00004_00001)
{1..4}
DISCRETE aux1919 #ElementOne([4, 3, 2, 1, 5], S_00004_00005)
{1..5}
DISCRETE aux1920 #ElementOne([4, 3, 2, 1, 5], S_00003_00004)
{1..5}
DISCRETE aux1921 #ElementOne([4, 3, 2, 1, 5], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1921, [1,2,4,5])
**VARIABLES**
DISCRETE aux1922 #ElementOne([4, 3, 2, 1], S_00003_00002)
{1..4}
DISCRETE aux1923 #ElementOne([4, 3, 2, 1, 5], S_00003_00005)
{1..5}
DISCRETE aux1924 #ElementOne([4, 3, 2, 1], S_00002_00004)
{1..4}
DISCRETE aux1925 #ElementOne([4, 3, 2, 1], S_00002_00003)
{1..4}
DISCRETE aux1926 #ElementOne([4, 3, 2, 1, 5], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1926, [1,1,3,5])
**VARIABLES**
DISCRETE aux1927 #ElementOne([4, 3, 2, 1], S_00001_00004)
{1..4}
DISCRETE aux1928 #ElementOne([4, 3, 2, 1, 5], S_00001_00005)
{4..5}
DISCRETE aux1929 #ElementOne([4, 3, 2, 1, 5], S_00005_00004)
{1..5}
DISCRETE aux1930 #ElementOne([4, 3, 2, 1, 5], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1930, [1,2,4,5])
**VARIABLES**
DISCRETE aux1931 #ElementOne([4, 3, 2, 1, 5], S_00005_00002)
{1..5}
DISCRETE aux1932 #ElementOne([4, 3, 2, 1, 5], S_00005_00001)
{4..5}
DISCRETE aux1933 #ElementOne([4, 3, 2, 1, 5], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1933, [1,2,4,5])
**VARIABLES**
DISCRETE aux1934 #ElementOne([5, 3, 2, 1, 4], S_00004_00004)
{1..5}
DISCRETE aux1935 #ElementOne([5, 3, 2, 1, 4], S_00004_00003)
{1..5}
DISCRETE aux1936 #ElementOne([5, 3, 2, 1, 4], S_00004_00002)
{1..5}
DISCRETE aux1937 #ElementOne([5, 3, 2, 1, 4], S_00004_00005)
{1..5}
DISCRETE aux1938 #ElementOne([5, 3, 2, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1938, [1,3,5,5])
**VARIABLES**
DISCRETE aux1939 #ElementOne([5, 3, 2, 1, 4], S_00003_00004)
{1..5}
DISCRETE aux1940 #ElementOne([5, 3, 2, 1, 4], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1940, [1,2,4,5])
**VARIABLES**
DISCRETE aux1941 #ElementOne([5, 3, 2, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1941, [1,3,5,5])
**VARIABLES**
DISCRETE aux1942 #ElementOne([5, 3, 2, 1, 4], S_00003_00005)
{1..5}
DISCRETE aux1943 #ElementOne([5, 3, 2, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1943, [1,3,5,5])
**VARIABLES**
DISCRETE aux1944 #ElementOne([5, 3, 2, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1944, [1,3,5,5])
**VARIABLES**
DISCRETE aux1945 #ElementOne([5, 3, 2, 1, 4], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1945, [1,1,3,5])
**VARIABLES**
DISCRETE aux1946 #ElementOne([5, 3, 2, 1, 4], S_00005_00004)
{1..5}
DISCRETE aux1947 #ElementOne([5, 3, 2, 1, 4], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1947, [1,2,4,5])
**VARIABLES**
DISCRETE aux1948 #ElementOne([5, 3, 2, 1, 4], S_00005_00002)
{1..5}
DISCRETE aux1949 #ElementOne([5, 3, 2, 1, 4], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1949, [1,2,4,5])
**VARIABLES**
DISCRETE aux1950 #ElementOne([5, 3, 2, 1, 4], S_00005_00001)
{4..5}
DISCRETE aux1951 #ElementOne([5, 3, 2, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1951, [1,3,5,5])
**VARIABLES**
DISCRETE aux1952 #ElementOne([5, 3, 2, 1, 4], S_00001_00005)
{4..5}
DISCRETE aux1953 #ElementOne([4, 5, 2, 1, 3], S_00004_00004)
{1..5}
DISCRETE aux1954 #ElementOne([4, 5, 2, 1, 3], S_00004_00003)
{1..5}
DISCRETE aux1955 #ElementOne([4, 5, 2, 1, 3], S_00004_00005)
{1..5}
DISCRETE aux1956 #ElementOne([4, 5, 2, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1956, [1,2,4,5])
**VARIABLES**
DISCRETE aux1957 #ElementOne([4, 5, 2, 1, 3], S_00004_00002)
{1..5}
DISCRETE aux1958 #ElementOne([4, 5, 2, 1, 3], S_00003_00004)
{1..5}
DISCRETE aux1959 #ElementOne([4, 5, 2, 1, 3], S_00003_00003)
{1..4}
DISCRETE aux1960 #ElementOne([4, 5, 2, 1, 3], S_00003_00005)
{1..5}
DISCRETE aux1961 #ElementOne([4, 5, 2, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1961, [1,2,4,5])
**VARIABLES**
DISCRETE aux1962 #ElementOne([4, 5, 2, 1, 3], S_00005_00004)
{1..5}
DISCRETE aux1963 #ElementOne([4, 5, 2, 1, 3], S_00005_00003)
{1..4}
DISCRETE aux1964 #ElementOne([4, 5, 2, 1, 3], S_00005_00005)
{1..4}
DISCRETE aux1965 #ElementOne([4, 5, 2, 1, 3], S_00005_00001)
{3..4}
DISCRETE aux1966 #ElementOne([4, 5, 2, 1, 3], S_00005_00002)
{1..5}
DISCRETE aux1967 #ElementOne([4, 5, 2, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1967, [1,2,4,5])
**VARIABLES**
DISCRETE aux1968 #ElementOne([4, 5, 2, 1, 3], S_00001_00005)
{3..4}
DISCRETE aux1969 #ElementOne([4, 5, 2, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1969, [1,2,4,5])
**VARIABLES**
DISCRETE aux1970 #ElementOne([4, 5, 2, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1970, [1,2,4,5])
**VARIABLES**
DISCRETE aux1971 #ElementOne([4, 5, 2, 1, 3], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1971, [1,1,3,5])
**VARIABLES**
DISCRETE aux1972 #ElementOne([5, 4, 2, 1, 3], S_00004_00004)
{1..5}
DISCRETE aux1973 #ElementOne([5, 4, 2, 1, 3], S_00004_00003)
{1..5}
DISCRETE aux1974 #ElementOne([5, 4, 2, 1, 3], S_00004_00005)
{1..5}
DISCRETE aux1975 #ElementOne([5, 4, 2, 1, 3], S_00004_00002)
{1..5}
DISCRETE aux1976 #ElementOne([5, 4, 2, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1976, [1,2,4,5])
**VARIABLES**
DISCRETE aux1977 #ElementOne([5, 4, 2, 1, 3], S_00003_00004)
{1..5}
DISCRETE aux1978 #ElementOne([5, 4, 2, 1, 3], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1978, [1,3,5,5])
**VARIABLES**
DISCRETE aux1979 #ElementOne([5, 4, 2, 1, 3], S_00003_00005)
{1..5}
DISCRETE aux1980 #ElementOne([5, 4, 2, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1980, [1,2,4,5])
**VARIABLES**
DISCRETE aux1981 #ElementOne([5, 4, 2, 1, 3], S_00005_00004)
{1..5}
DISCRETE aux1982 #ElementOne([5, 4, 2, 1, 3], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1982, [1,3,5,5])
**VARIABLES**
DISCRETE aux1983 #ElementOne([5, 4, 2, 1, 3], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1983, [1,3,5,5])
**VARIABLES**
DISCRETE aux1984 #ElementOne([5, 4, 2, 1, 3], S_00005_00002)
{1..5}
DISCRETE aux1985 #ElementOne([5, 4, 2, 1, 3], S_00005_00001)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1985, [3,3,5,5])
**VARIABLES**
DISCRETE aux1986 #ElementOne([5, 4, 2, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1986, [1,2,4,5])
**VARIABLES**
DISCRETE aux1987 #ElementOne([5, 4, 2, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1987, [1,2,4,5])
**VARIABLES**
DISCRETE aux1988 #ElementOne([5, 4, 2, 1, 3], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1988, [1,1,3,5])
**VARIABLES**
DISCRETE aux1989 #ElementOne([5, 4, 2, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1989, [1,2,4,5])
**VARIABLES**
DISCRETE aux1990 #ElementOne([5, 4, 2, 1, 3], S_00001_00005)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux1990, [3,3,5,5])
**VARIABLES**
DISCRETE aux1991 #ElementOne([3, 4, 5, 1, 2], S_00004_00004)
{1..5}
DISCRETE aux1992 #ElementOne([3, 4, 5, 1, 2], S_00004_00005)
{1..5}
DISCRETE aux1993 #ElementOne([3, 4, 5, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1993, [1,1,3,5])
**VARIABLES**
DISCRETE aux1994 #ElementOne([3, 4, 5, 1, 2], S_00004_00002)
{1..5}
DISCRETE aux1995 #ElementOne([3, 4, 5, 1, 2], S_00004_00003)
{1..5}
DISCRETE aux1996 #ElementOne([3, 4, 5, 1, 2], S_00005_00004)
{1..5}
DISCRETE aux1997 #ElementOne([3, 4, 5, 1, 2], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux1997, [1,3,5,5])
**VARIABLES**
DISCRETE aux1998 #ElementOne([3, 4, 5, 1, 2], S_00005_00001)
{2..3}
DISCRETE aux1999 #ElementOne([3, 4, 5, 1, 2], S_00005_00002)
{1..5}
DISCRETE aux2000 #ElementOne([3, 4, 5, 1, 2], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2000, [1,3,5,5])
**VARIABLES**
DISCRETE aux2001 #ElementOne([3, 4, 5, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2001, [1,1,3,5])
**VARIABLES**
DISCRETE aux2002 #ElementOne([3, 4, 5, 1, 2], S_00001_00005)
{2..3}
DISCRETE aux2003 #ElementOne([3, 4, 5, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2003, [1,1,3,5])
**VARIABLES**
DISCRETE aux2004 #ElementOne([3, 4, 5, 1, 2], S_00002_00005)
{1..4}
DISCRETE aux2005 #ElementOne([3, 4, 5, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2005, [1,1,3,5])
**VARIABLES**
DISCRETE aux2006 #ElementOne([3, 4, 5, 1, 2], S_00003_00004)
{1..5}
DISCRETE aux2007 #ElementOne([3, 4, 5, 1, 2], S_00003_00005)
{1..5}
DISCRETE aux2008 #ElementOne([3, 4, 5, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2008, [1,1,3,5])
**VARIABLES**
DISCRETE aux2009 #ElementOne([3, 4, 5, 1, 2], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2009, [1,3,5,5])
**VARIABLES**
DISCRETE aux2010 #ElementOne([3, 5, 4, 1, 2], S_00004_00004)
{1..5}
DISCRETE aux2011 #ElementOne([3, 5, 4, 1, 2], S_00004_00005)
{1..5}
DISCRETE aux2012 #ElementOne([3, 5, 4, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2012, [1,1,3,5])
**VARIABLES**
DISCRETE aux2013 #ElementOne([3, 5, 4, 1, 2], S_00004_00003)
{1..5}
DISCRETE aux2014 #ElementOne([3, 5, 4, 1, 2], S_00004_00002)
{1..5}
DISCRETE aux2015 #ElementOne([3, 5, 4, 1, 2], S_00005_00004)
{1..5}
DISCRETE aux2016 #ElementOne([3, 5, 4, 1, 2], S_00005_00005)
{1..4}
DISCRETE aux2017 #ElementOne([3, 5, 4, 1, 2], S_00005_00001)
{2..3}
DISCRETE aux2018 #ElementOne([3, 5, 4, 1, 2], S_00005_00003)
{1..4}
DISCRETE aux2019 #ElementOne([3, 5, 4, 1, 2], S_00005_00002)
{1..5}
DISCRETE aux2020 #ElementOne([3, 5, 4, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2020, [1,1,3,5])
**VARIABLES**
DISCRETE aux2021 #ElementOne([3, 5, 4, 1, 2], S_00001_00005)
{2..3}
DISCRETE aux2022 #ElementOne([3, 5, 4, 1, 2], S_00003_00004)
{1..5}
DISCRETE aux2023 #ElementOne([3, 5, 4, 1, 2], S_00003_00005)
{1..5}
DISCRETE aux2024 #ElementOne([3, 5, 4, 1, 2], S_00003_00003)
{1..4}
DISCRETE aux2025 #ElementOne([3, 5, 4, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2025, [1,1,3,5])
**VARIABLES**
DISCRETE aux2026 #ElementOne([3, 5, 4, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2026, [1,1,3,5])
**VARIABLES**
DISCRETE aux2027 #ElementOne([3, 5, 4, 1, 2], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2027, [1,3,5,5])
**VARIABLES**
DISCRETE aux2028 #ElementOne([3, 5, 4, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2028, [1,1,3,5])
**VARIABLES**
DISCRETE aux2029 #ElementOne([4, 3, 5, 1, 2], S_00004_00004)
{1..5}
DISCRETE aux2030 #ElementOne([4, 3, 5, 1, 2], S_00004_00005)
{1..5}
DISCRETE aux2031 #ElementOne([4, 3, 5, 1, 2], S_00004_00002)
{1..5}
DISCRETE aux2032 #ElementOne([4, 3, 5, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2032, [1,1,3,5])
**VARIABLES**
DISCRETE aux2033 #ElementOne([4, 3, 5, 1, 2], S_00004_00003)
{1..5}
DISCRETE aux2034 #ElementOne([4, 3, 5, 1, 2], S_00005_00004)
{1..5}
DISCRETE aux2035 #ElementOne([4, 3, 5, 1, 2], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2035, [1,2,4,5])
**VARIABLES**
DISCRETE aux2036 #ElementOne([4, 3, 5, 1, 2], S_00005_00002)
{1..5}
DISCRETE aux2037 #ElementOne([4, 3, 5, 1, 2], S_00005_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux2037, [2,2,4,4])
**VARIABLES**
DISCRETE aux2038 #ElementOne([4, 3, 5, 1, 2], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2038, [1,2,4,5])
**VARIABLES**
DISCRETE aux2039 #ElementOne([4, 3, 5, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2039, [1,1,3,5])
**VARIABLES**
DISCRETE aux2040 #ElementOne([4, 3, 5, 1, 2], S_00002_00005)
{1..4}
DISCRETE aux2041 #ElementOne([4, 3, 5, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2041, [1,1,3,5])
**VARIABLES**
DISCRETE aux2042 #ElementOne([4, 3, 5, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2042, [1,1,3,5])
**VARIABLES**
DISCRETE aux2043 #ElementOne([4, 3, 5, 1, 2], S_00001_00005)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux2043, [2,2,4,4])
**VARIABLES**
DISCRETE aux2044 #ElementOne([4, 3, 5, 1, 2], S_00003_00004)
{1..5}
DISCRETE aux2045 #ElementOne([4, 3, 5, 1, 2], S_00003_00005)
{1..5}
DISCRETE aux2046 #ElementOne([4, 3, 5, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2046, [1,1,3,5])
**VARIABLES**
DISCRETE aux2047 #ElementOne([4, 3, 5, 1, 2], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2047, [1,2,4,5])
**VARIABLES**
DISCRETE aux2048 #ElementOne([5, 3, 4, 1, 2], S_00004_00004)
{1..5}
DISCRETE aux2049 #ElementOne([5, 3, 4, 1, 2], S_00004_00005)
{1..5}
DISCRETE aux2050 #ElementOne([5, 3, 4, 1, 2], S_00004_00002)
{1..5}
DISCRETE aux2051 #ElementOne([5, 3, 4, 1, 2], S_00004_00003)
{1..5}
DISCRETE aux2052 #ElementOne([5, 3, 4, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2052, [1,1,3,5])
**VARIABLES**
DISCRETE aux2053 #ElementOne([5, 3, 4, 1, 2], S_00005_00004)
{1..5}
DISCRETE aux2054 #ElementOne([5, 3, 4, 1, 2], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2054, [1,2,4,5])
**VARIABLES**
DISCRETE aux2055 #ElementOne([5, 3, 4, 1, 2], S_00005_00002)
{1..5}
DISCRETE aux2056 #ElementOne([5, 3, 4, 1, 2], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2056, [1,2,4,5])
**VARIABLES**
DISCRETE aux2057 #ElementOne([5, 3, 4, 1, 2], S_00005_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux2057, [2,2,5,5])
**VARIABLES**
DISCRETE aux2058 #ElementOne([5, 3, 4, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2058, [1,1,3,5])
**VARIABLES**
DISCRETE aux2059 #ElementOne([5, 3, 4, 1, 2], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2059, [1,3,5,5])
**VARIABLES**
DISCRETE aux2060 #ElementOne([5, 3, 4, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2060, [1,1,3,5])
**VARIABLES**
DISCRETE aux2061 #ElementOne([5, 3, 4, 1, 2], S_00003_00004)
{1..5}
DISCRETE aux2062 #ElementOne([5, 3, 4, 1, 2], S_00003_00005)
{1..5}
DISCRETE aux2063 #ElementOne([5, 3, 4, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2063, [1,1,3,5])
**VARIABLES**
DISCRETE aux2064 #ElementOne([5, 3, 4, 1, 2], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2064, [1,2,4,5])
**VARIABLES**
DISCRETE aux2065 #ElementOne([5, 3, 4, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2065, [1,1,3,5])
**VARIABLES**
DISCRETE aux2066 #ElementOne([5, 3, 4, 1, 2], S_00001_00005)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux2066, [2,2,5,5])
**VARIABLES**
DISCRETE aux2067 #ElementOne([4, 5, 3, 1, 2], S_00004_00004)
{1..5}
DISCRETE aux2068 #ElementOne([4, 5, 3, 1, 2], S_00004_00005)
{1..5}
DISCRETE aux2069 #ElementOne([4, 5, 3, 1, 2], S_00004_00003)
{1..5}
DISCRETE aux2070 #ElementOne([4, 5, 3, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2070, [1,1,3,5])
**VARIABLES**
DISCRETE aux2071 #ElementOne([4, 5, 3, 1, 2], S_00004_00002)
{1..5}
DISCRETE aux2072 #ElementOne([4, 5, 3, 1, 2], S_00005_00004)
{1..5}
DISCRETE aux2073 #ElementOne([4, 5, 3, 1, 2], S_00005_00005)
{1..4}
DISCRETE aux2074 #ElementOne([4, 5, 3, 1, 2], S_00005_00003)
{1..4}
DISCRETE aux2075 #ElementOne([4, 5, 3, 1, 2], S_00005_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux2075, [2,2,4,4])
**VARIABLES**
DISCRETE aux2076 #ElementOne([4, 5, 3, 1, 2], S_00005_00002)
{1..5}
DISCRETE aux2077 #ElementOne([4, 5, 3, 1, 2], S_00003_00004)
{1..5}
DISCRETE aux2078 #ElementOne([4, 5, 3, 1, 2], S_00003_00005)
{1..5}
DISCRETE aux2079 #ElementOne([4, 5, 3, 1, 2], S_00003_00003)
{1..4}
DISCRETE aux2080 #ElementOne([4, 5, 3, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2080, [1,1,3,5])
**VARIABLES**
DISCRETE aux2081 #ElementOne([4, 5, 3, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2081, [1,1,3,5])
**VARIABLES**
DISCRETE aux2082 #ElementOne([4, 5, 3, 1, 2], S_00001_00005)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux2082, [2,2,4,4])
**VARIABLES**
DISCRETE aux2083 #ElementOne([4, 5, 3, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2083, [1,1,3,5])
**VARIABLES**
DISCRETE aux2084 #ElementOne([4, 5, 3, 1, 2], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2084, [1,2,4,5])
**VARIABLES**
DISCRETE aux2085 #ElementOne([4, 5, 3, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2085, [1,1,3,5])
**VARIABLES**
DISCRETE aux2086 #ElementOne([5, 4, 3, 1, 2], S_00004_00004)
{1..5}
DISCRETE aux2087 #ElementOne([5, 4, 3, 1, 2], S_00004_00005)
{1..5}
DISCRETE aux2088 #ElementOne([5, 4, 3, 1, 2], S_00004_00003)
{1..5}
DISCRETE aux2089 #ElementOne([5, 4, 3, 1, 2], S_00004_00002)
{1..5}
DISCRETE aux2090 #ElementOne([5, 4, 3, 1], S_00004_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2090, [1,1,3,5])
**VARIABLES**
DISCRETE aux2091 #ElementOne([5, 4, 3, 1, 2], S_00005_00004)
{1..5}
DISCRETE aux2092 #ElementOne([5, 4, 3, 1, 2], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2092, [1,3,5,5])
**VARIABLES**
DISCRETE aux2093 #ElementOne([5, 4, 3, 1, 2], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2093, [1,3,5,5])
**VARIABLES**
DISCRETE aux2094 #ElementOne([5, 4, 3, 1, 2], S_00005_00002)
{1..5}
DISCRETE aux2095 #ElementOne([5, 4, 3, 1, 2], S_00005_00001)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux2095, [2,2,5,5])
**VARIABLES**
DISCRETE aux2096 #ElementOne([5, 4, 3, 1, 2], S_00003_00004)
{1..5}
DISCRETE aux2097 #ElementOne([5, 4, 3, 1, 2], S_00003_00005)
{1..5}
DISCRETE aux2098 #ElementOne([5, 4, 3, 1, 2], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2098, [1,3,5,5])
**VARIABLES**
DISCRETE aux2099 #ElementOne([5, 4, 3, 1], S_00003_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2099, [1,1,3,5])
**VARIABLES**
DISCRETE aux2100 #ElementOne([5, 4, 3, 1], S_00002_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2100, [1,1,3,5])
**VARIABLES**
DISCRETE aux2101 #ElementOne([5, 4, 3, 1, 2], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2101, [1,2,4,5])
**VARIABLES**
DISCRETE aux2102 #ElementOne([5, 4, 3, 1], S_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2102, [1,1,3,5])
**VARIABLES**
DISCRETE aux2103 #ElementOne([5, 4, 3, 1], S_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2103, [1,1,3,5])
**VARIABLES**
DISCRETE aux2104 #ElementOne([5, 4, 3, 1, 2], S_00001_00005)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux2104, [2,2,5,5])
**VARIABLES**
DISCRETE aux2105 #ElementOne([2, 3, 4, 5, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2105, [1,2,4,5])
**VARIABLES**
DISCRETE aux2106 #ElementOne([2, 3, 4, 5, 1], S_00005_00001)
{1..2}
DISCRETE aux2107 #ElementOne([2, 3, 4, 5, 1], S_00005_00002)
{1..5}
DISCRETE aux2108 #ElementOne([2, 3, 4, 5, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2108, [1,2,4,5])
**VARIABLES**
DISCRETE aux2109 #ElementOne([2, 3, 4, 5, 1], S_00005_00004)
{1..5}
DISCRETE aux2110 #ElementOne([2, 3, 4, 5, 1], S_00001_00005)
{1..2}
DISCRETE aux2111 #ElementOne([2, 3, 4, 5], S_00001_00004)
{2..5}
DISCRETE aux2112 #ElementOne([2, 3, 4, 5, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2112, [1,3,5,5])
**VARIABLES**
DISCRETE aux2113 #ElementOne([2, 3, 4, 5], S_00002_00003)
{2..5}
DISCRETE aux2114 #ElementOne([2, 3, 4, 5], S_00002_00004)
{2..5}
DISCRETE aux2115 #ElementOne([2, 3, 4, 5, 1], S_00003_00005)
{1..5}
DISCRETE aux2116 #ElementOne([2, 3, 4, 5], S_00003_00002)
{2..5}
DISCRETE aux2117 #ElementOne([2, 3, 4, 5, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2117, [1,2,4,5])
**VARIABLES**
DISCRETE aux2118 #ElementOne([2, 3, 4, 5, 1], S_00003_00004)
{1..5}
DISCRETE aux2119 #ElementOne([2, 3, 4, 5, 1], S_00004_00005)
{1..5}
DISCRETE aux2120 #ElementOne([2, 3, 4, 5], S_00004_00001)
{2..5}
DISCRETE aux2121 #ElementOne([2, 3, 4, 5, 1], S_00004_00002)
{1..5}
DISCRETE aux2122 #ElementOne([2, 3, 4, 5, 1], S_00004_00003)
{1..5}
DISCRETE aux2123 #ElementOne([2, 3, 4, 5, 1], S_00004_00004)
{1..5}
DISCRETE aux2124 #ElementOne([2, 3, 5, 4, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2124, [1,2,4,5])
**VARIABLES**
DISCRETE aux2125 #ElementOne([2, 3, 5, 4, 1], S_00005_00001)
{1..2}
DISCRETE aux2126 #ElementOne([2, 3, 5, 4, 1], S_00005_00002)
{1..5}
DISCRETE aux2127 #ElementOne([2, 3, 5, 4, 1], S_00005_00004)
{1..5}
DISCRETE aux2128 #ElementOne([2, 3, 5, 4, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2128, [1,2,4,5])
**VARIABLES**
DISCRETE aux2129 #ElementOne([2, 3, 5, 4, 1], S_00001_00005)
{1..2}
DISCRETE aux2130 #ElementOne([2, 3, 5, 4], S_00001_00004)
{2..5}
DISCRETE aux2131 #ElementOne([2, 3, 5, 4, 1], S_00002_00005)
{1..4}
DISCRETE aux2132 #ElementOne([2, 3, 5, 4], S_00002_00004)
{2..5}
DISCRETE aux2133 #ElementOne([2, 3, 5, 4], S_00002_00003)
{2..5}
DISCRETE aux2134 #ElementOne([2, 3, 5, 4, 1], S_00004_00005)
{1..5}
DISCRETE aux2135 #ElementOne([2, 3, 5, 4], S_00004_00001)
{2..5}
DISCRETE aux2136 #ElementOne([2, 3, 5, 4, 1], S_00004_00002)
{1..5}
DISCRETE aux2137 #ElementOne([2, 3, 5, 4, 1], S_00004_00004)
{1..5}
DISCRETE aux2138 #ElementOne([2, 3, 5, 4, 1], S_00004_00003)
{1..5}
DISCRETE aux2139 #ElementOne([2, 3, 5, 4, 1], S_00003_00005)
{1..5}
DISCRETE aux2140 #ElementOne([2, 3, 5, 4], S_00003_00002)
{2..5}
DISCRETE aux2141 #ElementOne([2, 3, 5, 4, 1], S_00003_00004)
{1..5}
DISCRETE aux2142 #ElementOne([2, 3, 5, 4, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2142, [1,2,4,5])
**VARIABLES**
DISCRETE aux2143 #ElementOne([2, 4, 3, 5, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2143, [1,3,5,5])
**VARIABLES**
DISCRETE aux2144 #ElementOne([2, 4, 3, 5, 1], S_00005_00001)
{1..2}
DISCRETE aux2145 #ElementOne([2, 4, 3, 5, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2145, [1,3,5,5])
**VARIABLES**
DISCRETE aux2146 #ElementOne([2, 4, 3, 5, 1], S_00005_00002)
{1..5}
DISCRETE aux2147 #ElementOne([2, 4, 3, 5, 1], S_00005_00004)
{1..5}
DISCRETE aux2148 #ElementOne([2, 4, 3, 5, 1], S_00001_00005)
{1..2}
DISCRETE aux2149 #ElementOne([2, 4, 3, 5], S_00001_00004)
{2..5}
DISCRETE aux2150 #ElementOne([2, 4, 3, 5, 1], S_00003_00005)
{1..5}
DISCRETE aux2151 #ElementOne([2, 4, 3, 5, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2151, [1,3,5,5])
**VARIABLES**
DISCRETE aux2152 #ElementOne([2, 4, 3, 5], S_00003_00002)
{2..5}
DISCRETE aux2153 #ElementOne([2, 4, 3, 5, 1], S_00003_00004)
{1..5}
DISCRETE aux2154 #ElementOne([2, 4, 3, 5, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2154, [1,2,4,5])
**VARIABLES**
DISCRETE aux2155 #ElementOne([2, 4, 3, 5], S_00002_00003)
{2..5}
DISCRETE aux2156 #ElementOne([2, 4, 3, 5], S_00002_00004)
{2..5}
DISCRETE aux2157 #ElementOne([2, 4, 3, 5, 1], S_00004_00005)
{1..5}
DISCRETE aux2158 #ElementOne([2, 4, 3, 5], S_00004_00001)
{2..5}
DISCRETE aux2159 #ElementOne([2, 4, 3, 5, 1], S_00004_00003)
{1..5}
DISCRETE aux2160 #ElementOne([2, 4, 3, 5, 1], S_00004_00002)
{1..5}
DISCRETE aux2161 #ElementOne([2, 4, 3, 5, 1], S_00004_00004)
{1..5}
DISCRETE aux2162 #ElementOne([2, 5, 3, 4, 1], S_00005_00005)
{1..4}
DISCRETE aux2163 #ElementOne([2, 5, 3, 4, 1], S_00005_00001)
{1..2}
DISCRETE aux2164 #ElementOne([2, 5, 3, 4, 1], S_00005_00003)
{1..4}
DISCRETE aux2165 #ElementOne([2, 5, 3, 4, 1], S_00005_00004)
{1..5}
DISCRETE aux2166 #ElementOne([2, 5, 3, 4, 1], S_00005_00002)
{1..5}
DISCRETE aux2167 #ElementOne([2, 5, 3, 4, 1], S_00001_00005)
{1..2}
DISCRETE aux2168 #ElementOne([2, 5, 3, 4], S_00001_00004)
{2..5}
DISCRETE aux2169 #ElementOne([2, 5, 3, 4, 1], S_00003_00005)
{1..5}
DISCRETE aux2170 #ElementOne([2, 5, 3, 4, 1], S_00003_00003)
{1..4}
DISCRETE aux2171 #ElementOne([2, 5, 3, 4, 1], S_00003_00004)
{1..5}
DISCRETE aux2172 #ElementOne([2, 5, 3, 4], S_00003_00002)
{2..5}
DISCRETE aux2173 #ElementOne([2, 5, 3, 4, 1], S_00004_00005)
{1..5}
DISCRETE aux2174 #ElementOne([2, 5, 3, 4], S_00004_00001)
{2..5}
DISCRETE aux2175 #ElementOne([2, 5, 3, 4, 1], S_00004_00003)
{1..5}
DISCRETE aux2176 #ElementOne([2, 5, 3, 4, 1], S_00004_00004)
{1..5}
DISCRETE aux2177 #ElementOne([2, 5, 3, 4, 1], S_00004_00002)
{1..5}
DISCRETE aux2178 #ElementOne([2, 5, 3, 4, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2178, [1,2,4,5])
**VARIABLES**
DISCRETE aux2179 #ElementOne([2, 5, 3, 4], S_00002_00003)
{2..5}
DISCRETE aux2180 #ElementOne([2, 5, 3, 4], S_00002_00004)
{2..5}
DISCRETE aux2181 #ElementOne([2, 4, 5, 3, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2181, [1,3,5,5])
**VARIABLES**
DISCRETE aux2182 #ElementOne([2, 4, 5, 3, 1], S_00005_00001)
{1..2}
DISCRETE aux2183 #ElementOne([2, 4, 5, 3, 1], S_00005_00004)
{1..5}
DISCRETE aux2184 #ElementOne([2, 4, 5, 3, 1], S_00005_00002)
{1..5}
DISCRETE aux2185 #ElementOne([2, 4, 5, 3, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2185, [1,3,5,5])
**VARIABLES**
DISCRETE aux2186 #ElementOne([2, 4, 5, 3, 1], S_00001_00005)
{1..2}
DISCRETE aux2187 #ElementOne([2, 4, 5, 3], S_00001_00004)
{2..5}
DISCRETE aux2188 #ElementOne([2, 4, 5, 3, 1], S_00004_00005)
{1..5}
DISCRETE aux2189 #ElementOne([2, 4, 5, 3], S_00004_00001)
{2..5}
DISCRETE aux2190 #ElementOne([2, 4, 5, 3, 1], S_00004_00004)
{1..5}
DISCRETE aux2191 #ElementOne([2, 4, 5, 3, 1], S_00004_00002)
{1..5}
DISCRETE aux2192 #ElementOne([2, 4, 5, 3, 1], S_00004_00003)
{1..5}
DISCRETE aux2193 #ElementOne([2, 4, 5, 3, 1], S_00002_00005)
{1..4}
DISCRETE aux2194 #ElementOne([2, 4, 5, 3], S_00002_00004)
{2..5}
DISCRETE aux2195 #ElementOne([2, 4, 5, 3], S_00002_00003)
{2..5}
DISCRETE aux2196 #ElementOne([2, 4, 5, 3, 1], S_00003_00005)
{1..5}
DISCRETE aux2197 #ElementOne([2, 4, 5, 3, 1], S_00003_00004)
{1..5}
DISCRETE aux2198 #ElementOne([2, 4, 5, 3], S_00003_00002)
{2..5}
DISCRETE aux2199 #ElementOne([2, 4, 5, 3, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2199, [1,3,5,5])
**VARIABLES**
DISCRETE aux2200 #ElementOne([2, 5, 4, 3, 1], S_00005_00005)
{1..4}
DISCRETE aux2201 #ElementOne([2, 5, 4, 3, 1], S_00005_00001)
{1..2}
DISCRETE aux2202 #ElementOne([2, 5, 4, 3, 1], S_00005_00004)
{1..5}
DISCRETE aux2203 #ElementOne([2, 5, 4, 3, 1], S_00005_00003)
{1..4}
DISCRETE aux2204 #ElementOne([2, 5, 4, 3, 1], S_00005_00002)
{1..5}
DISCRETE aux2205 #ElementOne([2, 5, 4, 3, 1], S_00001_00005)
{1..2}
DISCRETE aux2206 #ElementOne([2, 5, 4, 3], S_00001_00004)
{2..5}
DISCRETE aux2207 #ElementOne([2, 5, 4, 3, 1], S_00004_00005)
{1..5}
DISCRETE aux2208 #ElementOne([2, 5, 4, 3], S_00004_00001)
{2..5}
DISCRETE aux2209 #ElementOne([2, 5, 4, 3, 1], S_00004_00004)
{1..5}
DISCRETE aux2210 #ElementOne([2, 5, 4, 3, 1], S_00004_00003)
{1..5}
DISCRETE aux2211 #ElementOne([2, 5, 4, 3, 1], S_00004_00002)
{1..5}
DISCRETE aux2212 #ElementOne([2, 5, 4, 3, 1], S_00003_00005)
{1..5}
DISCRETE aux2213 #ElementOne([2, 5, 4, 3, 1], S_00003_00004)
{1..5}
DISCRETE aux2214 #ElementOne([2, 5, 4, 3, 1], S_00003_00003)
{1..4}
DISCRETE aux2215 #ElementOne([2, 5, 4, 3], S_00003_00002)
{2..5}
DISCRETE aux2216 #ElementOne([2, 5, 4, 3, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2216, [1,3,5,5])
**VARIABLES**
DISCRETE aux2217 #ElementOne([2, 5, 4, 3], S_00002_00004)
{2..5}
DISCRETE aux2218 #ElementOne([2, 5, 4, 3], S_00002_00003)
{2..5}
DISCRETE aux2219 #ElementOne([3, 2, 4, 5, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2219, [1,1,3,5])
**VARIABLES**
DISCRETE aux2220 #ElementOne([3, 2, 4, 5, 1], S_00005_00002)
{1..5}
DISCRETE aux2221 #ElementOne([3, 2, 4, 5, 1], S_00005_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux2221, [1,1,3,3])
**VARIABLES**
DISCRETE aux2222 #ElementOne([3, 2, 4, 5, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2222, [1,1,3,5])
**VARIABLES**
DISCRETE aux2223 #ElementOne([3, 2, 4, 5, 1], S_00005_00004)
{1..5}
DISCRETE aux2224 #ElementOne([3, 2, 4, 5, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2224, [1,3,5,5])
**VARIABLES**
DISCRETE aux2225 #ElementOne([3, 2, 4, 5], S_00002_00003)
{2..5}
DISCRETE aux2226 #ElementOne([3, 2, 4, 5], S_00002_00004)
{2..5}
DISCRETE aux2227 #ElementOne([3, 2, 4, 5, 1], S_00001_00005)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux2227, [1,1,3,3])
**VARIABLES**
DISCRETE aux2228 #ElementOne([3, 2, 4, 5], S_00001_00004)
{2..5}
DISCRETE aux2229 #ElementOne([3, 2, 4, 5, 1], S_00003_00005)
{1..5}
DISCRETE aux2230 #ElementOne([3, 2, 4, 5], S_00003_00002)
{2..5}
DISCRETE aux2231 #ElementOne([3, 2, 4, 5, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2231, [1,1,3,5])
**VARIABLES**
DISCRETE aux2232 #ElementOne([3, 2, 4, 5, 1], S_00003_00004)
{1..5}
DISCRETE aux2233 #ElementOne([3, 2, 4, 5, 1], S_00004_00005)
{1..5}
DISCRETE aux2234 #ElementOne([3, 2, 4, 5, 1], S_00004_00002)
{1..5}
DISCRETE aux2235 #ElementOne([3, 2, 4, 5], S_00004_00001)
{2..5}
DISCRETE aux2236 #ElementOne([3, 2, 4, 5, 1], S_00004_00003)
{1..5}
DISCRETE aux2237 #ElementOne([3, 2, 4, 5, 1], S_00004_00004)
{1..5}
DISCRETE aux2238 #ElementOne([3, 2, 5, 4, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2238, [1,1,3,5])
**VARIABLES**
DISCRETE aux2239 #ElementOne([3, 2, 5, 4, 1], S_00005_00002)
{1..5}
DISCRETE aux2240 #ElementOne([3, 2, 5, 4, 1], S_00005_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux2240, [1,1,3,3])
**VARIABLES**
DISCRETE aux2241 #ElementOne([3, 2, 5, 4, 1], S_00005_00004)
{1..5}
DISCRETE aux2242 #ElementOne([3, 2, 5, 4, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2242, [1,1,3,5])
**VARIABLES**
DISCRETE aux2243 #ElementOne([3, 2, 5, 4, 1], S_00002_00005)
{1..4}
DISCRETE aux2244 #ElementOne([3, 2, 5, 4], S_00002_00004)
{2..5}
DISCRETE aux2245 #ElementOne([3, 2, 5, 4], S_00002_00003)
{2..5}
DISCRETE aux2246 #ElementOne([3, 2, 5, 4, 1], S_00001_00005)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux2246, [1,1,3,3])
**VARIABLES**
DISCRETE aux2247 #ElementOne([3, 2, 5, 4], S_00001_00004)
{2..5}
DISCRETE aux2248 #ElementOne([3, 2, 5, 4, 1], S_00004_00005)
{1..5}
DISCRETE aux2249 #ElementOne([3, 2, 5, 4, 1], S_00004_00002)
{1..5}
DISCRETE aux2250 #ElementOne([3, 2, 5, 4], S_00004_00001)
{2..5}
DISCRETE aux2251 #ElementOne([3, 2, 5, 4, 1], S_00004_00004)
{1..5}
DISCRETE aux2252 #ElementOne([3, 2, 5, 4, 1], S_00004_00003)
{1..5}
DISCRETE aux2253 #ElementOne([3, 2, 5, 4, 1], S_00003_00005)
{1..5}
DISCRETE aux2254 #ElementOne([3, 2, 5, 4], S_00003_00002)
{2..5}
DISCRETE aux2255 #ElementOne([3, 2, 5, 4, 1], S_00003_00004)
{1..5}
DISCRETE aux2256 #ElementOne([3, 2, 5, 4, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2256, [1,1,3,5])
**VARIABLES**
DISCRETE aux2257 #ElementOne([4, 2, 3, 5, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2257, [1,1,3,5])
**VARIABLES**
DISCRETE aux2258 #ElementOne([4, 2, 3, 5, 1], S_00005_00002)
{1..5}
DISCRETE aux2259 #ElementOne([4, 2, 3, 5, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2259, [1,1,3,5])
**VARIABLES**
DISCRETE aux2260 #ElementOne([4, 2, 3, 5, 1], S_00005_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux2260, [1,1,4,4])
**VARIABLES**
DISCRETE aux2261 #ElementOne([4, 2, 3, 5, 1], S_00005_00004)
{1..5}
DISCRETE aux2262 #ElementOne([4, 2, 3, 5, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2262, [1,2,4,5])
**VARIABLES**
DISCRETE aux2263 #ElementOne([4, 2, 3, 5], S_00002_00003)
{2..5}
DISCRETE aux2264 #ElementOne([4, 2, 3, 5], S_00002_00004)
{2..5}
DISCRETE aux2265 #ElementOne([4, 2, 3, 5, 1], S_00003_00005)
{1..5}
DISCRETE aux2266 #ElementOne([4, 2, 3, 5], S_00003_00002)
{2..5}
DISCRETE aux2267 #ElementOne([4, 2, 3, 5, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2267, [1,1,3,5])
**VARIABLES**
DISCRETE aux2268 #ElementOne([4, 2, 3, 5, 1], S_00003_00004)
{1..5}
DISCRETE aux2269 #ElementOne([4, 2, 3, 5, 1], S_00001_00005)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux2269, [1,1,4,4])
**VARIABLES**
DISCRETE aux2270 #ElementOne([4, 2, 3, 5], S_00001_00004)
{2..5}
DISCRETE aux2271 #ElementOne([4, 2, 3, 5, 1], S_00004_00005)
{1..5}
DISCRETE aux2272 #ElementOne([4, 2, 3, 5, 1], S_00004_00002)
{1..5}
DISCRETE aux2273 #ElementOne([4, 2, 3, 5, 1], S_00004_00003)
{1..5}
DISCRETE aux2274 #ElementOne([4, 2, 3, 5], S_00004_00001)
{2..5}
DISCRETE aux2275 #ElementOne([4, 2, 3, 5, 1], S_00004_00004)
{1..5}
DISCRETE aux2276 #ElementOne([5, 2, 3, 4, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2276, [1,1,3,5])
**VARIABLES**
DISCRETE aux2277 #ElementOne([5, 2, 3, 4, 1], S_00005_00002)
{1..5}
DISCRETE aux2278 #ElementOne([5, 2, 3, 4, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2278, [1,1,3,5])
**VARIABLES**
DISCRETE aux2279 #ElementOne([5, 2, 3, 4, 1], S_00005_00004)
{1..5}
DISCRETE aux2280 #ElementOne([5, 2, 3, 4, 1], S_00005_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2280, [1,1,5,5])
**VARIABLES**
DISCRETE aux2281 #ElementOne([5, 2, 3, 4, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2281, [1,2,4,5])
**VARIABLES**
DISCRETE aux2282 #ElementOne([5, 2, 3, 4], S_00002_00003)
{2..5}
DISCRETE aux2283 #ElementOne([5, 2, 3, 4], S_00002_00004)
{2..5}
DISCRETE aux2284 #ElementOne([5, 2, 3, 4, 1], S_00003_00005)
{1..5}
DISCRETE aux2285 #ElementOne([5, 2, 3, 4], S_00003_00002)
{2..5}
DISCRETE aux2286 #ElementOne([5, 2, 3, 4, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2286, [1,1,3,5])
**VARIABLES**
DISCRETE aux2287 #ElementOne([5, 2, 3, 4, 1], S_00003_00004)
{1..5}
DISCRETE aux2288 #ElementOne([5, 2, 3, 4, 1], S_00004_00005)
{1..5}
DISCRETE aux2289 #ElementOne([5, 2, 3, 4, 1], S_00004_00002)
{1..5}
DISCRETE aux2290 #ElementOne([5, 2, 3, 4, 1], S_00004_00003)
{1..5}
DISCRETE aux2291 #ElementOne([5, 2, 3, 4, 1], S_00004_00004)
{1..5}
DISCRETE aux2292 #ElementOne([5, 2, 3, 4], S_00004_00001)
{2..5}
DISCRETE aux2293 #ElementOne([5, 2, 3, 4, 1], S_00001_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2293, [1,1,5,5])
**VARIABLES**
DISCRETE aux2294 #ElementOne([5, 2, 3, 4], S_00001_00004)
{2..5}
DISCRETE aux2295 #ElementOne([4, 2, 5, 3, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2295, [1,1,3,5])
**VARIABLES**
DISCRETE aux2296 #ElementOne([4, 2, 5, 3, 1], S_00005_00002)
{1..5}
DISCRETE aux2297 #ElementOne([4, 2, 5, 3, 1], S_00005_00004)
{1..5}
DISCRETE aux2298 #ElementOne([4, 2, 5, 3, 1], S_00005_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux2298, [1,1,4,4])
**VARIABLES**
DISCRETE aux2299 #ElementOne([4, 2, 5, 3, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2299, [1,1,3,5])
**VARIABLES**
DISCRETE aux2300 #ElementOne([4, 2, 5, 3, 1], S_00002_00005)
{1..4}
DISCRETE aux2301 #ElementOne([4, 2, 5, 3], S_00002_00004)
{2..5}
DISCRETE aux2302 #ElementOne([4, 2, 5, 3], S_00002_00003)
{2..5}
DISCRETE aux2303 #ElementOne([4, 2, 5, 3, 1], S_00004_00005)
{1..5}
DISCRETE aux2304 #ElementOne([4, 2, 5, 3, 1], S_00004_00002)
{1..5}
DISCRETE aux2305 #ElementOne([4, 2, 5, 3, 1], S_00004_00004)
{1..5}
DISCRETE aux2306 #ElementOne([4, 2, 5, 3], S_00004_00001)
{2..5}
DISCRETE aux2307 #ElementOne([4, 2, 5, 3, 1], S_00004_00003)
{1..5}
DISCRETE aux2308 #ElementOne([4, 2, 5, 3, 1], S_00001_00005)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux2308, [1,1,4,4])
**VARIABLES**
DISCRETE aux2309 #ElementOne([4, 2, 5, 3], S_00001_00004)
{2..5}
DISCRETE aux2310 #ElementOne([4, 2, 5, 3, 1], S_00003_00005)
{1..5}
DISCRETE aux2311 #ElementOne([4, 2, 5, 3], S_00003_00002)
{2..5}
DISCRETE aux2312 #ElementOne([4, 2, 5, 3, 1], S_00003_00004)
{1..5}
DISCRETE aux2313 #ElementOne([4, 2, 5, 3, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2313, [1,1,3,5])
**VARIABLES**
DISCRETE aux2314 #ElementOne([5, 2, 4, 3, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2314, [1,1,3,5])
**VARIABLES**
DISCRETE aux2315 #ElementOne([5, 2, 4, 3, 1], S_00005_00002)
{1..5}
DISCRETE aux2316 #ElementOne([5, 2, 4, 3, 1], S_00005_00004)
{1..5}
DISCRETE aux2317 #ElementOne([5, 2, 4, 3, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2317, [1,1,3,5])
**VARIABLES**
DISCRETE aux2318 #ElementOne([5, 2, 4, 3, 1], S_00005_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2318, [1,1,5,5])
**VARIABLES**
DISCRETE aux2319 #ElementOne([5, 2, 4, 3, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2319, [1,3,5,5])
**VARIABLES**
DISCRETE aux2320 #ElementOne([5, 2, 4, 3], S_00002_00004)
{2..5}
DISCRETE aux2321 #ElementOne([5, 2, 4, 3], S_00002_00003)
{2..5}
DISCRETE aux2322 #ElementOne([5, 2, 4, 3, 1], S_00004_00005)
{1..5}
DISCRETE aux2323 #ElementOne([5, 2, 4, 3, 1], S_00004_00002)
{1..5}
DISCRETE aux2324 #ElementOne([5, 2, 4, 3, 1], S_00004_00004)
{1..5}
DISCRETE aux2325 #ElementOne([5, 2, 4, 3, 1], S_00004_00003)
{1..5}
DISCRETE aux2326 #ElementOne([5, 2, 4, 3], S_00004_00001)
{2..5}
DISCRETE aux2327 #ElementOne([5, 2, 4, 3, 1], S_00003_00005)
{1..5}
DISCRETE aux2328 #ElementOne([5, 2, 4, 3], S_00003_00002)
{2..5}
DISCRETE aux2329 #ElementOne([5, 2, 4, 3, 1], S_00003_00004)
{1..5}
DISCRETE aux2330 #ElementOne([5, 2, 4, 3, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2330, [1,1,3,5])
**VARIABLES**
DISCRETE aux2331 #ElementOne([5, 2, 4, 3, 1], S_00001_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2331, [1,1,5,5])
**VARIABLES**
DISCRETE aux2332 #ElementOne([5, 2, 4, 3], S_00001_00004)
{2..5}
DISCRETE aux2333 #ElementOne([3, 4, 2, 5, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2333, [1,3,5,5])
**VARIABLES**
DISCRETE aux2334 #ElementOne([3, 4, 2, 5, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2334, [1,3,5,5])
**VARIABLES**
DISCRETE aux2335 #ElementOne([3, 4, 2, 5, 1], S_00005_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux2335, [1,1,3,3])
**VARIABLES**
DISCRETE aux2336 #ElementOne([3, 4, 2, 5, 1], S_00005_00002)
{1..5}
DISCRETE aux2337 #ElementOne([3, 4, 2, 5, 1], S_00005_00004)
{1..5}
DISCRETE aux2338 #ElementOne([3, 4, 2, 5, 1], S_00003_00005)
{1..5}
DISCRETE aux2339 #ElementOne([3, 4, 2, 5, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2339, [1,3,5,5])
**VARIABLES**
DISCRETE aux2340 #ElementOne([3, 4, 2, 5], S_00003_00002)
{2..5}
DISCRETE aux2341 #ElementOne([3, 4, 2, 5, 1], S_00003_00004)
{1..5}
DISCRETE aux2342 #ElementOne([3, 4, 2, 5, 1], S_00001_00005)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux2342, [1,1,3,3])
**VARIABLES**
DISCRETE aux2343 #ElementOne([3, 4, 2, 5], S_00001_00004)
{2..5}
DISCRETE aux2344 #ElementOne([3, 4, 2, 5, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2344, [1,1,3,5])
**VARIABLES**
DISCRETE aux2345 #ElementOne([3, 4, 2, 5], S_00002_00003)
{2..5}
DISCRETE aux2346 #ElementOne([3, 4, 2, 5], S_00002_00004)
{2..5}
DISCRETE aux2347 #ElementOne([3, 4, 2, 5, 1], S_00004_00005)
{1..5}
DISCRETE aux2348 #ElementOne([3, 4, 2, 5, 1], S_00004_00003)
{1..5}
DISCRETE aux2349 #ElementOne([3, 4, 2, 5], S_00004_00001)
{2..5}
DISCRETE aux2350 #ElementOne([3, 4, 2, 5, 1], S_00004_00002)
{1..5}
DISCRETE aux2351 #ElementOne([3, 4, 2, 5, 1], S_00004_00004)
{1..5}
DISCRETE aux2352 #ElementOne([3, 5, 2, 4, 1], S_00005_00005)
{1..4}
DISCRETE aux2353 #ElementOne([3, 5, 2, 4, 1], S_00005_00003)
{1..4}
DISCRETE aux2354 #ElementOne([3, 5, 2, 4, 1], S_00005_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux2354, [1,1,3,3])
**VARIABLES**
DISCRETE aux2355 #ElementOne([3, 5, 2, 4, 1], S_00005_00004)
{1..5}
DISCRETE aux2356 #ElementOne([3, 5, 2, 4, 1], S_00005_00002)
{1..5}
DISCRETE aux2357 #ElementOne([3, 5, 2, 4, 1], S_00003_00005)
{1..5}
DISCRETE aux2358 #ElementOne([3, 5, 2, 4, 1], S_00003_00003)
{1..4}
DISCRETE aux2359 #ElementOne([3, 5, 2, 4, 1], S_00003_00004)
{1..5}
DISCRETE aux2360 #ElementOne([3, 5, 2, 4], S_00003_00002)
{2..5}
DISCRETE aux2361 #ElementOne([3, 5, 2, 4, 1], S_00001_00005)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux2361, [1,1,3,3])
**VARIABLES**
DISCRETE aux2362 #ElementOne([3, 5, 2, 4], S_00001_00004)
{2..5}
DISCRETE aux2363 #ElementOne([3, 5, 2, 4, 1], S_00004_00005)
{1..5}
DISCRETE aux2364 #ElementOne([3, 5, 2, 4, 1], S_00004_00003)
{1..5}
DISCRETE aux2365 #ElementOne([3, 5, 2, 4], S_00004_00001)
{2..5}
DISCRETE aux2366 #ElementOne([3, 5, 2, 4, 1], S_00004_00004)
{1..5}
DISCRETE aux2367 #ElementOne([3, 5, 2, 4, 1], S_00004_00002)
{1..5}
DISCRETE aux2368 #ElementOne([3, 5, 2, 4, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2368, [1,1,3,5])
**VARIABLES**
DISCRETE aux2369 #ElementOne([3, 5, 2, 4], S_00002_00003)
{2..5}
DISCRETE aux2370 #ElementOne([3, 5, 2, 4], S_00002_00004)
{2..5}
DISCRETE aux2371 #ElementOne([4, 3, 2, 5, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2371, [1,2,4,5])
**VARIABLES**
DISCRETE aux2372 #ElementOne([4, 3, 2, 5, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2372, [1,2,4,5])
**VARIABLES**
DISCRETE aux2373 #ElementOne([4, 3, 2, 5, 1], S_00005_00002)
{1..5}
DISCRETE aux2374 #ElementOne([4, 3, 2, 5, 1], S_00005_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux2374, [1,1,4,4])
**VARIABLES**
DISCRETE aux2375 #ElementOne([4, 3, 2, 5, 1], S_00005_00004)
{1..5}
DISCRETE aux2376 #ElementOne([4, 3, 2, 5, 1], S_00003_00005)
{1..5}
DISCRETE aux2377 #ElementOne([4, 3, 2, 5, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2377, [1,2,4,5])
**VARIABLES**
DISCRETE aux2378 #ElementOne([4, 3, 2, 5], S_00003_00002)
{2..5}
DISCRETE aux2379 #ElementOne([4, 3, 2, 5, 1], S_00003_00004)
{1..5}
DISCRETE aux2380 #ElementOne([4, 3, 2, 5, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2380, [1,1,3,5])
**VARIABLES**
DISCRETE aux2381 #ElementOne([4, 3, 2, 5], S_00002_00003)
{2..5}
DISCRETE aux2382 #ElementOne([4, 3, 2, 5], S_00002_00004)
{2..5}
DISCRETE aux2383 #ElementOne([4, 3, 2, 5, 1], S_00001_00005)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux2383, [1,1,4,4])
**VARIABLES**
DISCRETE aux2384 #ElementOne([4, 3, 2, 5], S_00001_00004)
{2..5}
DISCRETE aux2385 #ElementOne([4, 3, 2, 5, 1], S_00004_00005)
{1..5}
DISCRETE aux2386 #ElementOne([4, 3, 2, 5, 1], S_00004_00003)
{1..5}
DISCRETE aux2387 #ElementOne([4, 3, 2, 5, 1], S_00004_00002)
{1..5}
DISCRETE aux2388 #ElementOne([4, 3, 2, 5], S_00004_00001)
{2..5}
DISCRETE aux2389 #ElementOne([4, 3, 2, 5, 1], S_00004_00004)
{1..5}
DISCRETE aux2390 #ElementOne([5, 3, 2, 4, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2390, [1,2,4,5])
**VARIABLES**
DISCRETE aux2391 #ElementOne([5, 3, 2, 4, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2391, [1,2,4,5])
**VARIABLES**
DISCRETE aux2392 #ElementOne([5, 3, 2, 4, 1], S_00005_00002)
{1..5}
DISCRETE aux2393 #ElementOne([5, 3, 2, 4, 1], S_00005_00004)
{1..5}
DISCRETE aux2394 #ElementOne([5, 3, 2, 4, 1], S_00005_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2394, [1,1,5,5])
**VARIABLES**
DISCRETE aux2395 #ElementOne([5, 3, 2, 4, 1], S_00003_00005)
{1..5}
DISCRETE aux2396 #ElementOne([5, 3, 2, 4, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2396, [1,2,4,5])
**VARIABLES**
DISCRETE aux2397 #ElementOne([5, 3, 2, 4], S_00003_00002)
{2..5}
DISCRETE aux2398 #ElementOne([5, 3, 2, 4, 1], S_00003_00004)
{1..5}
DISCRETE aux2399 #ElementOne([5, 3, 2, 4, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2399, [1,1,3,5])
**VARIABLES**
DISCRETE aux2400 #ElementOne([5, 3, 2, 4], S_00002_00003)
{2..5}
DISCRETE aux2401 #ElementOne([5, 3, 2, 4], S_00002_00004)
{2..5}
DISCRETE aux2402 #ElementOne([5, 3, 2, 4, 1], S_00004_00005)
{1..5}
DISCRETE aux2403 #ElementOne([5, 3, 2, 4, 1], S_00004_00003)
{1..5}
DISCRETE aux2404 #ElementOne([5, 3, 2, 4, 1], S_00004_00002)
{1..5}
DISCRETE aux2405 #ElementOne([5, 3, 2, 4, 1], S_00004_00004)
{1..5}
DISCRETE aux2406 #ElementOne([5, 3, 2, 4], S_00004_00001)
{2..5}
DISCRETE aux2407 #ElementOne([5, 3, 2, 4, 1], S_00001_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2407, [1,1,5,5])
**VARIABLES**
DISCRETE aux2408 #ElementOne([5, 3, 2, 4], S_00001_00004)
{2..5}
DISCRETE aux2409 #ElementOne([4, 5, 2, 3, 1], S_00005_00005)
{1..4}
DISCRETE aux2410 #ElementOne([4, 5, 2, 3, 1], S_00005_00003)
{1..4}
DISCRETE aux2411 #ElementOne([4, 5, 2, 3, 1], S_00005_00004)
{1..5}
DISCRETE aux2412 #ElementOne([4, 5, 2, 3, 1], S_00005_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux2412, [1,1,4,4])
**VARIABLES**
DISCRETE aux2413 #ElementOne([4, 5, 2, 3, 1], S_00005_00002)
{1..5}
DISCRETE aux2414 #ElementOne([4, 5, 2, 3, 1], S_00003_00005)
{1..5}
DISCRETE aux2415 #ElementOne([4, 5, 2, 3, 1], S_00003_00003)
{1..4}
DISCRETE aux2416 #ElementOne([4, 5, 2, 3, 1], S_00003_00004)
{1..5}
DISCRETE aux2417 #ElementOne([4, 5, 2, 3], S_00003_00002)
{2..5}
DISCRETE aux2418 #ElementOne([4, 5, 2, 3, 1], S_00004_00005)
{1..5}
DISCRETE aux2419 #ElementOne([4, 5, 2, 3, 1], S_00004_00003)
{1..5}
DISCRETE aux2420 #ElementOne([4, 5, 2, 3, 1], S_00004_00004)
{1..5}
DISCRETE aux2421 #ElementOne([4, 5, 2, 3], S_00004_00001)
{2..5}
DISCRETE aux2422 #ElementOne([4, 5, 2, 3, 1], S_00004_00002)
{1..5}
DISCRETE aux2423 #ElementOne([4, 5, 2, 3, 1], S_00001_00005)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux2423, [1,1,4,4])
**VARIABLES**
DISCRETE aux2424 #ElementOne([4, 5, 2, 3], S_00001_00004)
{2..5}
DISCRETE aux2425 #ElementOne([4, 5, 2, 3, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2425, [1,1,3,5])
**VARIABLES**
DISCRETE aux2426 #ElementOne([4, 5, 2, 3], S_00002_00003)
{2..5}
DISCRETE aux2427 #ElementOne([4, 5, 2, 3], S_00002_00004)
{2..5}
DISCRETE aux2428 #ElementOne([5, 4, 2, 3, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2428, [1,3,5,5])
**VARIABLES**
DISCRETE aux2429 #ElementOne([5, 4, 2, 3, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2429, [1,3,5,5])
**VARIABLES**
DISCRETE aux2430 #ElementOne([5, 4, 2, 3, 1], S_00005_00004)
{1..5}
DISCRETE aux2431 #ElementOne([5, 4, 2, 3, 1], S_00005_00002)
{1..5}
DISCRETE aux2432 #ElementOne([5, 4, 2, 3, 1], S_00005_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2432, [1,1,5,5])
**VARIABLES**
DISCRETE aux2433 #ElementOne([5, 4, 2, 3, 1], S_00003_00005)
{1..5}
DISCRETE aux2434 #ElementOne([5, 4, 2, 3, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2434, [1,3,5,5])
**VARIABLES**
DISCRETE aux2435 #ElementOne([5, 4, 2, 3, 1], S_00003_00004)
{1..5}
DISCRETE aux2436 #ElementOne([5, 4, 2, 3], S_00003_00002)
{2..5}
DISCRETE aux2437 #ElementOne([5, 4, 2, 3, 1], S_00004_00005)
{1..5}
DISCRETE aux2438 #ElementOne([5, 4, 2, 3, 1], S_00004_00003)
{1..5}
DISCRETE aux2439 #ElementOne([5, 4, 2, 3, 1], S_00004_00004)
{1..5}
DISCRETE aux2440 #ElementOne([5, 4, 2, 3, 1], S_00004_00002)
{1..5}
DISCRETE aux2441 #ElementOne([5, 4, 2, 3], S_00004_00001)
{2..5}
DISCRETE aux2442 #ElementOne([5, 4, 2, 3, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2442, [1,1,3,5])
**VARIABLES**
DISCRETE aux2443 #ElementOne([5, 4, 2, 3], S_00002_00003)
{2..5}
DISCRETE aux2444 #ElementOne([5, 4, 2, 3], S_00002_00004)
{2..5}
DISCRETE aux2445 #ElementOne([5, 4, 2, 3, 1], S_00001_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2445, [1,1,5,5])
**VARIABLES**
DISCRETE aux2446 #ElementOne([5, 4, 2, 3], S_00001_00004)
{2..5}
DISCRETE aux2447 #ElementOne([3, 4, 5, 2, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2447, [1,3,5,5])
**VARIABLES**
DISCRETE aux2448 #ElementOne([3, 4, 5, 2, 1], S_00005_00004)
{1..5}
DISCRETE aux2449 #ElementOne([3, 4, 5, 2, 1], S_00005_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux2449, [1,1,3,3])
**VARIABLES**
DISCRETE aux2450 #ElementOne([3, 4, 5, 2, 1], S_00005_00002)
{1..5}
DISCRETE aux2451 #ElementOne([3, 4, 5, 2, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2451, [1,3,5,5])
**VARIABLES**
DISCRETE aux2452 #ElementOne([3, 4, 5, 2, 1], S_00004_00005)
{1..5}
DISCRETE aux2453 #ElementOne([3, 4, 5, 2, 1], S_00004_00004)
{1..5}
DISCRETE aux2454 #ElementOne([3, 4, 5, 2], S_00004_00001)
{2..5}
DISCRETE aux2455 #ElementOne([3, 4, 5, 2, 1], S_00004_00002)
{1..5}
DISCRETE aux2456 #ElementOne([3, 4, 5, 2, 1], S_00004_00003)
{1..5}
DISCRETE aux2457 #ElementOne([3, 4, 5, 2, 1], S_00001_00005)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux2457, [1,1,3,3])
**VARIABLES**
DISCRETE aux2458 #ElementOne([3, 4, 5, 2], S_00001_00004)
{2..5}
DISCRETE aux2459 #ElementOne([3, 4, 5, 2, 1], S_00002_00005)
{1..4}
DISCRETE aux2460 #ElementOne([3, 4, 5, 2], S_00002_00004)
{2..5}
DISCRETE aux2461 #ElementOne([3, 4, 5, 2], S_00002_00003)
{2..5}
DISCRETE aux2462 #ElementOne([3, 4, 5, 2, 1], S_00003_00005)
{1..5}
DISCRETE aux2463 #ElementOne([3, 4, 5, 2, 1], S_00003_00004)
{1..5}
DISCRETE aux2464 #ElementOne([3, 4, 5, 2], S_00003_00002)
{2..5}
DISCRETE aux2465 #ElementOne([3, 4, 5, 2, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2465, [1,3,5,5])
**VARIABLES**
DISCRETE aux2466 #ElementOne([3, 5, 4, 2, 1], S_00005_00005)
{1..4}
DISCRETE aux2467 #ElementOne([3, 5, 4, 2, 1], S_00005_00004)
{1..5}
DISCRETE aux2468 #ElementOne([3, 5, 4, 2, 1], S_00005_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux2468, [1,1,3,3])
**VARIABLES**
DISCRETE aux2469 #ElementOne([3, 5, 4, 2, 1], S_00005_00003)
{1..4}
DISCRETE aux2470 #ElementOne([3, 5, 4, 2, 1], S_00005_00002)
{1..5}
DISCRETE aux2471 #ElementOne([3, 5, 4, 2, 1], S_00004_00005)
{1..5}
DISCRETE aux2472 #ElementOne([3, 5, 4, 2, 1], S_00004_00004)
{1..5}
DISCRETE aux2473 #ElementOne([3, 5, 4, 2], S_00004_00001)
{2..5}
DISCRETE aux2474 #ElementOne([3, 5, 4, 2, 1], S_00004_00003)
{1..5}
DISCRETE aux2475 #ElementOne([3, 5, 4, 2, 1], S_00004_00002)
{1..5}
DISCRETE aux2476 #ElementOne([3, 5, 4, 2, 1], S_00001_00005)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux2476, [1,1,3,3])
**VARIABLES**
DISCRETE aux2477 #ElementOne([3, 5, 4, 2], S_00001_00004)
{2..5}
DISCRETE aux2478 #ElementOne([3, 5, 4, 2, 1], S_00003_00005)
{1..5}
DISCRETE aux2479 #ElementOne([3, 5, 4, 2, 1], S_00003_00004)
{1..5}
DISCRETE aux2480 #ElementOne([3, 5, 4, 2, 1], S_00003_00003)
{1..4}
DISCRETE aux2481 #ElementOne([3, 5, 4, 2], S_00003_00002)
{2..5}
DISCRETE aux2482 #ElementOne([3, 5, 4, 2, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2482, [1,3,5,5])
**VARIABLES**
DISCRETE aux2483 #ElementOne([3, 5, 4, 2], S_00002_00004)
{2..5}
DISCRETE aux2484 #ElementOne([3, 5, 4, 2], S_00002_00003)
{2..5}
DISCRETE aux2485 #ElementOne([4, 3, 5, 2, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2485, [1,2,4,5])
**VARIABLES**
DISCRETE aux2486 #ElementOne([4, 3, 5, 2, 1], S_00005_00004)
{1..5}
DISCRETE aux2487 #ElementOne([4, 3, 5, 2, 1], S_00005_00002)
{1..5}
DISCRETE aux2488 #ElementOne([4, 3, 5, 2, 1], S_00005_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux2488, [1,1,4,4])
**VARIABLES**
DISCRETE aux2489 #ElementOne([4, 3, 5, 2, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2489, [1,2,4,5])
**VARIABLES**
DISCRETE aux2490 #ElementOne([4, 3, 5, 2, 1], S_00004_00005)
{1..5}
DISCRETE aux2491 #ElementOne([4, 3, 5, 2, 1], S_00004_00004)
{1..5}
DISCRETE aux2492 #ElementOne([4, 3, 5, 2, 1], S_00004_00002)
{1..5}
DISCRETE aux2493 #ElementOne([4, 3, 5, 2], S_00004_00001)
{2..5}
DISCRETE aux2494 #ElementOne([4, 3, 5, 2, 1], S_00004_00003)
{1..5}
DISCRETE aux2495 #ElementOne([4, 3, 5, 2, 1], S_00002_00005)
{1..4}
DISCRETE aux2496 #ElementOne([4, 3, 5, 2], S_00002_00004)
{2..5}
DISCRETE aux2497 #ElementOne([4, 3, 5, 2], S_00002_00003)
{2..5}
DISCRETE aux2498 #ElementOne([4, 3, 5, 2, 1], S_00001_00005)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux2498, [1,1,4,4])
**VARIABLES**
DISCRETE aux2499 #ElementOne([4, 3, 5, 2], S_00001_00004)
{2..5}
DISCRETE aux2500 #ElementOne([4, 3, 5, 2, 1], S_00003_00005)
{1..5}
DISCRETE aux2501 #ElementOne([4, 3, 5, 2, 1], S_00003_00004)
{1..5}
DISCRETE aux2502 #ElementOne([4, 3, 5, 2], S_00003_00002)
{2..5}
DISCRETE aux2503 #ElementOne([4, 3, 5, 2, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2503, [1,2,4,5])
**VARIABLES**
DISCRETE aux2504 #ElementOne([5, 3, 4, 2, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2504, [1,2,4,5])
**VARIABLES**
DISCRETE aux2505 #ElementOne([5, 3, 4, 2, 1], S_00005_00004)
{1..5}
DISCRETE aux2506 #ElementOne([5, 3, 4, 2, 1], S_00005_00002)
{1..5}
DISCRETE aux2507 #ElementOne([5, 3, 4, 2, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2507, [1,2,4,5])
**VARIABLES**
DISCRETE aux2508 #ElementOne([5, 3, 4, 2, 1], S_00005_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2508, [1,1,5,5])
**VARIABLES**
DISCRETE aux2509 #ElementOne([5, 3, 4, 2, 1], S_00004_00005)
{1..5}
DISCRETE aux2510 #ElementOne([5, 3, 4, 2, 1], S_00004_00004)
{1..5}
DISCRETE aux2511 #ElementOne([5, 3, 4, 2, 1], S_00004_00002)
{1..5}
DISCRETE aux2512 #ElementOne([5, 3, 4, 2, 1], S_00004_00003)
{1..5}
DISCRETE aux2513 #ElementOne([5, 3, 4, 2], S_00004_00001)
{2..5}
DISCRETE aux2514 #ElementOne([5, 3, 4, 2, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2514, [1,3,5,5])
**VARIABLES**
DISCRETE aux2515 #ElementOne([5, 3, 4, 2], S_00002_00004)
{2..5}
DISCRETE aux2516 #ElementOne([5, 3, 4, 2], S_00002_00003)
{2..5}
DISCRETE aux2517 #ElementOne([5, 3, 4, 2, 1], S_00003_00005)
{1..5}
DISCRETE aux2518 #ElementOne([5, 3, 4, 2, 1], S_00003_00004)
{1..5}
DISCRETE aux2519 #ElementOne([5, 3, 4, 2], S_00003_00002)
{2..5}
DISCRETE aux2520 #ElementOne([5, 3, 4, 2, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2520, [1,2,4,5])
**VARIABLES**
DISCRETE aux2521 #ElementOne([5, 3, 4, 2, 1], S_00001_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2521, [1,1,5,5])
**VARIABLES**
DISCRETE aux2522 #ElementOne([5, 3, 4, 2], S_00001_00004)
{2..5}
DISCRETE aux2523 #ElementOne([4, 5, 3, 2, 1], S_00005_00005)
{1..4}
DISCRETE aux2524 #ElementOne([4, 5, 3, 2, 1], S_00005_00004)
{1..5}
DISCRETE aux2525 #ElementOne([4, 5, 3, 2, 1], S_00005_00003)
{1..4}
DISCRETE aux2526 #ElementOne([4, 5, 3, 2, 1], S_00005_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux2526, [1,1,4,4])
**VARIABLES**
DISCRETE aux2527 #ElementOne([4, 5, 3, 2, 1], S_00005_00002)
{1..5}
DISCRETE aux2528 #ElementOne([4, 5, 3, 2, 1], S_00004_00005)
{1..5}
DISCRETE aux2529 #ElementOne([4, 5, 3, 2, 1], S_00004_00004)
{1..5}
DISCRETE aux2530 #ElementOne([4, 5, 3, 2, 1], S_00004_00003)
{1..5}
DISCRETE aux2531 #ElementOne([4, 5, 3, 2], S_00004_00001)
{2..5}
DISCRETE aux2532 #ElementOne([4, 5, 3, 2, 1], S_00004_00002)
{1..5}
DISCRETE aux2533 #ElementOne([4, 5, 3, 2, 1], S_00003_00005)
{1..5}
DISCRETE aux2534 #ElementOne([4, 5, 3, 2, 1], S_00003_00004)
{1..5}
DISCRETE aux2535 #ElementOne([4, 5, 3, 2, 1], S_00003_00003)
{1..4}
DISCRETE aux2536 #ElementOne([4, 5, 3, 2], S_00003_00002)
{2..5}
DISCRETE aux2537 #ElementOne([4, 5, 3, 2, 1], S_00001_00005)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux2537, [1,1,4,4])
**VARIABLES**
DISCRETE aux2538 #ElementOne([4, 5, 3, 2], S_00001_00004)
{2..5}
DISCRETE aux2539 #ElementOne([4, 5, 3, 2, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2539, [1,2,4,5])
**VARIABLES**
DISCRETE aux2540 #ElementOne([4, 5, 3, 2], S_00002_00004)
{2..5}
DISCRETE aux2541 #ElementOne([4, 5, 3, 2], S_00002_00003)
{2..5}
DISCRETE aux2542 #ElementOne([5, 4, 3, 2, 1], S_00005_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2542, [1,3,5,5])
**VARIABLES**
DISCRETE aux2543 #ElementOne([5, 4, 3, 2, 1], S_00005_00004)
{1..5}
DISCRETE aux2544 #ElementOne([5, 4, 3, 2, 1], S_00005_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2544, [1,3,5,5])
**VARIABLES**
DISCRETE aux2545 #ElementOne([5, 4, 3, 2, 1], S_00005_00002)
{1..5}
DISCRETE aux2546 #ElementOne([5, 4, 3, 2, 1], S_00005_00001)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2546, [1,1,5,5])
**VARIABLES**
DISCRETE aux2547 #ElementOne([5, 4, 3, 2, 1], S_00004_00005)
{1..5}
DISCRETE aux2548 #ElementOne([5, 4, 3, 2, 1], S_00004_00004)
{1..5}
DISCRETE aux2549 #ElementOne([5, 4, 3, 2, 1], S_00004_00003)
{1..5}
DISCRETE aux2550 #ElementOne([5, 4, 3, 2, 1], S_00004_00002)
{1..5}
DISCRETE aux2551 #ElementOne([5, 4, 3, 2], S_00004_00001)
{2..5}
DISCRETE aux2552 #ElementOne([5, 4, 3, 2, 1], S_00003_00005)
{1..5}
DISCRETE aux2553 #ElementOne([5, 4, 3, 2, 1], S_00003_00004)
{1..5}
DISCRETE aux2554 #ElementOne([5, 4, 3, 2, 1], S_00003_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2554, [1,3,5,5])
**VARIABLES**
DISCRETE aux2555 #ElementOne([5, 4, 3, 2], S_00003_00002)
{2..5}
DISCRETE aux2556 #ElementOne([5, 4, 3, 2, 1], S_00002_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2556, [1,2,4,5])
**VARIABLES**
DISCRETE aux2557 #ElementOne([5, 4, 3, 2], S_00002_00004)
{2..5}
DISCRETE aux2558 #ElementOne([5, 4, 3, 2], S_00002_00003)
{2..5}
DISCRETE aux2559 #ElementOne([5, 4, 3, 2, 1], S_00001_00005)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux2559, [1,1,5,5])
**VARIABLES**
DISCRETE aux2560 #ElementOne([5, 4, 3, 2], S_00001_00004)
{2..5}
DISCRETE aux2561 #(5*S_00001_00002 + -4)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux2561, [1,1,6,6])
**VARIABLES**
DISCRETE aux2562 #(-5 + S_00002_00001 + 5*S_00002_00002)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux2562, [1,2,6,7])
**VARIABLES**
DISCRETE aux2563 #(-5 + S_00003_00001 + 5*S_00003_00002)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux2563, [1,1,3,3,6,6,8,8,11,11,13,13,16,16])
**VARIABLES**
DISCRETE aux2564 #(S_00004_00001 + 5*S_00004_00002 + -5)
{1..21}
**CONSTRAINTS**
w-inintervalset(aux2564, [1,2,4,4,6,7,9,9,11,12,14,14,16,17,19,19,21,21])
**VARIABLES**
DISCRETE aux2565 #(S_00005_00001 + 5*S_00005_00002 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2565, [1,1,5,6,10,11,15,16,20,21,25,25])
**VARIABLES**
DISCRETE aux2566 #(5*S_00001_00003 + -4)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux2566, [1,1,11,11])
**VARIABLES**
DISCRETE aux2567 #(-5 + S_00002_00001 + 5*S_00002_00003)
{1..17}
**CONSTRAINTS**
w-inintervalset(aux2567, [1,2,6,7,11,12,16,17])
**VARIABLES**
DISCRETE aux2568 #(-5 + S_00003_00001 + 5*S_00003_00003)
{1..21}
**CONSTRAINTS**
w-inintervalset(aux2568, [1,1,3,3,11,11,13,13,16,16,18,18,21,21])
**VARIABLES**
DISCRETE aux2569 #(S_00004_00001 + 5*S_00004_00003 + -5)
{1..22}
**CONSTRAINTS**
w-inintervalset(aux2569, [1,2,4,4,6,7,9,9,11,12,14,14,16,17,19,19,21,22])
**VARIABLES**
DISCRETE aux2570 #(S_00005_00001 + 5*S_00005_00003 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2570, [1,1,5,5,11,11,15,16,20,21,25,25])
**VARIABLES**
DISCRETE aux2571 #(5*S_00001_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux2571, [1,1,11,11,16,16])
**VARIABLES**
DISCRETE aux2572 #(-5 + S_00002_00001 + 5*S_00002_00004)
{1..17}
**CONSTRAINTS**
w-inintervalset(aux2572, [1,2,6,7,11,12,16,17])
**VARIABLES**
DISCRETE aux2573 #(-5 + S_00003_00001 + 5*S_00003_00004)
{1..21}
**CONSTRAINTS**
w-inintervalset(aux2573, [1,1,3,3,6,6,8,8,11,11,13,13,16,16,18,18,21,21])
**VARIABLES**
DISCRETE aux2574 #(S_00004_00001 + 5*S_00004_00004 + -5)
{1..22}
**CONSTRAINTS**
w-inintervalset(aux2574, [1,2,4,4,6,7,9,9,11,12,14,14,16,17,19,19,21,22])
**VARIABLES**
DISCRETE aux2575 #(S_00005_00001 + 5*S_00005_00004 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2575, [1,1,5,6,10,11,15,16,20,21,25,25])
**VARIABLES**
DISCRETE aux2576 #(5*S_00001_00005 + -4)
{1..21}
**CONSTRAINTS**
w-inintervalset(aux2576, [1,1,21,21])
**VARIABLES**
DISCRETE aux2577 #(-5 + S_00002_00001 + 5*S_00002_00005)
{1..22}
**CONSTRAINTS**
w-inintervalset(aux2577, [1,2,6,7,16,17,21,22])
**VARIABLES**
DISCRETE aux2578 #(-5 + S_00003_00001 + 5*S_00003_00005)
{1..23}
**CONSTRAINTS**
w-inintervalset(aux2578, [1,1,3,3,6,6,8,8,11,11,13,13,16,16,18,18,21,21,23,23])
**VARIABLES**
DISCRETE aux2579 #(S_00004_00001 + 5*S_00004_00005 + -5)
{1..24}
**CONSTRAINTS**
w-inintervalset(aux2579, [1,2,4,4,6,7,9,9,11,12,14,14,16,17,19,19,21,22,24,24])
**VARIABLES**
DISCRETE aux2580 #(S_00005_00001 + 5*S_00005_00005 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2580, [1,1,5,5,11,11,15,16,20,21,25,25])
**VARIABLES**
DISCRETE aux2581 #(-5 + 5*S_00002_00001 + S_00002_00002)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux2581, [1,2,6,7])
**VARIABLES**
DISCRETE aux2582 #(-5 + 5*S_00003_00001 + S_00003_00002)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux2582, [1,4,11,13])
**VARIABLES**
DISCRETE aux2583 #(5*S_00004_00001 + S_00004_00002 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux2583, [1,10,16,19])
**VARIABLES**
DISCRETE aux2584 #(5*S_00005_00001 + S_00005_00002 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2584, [1,5,21,25])
**VARIABLES**
DISCRETE aux2585 #(6*S_00001_00002 + -5)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux2585, [1,1,7,7])
**VARIABLES**
DISCRETE aux2586 #(-5 + 6*S_00002_00002)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux2586, [1,1,7,7])
**VARIABLES**
DISCRETE aux2587 #(-5 + 6*S_00003_00002)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux2587, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux2588 #(6*S_00004_00002 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2588, [1,1,7,7,13,13,19,19,25,25])
**VARIABLES**
DISCRETE aux2589 #(6*S_00005_00002 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2589, [1,1,7,7,13,13,19,19,25,25])
**VARIABLES**
DISCRETE aux2590 #(S_00001_00002 + 5*S_00001_00003 + -5)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux2590, [1,2,11,12])
**VARIABLES**
DISCRETE aux2591 #(-5 + S_00002_00002 + 5*S_00002_00003)
{1..17}
**CONSTRAINTS**
w-inintervalset(aux2591, [1,2,6,7,11,12,16,17])
**VARIABLES**
DISCRETE aux2592 #(-5 + S_00003_00002 + 5*S_00003_00003)
{1..22}
**CONSTRAINTS**
w-inintervalset(aux2592, [1,4,11,14,16,19,21,22])
**VARIABLES**
DISCRETE aux2593 #(S_00004_00002 + 5*S_00004_00003 + -5)
{1..25}
DISCRETE aux2594 #(S_00005_00002 + 5*S_00005_00003 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2594, [1,5,11,25])
**VARIABLES**
DISCRETE aux2595 #(S_00001_00002 + 5*S_00001_00004 + -5)
{1..17}
**CONSTRAINTS**
w-inintervalset(aux2595, [1,2,11,12,16,17])
**VARIABLES**
DISCRETE aux2596 #(-5 + S_00002_00002 + 5*S_00002_00004)
{1..17}
**CONSTRAINTS**
w-inintervalset(aux2596, [1,2,6,7,11,12,16,17])
**VARIABLES**
DISCRETE aux2597 #(-5 + S_00003_00002 + 5*S_00003_00004)
{1..22}
**CONSTRAINTS**
w-inintervalset(aux2597, [1,4,6,9,11,14,16,19,21,22])
**VARIABLES**
DISCRETE aux2598 #(S_00004_00002 + 5*S_00004_00004 + -5)
{1..22}
DISCRETE aux2599 #(S_00005_00002 + 5*S_00005_00004 + -5)
{1..25}
DISCRETE aux2600 #(S_00001_00002 + 5*S_00001_00005 + -5)
{1..22}
**CONSTRAINTS**
w-inintervalset(aux2600, [1,2,21,22])
**VARIABLES**
DISCRETE aux2601 #(-5 + S_00002_00002 + 5*S_00002_00005)
{1..22}
**CONSTRAINTS**
w-inintervalset(aux2601, [1,2,6,7,16,17,21,22])
**VARIABLES**
DISCRETE aux2602 #(-5 + S_00003_00002 + 5*S_00003_00005)
{1..24}
**CONSTRAINTS**
w-inintervalset(aux2602, [1,4,6,9,11,14,16,19,21,24])
**VARIABLES**
DISCRETE aux2603 #(S_00004_00002 + 5*S_00004_00005 + -5)
{1..25}
DISCRETE aux2604 #(S_00005_00002 + 5*S_00005_00005 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2604, [1,5,11,25])
**VARIABLES**
DISCRETE aux2605 #(-5 + 5*S_00002_00001 + S_00002_00003)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux2605, [1,4,6,9])
**VARIABLES**
DISCRETE aux2606 #(-5 + 5*S_00003_00001 + S_00003_00003)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux2606, [1,1,3,5,11,11,13,13])
**VARIABLES**
DISCRETE aux2607 #(5*S_00004_00001 + S_00004_00003 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux2607, [1,10,16,19])
**VARIABLES**
DISCRETE aux2608 #(5*S_00005_00001 + S_00005_00003 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2608, [1,1,3,5,21,21,23,25])
**VARIABLES**
DISCRETE aux2609 #(5*S_00001_00002 + S_00001_00003 + -5)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux2609, [1,1,3,3,6,6,8,8])
**VARIABLES**
DISCRETE aux2610 #(-5 + 5*S_00002_00002 + S_00002_00003)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux2610, [1,4,6,9])
**VARIABLES**
DISCRETE aux2611 #(-5 + 5*S_00003_00002 + S_00003_00003)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux2611, [1,1,3,6,8,11,13,16])
**VARIABLES**
DISCRETE aux2612 #(5*S_00004_00002 + S_00004_00003 + -5)
{1..25}
DISCRETE aux2613 #(5*S_00005_00002 + S_00005_00003 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2613, [1,1,3,6,8,11,13,16,18,21,23,25])
**VARIABLES**
DISCRETE aux2614 #(6*S_00001_00003 + -5)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux2614, [1,1,13,13])
**VARIABLES**
DISCRETE aux2615 #(-5 + 6*S_00002_00003)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux2615, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux2616 #(-5 + 6*S_00003_00003)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2616, [1,1,13,13,19,19,25,25])
**VARIABLES**
DISCRETE aux2617 #(6*S_00004_00003 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2617, [1,1,7,7,13,13,19,19,25,25])
**VARIABLES**
DISCRETE aux2618 #(6*S_00005_00003 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2618, [1,1,13,13,19,19,25,25])
**VARIABLES**
DISCRETE aux2619 #(S_00001_00003 + 5*S_00001_00004 + -5)
{1..18}
**CONSTRAINTS**
w-inintervalset(aux2619, [1,1,3,3,11,11,13,13,16,16,18,18])
**VARIABLES**
DISCRETE aux2620 #(-5 + S_00002_00003 + 5*S_00002_00004)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux2620, [1,4,6,9,11,14,16,19])
**VARIABLES**
DISCRETE aux2621 #(-5 + S_00003_00003 + 5*S_00003_00004)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2621, [1,1,3,6,8,11,13,16,18,21,23,25])
**VARIABLES**
DISCRETE aux2622 #(S_00004_00003 + 5*S_00004_00004 + -5)
{1..25}
DISCRETE aux2623 #(S_00005_00003 + 5*S_00005_00004 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2623, [1,1,3,6,8,11,13,16,18,21,23,25])
**VARIABLES**
DISCRETE aux2624 #(S_00001_00003 + 5*S_00001_00005 + -5)
{1..23}
**CONSTRAINTS**
w-inintervalset(aux2624, [1,1,3,3,21,21,23,23])
**VARIABLES**
DISCRETE aux2625 #(-5 + S_00002_00003 + 5*S_00002_00005)
{1..24}
**CONSTRAINTS**
w-inintervalset(aux2625, [1,4,6,9,16,19,21,24])
**VARIABLES**
DISCRETE aux2626 #(-5 + S_00003_00003 + 5*S_00003_00005)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2626, [1,1,3,6,8,11,13,16,18,21,23,25])
**VARIABLES**
DISCRETE aux2627 #(S_00004_00003 + 5*S_00004_00005 + -5)
{1..25}
DISCRETE aux2628 #(S_00005_00003 + 5*S_00005_00005 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2628, [1,1,3,5,11,11,13,16,18,21,23,25])
**VARIABLES**
DISCRETE aux2629 #(-5 + 5*S_00002_00001 + S_00002_00004)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux2629, [1,4,6,9])
**VARIABLES**
DISCRETE aux2630 #(-5 + 5*S_00003_00001 + S_00003_00004)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux2630, [1,5,11,14])
**VARIABLES**
DISCRETE aux2631 #(5*S_00004_00001 + S_00004_00004 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux2631, [1,10,16,19])
**VARIABLES**
DISCRETE aux2632 #(5*S_00005_00001 + S_00005_00004 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2632, [1,5,21,25])
**VARIABLES**
DISCRETE aux2633 #(5*S_00001_00002 + S_00001_00004 + -5)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux2633, [1,1,3,4,6,6,8,9])
**VARIABLES**
DISCRETE aux2634 #(-5 + 5*S_00002_00002 + S_00002_00004)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux2634, [1,4,6,9])
**VARIABLES**
DISCRETE aux2635 #(-5 + 5*S_00003_00002 + S_00003_00004)
{1..19}
DISCRETE aux2636 #(5*S_00004_00002 + S_00004_00004 + -5)
{1..21}
DISCRETE aux2637 #(5*S_00005_00002 + S_00005_00004 + -5)
{1..25}
DISCRETE aux2638 #(5*S_00001_00003 + S_00001_00004 + -5)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux2638, [1,1,3,4,11,11,13,14])
**VARIABLES**
DISCRETE aux2639 #(-5 + 5*S_00002_00003 + S_00002_00004)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux2639, [1,4,6,9,11,14,16,19])
**VARIABLES**
DISCRETE aux2640 #(-5 + 5*S_00003_00003 + S_00003_00004)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2640, [1,5,11,25])
**VARIABLES**
DISCRETE aux2641 #(5*S_00004_00003 + S_00004_00004 + -5)
{1..25}
DISCRETE aux2642 #(5*S_00005_00003 + S_00005_00004 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2642, [1,5,11,25])
**VARIABLES**
DISCRETE aux2643 #(6*S_00001_00004 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux2643, [1,1,13,13,19,19])
**VARIABLES**
DISCRETE aux2644 #(-5 + 6*S_00002_00004)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux2644, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux2645 #(-5 + 6*S_00003_00004)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2645, [1,1,7,7,13,13,19,19,25,25])
**VARIABLES**
DISCRETE aux2646 #(6*S_00004_00004 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2646, [1,1,7,7,13,13,19,19,25,25])
**VARIABLES**
DISCRETE aux2647 #(6*S_00005_00004 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2647, [1,1,7,7,13,13,19,19,25,25])
**VARIABLES**
DISCRETE aux2648 #(S_00001_00004 + 5*S_00001_00005 + -5)
{1..24}
**CONSTRAINTS**
w-inintervalset(aux2648, [1,1,3,4,21,21,23,24])
**VARIABLES**
DISCRETE aux2649 #(-5 + S_00002_00004 + 5*S_00002_00005)
{1..24}
**CONSTRAINTS**
w-inintervalset(aux2649, [1,4,6,9,16,19,21,24])
**VARIABLES**
DISCRETE aux2650 #(-5 + S_00003_00004 + 5*S_00003_00005)
{1..25}
DISCRETE aux2651 #(S_00004_00004 + 5*S_00004_00005 + -5)
{1..25}
DISCRETE aux2652 #(S_00005_00004 + 5*S_00005_00005 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2652, [1,5,11,25])
**VARIABLES**
DISCRETE aux2653 #(-5 + 5*S_00002_00001 + S_00002_00005)
{1..10}
**CONSTRAINTS**
w-inintervalset(aux2653, [1,2,4,7,9,10])
**VARIABLES**
DISCRETE aux2654 #(-5 + 5*S_00003_00001 + S_00003_00005)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux2654, [1,5,11,15])
**VARIABLES**
DISCRETE aux2655 #(5*S_00004_00001 + S_00004_00005 + -5)
{1..20}
**CONSTRAINTS**
w-inintervalset(aux2655, [1,10,16,20])
**VARIABLES**
DISCRETE aux2656 #(5*S_00005_00001 + S_00005_00005 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2656, [1,1,3,5,21,21,23,25])
**VARIABLES**
DISCRETE aux2657 #(5*S_00001_00002 + S_00001_00005 + -5)
{1..10}
**CONSTRAINTS**
w-inintervalset(aux2657, [1,1,5,6,10,10])
**VARIABLES**
DISCRETE aux2658 #(-5 + 5*S_00002_00002 + S_00002_00005)
{1..10}
**CONSTRAINTS**
w-inintervalset(aux2658, [1,2,4,7,9,10])
**VARIABLES**
DISCRETE aux2659 #(-5 + 5*S_00003_00002 + S_00003_00005)
{1..20}
DISCRETE aux2660 #(5*S_00004_00002 + S_00004_00005 + -5)
{1..25}
DISCRETE aux2661 #(5*S_00005_00002 + S_00005_00005 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2661, [1,1,3,6,8,11,13,16,18,21,23,25])
**VARIABLES**
DISCRETE aux2662 #(5*S_00001_00003 + S_00001_00005 + -5)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux2662, [1,1,5,5,11,11,15,15])
**VARIABLES**
DISCRETE aux2663 #(-5 + 5*S_00002_00003 + S_00002_00005)
{1..20}
**CONSTRAINTS**
w-inintervalset(aux2663, [1,2,4,7,9,12,14,17,19,20])
**VARIABLES**
DISCRETE aux2664 #(-5 + 5*S_00003_00003 + S_00003_00005)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2664, [1,5,11,25])
**VARIABLES**
DISCRETE aux2665 #(5*S_00004_00003 + S_00004_00005 + -5)
{1..25}
DISCRETE aux2666 #(5*S_00005_00003 + S_00005_00005 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2666, [1,1,3,5,11,11,13,16,18,21,23,25])
**VARIABLES**
DISCRETE aux2667 #(5*S_00001_00004 + S_00001_00005 + -5)
{1..20}
**CONSTRAINTS**
w-inintervalset(aux2667, [1,1,5,5,11,11,15,16,20,20])
**VARIABLES**
DISCRETE aux2668 #(-5 + 5*S_00002_00004 + S_00002_00005)
{1..20}
**CONSTRAINTS**
w-inintervalset(aux2668, [1,2,4,7,9,12,14,17,19,20])
**VARIABLES**
DISCRETE aux2669 #(-5 + 5*S_00003_00004 + S_00003_00005)
{1..25}
DISCRETE aux2670 #(5*S_00004_00004 + S_00004_00005 + -5)
{1..25}
DISCRETE aux2671 #(5*S_00005_00004 + S_00005_00005 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2671, [1,1,3,6,8,11,13,16,18,21,23,25])
**VARIABLES**
DISCRETE aux2672 #(6*S_00001_00005 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2672, [1,1,25,25])
**VARIABLES**
DISCRETE aux2673 #(-5 + 6*S_00002_00005)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2673, [1,1,7,7,19,19,25,25])
**VARIABLES**
DISCRETE aux2674 #(-5 + 6*S_00003_00005)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2674, [1,1,7,7,13,13,19,19,25,25])
**VARIABLES**
DISCRETE aux2675 #(6*S_00004_00005 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2675, [1,1,7,7,13,13,19,19,25,25])
**VARIABLES**
DISCRETE aux2676 #(6*S_00005_00005 + -5)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux2676, [1,1,13,13,19,19,25,25])
**VARIABLES**
**TUPLELIST**
perms 119 5
1 2 3 5 4 
1 2 4 3 5 
1 2 4 5 3 
1 2 5 3 4 
1 2 5 4 3 
1 3 2 4 5 
1 3 2 5 4 
1 3 4 2 5 
1 3 4 5 2 
1 3 5 2 4 
1 3 5 4 2 
1 4 2 3 5 
1 4 2 5 3 
1 4 3 2 5 
1 4 3 5 2 
1 4 5 2 3 
1 4 5 3 2 
1 5 2 3 4 
1 5 2 4 3 
1 5 3 2 4 
1 5 3 4 2 
1 5 4 2 3 
1 5 4 3 2 
2 1 3 4 5 
2 1 3 5 4 
2 1 4 3 5 
2 1 4 5 3 
2 1 5 3 4 
2 1 5 4 3 
2 3 1 4 5 
2 3 1 5 4 
2 3 4 1 5 
2 3 4 5 1 
2 3 5 1 4 
2 3 5 4 1 
2 4 1 3 5 
2 4 1 5 3 
2 4 3 1 5 
2 4 3 5 1 
2 4 5 1 3 
2 4 5 3 1 
2 5 1 3 4 
2 5 1 4 3 
2 5 3 1 4 
2 5 3 4 1 
2 5 4 1 3 
2 5 4 3 1 
3 1 2 4 5 
3 1 2 5 4 
3 1 4 2 5 
3 1 4 5 2 
3 1 5 2 4 
3 1 5 4 2 
3 2 1 4 5 
3 2 1 5 4 
3 2 4 1 5 
3 2 4 5 1 
3 2 5 1 4 
3 2 5 4 1 
3 4 1 2 5 
3 4 1 5 2 
3 4 2 1 5 
3 4 2 5 1 
3 4 5 1 2 
3 4 5 2 1 
3 5 1 2 4 
3 5 1 4 2 
3 5 2 1 4 
3 5 2 4 1 
3 5 4 1 2 
3 5 4 2 1 
4 1 2 3 5 
4 1 2 5 3 
4 1 3 2 5 
4 1 3 5 2 
4 1 5 2 3 
4 1 5 3 2 
4 2 1 3 5 
4 2 1 5 3 
4 2 3 1 5 
4 2 3 5 1 
4 2 5 1 3 
4 2 5 3 1 
4 3 1 2 5 
4 3 1 5 2 
4 3 2 1 5 
4 3 2 5 1 
4 3 5 1 2 
4 3 5 2 1 
4 5 1 2 3 
4 5 1 3 2 
4 5 2 1 3 
4 5 2 3 1 
4 5 3 1 2 
4 5 3 2 1 
5 1 2 3 4 
5 1 2 4 3 
5 1 3 2 4 
5 1 3 4 2 
5 1 4 2 3 
5 1 4 3 2 
5 2 1 3 4 
5 2 1 4 3 
5 2 3 1 4 
5 2 3 4 1 
5 2 4 1 3 
5 2 4 3 1 
5 3 1 2 4 
5 3 1 4 2 
5 3 2 1 4 
5 3 2 4 1 
5 3 4 1 2 
5 3 4 2 1 
5 4 1 2 3 
5 4 1 3 2 
5 4 2 1 3 
5 4 2 3 1 
5 4 3 1 2 
5 4 3 2 1 
**VARIABLES**
ALIAS perms[119,5]=[[1, 2, 3, 5, 4], [1, 2, 4, 3, 5], [1, 2, 4, 5, 3], [1, 2, 5, 3, 4], [1, 2, 5, 4, 3], [1, 3, 2, 4, 5], [1, 3, 2, 5, 4], [1, 3, 4, 2, 5], [1, 3, 4, 5, 2], [1, 3, 5, 2, 4], [1, 3, 5, 4, 2], [1, 4, 2, 3, 5], [1, 4, 2, 5, 3], [1, 4, 3, 2, 5], [1, 4, 3, 5, 2], [1, 4, 5, 2, 3], [1, 4, 5, 3, 2], [1, 5, 2, 3, 4], [1, 5, 2, 4, 3], [1, 5, 3, 2, 4], [1, 5, 3, 4, 2], [1, 5, 4, 2, 3], [1, 5, 4, 3, 2], [2, 1, 3, 4, 5], [2, 1, 3, 5, 4], [2, 1, 4, 3, 5], [2, 1, 4, 5, 3], [2, 1, 5, 3, 4], [2, 1, 5, 4, 3], [2, 3, 1, 4, 5], [2, 3, 1, 5, 4], [2, 3, 4, 1, 5], [2, 3, 4, 5, 1], [2, 3, 5, 1, 4], [2, 3, 5, 4, 1], [2, 4, 1, 3, 5], [2, 4, 1, 5, 3], [2, 4, 3, 1, 5], [2, 4, 3, 5, 1], [2, 4, 5, 1, 3], [2, 4, 5, 3, 1], [2, 5, 1, 3, 4], [2, 5, 1, 4, 3], [2, 5, 3, 1, 4], [2, 5, 3, 4, 1], [2, 5, 4, 1, 3], [2, 5, 4, 3, 1], [3, 1, 2, 4, 5], [3, 1, 2, 5, 4], [3, 1, 4, 2, 5], [3, 1, 4, 5, 2], [3, 1, 5, 2, 4], [3, 1, 5, 4, 2], [3, 2, 1, 4, 5], [3, 2, 1, 5, 4], [3, 2, 4, 1, 5], [3, 2, 4, 5, 1], [3, 2, 5, 1, 4], [3, 2, 5, 4, 1], [3, 4, 1, 2, 5], [3, 4, 1, 5, 2], [3, 4, 2, 1, 5], [3, 4, 2, 5, 1], [3, 4, 5, 1, 2], [3, 4, 5, 2, 1], [3, 5, 1, 2, 4], [3, 5, 1, 4, 2], [3, 5, 2, 1, 4], [3, 5, 2, 4, 1], [3, 5, 4, 1, 2], [3, 5, 4, 2, 1], [4, 1, 2, 3, 5], [4, 1, 2, 5, 3], [4, 1, 3, 2, 5], [4, 1, 3, 5, 2], [4, 1, 5, 2, 3], [4, 1, 5, 3, 2], [4, 2, 1, 3, 5], [4, 2, 1, 5, 3], [4, 2, 3, 1, 5], [4, 2, 3, 5, 1], [4, 2, 5, 1, 3], [4, 2, 5, 3, 1], [4, 3, 1, 2, 5], [4, 3, 1, 5, 2], [4, 3, 2, 1, 5], [4, 3, 2, 5, 1], [4, 3, 5, 1, 2], [4, 3, 5, 2, 1], [4, 5, 1, 2, 3], [4, 5, 1, 3, 2], [4, 5, 2, 1, 3], [4, 5, 2, 3, 1], [4, 5, 3, 1, 2], [4, 5, 3, 2, 1], [5, 1, 2, 3, 4], [5, 1, 2, 4, 3], [5, 1, 3, 2, 4], [5, 1, 3, 4, 2], [5, 1, 4, 2, 3], [5, 1, 4, 3, 2], [5, 2, 1, 3, 4], [5, 2, 1, 4, 3], [5, 2, 3, 1, 4], [5, 2, 3, 4, 1], [5, 2, 4, 1, 3], [5, 2, 4, 3, 1], [5, 3, 1, 2, 4], [5, 3, 1, 4, 2], [5, 3, 2, 1, 4], [5, 3, 2, 4, 1], [5, 3, 4, 1, 2], [5, 3, 4, 2, 1], [5, 4, 1, 2, 3], [5, 4, 1, 3, 2], [5, 4, 2, 1, 3], [5, 4, 2, 3, 1], [5, 4, 3, 1, 2], [5, 4, 3, 2, 1]]
**TUPLELIST**
inverses 119 5
1 2 3 5 4 
1 2 4 3 5 
1 2 5 3 4 
1 2 4 5 3 
1 2 5 4 3 
1 3 2 4 5 
1 3 2 5 4 
1 4 2 3 5 
1 5 2 3 4 
1 4 2 5 3 
1 5 2 4 3 
1 3 4 2 5 
1 3 5 2 4 
1 4 3 2 5 
1 5 3 2 4 
1 4 5 2 3 
1 5 4 2 3 
1 3 4 5 2 
1 3 5 4 2 
1 4 3 5 2 
1 5 3 4 2 
1 4 5 3 2 
1 5 4 3 2 
2 1 3 4 5 
2 1 3 5 4 
2 1 4 3 5 
2 1 5 3 4 
2 1 4 5 3 
2 1 5 4 3 
3 1 2 4 5 
3 1 2 5 4 
4 1 2 3 5 
5 1 2 3 4 
4 1 2 5 3 
5 1 2 4 3 
3 1 4 2 5 
3 1 5 2 4 
4 1 3 2 5 
5 1 3 2 4 
4 1 5 2 3 
5 1 4 2 3 
3 1 4 5 2 
3 1 5 4 2 
4 1 3 5 2 
5 1 3 4 2 
4 1 5 3 2 
5 1 4 3 2 
2 3 1 4 5 
2 3 1 5 4 
2 4 1 3 5 
2 5 1 3 4 
2 4 1 5 3 
2 5 1 4 3 
3 2 1 4 5 
3 2 1 5 4 
4 2 1 3 5 
5 2 1 3 4 
4 2 1 5 3 
5 2 1 4 3 
3 4 1 2 5 
3 5 1 2 4 
4 3 1 2 5 
5 3 1 2 4 
4 5 1 2 3 
5 4 1 2 3 
3 4 1 5 2 
3 5 1 4 2 
4 3 1 5 2 
5 3 1 4 2 
4 5 1 3 2 
5 4 1 3 2 
2 3 4 1 5 
2 3 5 1 4 
2 4 3 1 5 
2 5 3 1 4 
2 4 5 1 3 
2 5 4 1 3 
3 2 4 1 5 
3 2 5 1 4 
4 2 3 1 5 
5 2 3 1 4 
4 2 5 1 3 
5 2 4 1 3 
3 4 2 1 5 
3 5 2 1 4 
4 3 2 1 5 
5 3 2 1 4 
4 5 2 1 3 
5 4 2 1 3 
3 4 5 1 2 
3 5 4 1 2 
4 3 5 1 2 
5 3 4 1 2 
4 5 3 1 2 
5 4 3 1 2 
2 3 4 5 1 
2 3 5 4 1 
2 4 3 5 1 
2 5 3 4 1 
2 4 5 3 1 
2 5 4 3 1 
3 2 4 5 1 
3 2 5 4 1 
4 2 3 5 1 
5 2 3 4 1 
4 2 5 3 1 
5 2 4 3 1 
3 4 2 5 1 
3 5 2 4 1 
4 3 2 5 1 
5 3 2 4 1 
4 5 2 3 1 
5 4 2 3 1 
3 4 5 2 1 
3 5 4 2 1 
4 3 5 2 1 
5 3 4 2 1 
4 5 3 2 1 
5 4 3 2 1 
**VARIABLES**
ALIAS inverses[119,5]=[[1, 2, 3, 5, 4], [1, 2, 4, 3, 5], [1, 2, 5, 3, 4], [1, 2, 4, 5, 3], [1, 2, 5, 4, 3], [1, 3, 2, 4, 5], [1, 3, 2, 5, 4], [1, 4, 2, 3, 5], [1, 5, 2, 3, 4], [1, 4, 2, 5, 3], [1, 5, 2, 4, 3], [1, 3, 4, 2, 5], [1, 3, 5, 2, 4], [1, 4, 3, 2, 5], [1, 5, 3, 2, 4], [1, 4, 5, 2, 3], [1, 5, 4, 2, 3], [1, 3, 4, 5, 2], [1, 3, 5, 4, 2], [1, 4, 3, 5, 2], [1, 5, 3, 4, 2], [1, 4, 5, 3, 2], [1, 5, 4, 3, 2], [2, 1, 3, 4, 5], [2, 1, 3, 5, 4], [2, 1, 4, 3, 5], [2, 1, 5, 3, 4], [2, 1, 4, 5, 3], [2, 1, 5, 4, 3], [3, 1, 2, 4, 5], [3, 1, 2, 5, 4], [4, 1, 2, 3, 5], [5, 1, 2, 3, 4], [4, 1, 2, 5, 3], [5, 1, 2, 4, 3], [3, 1, 4, 2, 5], [3, 1, 5, 2, 4], [4, 1, 3, 2, 5], [5, 1, 3, 2, 4], [4, 1, 5, 2, 3], [5, 1, 4, 2, 3], [3, 1, 4, 5, 2], [3, 1, 5, 4, 2], [4, 1, 3, 5, 2], [5, 1, 3, 4, 2], [4, 1, 5, 3, 2], [5, 1, 4, 3, 2], [2, 3, 1, 4, 5], [2, 3, 1, 5, 4], [2, 4, 1, 3, 5], [2, 5, 1, 3, 4], [2, 4, 1, 5, 3], [2, 5, 1, 4, 3], [3, 2, 1, 4, 5], [3, 2, 1, 5, 4], [4, 2, 1, 3, 5], [5, 2, 1, 3, 4], [4, 2, 1, 5, 3], [5, 2, 1, 4, 3], [3, 4, 1, 2, 5], [3, 5, 1, 2, 4], [4, 3, 1, 2, 5], [5, 3, 1, 2, 4], [4, 5, 1, 2, 3], [5, 4, 1, 2, 3], [3, 4, 1, 5, 2], [3, 5, 1, 4, 2], [4, 3, 1, 5, 2], [5, 3, 1, 4, 2], [4, 5, 1, 3, 2], [5, 4, 1, 3, 2], [2, 3, 4, 1, 5], [2, 3, 5, 1, 4], [2, 4, 3, 1, 5], [2, 5, 3, 1, 4], [2, 4, 5, 1, 3], [2, 5, 4, 1, 3], [3, 2, 4, 1, 5], [3, 2, 5, 1, 4], [4, 2, 3, 1, 5], [5, 2, 3, 1, 4], [4, 2, 5, 1, 3], [5, 2, 4, 1, 3], [3, 4, 2, 1, 5], [3, 5, 2, 1, 4], [4, 3, 2, 1, 5], [5, 3, 2, 1, 4], [4, 5, 2, 1, 3], [5, 4, 2, 1, 3], [3, 4, 5, 1, 2], [3, 5, 4, 1, 2], [4, 3, 5, 1, 2], [5, 3, 4, 1, 2], [4, 5, 3, 1, 2], [5, 4, 3, 1, 2], [2, 3, 4, 5, 1], [2, 3, 5, 4, 1], [2, 4, 3, 5, 1], [2, 5, 3, 4, 1], [2, 4, 5, 3, 1], [2, 5, 4, 3, 1], [3, 2, 4, 5, 1], [3, 2, 5, 4, 1], [4, 2, 3, 5, 1], [5, 2, 3, 4, 1], [4, 2, 5, 3, 1], [5, 2, 4, 3, 1], [3, 4, 2, 5, 1], [3, 5, 2, 4, 1], [4, 3, 2, 5, 1], [5, 3, 2, 4, 1], [4, 5, 2, 3, 1], [5, 4, 2, 3, 1], [3, 4, 5, 2, 1], [3, 5, 4, 2, 1], [4, 3, 5, 2, 1], [5, 3, 4, 2, 1], [4, 5, 3, 2, 1], [5, 4, 3, 2, 1]]
**SEARCH**
PRINT[[S_00001_00002],[S_00001_00003],[S_00001_00004],[S_00001_00005],[S_00002_00001],[S_00002_00002],[S_00002_00003],[S_00002_00004],[S_00002_00005],[S_00003_00001],[S_00003_00002],[S_00003_00003],[S_00003_00004],[S_00003_00005],[S_00004_00001],[S_00004_00002],[S_00004_00003],[S_00004_00004],[S_00004_00005],[S_00005_00001],[S_00005_00002],[S_00005_00003],[S_00005_00004],[S_00005_00005]]
VARORDER STATIC [S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005]
**CONSTRAINTS**
watchelement_one([1, 2, 3], S_00001_00003, aux298)
watchelement_one([1, 2, 3, 5, 4], S_00001_00005, aux299)
watchelement_one([1, 2, 3, 5], S_00001_00004, aux300)
watchelement_one([1, 2, 3, 5], S_00002_00003, aux301)
watchelement_one([1, 2, 3, 5, 4], S_00002_00005, aux302)
watchelement_one([1, 2, 3, 5], S_00002_00004, aux303)
watchelement_one([1, 2, 3], S_00003_00001, aux304)
watchelement_one([1, 2, 3, 5], S_00003_00002, aux305)
watchelement_one([1, 2, 3, 5, 4], S_00003_00003, aux306)
watchelement_one([1, 2, 3, 5, 4], S_00003_00005, aux307)
watchelement_one([1, 2, 3, 5, 4], S_00003_00004, aux308)
watchelement_one([1, 2, 3, 5, 4], S_00005_00001, aux309)
watchelement_one([1, 2, 3, 5, 4], S_00005_00002, aux310)
watchelement_one([1, 2, 3, 5, 4], S_00005_00003, aux311)
watchelement_one([1, 2, 3, 5, 4], S_00005_00005, aux312)
watchelement_one([1, 2, 3, 5, 4], S_00005_00004, aux313)
watchelement_one([1, 2, 3, 5], S_00004_00001, aux314)
watchelement_one([1, 2, 3, 5, 4], S_00004_00002, aux315)
watchelement_one([1, 2, 3, 5, 4], S_00004_00003, aux316)
watchelement_one([1, 2, 3, 5, 4], S_00004_00005, aux317)
watchelement_one([1, 2, 3, 5, 4], S_00004_00004, aux318)
watchelement_one([1, 2, 4, 3], S_00001_00004, aux319)
watchelement_one([1, 2, 4, 3, 5], S_00001_00005, aux320)
watchelement_one([1, 2, 4, 3], S_00002_00004, aux321)
watchelement_one([1, 2, 4, 3], S_00002_00003, aux322)
watchelement_one([1, 2, 4, 3, 5], S_00002_00005, aux323)
watchelement_one([1, 2, 4, 3], S_00004_00001, aux324)
watchelement_one([1, 2, 4, 3, 5], S_00004_00002, aux325)
watchelement_one([1, 2, 4, 3, 5], S_00004_00004, aux326)
watchelement_one([1, 2, 4, 3, 5], S_00004_00003, aux327)
watchelement_one([1, 2, 4, 3, 5], S_00004_00005, aux328)
watchelement_one([1, 2, 4, 3], S_00003_00002, aux329)
watchelement_one([1, 2, 4, 3, 5], S_00003_00004, aux330)
watchelement_one([1, 2, 4, 3, 5], S_00003_00003, aux331)
watchelement_one([1, 2, 4, 3, 5], S_00003_00005, aux332)
watchelement_one([1, 2, 4, 3, 5], S_00005_00001, aux333)
watchelement_one([1, 2, 4, 3, 5], S_00005_00002, aux334)
watchelement_one([1, 2, 4, 3, 5], S_00005_00004, aux335)
watchelement_one([1, 2, 4, 3, 5], S_00005_00003, aux336)
watchelement_one([1, 2, 4, 3, 5], S_00005_00005, aux337)
watchelement_one([1, 2, 5, 3], S_00001_00004, aux338)
watchelement_one([1, 2, 5, 3, 4], S_00001_00005, aux339)
watchelement_one([1, 2, 5, 3], S_00002_00004, aux340)
watchelement_one([1, 2, 5, 3, 4], S_00002_00005, aux341)
watchelement_one([1, 2, 5, 3], S_00002_00003, aux342)
watchelement_one([1, 2, 5, 3], S_00004_00001, aux343)
watchelement_one([1, 2, 5, 3, 4], S_00004_00002, aux344)
watchelement_one([1, 2, 5, 3, 4], S_00004_00004, aux345)
watchelement_one([1, 2, 5, 3, 4], S_00004_00005, aux346)
watchelement_one([1, 2, 5, 3, 4], S_00004_00003, aux347)
watchelement_one([1, 2, 5, 3, 4], S_00005_00001, aux348)
watchelement_one([1, 2, 5, 3, 4], S_00005_00002, aux349)
watchelement_one([1, 2, 5, 3, 4], S_00005_00004, aux350)
watchelement_one([1, 2, 5, 3, 4], S_00005_00005, aux351)
watchelement_one([1, 2, 5, 3, 4], S_00005_00003, aux352)
watchelement_one([1, 2, 5, 3], S_00003_00002, aux353)
watchelement_one([1, 2, 5, 3, 4], S_00003_00004, aux354)
watchelement_one([1, 2, 5, 3, 4], S_00003_00005, aux355)
watchelement_one([1, 2, 5, 3, 4], S_00003_00003, aux356)
watchelement_one([1, 2, 4, 5, 3], S_00001_00005, aux357)
watchelement_one([1, 2, 4, 5], S_00001_00004, aux358)
watchelement_one([1, 2, 4, 5, 3], S_00002_00005, aux359)
watchelement_one([1, 2, 4, 5], S_00002_00003, aux360)
watchelement_one([1, 2, 4, 5], S_00002_00004, aux361)
watchelement_one([1, 2, 4, 5, 3], S_00005_00001, aux362)
watchelement_one([1, 2, 4, 5, 3], S_00005_00002, aux363)
watchelement_one([1, 2, 4, 5, 3], S_00005_00005, aux364)
watchelement_one([1, 2, 4, 5, 3], S_00005_00003, aux365)
watchelement_one([1, 2, 4, 5, 3], S_00005_00004, aux366)
watchelement_one([1, 2, 4, 5], S_00003_00002, aux367)
watchelement_one([1, 2, 4, 5, 3], S_00003_00005, aux368)
watchelement_one([1, 2, 4, 5, 3], S_00003_00003, aux369)
watchelement_one([1, 2, 4, 5, 3], S_00003_00004, aux370)
watchelement_one([1, 2, 4, 5], S_00004_00001, aux371)
watchelement_one([1, 2, 4, 5, 3], S_00004_00002, aux372)
watchelement_one([1, 2, 4, 5, 3], S_00004_00005, aux373)
watchelement_one([1, 2, 4, 5, 3], S_00004_00003, aux374)
watchelement_one([1, 2, 4, 5, 3], S_00004_00004, aux375)
watchelement_one([1, 2, 5, 4, 3], S_00001_00005, aux376)
watchelement_one([1, 2, 5, 4], S_00001_00004, aux377)
watchelement_one([1, 2, 5, 4, 3], S_00002_00005, aux378)
watchelement_one([1, 2, 5, 4], S_00002_00004, aux379)
watchelement_one([1, 2, 5, 4], S_00002_00003, aux380)
watchelement_one([1, 2, 5, 4, 3], S_00005_00001, aux381)
watchelement_one([1, 2, 5, 4, 3], S_00005_00002, aux382)
watchelement_one([1, 2, 5, 4, 3], S_00005_00005, aux383)
watchelement_one([1, 2, 5, 4, 3], S_00005_00004, aux384)
watchelement_one([1, 2, 5, 4, 3], S_00005_00003, aux385)
watchelement_one([1, 2, 5, 4], S_00004_00001, aux386)
watchelement_one([1, 2, 5, 4, 3], S_00004_00002, aux387)
watchelement_one([1, 2, 5, 4, 3], S_00004_00005, aux388)
watchelement_one([1, 2, 5, 4, 3], S_00004_00004, aux389)
watchelement_one([1, 2, 5, 4, 3], S_00004_00003, aux390)
watchelement_one([1, 2, 5, 4], S_00003_00002, aux391)
watchelement_one([1, 2, 5, 4, 3], S_00003_00005, aux392)
watchelement_one([1, 2, 5, 4, 3], S_00003_00004, aux393)
watchelement_one([1, 2, 5, 4, 3], S_00003_00003, aux394)
watchelement_one([1, 3, 2, 4], S_00001_00004, aux395)
watchelement_one([1, 3, 2, 4, 5], S_00001_00005, aux396)
watchelement_one([1, 3, 2, 4, 5], S_00003_00003, aux397)
watchelement_one([1, 3, 2, 4], S_00003_00002, aux398)
watchelement_one([1, 3, 2, 4, 5], S_00003_00004, aux399)
watchelement_one([1, 3, 2, 4, 5], S_00003_00005, aux400)
watchelement_one([1, 3, 2, 4], S_00002_00003, aux401)
watchelement_one([1, 3, 2, 4], S_00002_00004, aux402)
watchelement_one([1, 3, 2, 4, 5], S_00002_00005, aux403)
watchelement_one([1, 3, 2, 4], S_00004_00001, aux404)
watchelement_one([1, 3, 2, 4, 5], S_00004_00003, aux405)
watchelement_one([1, 3, 2, 4, 5], S_00004_00002, aux406)
watchelement_one([1, 3, 2, 4, 5], S_00004_00004, aux407)
watchelement_one([1, 3, 2, 4, 5], S_00004_00005, aux408)
watchelement_one([1, 3, 2, 4, 5], S_00005_00001, aux409)
watchelement_one([1, 3, 2, 4, 5], S_00005_00003, aux410)
watchelement_one([1, 3, 2, 4, 5], S_00005_00002, aux411)
watchelement_one([1, 3, 2, 4, 5], S_00005_00004, aux412)
watchelement_one([1, 3, 2, 4, 5], S_00005_00005, aux413)
watchelement_one([1, 3, 2, 5, 4], S_00001_00005, aux414)
watchelement_one([1, 3, 2, 5], S_00001_00004, aux415)
watchelement_one([1, 3, 2, 5, 4], S_00003_00003, aux416)
watchelement_one([1, 3, 2, 5], S_00003_00002, aux417)
watchelement_one([1, 3, 2, 5, 4], S_00003_00005, aux418)
watchelement_one([1, 3, 2, 5, 4], S_00003_00004, aux419)
watchelement_one([1, 3, 2, 5], S_00002_00003, aux420)
watchelement_one([1, 3, 2, 5, 4], S_00002_00005, aux421)
watchelement_one([1, 3, 2, 5], S_00002_00004, aux422)
watchelement_one([1, 3, 2, 5, 4], S_00005_00001, aux423)
watchelement_one([1, 3, 2, 5, 4], S_00005_00003, aux424)
watchelement_one([1, 3, 2, 5, 4], S_00005_00002, aux425)
watchelement_one([1, 3, 2, 5, 4], S_00005_00005, aux426)
watchelement_one([1, 3, 2, 5, 4], S_00005_00004, aux427)
watchelement_one([1, 3, 2, 5], S_00004_00001, aux428)
watchelement_one([1, 3, 2, 5, 4], S_00004_00003, aux429)
watchelement_one([1, 3, 2, 5, 4], S_00004_00002, aux430)
watchelement_one([1, 3, 2, 5, 4], S_00004_00005, aux431)
watchelement_one([1, 3, 2, 5, 4], S_00004_00004, aux432)
watchelement_one([1, 4, 2, 3], S_00001_00004, aux433)
watchelement_one([1, 4, 2, 3, 5], S_00001_00005, aux434)
watchelement_one([1, 4, 2, 3, 5], S_00003_00003, aux435)
watchelement_one([1, 4, 2, 3, 5], S_00003_00004, aux436)
watchelement_one([1, 4, 2, 3], S_00003_00002, aux437)
watchelement_one([1, 4, 2, 3, 5], S_00003_00005, aux438)
watchelement_one([1, 4, 2, 3], S_00004_00001, aux439)
watchelement_one([1, 4, 2, 3, 5], S_00004_00003, aux440)
watchelement_one([1, 4, 2, 3, 5], S_00004_00004, aux441)
watchelement_one([1, 4, 2, 3, 5], S_00004_00002, aux442)
watchelement_one([1, 4, 2, 3, 5], S_00004_00005, aux443)
watchelement_one([1, 4, 2, 3], S_00002_00003, aux444)
watchelement_one([1, 4, 2, 3], S_00002_00004, aux445)
watchelement_one([1, 4, 2, 3, 5], S_00002_00005, aux446)
watchelement_one([1, 4, 2, 3, 5], S_00005_00001, aux447)
watchelement_one([1, 4, 2, 3, 5], S_00005_00003, aux448)
watchelement_one([1, 4, 2, 3, 5], S_00005_00004, aux449)
watchelement_one([1, 4, 2, 3, 5], S_00005_00002, aux450)
watchelement_one([1, 4, 2, 3, 5], S_00005_00005, aux451)
watchelement_one([1, 5, 2, 3], S_00001_00004, aux452)
watchelement_one([1, 5, 2, 3, 4], S_00001_00005, aux453)
watchelement_one([1, 5, 2, 3, 4], S_00003_00003, aux454)
watchelement_one([1, 5, 2, 3, 4], S_00003_00004, aux455)
watchelement_one([1, 5, 2, 3, 4], S_00003_00005, aux456)
watchelement_one([1, 5, 2, 3], S_00003_00002, aux457)
watchelement_one([1, 5, 2, 3], S_00004_00001, aux458)
watchelement_one([1, 5, 2, 3, 4], S_00004_00003, aux459)
watchelement_one([1, 5, 2, 3, 4], S_00004_00004, aux460)
watchelement_one([1, 5, 2, 3, 4], S_00004_00005, aux461)
watchelement_one([1, 5, 2, 3, 4], S_00004_00002, aux462)
watchelement_one([1, 5, 2, 3, 4], S_00005_00001, aux463)
watchelement_one([1, 5, 2, 3, 4], S_00005_00003, aux464)
watchelement_one([1, 5, 2, 3, 4], S_00005_00004, aux465)
watchelement_one([1, 5, 2, 3, 4], S_00005_00005, aux466)
watchelement_one([1, 5, 2, 3, 4], S_00005_00002, aux467)
watchelement_one([1, 5, 2, 3], S_00002_00003, aux468)
watchelement_one([1, 5, 2, 3], S_00002_00004, aux469)
watchelement_one([1, 5, 2, 3, 4], S_00002_00005, aux470)
watchelement_one([1, 4, 2, 5, 3], S_00001_00005, aux471)
watchelement_one([1, 4, 2, 5], S_00001_00004, aux472)
watchelement_one([1, 4, 2, 5, 3], S_00003_00003, aux473)
watchelement_one([1, 4, 2, 5, 3], S_00003_00005, aux474)
watchelement_one([1, 4, 2, 5], S_00003_00002, aux475)
watchelement_one([1, 4, 2, 5, 3], S_00003_00004, aux476)
watchelement_one([1, 4, 2, 5, 3], S_00005_00001, aux477)
watchelement_one([1, 4, 2, 5, 3], S_00005_00003, aux478)
watchelement_one([1, 4, 2, 5, 3], S_00005_00005, aux479)
watchelement_one([1, 4, 2, 5, 3], S_00005_00002, aux480)
watchelement_one([1, 4, 2, 5, 3], S_00005_00004, aux481)
watchelement_one([1, 4, 2, 5], S_00002_00003, aux482)
watchelement_one([1, 4, 2, 5, 3], S_00002_00005, aux483)
watchelement_one([1, 4, 2, 5], S_00002_00004, aux484)
watchelement_one([1, 4, 2, 5], S_00004_00001, aux485)
watchelement_one([1, 4, 2, 5, 3], S_00004_00003, aux486)
watchelement_one([1, 4, 2, 5, 3], S_00004_00005, aux487)
watchelement_one([1, 4, 2, 5, 3], S_00004_00002, aux488)
watchelement_one([1, 4, 2, 5, 3], S_00004_00004, aux489)
watchelement_one([1, 5, 2, 4, 3], S_00001_00005, aux490)
watchelement_one([1, 5, 2, 4], S_00001_00004, aux491)
watchelement_one([1, 5, 2, 4, 3], S_00003_00003, aux492)
watchelement_one([1, 5, 2, 4, 3], S_00003_00005, aux493)
watchelement_one([1, 5, 2, 4, 3], S_00003_00004, aux494)
watchelement_one([1, 5, 2, 4], S_00003_00002, aux495)
watchelement_one([1, 5, 2, 4, 3], S_00005_00001, aux496)
watchelement_one([1, 5, 2, 4, 3], S_00005_00003, aux497)
watchelement_one([1, 5, 2, 4, 3], S_00005_00005, aux498)
watchelement_one([1, 5, 2, 4, 3], S_00005_00004, aux499)
watchelement_one([1, 5, 2, 4, 3], S_00005_00002, aux500)
watchelement_one([1, 5, 2, 4], S_00004_00001, aux501)
watchelement_one([1, 5, 2, 4, 3], S_00004_00003, aux502)
watchelement_one([1, 5, 2, 4, 3], S_00004_00005, aux503)
watchelement_one([1, 5, 2, 4, 3], S_00004_00004, aux504)
watchelement_one([1, 5, 2, 4, 3], S_00004_00002, aux505)
watchelement_one([1, 5, 2, 4], S_00002_00003, aux506)
watchelement_one([1, 5, 2, 4, 3], S_00002_00005, aux507)
watchelement_one([1, 5, 2, 4], S_00002_00004, aux508)
watchelement_one([1, 3, 4, 2], S_00001_00004, aux509)
watchelement_one([1, 3, 4, 2, 5], S_00001_00005, aux510)
watchelement_one([1, 3, 4, 2], S_00004_00001, aux511)
watchelement_one([1, 3, 4, 2, 5], S_00004_00004, aux512)
watchelement_one([1, 3, 4, 2, 5], S_00004_00002, aux513)
watchelement_one([1, 3, 4, 2, 5], S_00004_00003, aux514)
watchelement_one([1, 3, 4, 2, 5], S_00004_00005, aux515)
watchelement_one([1, 3, 4, 2], S_00002_00004, aux516)
watchelement_one([1, 3, 4, 2], S_00002_00003, aux517)
watchelement_one([1, 3, 4, 2, 5], S_00002_00005, aux518)
watchelement_one([1, 3, 4, 2, 5], S_00003_00004, aux519)
watchelement_one([1, 3, 4, 2], S_00003_00002, aux520)
watchelement_one([1, 3, 4, 2, 5], S_00003_00003, aux521)
watchelement_one([1, 3, 4, 2, 5], S_00003_00005, aux522)
watchelement_one([1, 3, 4, 2, 5], S_00005_00001, aux523)
watchelement_one([1, 3, 4, 2, 5], S_00005_00004, aux524)
watchelement_one([1, 3, 4, 2, 5], S_00005_00002, aux525)
watchelement_one([1, 3, 4, 2, 5], S_00005_00003, aux526)
watchelement_one([1, 3, 4, 2, 5], S_00005_00005, aux527)
watchelement_one([1, 3, 5, 2], S_00001_00004, aux528)
watchelement_one([1, 3, 5, 2, 4], S_00001_00005, aux529)
watchelement_one([1, 3, 5, 2], S_00004_00001, aux530)
watchelement_one([1, 3, 5, 2, 4], S_00004_00004, aux531)
watchelement_one([1, 3, 5, 2, 4], S_00004_00002, aux532)
watchelement_one([1, 3, 5, 2, 4], S_00004_00005, aux533)
watchelement_one([1, 3, 5, 2, 4], S_00004_00003, aux534)
watchelement_one([1, 3, 5, 2], S_00002_00004, aux535)
watchelement_one([1, 3, 5, 2, 4], S_00002_00005, aux536)
watchelement_one([1, 3, 5, 2], S_00002_00003, aux537)
watchelement_one([1, 3, 5, 2, 4], S_00005_00001, aux538)
watchelement_one([1, 3, 5, 2, 4], S_00005_00004, aux539)
watchelement_one([1, 3, 5, 2, 4], S_00005_00002, aux540)
watchelement_one([1, 3, 5, 2, 4], S_00005_00005, aux541)
watchelement_one([1, 3, 5, 2, 4], S_00005_00003, aux542)
watchelement_one([1, 3, 5, 2, 4], S_00003_00004, aux543)
watchelement_one([1, 3, 5, 2], S_00003_00002, aux544)
watchelement_one([1, 3, 5, 2, 4], S_00003_00005, aux545)
watchelement_one([1, 3, 5, 2, 4], S_00003_00003, aux546)
watchelement_one([1, 4, 3, 2], S_00001_00004, aux547)
watchelement_one([1, 4, 3, 2, 5], S_00001_00005, aux548)
watchelement_one([1, 4, 3, 2], S_00004_00001, aux549)
watchelement_one([1, 4, 3, 2, 5], S_00004_00004, aux550)
watchelement_one([1, 4, 3, 2, 5], S_00004_00003, aux551)
watchelement_one([1, 4, 3, 2, 5], S_00004_00002, aux552)
watchelement_one([1, 4, 3, 2, 5], S_00004_00005, aux553)
watchelement_one([1, 4, 3, 2, 5], S_00003_00004, aux554)
watchelement_one([1, 4, 3, 2, 5], S_00003_00003, aux555)
watchelement_one([1, 4, 3, 2], S_00003_00002, aux556)
watchelement_one([1, 4, 3, 2, 5], S_00003_00005, aux557)
watchelement_one([1, 4, 3, 2], S_00002_00004, aux558)
watchelement_one([1, 4, 3, 2], S_00002_00003, aux559)
watchelement_one([1, 4, 3, 2, 5], S_00002_00005, aux560)
watchelement_one([1, 4, 3, 2, 5], S_00005_00001, aux561)
watchelement_one([1, 4, 3, 2, 5], S_00005_00004, aux562)
watchelement_one([1, 4, 3, 2, 5], S_00005_00003, aux563)
watchelement_one([1, 4, 3, 2, 5], S_00005_00002, aux564)
watchelement_one([1, 4, 3, 2, 5], S_00005_00005, aux565)
watchelement_one([1, 5, 3, 2], S_00001_00004, aux566)
watchelement_one([1, 5, 3, 2, 4], S_00001_00005, aux567)
watchelement_one([1, 5, 3, 2], S_00004_00001, aux568)
watchelement_one([1, 5, 3, 2, 4], S_00004_00004, aux569)
watchelement_one([1, 5, 3, 2, 4], S_00004_00003, aux570)
watchelement_one([1, 5, 3, 2, 4], S_00004_00005, aux571)
watchelement_one([1, 5, 3, 2, 4], S_00004_00002, aux572)
watchelement_one([1, 5, 3, 2, 4], S_00003_00004, aux573)
watchelement_one([1, 5, 3, 2, 4], S_00003_00003, aux574)
watchelement_one([1, 5, 3, 2, 4], S_00003_00005, aux575)
watchelement_one([1, 5, 3, 2], S_00003_00002, aux576)
watchelement_one([1, 5, 3, 2, 4], S_00005_00001, aux577)
watchelement_one([1, 5, 3, 2, 4], S_00005_00004, aux578)
watchelement_one([1, 5, 3, 2, 4], S_00005_00003, aux579)
watchelement_one([1, 5, 3, 2, 4], S_00005_00005, aux580)
watchelement_one([1, 5, 3, 2, 4], S_00005_00002, aux581)
watchelement_one([1, 5, 3, 2], S_00002_00004, aux582)
watchelement_one([1, 5, 3, 2], S_00002_00003, aux583)
watchelement_one([1, 5, 3, 2, 4], S_00002_00005, aux584)
watchelement_one([1, 4, 5, 2], S_00001_00004, aux585)
watchelement_one([1, 4, 5, 2, 3], S_00001_00005, aux586)
watchelement_one([1, 4, 5, 2], S_00004_00001, aux587)
watchelement_one([1, 4, 5, 2, 3], S_00004_00004, aux588)
watchelement_one([1, 4, 5, 2, 3], S_00004_00005, aux589)
watchelement_one([1, 4, 5, 2, 3], S_00004_00002, aux590)
watchelement_one([1, 4, 5, 2, 3], S_00004_00003, aux591)
watchelement_one([1, 4, 5, 2, 3], S_00005_00001, aux592)
watchelement_one([1, 4, 5, 2, 3], S_00005_00004, aux593)
watchelement_one([1, 4, 5, 2, 3], S_00005_00005, aux594)
watchelement_one([1, 4, 5, 2, 3], S_00005_00002, aux595)
watchelement_one([1, 4, 5, 2, 3], S_00005_00003, aux596)
watchelement_one([1, 4, 5, 2], S_00002_00004, aux597)
watchelement_one([1, 4, 5, 2, 3], S_00002_00005, aux598)
watchelement_one([1, 4, 5, 2], S_00002_00003, aux599)
watchelement_one([1, 4, 5, 2, 3], S_00003_00004, aux600)
watchelement_one([1, 4, 5, 2, 3], S_00003_00005, aux601)
watchelement_one([1, 4, 5, 2], S_00003_00002, aux602)
watchelement_one([1, 4, 5, 2, 3], S_00003_00003, aux603)
watchelement_one([1, 5, 4, 2], S_00001_00004, aux604)
watchelement_one([1, 5, 4, 2, 3], S_00001_00005, aux605)
watchelement_one([1, 5, 4, 2], S_00004_00001, aux606)
watchelement_one([1, 5, 4, 2, 3], S_00004_00004, aux607)
watchelement_one([1, 5, 4, 2, 3], S_00004_00005, aux608)
watchelement_one([1, 5, 4, 2, 3], S_00004_00003, aux609)
watchelement_one([1, 5, 4, 2, 3], S_00004_00002, aux610)
watchelement_one([1, 5, 4, 2, 3], S_00005_00001, aux611)
watchelement_one([1, 5, 4, 2, 3], S_00005_00004, aux612)
watchelement_one([1, 5, 4, 2, 3], S_00005_00005, aux613)
watchelement_one([1, 5, 4, 2, 3], S_00005_00003, aux614)
watchelement_one([1, 5, 4, 2, 3], S_00005_00002, aux615)
watchelement_one([1, 5, 4, 2, 3], S_00003_00004, aux616)
watchelement_one([1, 5, 4, 2, 3], S_00003_00005, aux617)
watchelement_one([1, 5, 4, 2, 3], S_00003_00003, aux618)
watchelement_one([1, 5, 4, 2], S_00003_00002, aux619)
watchelement_one([1, 5, 4, 2], S_00002_00004, aux620)
watchelement_one([1, 5, 4, 2, 3], S_00002_00005, aux621)
watchelement_one([1, 5, 4, 2], S_00002_00003, aux622)
watchelement_one([1, 3, 4, 5, 2], S_00001_00005, aux623)
watchelement_one([1, 3, 4, 5], S_00001_00004, aux624)
watchelement_one([1, 3, 4, 5, 2], S_00005_00001, aux625)
watchelement_one([1, 3, 4, 5, 2], S_00005_00005, aux626)
watchelement_one([1, 3, 4, 5, 2], S_00005_00002, aux627)
watchelement_one([1, 3, 4, 5, 2], S_00005_00003, aux628)
watchelement_one([1, 3, 4, 5, 2], S_00005_00004, aux629)
watchelement_one([1, 3, 4, 5, 2], S_00002_00005, aux630)
watchelement_one([1, 3, 4, 5], S_00002_00003, aux631)
watchelement_one([1, 3, 4, 5], S_00002_00004, aux632)
watchelement_one([1, 3, 4, 5, 2], S_00003_00005, aux633)
watchelement_one([1, 3, 4, 5], S_00003_00002, aux634)
watchelement_one([1, 3, 4, 5, 2], S_00003_00003, aux635)
watchelement_one([1, 3, 4, 5, 2], S_00003_00004, aux636)
watchelement_one([1, 3, 4, 5], S_00004_00001, aux637)
watchelement_one([1, 3, 4, 5, 2], S_00004_00005, aux638)
watchelement_one([1, 3, 4, 5, 2], S_00004_00002, aux639)
watchelement_one([1, 3, 4, 5, 2], S_00004_00003, aux640)
watchelement_one([1, 3, 4, 5, 2], S_00004_00004, aux641)
watchelement_one([1, 3, 5, 4, 2], S_00001_00005, aux642)
watchelement_one([1, 3, 5, 4], S_00001_00004, aux643)
watchelement_one([1, 3, 5, 4, 2], S_00005_00001, aux644)
watchelement_one([1, 3, 5, 4, 2], S_00005_00005, aux645)
watchelement_one([1, 3, 5, 4, 2], S_00005_00002, aux646)
watchelement_one([1, 3, 5, 4, 2], S_00005_00004, aux647)
watchelement_one([1, 3, 5, 4, 2], S_00005_00003, aux648)
watchelement_one([1, 3, 5, 4, 2], S_00002_00005, aux649)
watchelement_one([1, 3, 5, 4], S_00002_00004, aux650)
watchelement_one([1, 3, 5, 4], S_00002_00003, aux651)
watchelement_one([1, 3, 5, 4], S_00004_00001, aux652)
watchelement_one([1, 3, 5, 4, 2], S_00004_00005, aux653)
watchelement_one([1, 3, 5, 4, 2], S_00004_00002, aux654)
watchelement_one([1, 3, 5, 4, 2], S_00004_00004, aux655)
watchelement_one([1, 3, 5, 4, 2], S_00004_00003, aux656)
watchelement_one([1, 3, 5, 4, 2], S_00003_00005, aux657)
watchelement_one([1, 3, 5, 4], S_00003_00002, aux658)
watchelement_one([1, 3, 5, 4, 2], S_00003_00004, aux659)
watchelement_one([1, 3, 5, 4, 2], S_00003_00003, aux660)
watchelement_one([1, 4, 3, 5, 2], S_00001_00005, aux661)
watchelement_one([1, 4, 3, 5], S_00001_00004, aux662)
watchelement_one([1, 4, 3, 5, 2], S_00005_00001, aux663)
watchelement_one([1, 4, 3, 5, 2], S_00005_00005, aux664)
watchelement_one([1, 4, 3, 5, 2], S_00005_00003, aux665)
watchelement_one([1, 4, 3, 5, 2], S_00005_00002, aux666)
watchelement_one([1, 4, 3, 5, 2], S_00005_00004, aux667)
watchelement_one([1, 4, 3, 5, 2], S_00003_00005, aux668)
watchelement_one([1, 4, 3, 5, 2], S_00003_00003, aux669)
watchelement_one([1, 4, 3, 5], S_00003_00002, aux670)
watchelement_one([1, 4, 3, 5, 2], S_00003_00004, aux671)
watchelement_one([1, 4, 3, 5, 2], S_00002_00005, aux672)
watchelement_one([1, 4, 3, 5], S_00002_00003, aux673)
watchelement_one([1, 4, 3, 5], S_00002_00004, aux674)
watchelement_one([1, 4, 3, 5], S_00004_00001, aux675)
watchelement_one([1, 4, 3, 5, 2], S_00004_00005, aux676)
watchelement_one([1, 4, 3, 5, 2], S_00004_00003, aux677)
watchelement_one([1, 4, 3, 5, 2], S_00004_00002, aux678)
watchelement_one([1, 4, 3, 5, 2], S_00004_00004, aux679)
watchelement_one([1, 5, 3, 4, 2], S_00001_00005, aux680)
watchelement_one([1, 5, 3, 4], S_00001_00004, aux681)
watchelement_one([1, 5, 3, 4, 2], S_00005_00001, aux682)
watchelement_one([1, 5, 3, 4, 2], S_00005_00005, aux683)
watchelement_one([1, 5, 3, 4, 2], S_00005_00003, aux684)
watchelement_one([1, 5, 3, 4, 2], S_00005_00004, aux685)
watchelement_one([1, 5, 3, 4, 2], S_00005_00002, aux686)
watchelement_one([1, 5, 3, 4, 2], S_00003_00005, aux687)
watchelement_one([1, 5, 3, 4, 2], S_00003_00003, aux688)
watchelement_one([1, 5, 3, 4, 2], S_00003_00004, aux689)
watchelement_one([1, 5, 3, 4], S_00003_00002, aux690)
watchelement_one([1, 5, 3, 4], S_00004_00001, aux691)
watchelement_one([1, 5, 3, 4, 2], S_00004_00005, aux692)
watchelement_one([1, 5, 3, 4, 2], S_00004_00003, aux693)
watchelement_one([1, 5, 3, 4, 2], S_00004_00004, aux694)
watchelement_one([1, 5, 3, 4, 2], S_00004_00002, aux695)
watchelement_one([1, 5, 3, 4, 2], S_00002_00005, aux696)
watchelement_one([1, 5, 3, 4], S_00002_00003, aux697)
watchelement_one([1, 5, 3, 4], S_00002_00004, aux698)
watchelement_one([1, 4, 5, 3, 2], S_00001_00005, aux699)
watchelement_one([1, 4, 5, 3], S_00001_00004, aux700)
watchelement_one([1, 4, 5, 3, 2], S_00005_00001, aux701)
watchelement_one([1, 4, 5, 3, 2], S_00005_00005, aux702)
watchelement_one([1, 4, 5, 3, 2], S_00005_00004, aux703)
watchelement_one([1, 4, 5, 3, 2], S_00005_00002, aux704)
watchelement_one([1, 4, 5, 3, 2], S_00005_00003, aux705)
watchelement_one([1, 4, 5, 3], S_00004_00001, aux706)
watchelement_one([1, 4, 5, 3, 2], S_00004_00005, aux707)
watchelement_one([1, 4, 5, 3, 2], S_00004_00004, aux708)
watchelement_one([1, 4, 5, 3, 2], S_00004_00002, aux709)
watchelement_one([1, 4, 5, 3, 2], S_00004_00003, aux710)
watchelement_one([1, 4, 5, 3, 2], S_00002_00005, aux711)
watchelement_one([1, 4, 5, 3], S_00002_00004, aux712)
watchelement_one([1, 4, 5, 3], S_00002_00003, aux713)
watchelement_one([1, 4, 5, 3, 2], S_00003_00005, aux714)
watchelement_one([1, 4, 5, 3, 2], S_00003_00004, aux715)
watchelement_one([1, 4, 5, 3], S_00003_00002, aux716)
watchelement_one([1, 4, 5, 3, 2], S_00003_00003, aux717)
watchelement_one([1, 5, 4, 3, 2], S_00001_00005, aux718)
watchelement_one([1, 5, 4, 3], S_00001_00004, aux719)
watchelement_one([1, 5, 4, 3, 2], S_00005_00001, aux720)
watchelement_one([1, 5, 4, 3, 2], S_00005_00005, aux721)
watchelement_one([1, 5, 4, 3, 2], S_00005_00004, aux722)
watchelement_one([1, 5, 4, 3, 2], S_00005_00003, aux723)
watchelement_one([1, 5, 4, 3, 2], S_00005_00002, aux724)
watchelement_one([1, 5, 4, 3], S_00004_00001, aux725)
watchelement_one([1, 5, 4, 3, 2], S_00004_00005, aux726)
watchelement_one([1, 5, 4, 3, 2], S_00004_00004, aux727)
watchelement_one([1, 5, 4, 3, 2], S_00004_00003, aux728)
watchelement_one([1, 5, 4, 3, 2], S_00004_00002, aux729)
watchelement_one([1, 5, 4, 3, 2], S_00003_00005, aux730)
watchelement_one([1, 5, 4, 3, 2], S_00003_00004, aux731)
watchelement_one([1, 5, 4, 3, 2], S_00003_00003, aux732)
watchelement_one([1, 5, 4, 3], S_00003_00002, aux733)
watchelement_one([1, 5, 4, 3, 2], S_00002_00005, aux734)
watchelement_one([1, 5, 4, 3], S_00002_00004, aux735)
watchelement_one([1, 5, 4, 3], S_00002_00003, aux736)
watchelement_one([2, 1, 3, 4], S_00002_00003, aux737)
watchelement_one([2, 1, 3, 4], S_00002_00004, aux738)
watchelement_one([2, 1, 3, 4, 5], S_00002_00005, aux739)
watchelement_one([2, 1, 3, 4], S_00001_00004, aux740)
watchelement_one([2, 1, 3, 4, 5], S_00001_00005, aux741)
watchelement_one([2, 1, 3, 4], S_00003_00002, aux742)
watchelement_one([2, 1, 3, 4, 5], S_00003_00003, aux743)
watchelement_one([2, 1, 3, 4, 5], S_00003_00004, aux744)
watchelement_one([2, 1, 3, 4, 5], S_00003_00005, aux745)
watchelement_one([2, 1, 3, 4, 5], S_00004_00002, aux746)
watchelement_one([2, 1, 3, 4], S_00004_00001, aux747)
watchelement_one([2, 1, 3, 4, 5], S_00004_00003, aux748)
watchelement_one([2, 1, 3, 4, 5], S_00004_00004, aux749)
watchelement_one([2, 1, 3, 4, 5], S_00004_00005, aux750)
watchelement_one([2, 1, 3, 4, 5], S_00005_00002, aux751)
watchelement_one([2, 1, 3, 4, 5], S_00005_00001, aux752)
watchelement_one([2, 1, 3, 4, 5], S_00005_00003, aux753)
watchelement_one([2, 1, 3, 4, 5], S_00005_00004, aux754)
watchelement_one([2, 1, 3, 4, 5], S_00005_00005, aux755)
watchelement_one([2, 1, 3, 5], S_00002_00003, aux756)
watchelement_one([2, 1, 3, 5, 4], S_00002_00005, aux757)
watchelement_one([2, 1, 3, 5], S_00002_00004, aux758)
watchelement_one([2, 1, 3, 5, 4], S_00001_00005, aux759)
watchelement_one([2, 1, 3, 5], S_00001_00004, aux760)
watchelement_one([2, 1, 3, 5], S_00003_00002, aux761)
watchelement_one([2, 1, 3, 5, 4], S_00003_00003, aux762)
watchelement_one([2, 1, 3, 5, 4], S_00003_00005, aux763)
watchelement_one([2, 1, 3, 5, 4], S_00003_00004, aux764)
watchelement_one([2, 1, 3, 5, 4], S_00005_00002, aux765)
watchelement_one([2, 1, 3, 5, 4], S_00005_00001, aux766)
watchelement_one([2, 1, 3, 5, 4], S_00005_00003, aux767)
watchelement_one([2, 1, 3, 5, 4], S_00005_00005, aux768)
watchelement_one([2, 1, 3, 5, 4], S_00005_00004, aux769)
watchelement_one([2, 1, 3, 5, 4], S_00004_00002, aux770)
watchelement_one([2, 1, 3, 5], S_00004_00001, aux771)
watchelement_one([2, 1, 3, 5, 4], S_00004_00003, aux772)
watchelement_one([2, 1, 3, 5, 4], S_00004_00005, aux773)
watchelement_one([2, 1, 3, 5, 4], S_00004_00004, aux774)
watchelement_one([2, 1, 4, 3], S_00002_00004, aux775)
watchelement_one([2, 1, 4, 3], S_00002_00003, aux776)
watchelement_one([2, 1, 4, 3, 5], S_00002_00005, aux777)
watchelement_one([2, 1, 4, 3], S_00001_00004, aux778)
watchelement_one([2, 1, 4, 3, 5], S_00001_00005, aux779)
watchelement_one([2, 1, 4, 3, 5], S_00004_00002, aux780)
watchelement_one([2, 1, 4, 3], S_00004_00001, aux781)
watchelement_one([2, 1, 4, 3, 5], S_00004_00004, aux782)
watchelement_one([2, 1, 4, 3, 5], S_00004_00003, aux783)
watchelement_one([2, 1, 4, 3, 5], S_00004_00005, aux784)
watchelement_one([2, 1, 4, 3], S_00003_00002, aux785)
watchelement_one([2, 1, 4, 3, 5], S_00003_00004, aux786)
watchelement_one([2, 1, 4, 3, 5], S_00003_00003, aux787)
watchelement_one([2, 1, 4, 3, 5], S_00003_00005, aux788)
watchelement_one([2, 1, 4, 3, 5], S_00005_00002, aux789)
watchelement_one([2, 1, 4, 3, 5], S_00005_00001, aux790)
watchelement_one([2, 1, 4, 3, 5], S_00005_00004, aux791)
watchelement_one([2, 1, 4, 3, 5], S_00005_00003, aux792)
watchelement_one([2, 1, 4, 3, 5], S_00005_00005, aux793)
watchelement_one([2, 1, 5, 3], S_00002_00004, aux794)
watchelement_one([2, 1, 5, 3, 4], S_00002_00005, aux795)
watchelement_one([2, 1, 5, 3], S_00002_00003, aux796)
watchelement_one([2, 1, 5, 3], S_00001_00004, aux797)
watchelement_one([2, 1, 5, 3, 4], S_00001_00005, aux798)
watchelement_one([2, 1, 5, 3, 4], S_00004_00002, aux799)
watchelement_one([2, 1, 5, 3], S_00004_00001, aux800)
watchelement_one([2, 1, 5, 3, 4], S_00004_00004, aux801)
watchelement_one([2, 1, 5, 3, 4], S_00004_00005, aux802)
watchelement_one([2, 1, 5, 3, 4], S_00004_00003, aux803)
watchelement_one([2, 1, 5, 3, 4], S_00005_00002, aux804)
watchelement_one([2, 1, 5, 3, 4], S_00005_00001, aux805)
watchelement_one([2, 1, 5, 3, 4], S_00005_00004, aux806)
watchelement_one([2, 1, 5, 3, 4], S_00005_00005, aux807)
watchelement_one([2, 1, 5, 3, 4], S_00005_00003, aux808)
watchelement_one([2, 1, 5, 3], S_00003_00002, aux809)
watchelement_one([2, 1, 5, 3, 4], S_00003_00004, aux810)
watchelement_one([2, 1, 5, 3, 4], S_00003_00005, aux811)
watchelement_one([2, 1, 5, 3, 4], S_00003_00003, aux812)
watchelement_one([2, 1, 4, 5, 3], S_00002_00005, aux813)
watchelement_one([2, 1, 4, 5], S_00002_00003, aux814)
watchelement_one([2, 1, 4, 5], S_00002_00004, aux815)
watchelement_one([2, 1, 4, 5, 3], S_00001_00005, aux816)
watchelement_one([2, 1, 4, 5], S_00001_00004, aux817)
watchelement_one([2, 1, 4, 5, 3], S_00005_00002, aux818)
watchelement_one([2, 1, 4, 5, 3], S_00005_00001, aux819)
watchelement_one([2, 1, 4, 5, 3], S_00005_00005, aux820)
watchelement_one([2, 1, 4, 5, 3], S_00005_00003, aux821)
watchelement_one([2, 1, 4, 5, 3], S_00005_00004, aux822)
watchelement_one([2, 1, 4, 5], S_00003_00002, aux823)
watchelement_one([2, 1, 4, 5, 3], S_00003_00005, aux824)
watchelement_one([2, 1, 4, 5, 3], S_00003_00003, aux825)
watchelement_one([2, 1, 4, 5, 3], S_00003_00004, aux826)
watchelement_one([2, 1, 4, 5, 3], S_00004_00002, aux827)
watchelement_one([2, 1, 4, 5], S_00004_00001, aux828)
watchelement_one([2, 1, 4, 5, 3], S_00004_00005, aux829)
watchelement_one([2, 1, 4, 5, 3], S_00004_00003, aux830)
watchelement_one([2, 1, 4, 5, 3], S_00004_00004, aux831)
watchelement_one([2, 1, 5, 4, 3], S_00002_00005, aux832)
watchelement_one([2, 1, 5, 4], S_00002_00004, aux833)
watchelement_one([2, 1, 5, 4], S_00002_00003, aux834)
watchelement_one([2, 1, 5, 4, 3], S_00001_00005, aux835)
watchelement_one([2, 1, 5, 4], S_00001_00004, aux836)
watchelement_one([2, 1, 5, 4, 3], S_00005_00002, aux837)
watchelement_one([2, 1, 5, 4, 3], S_00005_00001, aux838)
watchelement_one([2, 1, 5, 4, 3], S_00005_00005, aux839)
watchelement_one([2, 1, 5, 4, 3], S_00005_00004, aux840)
watchelement_one([2, 1, 5, 4, 3], S_00005_00003, aux841)
watchelement_one([2, 1, 5, 4, 3], S_00004_00002, aux842)
watchelement_one([2, 1, 5, 4], S_00004_00001, aux843)
watchelement_one([2, 1, 5, 4, 3], S_00004_00005, aux844)
watchelement_one([2, 1, 5, 4, 3], S_00004_00004, aux845)
watchelement_one([2, 1, 5, 4, 3], S_00004_00003, aux846)
watchelement_one([2, 1, 5, 4], S_00003_00002, aux847)
watchelement_one([2, 1, 5, 4, 3], S_00003_00005, aux848)
watchelement_one([2, 1, 5, 4, 3], S_00003_00004, aux849)
watchelement_one([2, 1, 5, 4, 3], S_00003_00003, aux850)
watchelement_one([3, 1, 2, 4], S_00002_00003, aux851)
watchelement_one([3, 1, 2, 4], S_00002_00004, aux852)
watchelement_one([3, 1, 2, 4, 5], S_00002_00005, aux853)
watchelement_one([3, 1, 2, 4], S_00003_00002, aux854)
watchelement_one([3, 1, 2, 4, 5], S_00003_00003, aux855)
watchelement_one([3, 1, 2, 4, 5], S_00003_00004, aux856)
watchelement_one([3, 1, 2, 4, 5], S_00003_00005, aux857)
watchelement_one([3, 1, 2, 4], S_00001_00004, aux858)
watchelement_one([3, 1, 2, 4, 5], S_00001_00005, aux859)
watchelement_one([3, 1, 2, 4, 5], S_00004_00002, aux860)
watchelement_one([3, 1, 2, 4, 5], S_00004_00003, aux861)
watchelement_one([3, 1, 2, 4], S_00004_00001, aux862)
watchelement_one([3, 1, 2, 4, 5], S_00004_00004, aux863)
watchelement_one([3, 1, 2, 4, 5], S_00004_00005, aux864)
watchelement_one([3, 1, 2, 4, 5], S_00005_00002, aux865)
watchelement_one([3, 1, 2, 4, 5], S_00005_00003, aux866)
watchelement_one([3, 1, 2, 4, 5], S_00005_00001, aux867)
watchelement_one([3, 1, 2, 4, 5], S_00005_00004, aux868)
watchelement_one([3, 1, 2, 4, 5], S_00005_00005, aux869)
watchelement_one([3, 1, 2, 5], S_00002_00003, aux870)
watchelement_one([3, 1, 2, 5, 4], S_00002_00005, aux871)
watchelement_one([3, 1, 2, 5], S_00002_00004, aux872)
watchelement_one([3, 1, 2, 5], S_00003_00002, aux873)
watchelement_one([3, 1, 2, 5, 4], S_00003_00003, aux874)
watchelement_one([3, 1, 2, 5, 4], S_00003_00005, aux875)
watchelement_one([3, 1, 2, 5, 4], S_00003_00004, aux876)
watchelement_one([3, 1, 2, 5, 4], S_00001_00005, aux877)
watchelement_one([3, 1, 2, 5], S_00001_00004, aux878)
watchelement_one([3, 1, 2, 5, 4], S_00005_00002, aux879)
watchelement_one([3, 1, 2, 5, 4], S_00005_00003, aux880)
watchelement_one([3, 1, 2, 5, 4], S_00005_00001, aux881)
watchelement_one([3, 1, 2, 5, 4], S_00005_00005, aux882)
watchelement_one([3, 1, 2, 5, 4], S_00005_00004, aux883)
watchelement_one([3, 1, 2, 5, 4], S_00004_00002, aux884)
watchelement_one([3, 1, 2, 5, 4], S_00004_00003, aux885)
watchelement_one([3, 1, 2, 5], S_00004_00001, aux886)
watchelement_one([3, 1, 2, 5, 4], S_00004_00005, aux887)
watchelement_one([3, 1, 2, 5, 4], S_00004_00004, aux888)
watchelement_one([4, 1, 2, 3], S_00002_00003, aux889)
watchelement_one([4, 1, 2, 3], S_00002_00004, aux890)
watchelement_one([4, 1, 2, 3, 5], S_00002_00005, aux891)
watchelement_one([4, 1, 2, 3], S_00003_00002, aux892)
watchelement_one([4, 1, 2, 3, 5], S_00003_00003, aux893)
watchelement_one([4, 1, 2, 3, 5], S_00003_00004, aux894)
watchelement_one([4, 1, 2, 3, 5], S_00003_00005, aux895)
watchelement_one([4, 1, 2, 3, 5], S_00004_00002, aux896)
watchelement_one([4, 1, 2, 3, 5], S_00004_00003, aux897)
watchelement_one([4, 1, 2, 3, 5], S_00004_00004, aux898)
watchelement_one([4, 1, 2, 3], S_00004_00001, aux899)
watchelement_one([4, 1, 2, 3, 5], S_00004_00005, aux900)
watchelement_one([4, 1, 2, 3], S_00001_00004, aux901)
watchelement_one([4, 1, 2, 3, 5], S_00001_00005, aux902)
watchelement_one([4, 1, 2, 3, 5], S_00005_00002, aux903)
watchelement_one([4, 1, 2, 3, 5], S_00005_00003, aux904)
watchelement_one([4, 1, 2, 3, 5], S_00005_00004, aux905)
watchelement_one([4, 1, 2, 3, 5], S_00005_00001, aux906)
watchelement_one([4, 1, 2, 3, 5], S_00005_00005, aux907)
watchelement_one([5, 1, 2, 3], S_00002_00003, aux908)
watchelement_one([5, 1, 2, 3], S_00002_00004, aux909)
watchelement_one([5, 1, 2, 3, 4], S_00002_00005, aux910)
watchelement_one([5, 1, 2, 3], S_00003_00002, aux911)
watchelement_one([5, 1, 2, 3, 4], S_00003_00003, aux912)
watchelement_one([5, 1, 2, 3, 4], S_00003_00004, aux913)
watchelement_one([5, 1, 2, 3, 4], S_00003_00005, aux914)
watchelement_one([5, 1, 2, 3, 4], S_00004_00002, aux915)
watchelement_one([5, 1, 2, 3, 4], S_00004_00003, aux916)
watchelement_one([5, 1, 2, 3, 4], S_00004_00004, aux917)
watchelement_one([5, 1, 2, 3, 4], S_00004_00005, aux918)
watchelement_one([5, 1, 2, 3], S_00004_00001, aux919)
watchelement_one([5, 1, 2, 3, 4], S_00005_00002, aux920)
watchelement_one([5, 1, 2, 3, 4], S_00005_00003, aux921)
watchelement_one([5, 1, 2, 3, 4], S_00005_00004, aux922)
watchelement_one([5, 1, 2, 3, 4], S_00005_00005, aux923)
watchelement_one([5, 1, 2, 3, 4], S_00005_00001, aux924)
watchelement_one([5, 1, 2, 3], S_00001_00004, aux925)
watchelement_one([5, 1, 2, 3, 4], S_00001_00005, aux926)
watchelement_one([4, 1, 2, 5], S_00002_00003, aux927)
watchelement_one([4, 1, 2, 5, 3], S_00002_00005, aux928)
watchelement_one([4, 1, 2, 5], S_00002_00004, aux929)
watchelement_one([4, 1, 2, 5], S_00003_00002, aux930)
watchelement_one([4, 1, 2, 5, 3], S_00003_00003, aux931)
watchelement_one([4, 1, 2, 5, 3], S_00003_00005, aux932)
watchelement_one([4, 1, 2, 5, 3], S_00003_00004, aux933)
watchelement_one([4, 1, 2, 5, 3], S_00005_00002, aux934)
watchelement_one([4, 1, 2, 5, 3], S_00005_00003, aux935)
watchelement_one([4, 1, 2, 5, 3], S_00005_00005, aux936)
watchelement_one([4, 1, 2, 5, 3], S_00005_00001, aux937)
watchelement_one([4, 1, 2, 5, 3], S_00005_00004, aux938)
watchelement_one([4, 1, 2, 5, 3], S_00001_00005, aux939)
watchelement_one([4, 1, 2, 5], S_00001_00004, aux940)
watchelement_one([4, 1, 2, 5, 3], S_00004_00002, aux941)
watchelement_one([4, 1, 2, 5, 3], S_00004_00003, aux942)
watchelement_one([4, 1, 2, 5, 3], S_00004_00005, aux943)
watchelement_one([4, 1, 2, 5], S_00004_00001, aux944)
watchelement_one([4, 1, 2, 5, 3], S_00004_00004, aux945)
watchelement_one([5, 1, 2, 4], S_00002_00003, aux946)
watchelement_one([5, 1, 2, 4, 3], S_00002_00005, aux947)
watchelement_one([5, 1, 2, 4], S_00002_00004, aux948)
watchelement_one([5, 1, 2, 4], S_00003_00002, aux949)
watchelement_one([5, 1, 2, 4, 3], S_00003_00003, aux950)
watchelement_one([5, 1, 2, 4, 3], S_00003_00005, aux951)
watchelement_one([5, 1, 2, 4, 3], S_00003_00004, aux952)
watchelement_one([5, 1, 2, 4, 3], S_00005_00002, aux953)
watchelement_one([5, 1, 2, 4, 3], S_00005_00003, aux954)
watchelement_one([5, 1, 2, 4, 3], S_00005_00005, aux955)
watchelement_one([5, 1, 2, 4, 3], S_00005_00004, aux956)
watchelement_one([5, 1, 2, 4, 3], S_00005_00001, aux957)
watchelement_one([5, 1, 2, 4, 3], S_00004_00002, aux958)
watchelement_one([5, 1, 2, 4, 3], S_00004_00003, aux959)
watchelement_one([5, 1, 2, 4, 3], S_00004_00005, aux960)
watchelement_one([5, 1, 2, 4, 3], S_00004_00004, aux961)
watchelement_one([5, 1, 2, 4], S_00004_00001, aux962)
watchelement_one([5, 1, 2, 4, 3], S_00001_00005, aux963)
watchelement_one([5, 1, 2, 4], S_00001_00004, aux964)
watchelement_one([3, 1, 4, 2], S_00002_00004, aux965)
watchelement_one([3, 1, 4, 2], S_00002_00003, aux966)
watchelement_one([3, 1, 4, 2, 5], S_00002_00005, aux967)
watchelement_one([3, 1, 4, 2, 5], S_00004_00002, aux968)
watchelement_one([3, 1, 4, 2, 5], S_00004_00004, aux969)
watchelement_one([3, 1, 4, 2], S_00004_00001, aux970)
watchelement_one([3, 1, 4, 2, 5], S_00004_00003, aux971)
watchelement_one([3, 1, 4, 2, 5], S_00004_00005, aux972)
watchelement_one([3, 1, 4, 2], S_00001_00004, aux973)
watchelement_one([3, 1, 4, 2, 5], S_00001_00005, aux974)
watchelement_one([3, 1, 4, 2], S_00003_00002, aux975)
watchelement_one([3, 1, 4, 2, 5], S_00003_00004, aux976)
watchelement_one([3, 1, 4, 2, 5], S_00003_00003, aux977)
watchelement_one([3, 1, 4, 2, 5], S_00003_00005, aux978)
watchelement_one([3, 1, 4, 2, 5], S_00005_00002, aux979)
watchelement_one([3, 1, 4, 2, 5], S_00005_00004, aux980)
watchelement_one([3, 1, 4, 2, 5], S_00005_00001, aux981)
watchelement_one([3, 1, 4, 2, 5], S_00005_00003, aux982)
watchelement_one([3, 1, 4, 2, 5], S_00005_00005, aux983)
watchelement_one([3, 1, 5, 2], S_00002_00004, aux984)
watchelement_one([3, 1, 5, 2, 4], S_00002_00005, aux985)
watchelement_one([3, 1, 5, 2], S_00002_00003, aux986)
watchelement_one([3, 1, 5, 2, 4], S_00004_00002, aux987)
watchelement_one([3, 1, 5, 2, 4], S_00004_00004, aux988)
watchelement_one([3, 1, 5, 2], S_00004_00001, aux989)
watchelement_one([3, 1, 5, 2, 4], S_00004_00005, aux990)
watchelement_one([3, 1, 5, 2, 4], S_00004_00003, aux991)
watchelement_one([3, 1, 5, 2], S_00001_00004, aux992)
watchelement_one([3, 1, 5, 2, 4], S_00001_00005, aux993)
watchelement_one([3, 1, 5, 2, 4], S_00005_00002, aux994)
watchelement_one([3, 1, 5, 2, 4], S_00005_00004, aux995)
watchelement_one([3, 1, 5, 2, 4], S_00005_00001, aux996)
watchelement_one([3, 1, 5, 2, 4], S_00005_00005, aux997)
watchelement_one([3, 1, 5, 2, 4], S_00005_00003, aux998)
watchelement_one([3, 1, 5, 2], S_00003_00002, aux999)
watchelement_one([3, 1, 5, 2, 4], S_00003_00004, aux1000)
watchelement_one([3, 1, 5, 2, 4], S_00003_00005, aux1001)
watchelement_one([3, 1, 5, 2, 4], S_00003_00003, aux1002)
watchelement_one([4, 1, 3, 2], S_00002_00004, aux1003)
watchelement_one([4, 1, 3, 2], S_00002_00003, aux1004)
watchelement_one([4, 1, 3, 2, 5], S_00002_00005, aux1005)
watchelement_one([4, 1, 3, 2, 5], S_00004_00002, aux1006)
watchelement_one([4, 1, 3, 2, 5], S_00004_00004, aux1007)
watchelement_one([4, 1, 3, 2, 5], S_00004_00003, aux1008)
watchelement_one([4, 1, 3, 2], S_00004_00001, aux1009)
watchelement_one([4, 1, 3, 2, 5], S_00004_00005, aux1010)
watchelement_one([4, 1, 3, 2], S_00003_00002, aux1011)
watchelement_one([4, 1, 3, 2, 5], S_00003_00004, aux1012)
watchelement_one([4, 1, 3, 2, 5], S_00003_00003, aux1013)
watchelement_one([4, 1, 3, 2, 5], S_00003_00005, aux1014)
watchelement_one([4, 1, 3, 2], S_00001_00004, aux1015)
watchelement_one([4, 1, 3, 2, 5], S_00001_00005, aux1016)
watchelement_one([4, 1, 3, 2, 5], S_00005_00002, aux1017)
watchelement_one([4, 1, 3, 2, 5], S_00005_00004, aux1018)
watchelement_one([4, 1, 3, 2, 5], S_00005_00003, aux1019)
watchelement_one([4, 1, 3, 2, 5], S_00005_00001, aux1020)
watchelement_one([4, 1, 3, 2, 5], S_00005_00005, aux1021)
watchelement_one([5, 1, 3, 2], S_00002_00004, aux1022)
watchelement_one([5, 1, 3, 2], S_00002_00003, aux1023)
watchelement_one([5, 1, 3, 2, 4], S_00002_00005, aux1024)
watchelement_one([5, 1, 3, 2, 4], S_00004_00002, aux1025)
watchelement_one([5, 1, 3, 2, 4], S_00004_00004, aux1026)
watchelement_one([5, 1, 3, 2, 4], S_00004_00003, aux1027)
watchelement_one([5, 1, 3, 2, 4], S_00004_00005, aux1028)
watchelement_one([5, 1, 3, 2], S_00004_00001, aux1029)
watchelement_one([5, 1, 3, 2], S_00003_00002, aux1030)
watchelement_one([5, 1, 3, 2, 4], S_00003_00004, aux1031)
watchelement_one([5, 1, 3, 2, 4], S_00003_00003, aux1032)
watchelement_one([5, 1, 3, 2, 4], S_00003_00005, aux1033)
watchelement_one([5, 1, 3, 2, 4], S_00005_00002, aux1034)
watchelement_one([5, 1, 3, 2, 4], S_00005_00004, aux1035)
watchelement_one([5, 1, 3, 2, 4], S_00005_00003, aux1036)
watchelement_one([5, 1, 3, 2, 4], S_00005_00005, aux1037)
watchelement_one([5, 1, 3, 2, 4], S_00005_00001, aux1038)
watchelement_one([5, 1, 3, 2], S_00001_00004, aux1039)
watchelement_one([5, 1, 3, 2, 4], S_00001_00005, aux1040)
watchelement_one([4, 1, 5, 2], S_00002_00004, aux1041)
watchelement_one([4, 1, 5, 2, 3], S_00002_00005, aux1042)
watchelement_one([4, 1, 5, 2], S_00002_00003, aux1043)
watchelement_one([4, 1, 5, 2, 3], S_00004_00002, aux1044)
watchelement_one([4, 1, 5, 2, 3], S_00004_00004, aux1045)
watchelement_one([4, 1, 5, 2, 3], S_00004_00005, aux1046)
watchelement_one([4, 1, 5, 2], S_00004_00001, aux1047)
watchelement_one([4, 1, 5, 2, 3], S_00004_00003, aux1048)
watchelement_one([4, 1, 5, 2, 3], S_00005_00002, aux1049)
watchelement_one([4, 1, 5, 2, 3], S_00005_00004, aux1050)
watchelement_one([4, 1, 5, 2, 3], S_00005_00005, aux1051)
watchelement_one([4, 1, 5, 2, 3], S_00005_00001, aux1052)
watchelement_one([4, 1, 5, 2, 3], S_00005_00003, aux1053)
watchelement_one([4, 1, 5, 2], S_00001_00004, aux1054)
watchelement_one([4, 1, 5, 2, 3], S_00001_00005, aux1055)
watchelement_one([4, 1, 5, 2], S_00003_00002, aux1056)
watchelement_one([4, 1, 5, 2, 3], S_00003_00004, aux1057)
watchelement_one([4, 1, 5, 2, 3], S_00003_00005, aux1058)
watchelement_one([4, 1, 5, 2, 3], S_00003_00003, aux1059)
watchelement_one([5, 1, 4, 2], S_00002_00004, aux1060)
watchelement_one([5, 1, 4, 2, 3], S_00002_00005, aux1061)
watchelement_one([5, 1, 4, 2], S_00002_00003, aux1062)
watchelement_one([5, 1, 4, 2, 3], S_00004_00002, aux1063)
watchelement_one([5, 1, 4, 2, 3], S_00004_00004, aux1064)
watchelement_one([5, 1, 4, 2, 3], S_00004_00005, aux1065)
watchelement_one([5, 1, 4, 2, 3], S_00004_00003, aux1066)
watchelement_one([5, 1, 4, 2], S_00004_00001, aux1067)
watchelement_one([5, 1, 4, 2, 3], S_00005_00002, aux1068)
watchelement_one([5, 1, 4, 2, 3], S_00005_00004, aux1069)
watchelement_one([5, 1, 4, 2, 3], S_00005_00005, aux1070)
watchelement_one([5, 1, 4, 2, 3], S_00005_00003, aux1071)
watchelement_one([5, 1, 4, 2, 3], S_00005_00001, aux1072)
watchelement_one([5, 1, 4, 2], S_00003_00002, aux1073)
watchelement_one([5, 1, 4, 2, 3], S_00003_00004, aux1074)
watchelement_one([5, 1, 4, 2, 3], S_00003_00005, aux1075)
watchelement_one([5, 1, 4, 2, 3], S_00003_00003, aux1076)
watchelement_one([5, 1, 4, 2], S_00001_00004, aux1077)
watchelement_one([5, 1, 4, 2, 3], S_00001_00005, aux1078)
watchelement_one([3, 1, 4, 5, 2], S_00002_00005, aux1079)
watchelement_one([3, 1, 4, 5], S_00002_00003, aux1080)
watchelement_one([3, 1, 4, 5], S_00002_00004, aux1081)
watchelement_one([3, 1, 4, 5, 2], S_00005_00002, aux1082)
watchelement_one([3, 1, 4, 5, 2], S_00005_00005, aux1083)
watchelement_one([3, 1, 4, 5, 2], S_00005_00001, aux1084)
watchelement_one([3, 1, 4, 5, 2], S_00005_00003, aux1085)
watchelement_one([3, 1, 4, 5, 2], S_00005_00004, aux1086)
watchelement_one([3, 1, 4, 5, 2], S_00001_00005, aux1087)
watchelement_one([3, 1, 4, 5], S_00001_00004, aux1088)
watchelement_one([3, 1, 4, 5], S_00003_00002, aux1089)
watchelement_one([3, 1, 4, 5, 2], S_00003_00005, aux1090)
watchelement_one([3, 1, 4, 5, 2], S_00003_00003, aux1091)
watchelement_one([3, 1, 4, 5, 2], S_00003_00004, aux1092)
watchelement_one([3, 1, 4, 5, 2], S_00004_00002, aux1093)
watchelement_one([3, 1, 4, 5, 2], S_00004_00005, aux1094)
watchelement_one([3, 1, 4, 5], S_00004_00001, aux1095)
watchelement_one([3, 1, 4, 5, 2], S_00004_00003, aux1096)
watchelement_one([3, 1, 4, 5, 2], S_00004_00004, aux1097)
watchelement_one([3, 1, 5, 4, 2], S_00002_00005, aux1098)
watchelement_one([3, 1, 5, 4], S_00002_00004, aux1099)
watchelement_one([3, 1, 5, 4], S_00002_00003, aux1100)
watchelement_one([3, 1, 5, 4, 2], S_00005_00002, aux1101)
watchelement_one([3, 1, 5, 4, 2], S_00005_00005, aux1102)
watchelement_one([3, 1, 5, 4, 2], S_00005_00001, aux1103)
watchelement_one([3, 1, 5, 4, 2], S_00005_00004, aux1104)
watchelement_one([3, 1, 5, 4, 2], S_00005_00003, aux1105)
watchelement_one([3, 1, 5, 4, 2], S_00001_00005, aux1106)
watchelement_one([3, 1, 5, 4], S_00001_00004, aux1107)
watchelement_one([3, 1, 5, 4, 2], S_00004_00002, aux1108)
watchelement_one([3, 1, 5, 4, 2], S_00004_00005, aux1109)
watchelement_one([3, 1, 5, 4], S_00004_00001, aux1110)
watchelement_one([3, 1, 5, 4, 2], S_00004_00004, aux1111)
watchelement_one([3, 1, 5, 4, 2], S_00004_00003, aux1112)
watchelement_one([3, 1, 5, 4], S_00003_00002, aux1113)
watchelement_one([3, 1, 5, 4, 2], S_00003_00005, aux1114)
watchelement_one([3, 1, 5, 4, 2], S_00003_00004, aux1115)
watchelement_one([3, 1, 5, 4, 2], S_00003_00003, aux1116)
watchelement_one([4, 1, 3, 5, 2], S_00002_00005, aux1117)
watchelement_one([4, 1, 3, 5], S_00002_00003, aux1118)
watchelement_one([4, 1, 3, 5], S_00002_00004, aux1119)
watchelement_one([4, 1, 3, 5, 2], S_00005_00002, aux1120)
watchelement_one([4, 1, 3, 5, 2], S_00005_00005, aux1121)
watchelement_one([4, 1, 3, 5, 2], S_00005_00003, aux1122)
watchelement_one([4, 1, 3, 5, 2], S_00005_00001, aux1123)
watchelement_one([4, 1, 3, 5, 2], S_00005_00004, aux1124)
watchelement_one([4, 1, 3, 5], S_00003_00002, aux1125)
watchelement_one([4, 1, 3, 5, 2], S_00003_00005, aux1126)
watchelement_one([4, 1, 3, 5, 2], S_00003_00003, aux1127)
watchelement_one([4, 1, 3, 5, 2], S_00003_00004, aux1128)
watchelement_one([4, 1, 3, 5, 2], S_00001_00005, aux1129)
watchelement_one([4, 1, 3, 5], S_00001_00004, aux1130)
watchelement_one([4, 1, 3, 5, 2], S_00004_00002, aux1131)
watchelement_one([4, 1, 3, 5, 2], S_00004_00005, aux1132)
watchelement_one([4, 1, 3, 5, 2], S_00004_00003, aux1133)
watchelement_one([4, 1, 3, 5], S_00004_00001, aux1134)
watchelement_one([4, 1, 3, 5, 2], S_00004_00004, aux1135)
watchelement_one([5, 1, 3, 4, 2], S_00002_00005, aux1136)
watchelement_one([5, 1, 3, 4], S_00002_00003, aux1137)
watchelement_one([5, 1, 3, 4], S_00002_00004, aux1138)
watchelement_one([5, 1, 3, 4, 2], S_00005_00002, aux1139)
watchelement_one([5, 1, 3, 4, 2], S_00005_00005, aux1140)
watchelement_one([5, 1, 3, 4, 2], S_00005_00003, aux1141)
watchelement_one([5, 1, 3, 4, 2], S_00005_00004, aux1142)
watchelement_one([5, 1, 3, 4, 2], S_00005_00001, aux1143)
watchelement_one([5, 1, 3, 4], S_00003_00002, aux1144)
watchelement_one([5, 1, 3, 4, 2], S_00003_00005, aux1145)
watchelement_one([5, 1, 3, 4, 2], S_00003_00003, aux1146)
watchelement_one([5, 1, 3, 4, 2], S_00003_00004, aux1147)
watchelement_one([5, 1, 3, 4, 2], S_00004_00002, aux1148)
watchelement_one([5, 1, 3, 4, 2], S_00004_00005, aux1149)
watchelement_one([5, 1, 3, 4, 2], S_00004_00003, aux1150)
watchelement_one([5, 1, 3, 4, 2], S_00004_00004, aux1151)
watchelement_one([5, 1, 3, 4], S_00004_00001, aux1152)
watchelement_one([5, 1, 3, 4, 2], S_00001_00005, aux1153)
watchelement_one([5, 1, 3, 4], S_00001_00004, aux1154)
watchelement_one([4, 1, 5, 3, 2], S_00002_00005, aux1155)
watchelement_one([4, 1, 5, 3], S_00002_00004, aux1156)
watchelement_one([4, 1, 5, 3], S_00002_00003, aux1157)
watchelement_one([4, 1, 5, 3, 2], S_00005_00002, aux1158)
watchelement_one([4, 1, 5, 3, 2], S_00005_00005, aux1159)
watchelement_one([4, 1, 5, 3, 2], S_00005_00004, aux1160)
watchelement_one([4, 1, 5, 3, 2], S_00005_00001, aux1161)
watchelement_one([4, 1, 5, 3, 2], S_00005_00003, aux1162)
watchelement_one([4, 1, 5, 3, 2], S_00004_00002, aux1163)
watchelement_one([4, 1, 5, 3, 2], S_00004_00005, aux1164)
watchelement_one([4, 1, 5, 3, 2], S_00004_00004, aux1165)
watchelement_one([4, 1, 5, 3], S_00004_00001, aux1166)
watchelement_one([4, 1, 5, 3, 2], S_00004_00003, aux1167)
watchelement_one([4, 1, 5, 3, 2], S_00001_00005, aux1168)
watchelement_one([4, 1, 5, 3], S_00001_00004, aux1169)
watchelement_one([4, 1, 5, 3], S_00003_00002, aux1170)
watchelement_one([4, 1, 5, 3, 2], S_00003_00005, aux1171)
watchelement_one([4, 1, 5, 3, 2], S_00003_00004, aux1172)
watchelement_one([4, 1, 5, 3, 2], S_00003_00003, aux1173)
watchelement_one([5, 1, 4, 3, 2], S_00002_00005, aux1174)
watchelement_one([5, 1, 4, 3], S_00002_00004, aux1175)
watchelement_one([5, 1, 4, 3], S_00002_00003, aux1176)
watchelement_one([5, 1, 4, 3, 2], S_00005_00002, aux1177)
watchelement_one([5, 1, 4, 3, 2], S_00005_00005, aux1178)
watchelement_one([5, 1, 4, 3, 2], S_00005_00004, aux1179)
watchelement_one([5, 1, 4, 3, 2], S_00005_00003, aux1180)
watchelement_one([5, 1, 4, 3, 2], S_00005_00001, aux1181)
watchelement_one([5, 1, 4, 3, 2], S_00004_00002, aux1182)
watchelement_one([5, 1, 4, 3, 2], S_00004_00005, aux1183)
watchelement_one([5, 1, 4, 3, 2], S_00004_00004, aux1184)
watchelement_one([5, 1, 4, 3, 2], S_00004_00003, aux1185)
watchelement_one([5, 1, 4, 3], S_00004_00001, aux1186)
watchelement_one([5, 1, 4, 3], S_00003_00002, aux1187)
watchelement_one([5, 1, 4, 3, 2], S_00003_00005, aux1188)
watchelement_one([5, 1, 4, 3, 2], S_00003_00004, aux1189)
watchelement_one([5, 1, 4, 3, 2], S_00003_00003, aux1190)
watchelement_one([5, 1, 4, 3, 2], S_00001_00005, aux1191)
watchelement_one([5, 1, 4, 3], S_00001_00004, aux1192)
watchelement_one([2, 3, 1, 4, 5], S_00003_00003, aux1193)
watchelement_one([2, 3, 1, 4], S_00003_00002, aux1194)
watchelement_one([2, 3, 1, 4, 5], S_00003_00004, aux1195)
watchelement_one([2, 3, 1, 4, 5], S_00003_00005, aux1196)
watchelement_one([2, 3, 1, 4], S_00001_00004, aux1197)
watchelement_one([2, 3, 1, 4, 5], S_00001_00005, aux1198)
watchelement_one([2, 3, 1, 4], S_00002_00003, aux1199)
watchelement_one([2, 3, 1, 4], S_00002_00004, aux1200)
watchelement_one([2, 3, 1, 4, 5], S_00002_00005, aux1201)
watchelement_one([2, 3, 1, 4, 5], S_00004_00003, aux1202)
watchelement_one([2, 3, 1, 4], S_00004_00001, aux1203)
watchelement_one([2, 3, 1, 4, 5], S_00004_00002, aux1204)
watchelement_one([2, 3, 1, 4, 5], S_00004_00004, aux1205)
watchelement_one([2, 3, 1, 4, 5], S_00004_00005, aux1206)
watchelement_one([2, 3, 1, 4, 5], S_00005_00003, aux1207)
watchelement_one([2, 3, 1, 4, 5], S_00005_00001, aux1208)
watchelement_one([2, 3, 1, 4, 5], S_00005_00002, aux1209)
watchelement_one([2, 3, 1, 4, 5], S_00005_00004, aux1210)
watchelement_one([2, 3, 1, 4, 5], S_00005_00005, aux1211)
watchelement_one([2, 3, 1, 5, 4], S_00003_00003, aux1212)
watchelement_one([2, 3, 1, 5], S_00003_00002, aux1213)
watchelement_one([2, 3, 1, 5, 4], S_00003_00005, aux1214)
watchelement_one([2, 3, 1, 5, 4], S_00003_00004, aux1215)
watchelement_one([2, 3, 1, 5, 4], S_00001_00005, aux1216)
watchelement_one([2, 3, 1, 5], S_00001_00004, aux1217)
watchelement_one([2, 3, 1, 5], S_00002_00003, aux1218)
watchelement_one([2, 3, 1, 5, 4], S_00002_00005, aux1219)
watchelement_one([2, 3, 1, 5], S_00002_00004, aux1220)
watchelement_one([2, 3, 1, 5, 4], S_00005_00003, aux1221)
watchelement_one([2, 3, 1, 5, 4], S_00005_00001, aux1222)
watchelement_one([2, 3, 1, 5, 4], S_00005_00002, aux1223)
watchelement_one([2, 3, 1, 5, 4], S_00005_00005, aux1224)
watchelement_one([2, 3, 1, 5, 4], S_00005_00004, aux1225)
watchelement_one([2, 3, 1, 5, 4], S_00004_00003, aux1226)
watchelement_one([2, 3, 1, 5], S_00004_00001, aux1227)
watchelement_one([2, 3, 1, 5, 4], S_00004_00002, aux1228)
watchelement_one([2, 3, 1, 5, 4], S_00004_00005, aux1229)
watchelement_one([2, 3, 1, 5, 4], S_00004_00004, aux1230)
watchelement_one([2, 4, 1, 3, 5], S_00003_00003, aux1231)
watchelement_one([2, 4, 1, 3, 5], S_00003_00004, aux1232)
watchelement_one([2, 4, 1, 3], S_00003_00002, aux1233)
watchelement_one([2, 4, 1, 3, 5], S_00003_00005, aux1234)
watchelement_one([2, 4, 1, 3], S_00001_00004, aux1235)
watchelement_one([2, 4, 1, 3, 5], S_00001_00005, aux1236)
watchelement_one([2, 4, 1, 3, 5], S_00004_00003, aux1237)
watchelement_one([2, 4, 1, 3], S_00004_00001, aux1238)
watchelement_one([2, 4, 1, 3, 5], S_00004_00004, aux1239)
watchelement_one([2, 4, 1, 3, 5], S_00004_00002, aux1240)
watchelement_one([2, 4, 1, 3, 5], S_00004_00005, aux1241)
watchelement_one([2, 4, 1, 3], S_00002_00003, aux1242)
watchelement_one([2, 4, 1, 3], S_00002_00004, aux1243)
watchelement_one([2, 4, 1, 3, 5], S_00002_00005, aux1244)
watchelement_one([2, 4, 1, 3, 5], S_00005_00003, aux1245)
watchelement_one([2, 4, 1, 3, 5], S_00005_00001, aux1246)
watchelement_one([2, 4, 1, 3, 5], S_00005_00004, aux1247)
watchelement_one([2, 4, 1, 3, 5], S_00005_00002, aux1248)
watchelement_one([2, 4, 1, 3, 5], S_00005_00005, aux1249)
watchelement_one([2, 5, 1, 3, 4], S_00003_00003, aux1250)
watchelement_one([2, 5, 1, 3, 4], S_00003_00004, aux1251)
watchelement_one([2, 5, 1, 3, 4], S_00003_00005, aux1252)
watchelement_one([2, 5, 1, 3], S_00003_00002, aux1253)
watchelement_one([2, 5, 1, 3], S_00001_00004, aux1254)
watchelement_one([2, 5, 1, 3, 4], S_00001_00005, aux1255)
watchelement_one([2, 5, 1, 3, 4], S_00004_00003, aux1256)
watchelement_one([2, 5, 1, 3], S_00004_00001, aux1257)
watchelement_one([2, 5, 1, 3, 4], S_00004_00004, aux1258)
watchelement_one([2, 5, 1, 3, 4], S_00004_00005, aux1259)
watchelement_one([2, 5, 1, 3, 4], S_00004_00002, aux1260)
watchelement_one([2, 5, 1, 3, 4], S_00005_00003, aux1261)
watchelement_one([2, 5, 1, 3, 4], S_00005_00001, aux1262)
watchelement_one([2, 5, 1, 3, 4], S_00005_00004, aux1263)
watchelement_one([2, 5, 1, 3, 4], S_00005_00005, aux1264)
watchelement_one([2, 5, 1, 3, 4], S_00005_00002, aux1265)
watchelement_one([2, 5, 1, 3], S_00002_00003, aux1266)
watchelement_one([2, 5, 1, 3], S_00002_00004, aux1267)
watchelement_one([2, 5, 1, 3, 4], S_00002_00005, aux1268)
watchelement_one([2, 4, 1, 5, 3], S_00003_00003, aux1269)
watchelement_one([2, 4, 1, 5, 3], S_00003_00005, aux1270)
watchelement_one([2, 4, 1, 5], S_00003_00002, aux1271)
watchelement_one([2, 4, 1, 5, 3], S_00003_00004, aux1272)
watchelement_one([2, 4, 1, 5, 3], S_00001_00005, aux1273)
watchelement_one([2, 4, 1, 5], S_00001_00004, aux1274)
watchelement_one([2, 4, 1, 5, 3], S_00005_00003, aux1275)
watchelement_one([2, 4, 1, 5, 3], S_00005_00001, aux1276)
watchelement_one([2, 4, 1, 5, 3], S_00005_00005, aux1277)
watchelement_one([2, 4, 1, 5, 3], S_00005_00002, aux1278)
watchelement_one([2, 4, 1, 5, 3], S_00005_00004, aux1279)
watchelement_one([2, 4, 1, 5], S_00002_00003, aux1280)
watchelement_one([2, 4, 1, 5, 3], S_00002_00005, aux1281)
watchelement_one([2, 4, 1, 5], S_00002_00004, aux1282)
watchelement_one([2, 4, 1, 5, 3], S_00004_00003, aux1283)
watchelement_one([2, 4, 1, 5], S_00004_00001, aux1284)
watchelement_one([2, 4, 1, 5, 3], S_00004_00005, aux1285)
watchelement_one([2, 4, 1, 5, 3], S_00004_00002, aux1286)
watchelement_one([2, 4, 1, 5, 3], S_00004_00004, aux1287)
watchelement_one([2, 5, 1, 4, 3], S_00003_00003, aux1288)
watchelement_one([2, 5, 1, 4, 3], S_00003_00005, aux1289)
watchelement_one([2, 5, 1, 4, 3], S_00003_00004, aux1290)
watchelement_one([2, 5, 1, 4], S_00003_00002, aux1291)
watchelement_one([2, 5, 1, 4, 3], S_00001_00005, aux1292)
watchelement_one([2, 5, 1, 4], S_00001_00004, aux1293)
watchelement_one([2, 5, 1, 4, 3], S_00005_00003, aux1294)
watchelement_one([2, 5, 1, 4, 3], S_00005_00001, aux1295)
watchelement_one([2, 5, 1, 4, 3], S_00005_00005, aux1296)
watchelement_one([2, 5, 1, 4, 3], S_00005_00004, aux1297)
watchelement_one([2, 5, 1, 4, 3], S_00005_00002, aux1298)
watchelement_one([2, 5, 1, 4, 3], S_00004_00003, aux1299)
watchelement_one([2, 5, 1, 4], S_00004_00001, aux1300)
watchelement_one([2, 5, 1, 4, 3], S_00004_00005, aux1301)
watchelement_one([2, 5, 1, 4, 3], S_00004_00004, aux1302)
watchelement_one([2, 5, 1, 4, 3], S_00004_00002, aux1303)
watchelement_one([2, 5, 1, 4], S_00002_00003, aux1304)
watchelement_one([2, 5, 1, 4, 3], S_00002_00005, aux1305)
watchelement_one([2, 5, 1, 4], S_00002_00004, aux1306)
watchelement_one([3, 2, 1, 4, 5], S_00003_00003, aux1307)
watchelement_one([3, 2, 1, 4], S_00003_00002, aux1308)
watchelement_one([3, 2, 1, 4, 5], S_00003_00004, aux1309)
watchelement_one([3, 2, 1, 4, 5], S_00003_00005, aux1310)
watchelement_one([3, 2, 1, 4], S_00002_00003, aux1311)
watchelement_one([3, 2, 1, 4], S_00002_00004, aux1312)
watchelement_one([3, 2, 1, 4, 5], S_00002_00005, aux1313)
watchelement_one([3, 2, 1, 4], S_00001_00004, aux1314)
watchelement_one([3, 2, 1, 4, 5], S_00001_00005, aux1315)
watchelement_one([3, 2, 1, 4, 5], S_00004_00003, aux1316)
watchelement_one([3, 2, 1, 4, 5], S_00004_00002, aux1317)
watchelement_one([3, 2, 1, 4], S_00004_00001, aux1318)
watchelement_one([3, 2, 1, 4, 5], S_00004_00004, aux1319)
watchelement_one([3, 2, 1, 4, 5], S_00004_00005, aux1320)
watchelement_one([3, 2, 1, 4, 5], S_00005_00003, aux1321)
watchelement_one([3, 2, 1, 4, 5], S_00005_00002, aux1322)
watchelement_one([3, 2, 1, 4, 5], S_00005_00001, aux1323)
watchelement_one([3, 2, 1, 4, 5], S_00005_00004, aux1324)
watchelement_one([3, 2, 1, 4, 5], S_00005_00005, aux1325)
watchelement_one([3, 2, 1, 5, 4], S_00003_00003, aux1326)
watchelement_one([3, 2, 1, 5], S_00003_00002, aux1327)
watchelement_one([3, 2, 1, 5, 4], S_00003_00005, aux1328)
watchelement_one([3, 2, 1, 5, 4], S_00003_00004, aux1329)
watchelement_one([3, 2, 1, 5], S_00002_00003, aux1330)
watchelement_one([3, 2, 1, 5, 4], S_00002_00005, aux1331)
watchelement_one([3, 2, 1, 5], S_00002_00004, aux1332)
watchelement_one([3, 2, 1, 5, 4], S_00001_00005, aux1333)
watchelement_one([3, 2, 1, 5], S_00001_00004, aux1334)
watchelement_one([3, 2, 1, 5, 4], S_00005_00003, aux1335)
watchelement_one([3, 2, 1, 5, 4], S_00005_00002, aux1336)
watchelement_one([3, 2, 1, 5, 4], S_00005_00001, aux1337)
watchelement_one([3, 2, 1, 5, 4], S_00005_00005, aux1338)
watchelement_one([3, 2, 1, 5, 4], S_00005_00004, aux1339)
watchelement_one([3, 2, 1, 5, 4], S_00004_00003, aux1340)
watchelement_one([3, 2, 1, 5, 4], S_00004_00002, aux1341)
watchelement_one([3, 2, 1, 5], S_00004_00001, aux1342)
watchelement_one([3, 2, 1, 5, 4], S_00004_00005, aux1343)
watchelement_one([3, 2, 1, 5, 4], S_00004_00004, aux1344)
watchelement_one([4, 2, 1, 3, 5], S_00003_00003, aux1345)
watchelement_one([4, 2, 1, 3], S_00003_00002, aux1346)
watchelement_one([4, 2, 1, 3, 5], S_00003_00004, aux1347)
watchelement_one([4, 2, 1, 3, 5], S_00003_00005, aux1348)
watchelement_one([4, 2, 1, 3], S_00002_00003, aux1349)
watchelement_one([4, 2, 1, 3], S_00002_00004, aux1350)
watchelement_one([4, 2, 1, 3, 5], S_00002_00005, aux1351)
watchelement_one([4, 2, 1, 3, 5], S_00004_00003, aux1352)
watchelement_one([4, 2, 1, 3, 5], S_00004_00002, aux1353)
watchelement_one([4, 2, 1, 3, 5], S_00004_00004, aux1354)
watchelement_one([4, 2, 1, 3], S_00004_00001, aux1355)
watchelement_one([4, 2, 1, 3, 5], S_00004_00005, aux1356)
watchelement_one([4, 2, 1, 3], S_00001_00004, aux1357)
watchelement_one([4, 2, 1, 3, 5], S_00001_00005, aux1358)
watchelement_one([4, 2, 1, 3, 5], S_00005_00003, aux1359)
watchelement_one([4, 2, 1, 3, 5], S_00005_00002, aux1360)
watchelement_one([4, 2, 1, 3, 5], S_00005_00004, aux1361)
watchelement_one([4, 2, 1, 3, 5], S_00005_00001, aux1362)
watchelement_one([4, 2, 1, 3, 5], S_00005_00005, aux1363)
watchelement_one([5, 2, 1, 3, 4], S_00003_00003, aux1364)
watchelement_one([5, 2, 1, 3], S_00003_00002, aux1365)
watchelement_one([5, 2, 1, 3, 4], S_00003_00004, aux1366)
watchelement_one([5, 2, 1, 3, 4], S_00003_00005, aux1367)
watchelement_one([5, 2, 1, 3], S_00002_00003, aux1368)
watchelement_one([5, 2, 1, 3], S_00002_00004, aux1369)
watchelement_one([5, 2, 1, 3, 4], S_00002_00005, aux1370)
watchelement_one([5, 2, 1, 3, 4], S_00004_00003, aux1371)
watchelement_one([5, 2, 1, 3, 4], S_00004_00002, aux1372)
watchelement_one([5, 2, 1, 3, 4], S_00004_00004, aux1373)
watchelement_one([5, 2, 1, 3, 4], S_00004_00005, aux1374)
watchelement_one([5, 2, 1, 3], S_00004_00001, aux1375)
watchelement_one([5, 2, 1, 3, 4], S_00005_00003, aux1376)
watchelement_one([5, 2, 1, 3, 4], S_00005_00002, aux1377)
watchelement_one([5, 2, 1, 3, 4], S_00005_00004, aux1378)
watchelement_one([5, 2, 1, 3, 4], S_00005_00005, aux1379)
watchelement_one([5, 2, 1, 3, 4], S_00005_00001, aux1380)
watchelement_one([5, 2, 1, 3], S_00001_00004, aux1381)
watchelement_one([5, 2, 1, 3, 4], S_00001_00005, aux1382)
watchelement_one([4, 2, 1, 5, 3], S_00003_00003, aux1383)
watchelement_one([4, 2, 1, 5], S_00003_00002, aux1384)
watchelement_one([4, 2, 1, 5, 3], S_00003_00005, aux1385)
watchelement_one([4, 2, 1, 5, 3], S_00003_00004, aux1386)
watchelement_one([4, 2, 1, 5], S_00002_00003, aux1387)
watchelement_one([4, 2, 1, 5, 3], S_00002_00005, aux1388)
watchelement_one([4, 2, 1, 5], S_00002_00004, aux1389)
watchelement_one([4, 2, 1, 5, 3], S_00005_00003, aux1390)
watchelement_one([4, 2, 1, 5, 3], S_00005_00002, aux1391)
watchelement_one([4, 2, 1, 5, 3], S_00005_00005, aux1392)
watchelement_one([4, 2, 1, 5, 3], S_00005_00001, aux1393)
watchelement_one([4, 2, 1, 5, 3], S_00005_00004, aux1394)
watchelement_one([4, 2, 1, 5, 3], S_00001_00005, aux1395)
watchelement_one([4, 2, 1, 5], S_00001_00004, aux1396)
watchelement_one([4, 2, 1, 5, 3], S_00004_00003, aux1397)
watchelement_one([4, 2, 1, 5, 3], S_00004_00002, aux1398)
watchelement_one([4, 2, 1, 5, 3], S_00004_00005, aux1399)
watchelement_one([4, 2, 1, 5], S_00004_00001, aux1400)
watchelement_one([4, 2, 1, 5, 3], S_00004_00004, aux1401)
watchelement_one([5, 2, 1, 4, 3], S_00003_00003, aux1402)
watchelement_one([5, 2, 1, 4], S_00003_00002, aux1403)
watchelement_one([5, 2, 1, 4, 3], S_00003_00005, aux1404)
watchelement_one([5, 2, 1, 4, 3], S_00003_00004, aux1405)
watchelement_one([5, 2, 1, 4], S_00002_00003, aux1406)
watchelement_one([5, 2, 1, 4, 3], S_00002_00005, aux1407)
watchelement_one([5, 2, 1, 4], S_00002_00004, aux1408)
watchelement_one([5, 2, 1, 4, 3], S_00005_00003, aux1409)
watchelement_one([5, 2, 1, 4, 3], S_00005_00002, aux1410)
watchelement_one([5, 2, 1, 4, 3], S_00005_00005, aux1411)
watchelement_one([5, 2, 1, 4, 3], S_00005_00004, aux1412)
watchelement_one([5, 2, 1, 4, 3], S_00005_00001, aux1413)
watchelement_one([5, 2, 1, 4, 3], S_00004_00003, aux1414)
watchelement_one([5, 2, 1, 4, 3], S_00004_00002, aux1415)
watchelement_one([5, 2, 1, 4, 3], S_00004_00005, aux1416)
watchelement_one([5, 2, 1, 4, 3], S_00004_00004, aux1417)
watchelement_one([5, 2, 1, 4], S_00004_00001, aux1418)
watchelement_one([5, 2, 1, 4, 3], S_00001_00005, aux1419)
watchelement_one([5, 2, 1, 4], S_00001_00004, aux1420)
watchelement_one([3, 4, 1, 2, 5], S_00003_00003, aux1421)
watchelement_one([3, 4, 1, 2, 5], S_00003_00004, aux1422)
watchelement_one([3, 4, 1, 2], S_00003_00002, aux1423)
watchelement_one([3, 4, 1, 2, 5], S_00003_00005, aux1424)
watchelement_one([3, 4, 1, 2, 5], S_00004_00003, aux1425)
watchelement_one([3, 4, 1, 2, 5], S_00004_00004, aux1426)
watchelement_one([3, 4, 1, 2], S_00004_00001, aux1427)
watchelement_one([3, 4, 1, 2, 5], S_00004_00002, aux1428)
watchelement_one([3, 4, 1, 2, 5], S_00004_00005, aux1429)
watchelement_one([3, 4, 1, 2], S_00001_00004, aux1430)
watchelement_one([3, 4, 1, 2, 5], S_00001_00005, aux1431)
watchelement_one([3, 4, 1, 2], S_00002_00003, aux1432)
watchelement_one([3, 4, 1, 2], S_00002_00004, aux1433)
watchelement_one([3, 4, 1, 2, 5], S_00002_00005, aux1434)
watchelement_one([3, 4, 1, 2, 5], S_00005_00003, aux1435)
watchelement_one([3, 4, 1, 2, 5], S_00005_00004, aux1436)
watchelement_one([3, 4, 1, 2, 5], S_00005_00001, aux1437)
watchelement_one([3, 4, 1, 2, 5], S_00005_00002, aux1438)
watchelement_one([3, 4, 1, 2, 5], S_00005_00005, aux1439)
watchelement_one([3, 5, 1, 2, 4], S_00003_00003, aux1440)
watchelement_one([3, 5, 1, 2, 4], S_00003_00004, aux1441)
watchelement_one([3, 5, 1, 2, 4], S_00003_00005, aux1442)
watchelement_one([3, 5, 1, 2], S_00003_00002, aux1443)
watchelement_one([3, 5, 1, 2, 4], S_00004_00003, aux1444)
watchelement_one([3, 5, 1, 2, 4], S_00004_00004, aux1445)
watchelement_one([3, 5, 1, 2], S_00004_00001, aux1446)
watchelement_one([3, 5, 1, 2, 4], S_00004_00005, aux1447)
watchelement_one([3, 5, 1, 2, 4], S_00004_00002, aux1448)
watchelement_one([3, 5, 1, 2], S_00001_00004, aux1449)
watchelement_one([3, 5, 1, 2, 4], S_00001_00005, aux1450)
watchelement_one([3, 5, 1, 2, 4], S_00005_00003, aux1451)
watchelement_one([3, 5, 1, 2, 4], S_00005_00004, aux1452)
watchelement_one([3, 5, 1, 2, 4], S_00005_00001, aux1453)
watchelement_one([3, 5, 1, 2, 4], S_00005_00005, aux1454)
watchelement_one([3, 5, 1, 2, 4], S_00005_00002, aux1455)
watchelement_one([3, 5, 1, 2], S_00002_00003, aux1456)
watchelement_one([3, 5, 1, 2], S_00002_00004, aux1457)
watchelement_one([3, 5, 1, 2, 4], S_00002_00005, aux1458)
watchelement_one([4, 3, 1, 2, 5], S_00003_00003, aux1459)
watchelement_one([4, 3, 1, 2, 5], S_00003_00004, aux1460)
watchelement_one([4, 3, 1, 2], S_00003_00002, aux1461)
watchelement_one([4, 3, 1, 2, 5], S_00003_00005, aux1462)
watchelement_one([4, 3, 1, 2, 5], S_00004_00003, aux1463)
watchelement_one([4, 3, 1, 2, 5], S_00004_00004, aux1464)
watchelement_one([4, 3, 1, 2, 5], S_00004_00002, aux1465)
watchelement_one([4, 3, 1, 2], S_00004_00001, aux1466)
watchelement_one([4, 3, 1, 2, 5], S_00004_00005, aux1467)
watchelement_one([4, 3, 1, 2], S_00002_00003, aux1468)
watchelement_one([4, 3, 1, 2], S_00002_00004, aux1469)
watchelement_one([4, 3, 1, 2, 5], S_00002_00005, aux1470)
watchelement_one([4, 3, 1, 2], S_00001_00004, aux1471)
watchelement_one([4, 3, 1, 2, 5], S_00001_00005, aux1472)
watchelement_one([4, 3, 1, 2, 5], S_00005_00003, aux1473)
watchelement_one([4, 3, 1, 2, 5], S_00005_00004, aux1474)
watchelement_one([4, 3, 1, 2, 5], S_00005_00002, aux1475)
watchelement_one([4, 3, 1, 2, 5], S_00005_00001, aux1476)
watchelement_one([4, 3, 1, 2, 5], S_00005_00005, aux1477)
watchelement_one([5, 3, 1, 2, 4], S_00003_00003, aux1478)
watchelement_one([5, 3, 1, 2, 4], S_00003_00004, aux1479)
watchelement_one([5, 3, 1, 2], S_00003_00002, aux1480)
watchelement_one([5, 3, 1, 2, 4], S_00003_00005, aux1481)
watchelement_one([5, 3, 1, 2, 4], S_00004_00003, aux1482)
watchelement_one([5, 3, 1, 2, 4], S_00004_00004, aux1483)
watchelement_one([5, 3, 1, 2, 4], S_00004_00002, aux1484)
watchelement_one([5, 3, 1, 2, 4], S_00004_00005, aux1485)
watchelement_one([5, 3, 1, 2], S_00004_00001, aux1486)
watchelement_one([5, 3, 1, 2], S_00002_00003, aux1487)
watchelement_one([5, 3, 1, 2], S_00002_00004, aux1488)
watchelement_one([5, 3, 1, 2, 4], S_00002_00005, aux1489)
watchelement_one([5, 3, 1, 2, 4], S_00005_00003, aux1490)
watchelement_one([5, 3, 1, 2, 4], S_00005_00004, aux1491)
watchelement_one([5, 3, 1, 2, 4], S_00005_00002, aux1492)
watchelement_one([5, 3, 1, 2, 4], S_00005_00005, aux1493)
watchelement_one([5, 3, 1, 2, 4], S_00005_00001, aux1494)
watchelement_one([5, 3, 1, 2], S_00001_00004, aux1495)
watchelement_one([5, 3, 1, 2, 4], S_00001_00005, aux1496)
watchelement_one([4, 5, 1, 2, 3], S_00003_00003, aux1497)
watchelement_one([4, 5, 1, 2, 3], S_00003_00004, aux1498)
watchelement_one([4, 5, 1, 2, 3], S_00003_00005, aux1499)
watchelement_one([4, 5, 1, 2], S_00003_00002, aux1500)
watchelement_one([4, 5, 1, 2, 3], S_00004_00003, aux1501)
watchelement_one([4, 5, 1, 2, 3], S_00004_00004, aux1502)
watchelement_one([4, 5, 1, 2, 3], S_00004_00005, aux1503)
watchelement_one([4, 5, 1, 2], S_00004_00001, aux1504)
watchelement_one([4, 5, 1, 2, 3], S_00004_00002, aux1505)
watchelement_one([4, 5, 1, 2, 3], S_00005_00003, aux1506)
watchelement_one([4, 5, 1, 2, 3], S_00005_00004, aux1507)
watchelement_one([4, 5, 1, 2, 3], S_00005_00005, aux1508)
watchelement_one([4, 5, 1, 2, 3], S_00005_00001, aux1509)
watchelement_one([4, 5, 1, 2, 3], S_00005_00002, aux1510)
watchelement_one([4, 5, 1, 2], S_00001_00004, aux1511)
watchelement_one([4, 5, 1, 2, 3], S_00001_00005, aux1512)
watchelement_one([4, 5, 1, 2], S_00002_00003, aux1513)
watchelement_one([4, 5, 1, 2], S_00002_00004, aux1514)
watchelement_one([4, 5, 1, 2, 3], S_00002_00005, aux1515)
watchelement_one([5, 4, 1, 2, 3], S_00003_00003, aux1516)
watchelement_one([5, 4, 1, 2, 3], S_00003_00004, aux1517)
watchelement_one([5, 4, 1, 2, 3], S_00003_00005, aux1518)
watchelement_one([5, 4, 1, 2], S_00003_00002, aux1519)
watchelement_one([5, 4, 1, 2, 3], S_00004_00003, aux1520)
watchelement_one([5, 4, 1, 2, 3], S_00004_00004, aux1521)
watchelement_one([5, 4, 1, 2, 3], S_00004_00005, aux1522)
watchelement_one([5, 4, 1, 2, 3], S_00004_00002, aux1523)
watchelement_one([5, 4, 1, 2], S_00004_00001, aux1524)
watchelement_one([5, 4, 1, 2, 3], S_00005_00003, aux1525)
watchelement_one([5, 4, 1, 2, 3], S_00005_00004, aux1526)
watchelement_one([5, 4, 1, 2, 3], S_00005_00005, aux1527)
watchelement_one([5, 4, 1, 2, 3], S_00005_00002, aux1528)
watchelement_one([5, 4, 1, 2, 3], S_00005_00001, aux1529)
watchelement_one([5, 4, 1, 2], S_00002_00003, aux1530)
watchelement_one([5, 4, 1, 2], S_00002_00004, aux1531)
watchelement_one([5, 4, 1, 2, 3], S_00002_00005, aux1532)
watchelement_one([5, 4, 1, 2], S_00001_00004, aux1533)
watchelement_one([5, 4, 1, 2, 3], S_00001_00005, aux1534)
watchelement_one([3, 4, 1, 5, 2], S_00003_00003, aux1535)
watchelement_one([3, 4, 1, 5, 2], S_00003_00005, aux1536)
watchelement_one([3, 4, 1, 5], S_00003_00002, aux1537)
watchelement_one([3, 4, 1, 5, 2], S_00003_00004, aux1538)
watchelement_one([3, 4, 1, 5, 2], S_00005_00003, aux1539)
watchelement_one([3, 4, 1, 5, 2], S_00005_00005, aux1540)
watchelement_one([3, 4, 1, 5, 2], S_00005_00001, aux1541)
watchelement_one([3, 4, 1, 5, 2], S_00005_00002, aux1542)
watchelement_one([3, 4, 1, 5, 2], S_00005_00004, aux1543)
watchelement_one([3, 4, 1, 5, 2], S_00001_00005, aux1544)
watchelement_one([3, 4, 1, 5], S_00001_00004, aux1545)
watchelement_one([3, 4, 1, 5], S_00002_00003, aux1546)
watchelement_one([3, 4, 1, 5, 2], S_00002_00005, aux1547)
watchelement_one([3, 4, 1, 5], S_00002_00004, aux1548)
watchelement_one([3, 4, 1, 5, 2], S_00004_00003, aux1549)
watchelement_one([3, 4, 1, 5, 2], S_00004_00005, aux1550)
watchelement_one([3, 4, 1, 5], S_00004_00001, aux1551)
watchelement_one([3, 4, 1, 5, 2], S_00004_00002, aux1552)
watchelement_one([3, 4, 1, 5, 2], S_00004_00004, aux1553)
watchelement_one([3, 5, 1, 4, 2], S_00003_00003, aux1554)
watchelement_one([3, 5, 1, 4, 2], S_00003_00005, aux1555)
watchelement_one([3, 5, 1, 4, 2], S_00003_00004, aux1556)
watchelement_one([3, 5, 1, 4], S_00003_00002, aux1557)
watchelement_one([3, 5, 1, 4, 2], S_00005_00003, aux1558)
watchelement_one([3, 5, 1, 4, 2], S_00005_00005, aux1559)
watchelement_one([3, 5, 1, 4, 2], S_00005_00001, aux1560)
watchelement_one([3, 5, 1, 4, 2], S_00005_00004, aux1561)
watchelement_one([3, 5, 1, 4, 2], S_00005_00002, aux1562)
watchelement_one([3, 5, 1, 4, 2], S_00001_00005, aux1563)
watchelement_one([3, 5, 1, 4], S_00001_00004, aux1564)
watchelement_one([3, 5, 1, 4, 2], S_00004_00003, aux1565)
watchelement_one([3, 5, 1, 4, 2], S_00004_00005, aux1566)
watchelement_one([3, 5, 1, 4], S_00004_00001, aux1567)
watchelement_one([3, 5, 1, 4, 2], S_00004_00004, aux1568)
watchelement_one([3, 5, 1, 4, 2], S_00004_00002, aux1569)
watchelement_one([3, 5, 1, 4], S_00002_00003, aux1570)
watchelement_one([3, 5, 1, 4, 2], S_00002_00005, aux1571)
watchelement_one([3, 5, 1, 4], S_00002_00004, aux1572)
watchelement_one([4, 3, 1, 5, 2], S_00003_00003, aux1573)
watchelement_one([4, 3, 1, 5, 2], S_00003_00005, aux1574)
watchelement_one([4, 3, 1, 5], S_00003_00002, aux1575)
watchelement_one([4, 3, 1, 5, 2], S_00003_00004, aux1576)
watchelement_one([4, 3, 1, 5, 2], S_00005_00003, aux1577)
watchelement_one([4, 3, 1, 5, 2], S_00005_00005, aux1578)
watchelement_one([4, 3, 1, 5, 2], S_00005_00002, aux1579)
watchelement_one([4, 3, 1, 5, 2], S_00005_00001, aux1580)
watchelement_one([4, 3, 1, 5, 2], S_00005_00004, aux1581)
watchelement_one([4, 3, 1, 5], S_00002_00003, aux1582)
watchelement_one([4, 3, 1, 5, 2], S_00002_00005, aux1583)
watchelement_one([4, 3, 1, 5], S_00002_00004, aux1584)
watchelement_one([4, 3, 1, 5, 2], S_00001_00005, aux1585)
watchelement_one([4, 3, 1, 5], S_00001_00004, aux1586)
watchelement_one([4, 3, 1, 5, 2], S_00004_00003, aux1587)
watchelement_one([4, 3, 1, 5, 2], S_00004_00005, aux1588)
watchelement_one([4, 3, 1, 5, 2], S_00004_00002, aux1589)
watchelement_one([4, 3, 1, 5], S_00004_00001, aux1590)
watchelement_one([4, 3, 1, 5, 2], S_00004_00004, aux1591)
watchelement_one([5, 3, 1, 4, 2], S_00003_00003, aux1592)
watchelement_one([5, 3, 1, 4, 2], S_00003_00005, aux1593)
watchelement_one([5, 3, 1, 4], S_00003_00002, aux1594)
watchelement_one([5, 3, 1, 4, 2], S_00003_00004, aux1595)
watchelement_one([5, 3, 1, 4, 2], S_00005_00003, aux1596)
watchelement_one([5, 3, 1, 4, 2], S_00005_00005, aux1597)
watchelement_one([5, 3, 1, 4, 2], S_00005_00002, aux1598)
watchelement_one([5, 3, 1, 4, 2], S_00005_00004, aux1599)
watchelement_one([5, 3, 1, 4, 2], S_00005_00001, aux1600)
watchelement_one([5, 3, 1, 4], S_00002_00003, aux1601)
watchelement_one([5, 3, 1, 4, 2], S_00002_00005, aux1602)
watchelement_one([5, 3, 1, 4], S_00002_00004, aux1603)
watchelement_one([5, 3, 1, 4, 2], S_00004_00003, aux1604)
watchelement_one([5, 3, 1, 4, 2], S_00004_00005, aux1605)
watchelement_one([5, 3, 1, 4, 2], S_00004_00002, aux1606)
watchelement_one([5, 3, 1, 4, 2], S_00004_00004, aux1607)
watchelement_one([5, 3, 1, 4], S_00004_00001, aux1608)
watchelement_one([5, 3, 1, 4, 2], S_00001_00005, aux1609)
watchelement_one([5, 3, 1, 4], S_00001_00004, aux1610)
watchelement_one([4, 5, 1, 3, 2], S_00003_00003, aux1611)
watchelement_one([4, 5, 1, 3, 2], S_00003_00005, aux1612)
watchelement_one([4, 5, 1, 3, 2], S_00003_00004, aux1613)
watchelement_one([4, 5, 1, 3], S_00003_00002, aux1614)
watchelement_one([4, 5, 1, 3, 2], S_00005_00003, aux1615)
watchelement_one([4, 5, 1, 3, 2], S_00005_00005, aux1616)
watchelement_one([4, 5, 1, 3, 2], S_00005_00004, aux1617)
watchelement_one([4, 5, 1, 3, 2], S_00005_00001, aux1618)
watchelement_one([4, 5, 1, 3, 2], S_00005_00002, aux1619)
watchelement_one([4, 5, 1, 3, 2], S_00004_00003, aux1620)
watchelement_one([4, 5, 1, 3, 2], S_00004_00005, aux1621)
watchelement_one([4, 5, 1, 3, 2], S_00004_00004, aux1622)
watchelement_one([4, 5, 1, 3], S_00004_00001, aux1623)
watchelement_one([4, 5, 1, 3, 2], S_00004_00002, aux1624)
watchelement_one([4, 5, 1, 3, 2], S_00001_00005, aux1625)
watchelement_one([4, 5, 1, 3], S_00001_00004, aux1626)
watchelement_one([4, 5, 1, 3], S_00002_00003, aux1627)
watchelement_one([4, 5, 1, 3, 2], S_00002_00005, aux1628)
watchelement_one([4, 5, 1, 3], S_00002_00004, aux1629)
watchelement_one([5, 4, 1, 3, 2], S_00003_00003, aux1630)
watchelement_one([5, 4, 1, 3, 2], S_00003_00005, aux1631)
watchelement_one([5, 4, 1, 3, 2], S_00003_00004, aux1632)
watchelement_one([5, 4, 1, 3], S_00003_00002, aux1633)
watchelement_one([5, 4, 1, 3, 2], S_00005_00003, aux1634)
watchelement_one([5, 4, 1, 3, 2], S_00005_00005, aux1635)
watchelement_one([5, 4, 1, 3, 2], S_00005_00004, aux1636)
watchelement_one([5, 4, 1, 3, 2], S_00005_00002, aux1637)
watchelement_one([5, 4, 1, 3, 2], S_00005_00001, aux1638)
watchelement_one([5, 4, 1, 3, 2], S_00004_00003, aux1639)
watchelement_one([5, 4, 1, 3, 2], S_00004_00005, aux1640)
watchelement_one([5, 4, 1, 3, 2], S_00004_00004, aux1641)
watchelement_one([5, 4, 1, 3, 2], S_00004_00002, aux1642)
watchelement_one([5, 4, 1, 3], S_00004_00001, aux1643)
watchelement_one([5, 4, 1, 3], S_00002_00003, aux1644)
watchelement_one([5, 4, 1, 3, 2], S_00002_00005, aux1645)
watchelement_one([5, 4, 1, 3], S_00002_00004, aux1646)
watchelement_one([5, 4, 1, 3, 2], S_00001_00005, aux1647)
watchelement_one([5, 4, 1, 3], S_00001_00004, aux1648)
watchelement_one([2, 3, 4, 1, 5], S_00004_00004, aux1649)
watchelement_one([2, 3, 4, 1], S_00004_00001, aux1650)
watchelement_one([2, 3, 4, 1, 5], S_00004_00002, aux1651)
watchelement_one([2, 3, 4, 1, 5], S_00004_00003, aux1652)
watchelement_one([2, 3, 4, 1, 5], S_00004_00005, aux1653)
watchelement_one([2, 3, 4, 1], S_00001_00004, aux1654)
watchelement_one([2, 3, 4, 1, 5], S_00001_00005, aux1655)
watchelement_one([2, 3, 4, 1], S_00002_00004, aux1656)
watchelement_one([2, 3, 4, 1], S_00002_00003, aux1657)
watchelement_one([2, 3, 4, 1, 5], S_00002_00005, aux1658)
watchelement_one([2, 3, 4, 1, 5], S_00003_00004, aux1659)
watchelement_one([2, 3, 4, 1], S_00003_00002, aux1660)
watchelement_one([2, 3, 4, 1, 5], S_00003_00003, aux1661)
watchelement_one([2, 3, 4, 1, 5], S_00003_00005, aux1662)
watchelement_one([2, 3, 4, 1, 5], S_00005_00004, aux1663)
watchelement_one([2, 3, 4, 1, 5], S_00005_00001, aux1664)
watchelement_one([2, 3, 4, 1, 5], S_00005_00002, aux1665)
watchelement_one([2, 3, 4, 1, 5], S_00005_00003, aux1666)
watchelement_one([2, 3, 4, 1, 5], S_00005_00005, aux1667)
watchelement_one([2, 3, 5, 1, 4], S_00004_00004, aux1668)
watchelement_one([2, 3, 5, 1], S_00004_00001, aux1669)
watchelement_one([2, 3, 5, 1, 4], S_00004_00002, aux1670)
watchelement_one([2, 3, 5, 1, 4], S_00004_00005, aux1671)
watchelement_one([2, 3, 5, 1, 4], S_00004_00003, aux1672)
watchelement_one([2, 3, 5, 1], S_00001_00004, aux1673)
watchelement_one([2, 3, 5, 1, 4], S_00001_00005, aux1674)
watchelement_one([2, 3, 5, 1], S_00002_00004, aux1675)
watchelement_one([2, 3, 5, 1, 4], S_00002_00005, aux1676)
watchelement_one([2, 3, 5, 1], S_00002_00003, aux1677)
watchelement_one([2, 3, 5, 1, 4], S_00005_00004, aux1678)
watchelement_one([2, 3, 5, 1, 4], S_00005_00001, aux1679)
watchelement_one([2, 3, 5, 1, 4], S_00005_00002, aux1680)
watchelement_one([2, 3, 5, 1, 4], S_00005_00005, aux1681)
watchelement_one([2, 3, 5, 1, 4], S_00005_00003, aux1682)
watchelement_one([2, 3, 5, 1, 4], S_00003_00004, aux1683)
watchelement_one([2, 3, 5, 1], S_00003_00002, aux1684)
watchelement_one([2, 3, 5, 1, 4], S_00003_00005, aux1685)
watchelement_one([2, 3, 5, 1, 4], S_00003_00003, aux1686)
watchelement_one([2, 4, 3, 1, 5], S_00004_00004, aux1687)
watchelement_one([2, 4, 3, 1], S_00004_00001, aux1688)
watchelement_one([2, 4, 3, 1, 5], S_00004_00003, aux1689)
watchelement_one([2, 4, 3, 1, 5], S_00004_00002, aux1690)
watchelement_one([2, 4, 3, 1, 5], S_00004_00005, aux1691)
watchelement_one([2, 4, 3, 1], S_00001_00004, aux1692)
watchelement_one([2, 4, 3, 1, 5], S_00001_00005, aux1693)
watchelement_one([2, 4, 3, 1, 5], S_00003_00004, aux1694)
watchelement_one([2, 4, 3, 1, 5], S_00003_00003, aux1695)
watchelement_one([2, 4, 3, 1], S_00003_00002, aux1696)
watchelement_one([2, 4, 3, 1, 5], S_00003_00005, aux1697)
watchelement_one([2, 4, 3, 1], S_00002_00004, aux1698)
watchelement_one([2, 4, 3, 1], S_00002_00003, aux1699)
watchelement_one([2, 4, 3, 1, 5], S_00002_00005, aux1700)
watchelement_one([2, 4, 3, 1, 5], S_00005_00004, aux1701)
watchelement_one([2, 4, 3, 1, 5], S_00005_00001, aux1702)
watchelement_one([2, 4, 3, 1, 5], S_00005_00003, aux1703)
watchelement_one([2, 4, 3, 1, 5], S_00005_00002, aux1704)
watchelement_one([2, 4, 3, 1, 5], S_00005_00005, aux1705)
watchelement_one([2, 5, 3, 1, 4], S_00004_00004, aux1706)
watchelement_one([2, 5, 3, 1], S_00004_00001, aux1707)
watchelement_one([2, 5, 3, 1, 4], S_00004_00003, aux1708)
watchelement_one([2, 5, 3, 1, 4], S_00004_00005, aux1709)
watchelement_one([2, 5, 3, 1, 4], S_00004_00002, aux1710)
watchelement_one([2, 5, 3, 1], S_00001_00004, aux1711)
watchelement_one([2, 5, 3, 1, 4], S_00001_00005, aux1712)
watchelement_one([2, 5, 3, 1, 4], S_00003_00004, aux1713)
watchelement_one([2, 5, 3, 1, 4], S_00003_00003, aux1714)
watchelement_one([2, 5, 3, 1, 4], S_00003_00005, aux1715)
watchelement_one([2, 5, 3, 1], S_00003_00002, aux1716)
watchelement_one([2, 5, 3, 1, 4], S_00005_00004, aux1717)
watchelement_one([2, 5, 3, 1, 4], S_00005_00001, aux1718)
watchelement_one([2, 5, 3, 1, 4], S_00005_00003, aux1719)
watchelement_one([2, 5, 3, 1, 4], S_00005_00005, aux1720)
watchelement_one([2, 5, 3, 1, 4], S_00005_00002, aux1721)
watchelement_one([2, 5, 3, 1], S_00002_00004, aux1722)
watchelement_one([2, 5, 3, 1], S_00002_00003, aux1723)
watchelement_one([2, 5, 3, 1, 4], S_00002_00005, aux1724)
watchelement_one([2, 4, 5, 1, 3], S_00004_00004, aux1725)
watchelement_one([2, 4, 5, 1], S_00004_00001, aux1726)
watchelement_one([2, 4, 5, 1, 3], S_00004_00005, aux1727)
watchelement_one([2, 4, 5, 1, 3], S_00004_00002, aux1728)
watchelement_one([2, 4, 5, 1, 3], S_00004_00003, aux1729)
watchelement_one([2, 4, 5, 1], S_00001_00004, aux1730)
watchelement_one([2, 4, 5, 1, 3], S_00001_00005, aux1731)
watchelement_one([2, 4, 5, 1, 3], S_00005_00004, aux1732)
watchelement_one([2, 4, 5, 1, 3], S_00005_00001, aux1733)
watchelement_one([2, 4, 5, 1, 3], S_00005_00005, aux1734)
watchelement_one([2, 4, 5, 1, 3], S_00005_00002, aux1735)
watchelement_one([2, 4, 5, 1, 3], S_00005_00003, aux1736)
watchelement_one([2, 4, 5, 1], S_00002_00004, aux1737)
watchelement_one([2, 4, 5, 1, 3], S_00002_00005, aux1738)
watchelement_one([2, 4, 5, 1], S_00002_00003, aux1739)
watchelement_one([2, 4, 5, 1, 3], S_00003_00004, aux1740)
watchelement_one([2, 4, 5, 1, 3], S_00003_00005, aux1741)
watchelement_one([2, 4, 5, 1], S_00003_00002, aux1742)
watchelement_one([2, 4, 5, 1, 3], S_00003_00003, aux1743)
watchelement_one([2, 5, 4, 1, 3], S_00004_00004, aux1744)
watchelement_one([2, 5, 4, 1], S_00004_00001, aux1745)
watchelement_one([2, 5, 4, 1, 3], S_00004_00005, aux1746)
watchelement_one([2, 5, 4, 1, 3], S_00004_00003, aux1747)
watchelement_one([2, 5, 4, 1, 3], S_00004_00002, aux1748)
watchelement_one([2, 5, 4, 1], S_00001_00004, aux1749)
watchelement_one([2, 5, 4, 1, 3], S_00001_00005, aux1750)
watchelement_one([2, 5, 4, 1, 3], S_00005_00004, aux1751)
watchelement_one([2, 5, 4, 1, 3], S_00005_00001, aux1752)
watchelement_one([2, 5, 4, 1, 3], S_00005_00005, aux1753)
watchelement_one([2, 5, 4, 1, 3], S_00005_00003, aux1754)
watchelement_one([2, 5, 4, 1, 3], S_00005_00002, aux1755)
watchelement_one([2, 5, 4, 1, 3], S_00003_00004, aux1756)
watchelement_one([2, 5, 4, 1, 3], S_00003_00005, aux1757)
watchelement_one([2, 5, 4, 1, 3], S_00003_00003, aux1758)
watchelement_one([2, 5, 4, 1], S_00003_00002, aux1759)
watchelement_one([2, 5, 4, 1], S_00002_00004, aux1760)
watchelement_one([2, 5, 4, 1, 3], S_00002_00005, aux1761)
watchelement_one([2, 5, 4, 1], S_00002_00003, aux1762)
watchelement_one([3, 2, 4, 1, 5], S_00004_00004, aux1763)
watchelement_one([3, 2, 4, 1, 5], S_00004_00002, aux1764)
watchelement_one([3, 2, 4, 1], S_00004_00001, aux1765)
watchelement_one([3, 2, 4, 1, 5], S_00004_00003, aux1766)
watchelement_one([3, 2, 4, 1, 5], S_00004_00005, aux1767)
watchelement_one([3, 2, 4, 1], S_00002_00004, aux1768)
watchelement_one([3, 2, 4, 1], S_00002_00003, aux1769)
watchelement_one([3, 2, 4, 1, 5], S_00002_00005, aux1770)
watchelement_one([3, 2, 4, 1], S_00001_00004, aux1771)
watchelement_one([3, 2, 4, 1, 5], S_00001_00005, aux1772)
watchelement_one([3, 2, 4, 1, 5], S_00003_00004, aux1773)
watchelement_one([3, 2, 4, 1], S_00003_00002, aux1774)
watchelement_one([3, 2, 4, 1, 5], S_00003_00003, aux1775)
watchelement_one([3, 2, 4, 1, 5], S_00003_00005, aux1776)
watchelement_one([3, 2, 4, 1, 5], S_00005_00004, aux1777)
watchelement_one([3, 2, 4, 1, 5], S_00005_00002, aux1778)
watchelement_one([3, 2, 4, 1, 5], S_00005_00001, aux1779)
watchelement_one([3, 2, 4, 1, 5], S_00005_00003, aux1780)
watchelement_one([3, 2, 4, 1, 5], S_00005_00005, aux1781)
watchelement_one([3, 2, 5, 1, 4], S_00004_00004, aux1782)
watchelement_one([3, 2, 5, 1, 4], S_00004_00002, aux1783)
watchelement_one([3, 2, 5, 1], S_00004_00001, aux1784)
watchelement_one([3, 2, 5, 1, 4], S_00004_00005, aux1785)
watchelement_one([3, 2, 5, 1, 4], S_00004_00003, aux1786)
watchelement_one([3, 2, 5, 1], S_00002_00004, aux1787)
watchelement_one([3, 2, 5, 1, 4], S_00002_00005, aux1788)
watchelement_one([3, 2, 5, 1], S_00002_00003, aux1789)
watchelement_one([3, 2, 5, 1], S_00001_00004, aux1790)
watchelement_one([3, 2, 5, 1, 4], S_00001_00005, aux1791)
watchelement_one([3, 2, 5, 1, 4], S_00005_00004, aux1792)
watchelement_one([3, 2, 5, 1, 4], S_00005_00002, aux1793)
watchelement_one([3, 2, 5, 1, 4], S_00005_00001, aux1794)
watchelement_one([3, 2, 5, 1, 4], S_00005_00005, aux1795)
watchelement_one([3, 2, 5, 1, 4], S_00005_00003, aux1796)
watchelement_one([3, 2, 5, 1, 4], S_00003_00004, aux1797)
watchelement_one([3, 2, 5, 1], S_00003_00002, aux1798)
watchelement_one([3, 2, 5, 1, 4], S_00003_00005, aux1799)
watchelement_one([3, 2, 5, 1, 4], S_00003_00003, aux1800)
watchelement_one([4, 2, 3, 1, 5], S_00004_00004, aux1801)
watchelement_one([4, 2, 3, 1, 5], S_00004_00002, aux1802)
watchelement_one([4, 2, 3, 1, 5], S_00004_00003, aux1803)
watchelement_one([4, 2, 3, 1], S_00004_00001, aux1804)
watchelement_one([4, 2, 3, 1, 5], S_00004_00005, aux1805)
watchelement_one([4, 2, 3, 1], S_00002_00004, aux1806)
watchelement_one([4, 2, 3, 1], S_00002_00003, aux1807)
watchelement_one([4, 2, 3, 1, 5], S_00002_00005, aux1808)
watchelement_one([4, 2, 3, 1, 5], S_00003_00004, aux1809)
watchelement_one([4, 2, 3, 1], S_00003_00002, aux1810)
watchelement_one([4, 2, 3, 1, 5], S_00003_00003, aux1811)
watchelement_one([4, 2, 3, 1, 5], S_00003_00005, aux1812)
watchelement_one([4, 2, 3, 1], S_00001_00004, aux1813)
watchelement_one([4, 2, 3, 1, 5], S_00001_00005, aux1814)
watchelement_one([4, 2, 3, 1, 5], S_00005_00004, aux1815)
watchelement_one([4, 2, 3, 1, 5], S_00005_00002, aux1816)
watchelement_one([4, 2, 3, 1, 5], S_00005_00003, aux1817)
watchelement_one([4, 2, 3, 1, 5], S_00005_00001, aux1818)
watchelement_one([4, 2, 3, 1, 5], S_00005_00005, aux1819)
watchelement_one([5, 2, 3, 1, 4], S_00004_00004, aux1820)
watchelement_one([5, 2, 3, 1, 4], S_00004_00002, aux1821)
watchelement_one([5, 2, 3, 1, 4], S_00004_00003, aux1822)
watchelement_one([5, 2, 3, 1, 4], S_00004_00005, aux1823)
watchelement_one([5, 2, 3, 1], S_00004_00001, aux1824)
watchelement_one([5, 2, 3, 1], S_00002_00004, aux1825)
watchelement_one([5, 2, 3, 1], S_00002_00003, aux1826)
watchelement_one([5, 2, 3, 1, 4], S_00002_00005, aux1827)
watchelement_one([5, 2, 3, 1, 4], S_00003_00004, aux1828)
watchelement_one([5, 2, 3, 1], S_00003_00002, aux1829)
watchelement_one([5, 2, 3, 1, 4], S_00003_00003, aux1830)
watchelement_one([5, 2, 3, 1, 4], S_00003_00005, aux1831)
watchelement_one([5, 2, 3, 1, 4], S_00005_00004, aux1832)
watchelement_one([5, 2, 3, 1, 4], S_00005_00002, aux1833)
watchelement_one([5, 2, 3, 1, 4], S_00005_00003, aux1834)
watchelement_one([5, 2, 3, 1, 4], S_00005_00005, aux1835)
watchelement_one([5, 2, 3, 1, 4], S_00005_00001, aux1836)
watchelement_one([5, 2, 3, 1], S_00001_00004, aux1837)
watchelement_one([5, 2, 3, 1, 4], S_00001_00005, aux1838)
watchelement_one([4, 2, 5, 1, 3], S_00004_00004, aux1839)
watchelement_one([4, 2, 5, 1, 3], S_00004_00002, aux1840)
watchelement_one([4, 2, 5, 1, 3], S_00004_00005, aux1841)
watchelement_one([4, 2, 5, 1], S_00004_00001, aux1842)
watchelement_one([4, 2, 5, 1, 3], S_00004_00003, aux1843)
watchelement_one([4, 2, 5, 1], S_00002_00004, aux1844)
watchelement_one([4, 2, 5, 1, 3], S_00002_00005, aux1845)
watchelement_one([4, 2, 5, 1], S_00002_00003, aux1846)
watchelement_one([4, 2, 5, 1, 3], S_00005_00004, aux1847)
watchelement_one([4, 2, 5, 1, 3], S_00005_00002, aux1848)
watchelement_one([4, 2, 5, 1, 3], S_00005_00005, aux1849)
watchelement_one([4, 2, 5, 1, 3], S_00005_00001, aux1850)
watchelement_one([4, 2, 5, 1, 3], S_00005_00003, aux1851)
watchelement_one([4, 2, 5, 1], S_00001_00004, aux1852)
watchelement_one([4, 2, 5, 1, 3], S_00001_00005, aux1853)
watchelement_one([4, 2, 5, 1, 3], S_00003_00004, aux1854)
watchelement_one([4, 2, 5, 1], S_00003_00002, aux1855)
watchelement_one([4, 2, 5, 1, 3], S_00003_00005, aux1856)
watchelement_one([4, 2, 5, 1, 3], S_00003_00003, aux1857)
watchelement_one([5, 2, 4, 1, 3], S_00004_00004, aux1858)
watchelement_one([5, 2, 4, 1, 3], S_00004_00002, aux1859)
watchelement_one([5, 2, 4, 1, 3], S_00004_00005, aux1860)
watchelement_one([5, 2, 4, 1, 3], S_00004_00003, aux1861)
watchelement_one([5, 2, 4, 1], S_00004_00001, aux1862)
watchelement_one([5, 2, 4, 1], S_00002_00004, aux1863)
watchelement_one([5, 2, 4, 1, 3], S_00002_00005, aux1864)
watchelement_one([5, 2, 4, 1], S_00002_00003, aux1865)
watchelement_one([5, 2, 4, 1, 3], S_00005_00004, aux1866)
watchelement_one([5, 2, 4, 1, 3], S_00005_00002, aux1867)
watchelement_one([5, 2, 4, 1, 3], S_00005_00005, aux1868)
watchelement_one([5, 2, 4, 1, 3], S_00005_00003, aux1869)
watchelement_one([5, 2, 4, 1, 3], S_00005_00001, aux1870)
watchelement_one([5, 2, 4, 1, 3], S_00003_00004, aux1871)
watchelement_one([5, 2, 4, 1], S_00003_00002, aux1872)
watchelement_one([5, 2, 4, 1, 3], S_00003_00005, aux1873)
watchelement_one([5, 2, 4, 1, 3], S_00003_00003, aux1874)
watchelement_one([5, 2, 4, 1], S_00001_00004, aux1875)
watchelement_one([5, 2, 4, 1, 3], S_00001_00005, aux1876)
watchelement_one([3, 4, 2, 1, 5], S_00004_00004, aux1877)
watchelement_one([3, 4, 2, 1, 5], S_00004_00003, aux1878)
watchelement_one([3, 4, 2, 1], S_00004_00001, aux1879)
watchelement_one([3, 4, 2, 1, 5], S_00004_00002, aux1880)
watchelement_one([3, 4, 2, 1, 5], S_00004_00005, aux1881)
watchelement_one([3, 4, 2, 1, 5], S_00003_00004, aux1882)
watchelement_one([3, 4, 2, 1, 5], S_00003_00003, aux1883)
watchelement_one([3, 4, 2, 1], S_00003_00002, aux1884)
watchelement_one([3, 4, 2, 1, 5], S_00003_00005, aux1885)
watchelement_one([3, 4, 2, 1], S_00001_00004, aux1886)
watchelement_one([3, 4, 2, 1, 5], S_00001_00005, aux1887)
watchelement_one([3, 4, 2, 1], S_00002_00004, aux1888)
watchelement_one([3, 4, 2, 1], S_00002_00003, aux1889)
watchelement_one([3, 4, 2, 1, 5], S_00002_00005, aux1890)
watchelement_one([3, 4, 2, 1, 5], S_00005_00004, aux1891)
watchelement_one([3, 4, 2, 1, 5], S_00005_00003, aux1892)
watchelement_one([3, 4, 2, 1, 5], S_00005_00001, aux1893)
watchelement_one([3, 4, 2, 1, 5], S_00005_00002, aux1894)
watchelement_one([3, 4, 2, 1, 5], S_00005_00005, aux1895)
watchelement_one([3, 5, 2, 1, 4], S_00004_00004, aux1896)
watchelement_one([3, 5, 2, 1, 4], S_00004_00003, aux1897)
watchelement_one([3, 5, 2, 1], S_00004_00001, aux1898)
watchelement_one([3, 5, 2, 1, 4], S_00004_00005, aux1899)
watchelement_one([3, 5, 2, 1, 4], S_00004_00002, aux1900)
watchelement_one([3, 5, 2, 1, 4], S_00003_00004, aux1901)
watchelement_one([3, 5, 2, 1, 4], S_00003_00003, aux1902)
watchelement_one([3, 5, 2, 1, 4], S_00003_00005, aux1903)
watchelement_one([3, 5, 2, 1], S_00003_00002, aux1904)
watchelement_one([3, 5, 2, 1], S_00001_00004, aux1905)
watchelement_one([3, 5, 2, 1, 4], S_00001_00005, aux1906)
watchelement_one([3, 5, 2, 1, 4], S_00005_00004, aux1907)
watchelement_one([3, 5, 2, 1, 4], S_00005_00003, aux1908)
watchelement_one([3, 5, 2, 1, 4], S_00005_00001, aux1909)
watchelement_one([3, 5, 2, 1, 4], S_00005_00005, aux1910)
watchelement_one([3, 5, 2, 1, 4], S_00005_00002, aux1911)
watchelement_one([3, 5, 2, 1], S_00002_00004, aux1912)
watchelement_one([3, 5, 2, 1], S_00002_00003, aux1913)
watchelement_one([3, 5, 2, 1, 4], S_00002_00005, aux1914)
watchelement_one([4, 3, 2, 1, 5], S_00004_00004, aux1915)
watchelement_one([4, 3, 2, 1, 5], S_00004_00003, aux1916)
watchelement_one([4, 3, 2, 1, 5], S_00004_00002, aux1917)
watchelement_one([4, 3, 2, 1], S_00004_00001, aux1918)
watchelement_one([4, 3, 2, 1, 5], S_00004_00005, aux1919)
watchelement_one([4, 3, 2, 1, 5], S_00003_00004, aux1920)
watchelement_one([4, 3, 2, 1, 5], S_00003_00003, aux1921)
watchelement_one([4, 3, 2, 1], S_00003_00002, aux1922)
watchelement_one([4, 3, 2, 1, 5], S_00003_00005, aux1923)
watchelement_one([4, 3, 2, 1], S_00002_00004, aux1924)
watchelement_one([4, 3, 2, 1], S_00002_00003, aux1925)
watchelement_one([4, 3, 2, 1, 5], S_00002_00005, aux1926)
watchelement_one([4, 3, 2, 1], S_00001_00004, aux1927)
watchelement_one([4, 3, 2, 1, 5], S_00001_00005, aux1928)
watchelement_one([4, 3, 2, 1, 5], S_00005_00004, aux1929)
watchelement_one([4, 3, 2, 1, 5], S_00005_00003, aux1930)
watchelement_one([4, 3, 2, 1, 5], S_00005_00002, aux1931)
watchelement_one([4, 3, 2, 1, 5], S_00005_00001, aux1932)
watchelement_one([4, 3, 2, 1, 5], S_00005_00005, aux1933)
watchelement_one([5, 3, 2, 1, 4], S_00004_00004, aux1934)
watchelement_one([5, 3, 2, 1, 4], S_00004_00003, aux1935)
watchelement_one([5, 3, 2, 1, 4], S_00004_00002, aux1936)
watchelement_one([5, 3, 2, 1, 4], S_00004_00005, aux1937)
watchelement_one([5, 3, 2, 1], S_00004_00001, aux1938)
watchelement_one([5, 3, 2, 1, 4], S_00003_00004, aux1939)
watchelement_one([5, 3, 2, 1, 4], S_00003_00003, aux1940)
watchelement_one([5, 3, 2, 1], S_00003_00002, aux1941)
watchelement_one([5, 3, 2, 1, 4], S_00003_00005, aux1942)
watchelement_one([5, 3, 2, 1], S_00002_00004, aux1943)
watchelement_one([5, 3, 2, 1], S_00002_00003, aux1944)
watchelement_one([5, 3, 2, 1, 4], S_00002_00005, aux1945)
watchelement_one([5, 3, 2, 1, 4], S_00005_00004, aux1946)
watchelement_one([5, 3, 2, 1, 4], S_00005_00003, aux1947)
watchelement_one([5, 3, 2, 1, 4], S_00005_00002, aux1948)
watchelement_one([5, 3, 2, 1, 4], S_00005_00005, aux1949)
watchelement_one([5, 3, 2, 1, 4], S_00005_00001, aux1950)
watchelement_one([5, 3, 2, 1], S_00001_00004, aux1951)
watchelement_one([5, 3, 2, 1, 4], S_00001_00005, aux1952)
watchelement_one([4, 5, 2, 1, 3], S_00004_00004, aux1953)
watchelement_one([4, 5, 2, 1, 3], S_00004_00003, aux1954)
watchelement_one([4, 5, 2, 1, 3], S_00004_00005, aux1955)
watchelement_one([4, 5, 2, 1], S_00004_00001, aux1956)
watchelement_one([4, 5, 2, 1, 3], S_00004_00002, aux1957)
watchelement_one([4, 5, 2, 1, 3], S_00003_00004, aux1958)
watchelement_one([4, 5, 2, 1, 3], S_00003_00003, aux1959)
watchelement_one([4, 5, 2, 1, 3], S_00003_00005, aux1960)
watchelement_one([4, 5, 2, 1], S_00003_00002, aux1961)
watchelement_one([4, 5, 2, 1, 3], S_00005_00004, aux1962)
watchelement_one([4, 5, 2, 1, 3], S_00005_00003, aux1963)
watchelement_one([4, 5, 2, 1, 3], S_00005_00005, aux1964)
watchelement_one([4, 5, 2, 1, 3], S_00005_00001, aux1965)
watchelement_one([4, 5, 2, 1, 3], S_00005_00002, aux1966)
watchelement_one([4, 5, 2, 1], S_00001_00004, aux1967)
watchelement_one([4, 5, 2, 1, 3], S_00001_00005, aux1968)
watchelement_one([4, 5, 2, 1], S_00002_00004, aux1969)
watchelement_one([4, 5, 2, 1], S_00002_00003, aux1970)
watchelement_one([4, 5, 2, 1, 3], S_00002_00005, aux1971)
watchelement_one([5, 4, 2, 1, 3], S_00004_00004, aux1972)
watchelement_one([5, 4, 2, 1, 3], S_00004_00003, aux1973)
watchelement_one([5, 4, 2, 1, 3], S_00004_00005, aux1974)
watchelement_one([5, 4, 2, 1, 3], S_00004_00002, aux1975)
watchelement_one([5, 4, 2, 1], S_00004_00001, aux1976)
watchelement_one([5, 4, 2, 1, 3], S_00003_00004, aux1977)
watchelement_one([5, 4, 2, 1, 3], S_00003_00003, aux1978)
watchelement_one([5, 4, 2, 1, 3], S_00003_00005, aux1979)
watchelement_one([5, 4, 2, 1], S_00003_00002, aux1980)
watchelement_one([5, 4, 2, 1, 3], S_00005_00004, aux1981)
watchelement_one([5, 4, 2, 1, 3], S_00005_00003, aux1982)
watchelement_one([5, 4, 2, 1, 3], S_00005_00005, aux1983)
watchelement_one([5, 4, 2, 1, 3], S_00005_00002, aux1984)
watchelement_one([5, 4, 2, 1, 3], S_00005_00001, aux1985)
watchelement_one([5, 4, 2, 1], S_00002_00004, aux1986)
watchelement_one([5, 4, 2, 1], S_00002_00003, aux1987)
watchelement_one([5, 4, 2, 1, 3], S_00002_00005, aux1988)
watchelement_one([5, 4, 2, 1], S_00001_00004, aux1989)
watchelement_one([5, 4, 2, 1, 3], S_00001_00005, aux1990)
watchelement_one([3, 4, 5, 1, 2], S_00004_00004, aux1991)
watchelement_one([3, 4, 5, 1, 2], S_00004_00005, aux1992)
watchelement_one([3, 4, 5, 1], S_00004_00001, aux1993)
watchelement_one([3, 4, 5, 1, 2], S_00004_00002, aux1994)
watchelement_one([3, 4, 5, 1, 2], S_00004_00003, aux1995)
watchelement_one([3, 4, 5, 1, 2], S_00005_00004, aux1996)
watchelement_one([3, 4, 5, 1, 2], S_00005_00005, aux1997)
watchelement_one([3, 4, 5, 1, 2], S_00005_00001, aux1998)
watchelement_one([3, 4, 5, 1, 2], S_00005_00002, aux1999)
watchelement_one([3, 4, 5, 1, 2], S_00005_00003, aux2000)
watchelement_one([3, 4, 5, 1], S_00001_00004, aux2001)
watchelement_one([3, 4, 5, 1, 2], S_00001_00005, aux2002)
watchelement_one([3, 4, 5, 1], S_00002_00004, aux2003)
watchelement_one([3, 4, 5, 1, 2], S_00002_00005, aux2004)
watchelement_one([3, 4, 5, 1], S_00002_00003, aux2005)
watchelement_one([3, 4, 5, 1, 2], S_00003_00004, aux2006)
watchelement_one([3, 4, 5, 1, 2], S_00003_00005, aux2007)
watchelement_one([3, 4, 5, 1], S_00003_00002, aux2008)
watchelement_one([3, 4, 5, 1, 2], S_00003_00003, aux2009)
watchelement_one([3, 5, 4, 1, 2], S_00004_00004, aux2010)
watchelement_one([3, 5, 4, 1, 2], S_00004_00005, aux2011)
watchelement_one([3, 5, 4, 1], S_00004_00001, aux2012)
watchelement_one([3, 5, 4, 1, 2], S_00004_00003, aux2013)
watchelement_one([3, 5, 4, 1, 2], S_00004_00002, aux2014)
watchelement_one([3, 5, 4, 1, 2], S_00005_00004, aux2015)
watchelement_one([3, 5, 4, 1, 2], S_00005_00005, aux2016)
watchelement_one([3, 5, 4, 1, 2], S_00005_00001, aux2017)
watchelement_one([3, 5, 4, 1, 2], S_00005_00003, aux2018)
watchelement_one([3, 5, 4, 1, 2], S_00005_00002, aux2019)
watchelement_one([3, 5, 4, 1], S_00001_00004, aux2020)
watchelement_one([3, 5, 4, 1, 2], S_00001_00005, aux2021)
watchelement_one([3, 5, 4, 1, 2], S_00003_00004, aux2022)
watchelement_one([3, 5, 4, 1, 2], S_00003_00005, aux2023)
watchelement_one([3, 5, 4, 1, 2], S_00003_00003, aux2024)
watchelement_one([3, 5, 4, 1], S_00003_00002, aux2025)
watchelement_one([3, 5, 4, 1], S_00002_00004, aux2026)
watchelement_one([3, 5, 4, 1, 2], S_00002_00005, aux2027)
watchelement_one([3, 5, 4, 1], S_00002_00003, aux2028)
watchelement_one([4, 3, 5, 1, 2], S_00004_00004, aux2029)
watchelement_one([4, 3, 5, 1, 2], S_00004_00005, aux2030)
watchelement_one([4, 3, 5, 1, 2], S_00004_00002, aux2031)
watchelement_one([4, 3, 5, 1], S_00004_00001, aux2032)
watchelement_one([4, 3, 5, 1, 2], S_00004_00003, aux2033)
watchelement_one([4, 3, 5, 1, 2], S_00005_00004, aux2034)
watchelement_one([4, 3, 5, 1, 2], S_00005_00005, aux2035)
watchelement_one([4, 3, 5, 1, 2], S_00005_00002, aux2036)
watchelement_one([4, 3, 5, 1, 2], S_00005_00001, aux2037)
watchelement_one([4, 3, 5, 1, 2], S_00005_00003, aux2038)
watchelement_one([4, 3, 5, 1], S_00002_00004, aux2039)
watchelement_one([4, 3, 5, 1, 2], S_00002_00005, aux2040)
watchelement_one([4, 3, 5, 1], S_00002_00003, aux2041)
watchelement_one([4, 3, 5, 1], S_00001_00004, aux2042)
watchelement_one([4, 3, 5, 1, 2], S_00001_00005, aux2043)
watchelement_one([4, 3, 5, 1, 2], S_00003_00004, aux2044)
watchelement_one([4, 3, 5, 1, 2], S_00003_00005, aux2045)
watchelement_one([4, 3, 5, 1], S_00003_00002, aux2046)
watchelement_one([4, 3, 5, 1, 2], S_00003_00003, aux2047)
watchelement_one([5, 3, 4, 1, 2], S_00004_00004, aux2048)
watchelement_one([5, 3, 4, 1, 2], S_00004_00005, aux2049)
watchelement_one([5, 3, 4, 1, 2], S_00004_00002, aux2050)
watchelement_one([5, 3, 4, 1, 2], S_00004_00003, aux2051)
watchelement_one([5, 3, 4, 1], S_00004_00001, aux2052)
watchelement_one([5, 3, 4, 1, 2], S_00005_00004, aux2053)
watchelement_one([5, 3, 4, 1, 2], S_00005_00005, aux2054)
watchelement_one([5, 3, 4, 1, 2], S_00005_00002, aux2055)
watchelement_one([5, 3, 4, 1, 2], S_00005_00003, aux2056)
watchelement_one([5, 3, 4, 1, 2], S_00005_00001, aux2057)
watchelement_one([5, 3, 4, 1], S_00002_00004, aux2058)
watchelement_one([5, 3, 4, 1, 2], S_00002_00005, aux2059)
watchelement_one([5, 3, 4, 1], S_00002_00003, aux2060)
watchelement_one([5, 3, 4, 1, 2], S_00003_00004, aux2061)
watchelement_one([5, 3, 4, 1, 2], S_00003_00005, aux2062)
watchelement_one([5, 3, 4, 1], S_00003_00002, aux2063)
watchelement_one([5, 3, 4, 1, 2], S_00003_00003, aux2064)
watchelement_one([5, 3, 4, 1], S_00001_00004, aux2065)
watchelement_one([5, 3, 4, 1, 2], S_00001_00005, aux2066)
watchelement_one([4, 5, 3, 1, 2], S_00004_00004, aux2067)
watchelement_one([4, 5, 3, 1, 2], S_00004_00005, aux2068)
watchelement_one([4, 5, 3, 1, 2], S_00004_00003, aux2069)
watchelement_one([4, 5, 3, 1], S_00004_00001, aux2070)
watchelement_one([4, 5, 3, 1, 2], S_00004_00002, aux2071)
watchelement_one([4, 5, 3, 1, 2], S_00005_00004, aux2072)
watchelement_one([4, 5, 3, 1, 2], S_00005_00005, aux2073)
watchelement_one([4, 5, 3, 1, 2], S_00005_00003, aux2074)
watchelement_one([4, 5, 3, 1, 2], S_00005_00001, aux2075)
watchelement_one([4, 5, 3, 1, 2], S_00005_00002, aux2076)
watchelement_one([4, 5, 3, 1, 2], S_00003_00004, aux2077)
watchelement_one([4, 5, 3, 1, 2], S_00003_00005, aux2078)
watchelement_one([4, 5, 3, 1, 2], S_00003_00003, aux2079)
watchelement_one([4, 5, 3, 1], S_00003_00002, aux2080)
watchelement_one([4, 5, 3, 1], S_00001_00004, aux2081)
watchelement_one([4, 5, 3, 1, 2], S_00001_00005, aux2082)
watchelement_one([4, 5, 3, 1], S_00002_00004, aux2083)
watchelement_one([4, 5, 3, 1, 2], S_00002_00005, aux2084)
watchelement_one([4, 5, 3, 1], S_00002_00003, aux2085)
watchelement_one([5, 4, 3, 1, 2], S_00004_00004, aux2086)
watchelement_one([5, 4, 3, 1, 2], S_00004_00005, aux2087)
watchelement_one([5, 4, 3, 1, 2], S_00004_00003, aux2088)
watchelement_one([5, 4, 3, 1, 2], S_00004_00002, aux2089)
watchelement_one([5, 4, 3, 1], S_00004_00001, aux2090)
watchelement_one([5, 4, 3, 1, 2], S_00005_00004, aux2091)
watchelement_one([5, 4, 3, 1, 2], S_00005_00005, aux2092)
watchelement_one([5, 4, 3, 1, 2], S_00005_00003, aux2093)
watchelement_one([5, 4, 3, 1, 2], S_00005_00002, aux2094)
watchelement_one([5, 4, 3, 1, 2], S_00005_00001, aux2095)
watchelement_one([5, 4, 3, 1, 2], S_00003_00004, aux2096)
watchelement_one([5, 4, 3, 1, 2], S_00003_00005, aux2097)
watchelement_one([5, 4, 3, 1, 2], S_00003_00003, aux2098)
watchelement_one([5, 4, 3, 1], S_00003_00002, aux2099)
watchelement_one([5, 4, 3, 1], S_00002_00004, aux2100)
watchelement_one([5, 4, 3, 1, 2], S_00002_00005, aux2101)
watchelement_one([5, 4, 3, 1], S_00002_00003, aux2102)
watchelement_one([5, 4, 3, 1], S_00001_00004, aux2103)
watchelement_one([5, 4, 3, 1, 2], S_00001_00005, aux2104)
watchelement_one([2, 3, 4, 5, 1], S_00005_00005, aux2105)
watchelement_one([2, 3, 4, 5, 1], S_00005_00001, aux2106)
watchelement_one([2, 3, 4, 5, 1], S_00005_00002, aux2107)
watchelement_one([2, 3, 4, 5, 1], S_00005_00003, aux2108)
watchelement_one([2, 3, 4, 5, 1], S_00005_00004, aux2109)
watchelement_one([2, 3, 4, 5, 1], S_00001_00005, aux2110)
watchelement_one([2, 3, 4, 5], S_00001_00004, aux2111)
watchelement_one([2, 3, 4, 5, 1], S_00002_00005, aux2112)
watchelement_one([2, 3, 4, 5], S_00002_00003, aux2113)
watchelement_one([2, 3, 4, 5], S_00002_00004, aux2114)
watchelement_one([2, 3, 4, 5, 1], S_00003_00005, aux2115)
watchelement_one([2, 3, 4, 5], S_00003_00002, aux2116)
watchelement_one([2, 3, 4, 5, 1], S_00003_00003, aux2117)
watchelement_one([2, 3, 4, 5, 1], S_00003_00004, aux2118)
watchelement_one([2, 3, 4, 5, 1], S_00004_00005, aux2119)
watchelement_one([2, 3, 4, 5], S_00004_00001, aux2120)
watchelement_one([2, 3, 4, 5, 1], S_00004_00002, aux2121)
watchelement_one([2, 3, 4, 5, 1], S_00004_00003, aux2122)
watchelement_one([2, 3, 4, 5, 1], S_00004_00004, aux2123)
watchelement_one([2, 3, 5, 4, 1], S_00005_00005, aux2124)
watchelement_one([2, 3, 5, 4, 1], S_00005_00001, aux2125)
watchelement_one([2, 3, 5, 4, 1], S_00005_00002, aux2126)
watchelement_one([2, 3, 5, 4, 1], S_00005_00004, aux2127)
watchelement_one([2, 3, 5, 4, 1], S_00005_00003, aux2128)
watchelement_one([2, 3, 5, 4, 1], S_00001_00005, aux2129)
watchelement_one([2, 3, 5, 4], S_00001_00004, aux2130)
watchelement_one([2, 3, 5, 4, 1], S_00002_00005, aux2131)
watchelement_one([2, 3, 5, 4], S_00002_00004, aux2132)
watchelement_one([2, 3, 5, 4], S_00002_00003, aux2133)
watchelement_one([2, 3, 5, 4, 1], S_00004_00005, aux2134)
watchelement_one([2, 3, 5, 4], S_00004_00001, aux2135)
watchelement_one([2, 3, 5, 4, 1], S_00004_00002, aux2136)
watchelement_one([2, 3, 5, 4, 1], S_00004_00004, aux2137)
watchelement_one([2, 3, 5, 4, 1], S_00004_00003, aux2138)
watchelement_one([2, 3, 5, 4, 1], S_00003_00005, aux2139)
watchelement_one([2, 3, 5, 4], S_00003_00002, aux2140)
watchelement_one([2, 3, 5, 4, 1], S_00003_00004, aux2141)
watchelement_one([2, 3, 5, 4, 1], S_00003_00003, aux2142)
watchelement_one([2, 4, 3, 5, 1], S_00005_00005, aux2143)
watchelement_one([2, 4, 3, 5, 1], S_00005_00001, aux2144)
watchelement_one([2, 4, 3, 5, 1], S_00005_00003, aux2145)
watchelement_one([2, 4, 3, 5, 1], S_00005_00002, aux2146)
watchelement_one([2, 4, 3, 5, 1], S_00005_00004, aux2147)
watchelement_one([2, 4, 3, 5, 1], S_00001_00005, aux2148)
watchelement_one([2, 4, 3, 5], S_00001_00004, aux2149)
watchelement_one([2, 4, 3, 5, 1], S_00003_00005, aux2150)
watchelement_one([2, 4, 3, 5, 1], S_00003_00003, aux2151)
watchelement_one([2, 4, 3, 5], S_00003_00002, aux2152)
watchelement_one([2, 4, 3, 5, 1], S_00003_00004, aux2153)
watchelement_one([2, 4, 3, 5, 1], S_00002_00005, aux2154)
watchelement_one([2, 4, 3, 5], S_00002_00003, aux2155)
watchelement_one([2, 4, 3, 5], S_00002_00004, aux2156)
watchelement_one([2, 4, 3, 5, 1], S_00004_00005, aux2157)
watchelement_one([2, 4, 3, 5], S_00004_00001, aux2158)
watchelement_one([2, 4, 3, 5, 1], S_00004_00003, aux2159)
watchelement_one([2, 4, 3, 5, 1], S_00004_00002, aux2160)
watchelement_one([2, 4, 3, 5, 1], S_00004_00004, aux2161)
watchelement_one([2, 5, 3, 4, 1], S_00005_00005, aux2162)
watchelement_one([2, 5, 3, 4, 1], S_00005_00001, aux2163)
watchelement_one([2, 5, 3, 4, 1], S_00005_00003, aux2164)
watchelement_one([2, 5, 3, 4, 1], S_00005_00004, aux2165)
watchelement_one([2, 5, 3, 4, 1], S_00005_00002, aux2166)
watchelement_one([2, 5, 3, 4, 1], S_00001_00005, aux2167)
watchelement_one([2, 5, 3, 4], S_00001_00004, aux2168)
watchelement_one([2, 5, 3, 4, 1], S_00003_00005, aux2169)
watchelement_one([2, 5, 3, 4, 1], S_00003_00003, aux2170)
watchelement_one([2, 5, 3, 4, 1], S_00003_00004, aux2171)
watchelement_one([2, 5, 3, 4], S_00003_00002, aux2172)
watchelement_one([2, 5, 3, 4, 1], S_00004_00005, aux2173)
watchelement_one([2, 5, 3, 4], S_00004_00001, aux2174)
watchelement_one([2, 5, 3, 4, 1], S_00004_00003, aux2175)
watchelement_one([2, 5, 3, 4, 1], S_00004_00004, aux2176)
watchelement_one([2, 5, 3, 4, 1], S_00004_00002, aux2177)
watchelement_one([2, 5, 3, 4, 1], S_00002_00005, aux2178)
watchelement_one([2, 5, 3, 4], S_00002_00003, aux2179)
watchelement_one([2, 5, 3, 4], S_00002_00004, aux2180)
watchelement_one([2, 4, 5, 3, 1], S_00005_00005, aux2181)
watchelement_one([2, 4, 5, 3, 1], S_00005_00001, aux2182)
watchelement_one([2, 4, 5, 3, 1], S_00005_00004, aux2183)
watchelement_one([2, 4, 5, 3, 1], S_00005_00002, aux2184)
watchelement_one([2, 4, 5, 3, 1], S_00005_00003, aux2185)
watchelement_one([2, 4, 5, 3, 1], S_00001_00005, aux2186)
watchelement_one([2, 4, 5, 3], S_00001_00004, aux2187)
watchelement_one([2, 4, 5, 3, 1], S_00004_00005, aux2188)
watchelement_one([2, 4, 5, 3], S_00004_00001, aux2189)
watchelement_one([2, 4, 5, 3, 1], S_00004_00004, aux2190)
watchelement_one([2, 4, 5, 3, 1], S_00004_00002, aux2191)
watchelement_one([2, 4, 5, 3, 1], S_00004_00003, aux2192)
watchelement_one([2, 4, 5, 3, 1], S_00002_00005, aux2193)
watchelement_one([2, 4, 5, 3], S_00002_00004, aux2194)
watchelement_one([2, 4, 5, 3], S_00002_00003, aux2195)
watchelement_one([2, 4, 5, 3, 1], S_00003_00005, aux2196)
watchelement_one([2, 4, 5, 3, 1], S_00003_00004, aux2197)
watchelement_one([2, 4, 5, 3], S_00003_00002, aux2198)
watchelement_one([2, 4, 5, 3, 1], S_00003_00003, aux2199)
watchelement_one([2, 5, 4, 3, 1], S_00005_00005, aux2200)
watchelement_one([2, 5, 4, 3, 1], S_00005_00001, aux2201)
watchelement_one([2, 5, 4, 3, 1], S_00005_00004, aux2202)
watchelement_one([2, 5, 4, 3, 1], S_00005_00003, aux2203)
watchelement_one([2, 5, 4, 3, 1], S_00005_00002, aux2204)
watchelement_one([2, 5, 4, 3, 1], S_00001_00005, aux2205)
watchelement_one([2, 5, 4, 3], S_00001_00004, aux2206)
watchelement_one([2, 5, 4, 3, 1], S_00004_00005, aux2207)
watchelement_one([2, 5, 4, 3], S_00004_00001, aux2208)
watchelement_one([2, 5, 4, 3, 1], S_00004_00004, aux2209)
watchelement_one([2, 5, 4, 3, 1], S_00004_00003, aux2210)
watchelement_one([2, 5, 4, 3, 1], S_00004_00002, aux2211)
watchelement_one([2, 5, 4, 3, 1], S_00003_00005, aux2212)
watchelement_one([2, 5, 4, 3, 1], S_00003_00004, aux2213)
watchelement_one([2, 5, 4, 3, 1], S_00003_00003, aux2214)
watchelement_one([2, 5, 4, 3], S_00003_00002, aux2215)
watchelement_one([2, 5, 4, 3, 1], S_00002_00005, aux2216)
watchelement_one([2, 5, 4, 3], S_00002_00004, aux2217)
watchelement_one([2, 5, 4, 3], S_00002_00003, aux2218)
watchelement_one([3, 2, 4, 5, 1], S_00005_00005, aux2219)
watchelement_one([3, 2, 4, 5, 1], S_00005_00002, aux2220)
watchelement_one([3, 2, 4, 5, 1], S_00005_00001, aux2221)
watchelement_one([3, 2, 4, 5, 1], S_00005_00003, aux2222)
watchelement_one([3, 2, 4, 5, 1], S_00005_00004, aux2223)
watchelement_one([3, 2, 4, 5, 1], S_00002_00005, aux2224)
watchelement_one([3, 2, 4, 5], S_00002_00003, aux2225)
watchelement_one([3, 2, 4, 5], S_00002_00004, aux2226)
watchelement_one([3, 2, 4, 5, 1], S_00001_00005, aux2227)
watchelement_one([3, 2, 4, 5], S_00001_00004, aux2228)
watchelement_one([3, 2, 4, 5, 1], S_00003_00005, aux2229)
watchelement_one([3, 2, 4, 5], S_00003_00002, aux2230)
watchelement_one([3, 2, 4, 5, 1], S_00003_00003, aux2231)
watchelement_one([3, 2, 4, 5, 1], S_00003_00004, aux2232)
watchelement_one([3, 2, 4, 5, 1], S_00004_00005, aux2233)
watchelement_one([3, 2, 4, 5, 1], S_00004_00002, aux2234)
watchelement_one([3, 2, 4, 5], S_00004_00001, aux2235)
watchelement_one([3, 2, 4, 5, 1], S_00004_00003, aux2236)
watchelement_one([3, 2, 4, 5, 1], S_00004_00004, aux2237)
watchelement_one([3, 2, 5, 4, 1], S_00005_00005, aux2238)
watchelement_one([3, 2, 5, 4, 1], S_00005_00002, aux2239)
watchelement_one([3, 2, 5, 4, 1], S_00005_00001, aux2240)
watchelement_one([3, 2, 5, 4, 1], S_00005_00004, aux2241)
watchelement_one([3, 2, 5, 4, 1], S_00005_00003, aux2242)
watchelement_one([3, 2, 5, 4, 1], S_00002_00005, aux2243)
watchelement_one([3, 2, 5, 4], S_00002_00004, aux2244)
watchelement_one([3, 2, 5, 4], S_00002_00003, aux2245)
watchelement_one([3, 2, 5, 4, 1], S_00001_00005, aux2246)
watchelement_one([3, 2, 5, 4], S_00001_00004, aux2247)
watchelement_one([3, 2, 5, 4, 1], S_00004_00005, aux2248)
watchelement_one([3, 2, 5, 4, 1], S_00004_00002, aux2249)
watchelement_one([3, 2, 5, 4], S_00004_00001, aux2250)
watchelement_one([3, 2, 5, 4, 1], S_00004_00004, aux2251)
watchelement_one([3, 2, 5, 4, 1], S_00004_00003, aux2252)
watchelement_one([3, 2, 5, 4, 1], S_00003_00005, aux2253)
watchelement_one([3, 2, 5, 4], S_00003_00002, aux2254)
watchelement_one([3, 2, 5, 4, 1], S_00003_00004, aux2255)
watchelement_one([3, 2, 5, 4, 1], S_00003_00003, aux2256)
watchelement_one([4, 2, 3, 5, 1], S_00005_00005, aux2257)
watchelement_one([4, 2, 3, 5, 1], S_00005_00002, aux2258)
watchelement_one([4, 2, 3, 5, 1], S_00005_00003, aux2259)
watchelement_one([4, 2, 3, 5, 1], S_00005_00001, aux2260)
watchelement_one([4, 2, 3, 5, 1], S_00005_00004, aux2261)
watchelement_one([4, 2, 3, 5, 1], S_00002_00005, aux2262)
watchelement_one([4, 2, 3, 5], S_00002_00003, aux2263)
watchelement_one([4, 2, 3, 5], S_00002_00004, aux2264)
watchelement_one([4, 2, 3, 5, 1], S_00003_00005, aux2265)
watchelement_one([4, 2, 3, 5], S_00003_00002, aux2266)
watchelement_one([4, 2, 3, 5, 1], S_00003_00003, aux2267)
watchelement_one([4, 2, 3, 5, 1], S_00003_00004, aux2268)
watchelement_one([4, 2, 3, 5, 1], S_00001_00005, aux2269)
watchelement_one([4, 2, 3, 5], S_00001_00004, aux2270)
watchelement_one([4, 2, 3, 5, 1], S_00004_00005, aux2271)
watchelement_one([4, 2, 3, 5, 1], S_00004_00002, aux2272)
watchelement_one([4, 2, 3, 5, 1], S_00004_00003, aux2273)
watchelement_one([4, 2, 3, 5], S_00004_00001, aux2274)
watchelement_one([4, 2, 3, 5, 1], S_00004_00004, aux2275)
watchelement_one([5, 2, 3, 4, 1], S_00005_00005, aux2276)
watchelement_one([5, 2, 3, 4, 1], S_00005_00002, aux2277)
watchelement_one([5, 2, 3, 4, 1], S_00005_00003, aux2278)
watchelement_one([5, 2, 3, 4, 1], S_00005_00004, aux2279)
watchelement_one([5, 2, 3, 4, 1], S_00005_00001, aux2280)
watchelement_one([5, 2, 3, 4, 1], S_00002_00005, aux2281)
watchelement_one([5, 2, 3, 4], S_00002_00003, aux2282)
watchelement_one([5, 2, 3, 4], S_00002_00004, aux2283)
watchelement_one([5, 2, 3, 4, 1], S_00003_00005, aux2284)
watchelement_one([5, 2, 3, 4], S_00003_00002, aux2285)
watchelement_one([5, 2, 3, 4, 1], S_00003_00003, aux2286)
watchelement_one([5, 2, 3, 4, 1], S_00003_00004, aux2287)
watchelement_one([5, 2, 3, 4, 1], S_00004_00005, aux2288)
watchelement_one([5, 2, 3, 4, 1], S_00004_00002, aux2289)
watchelement_one([5, 2, 3, 4, 1], S_00004_00003, aux2290)
watchelement_one([5, 2, 3, 4, 1], S_00004_00004, aux2291)
watchelement_one([5, 2, 3, 4], S_00004_00001, aux2292)
watchelement_one([5, 2, 3, 4, 1], S_00001_00005, aux2293)
watchelement_one([5, 2, 3, 4], S_00001_00004, aux2294)
watchelement_one([4, 2, 5, 3, 1], S_00005_00005, aux2295)
watchelement_one([4, 2, 5, 3, 1], S_00005_00002, aux2296)
watchelement_one([4, 2, 5, 3, 1], S_00005_00004, aux2297)
watchelement_one([4, 2, 5, 3, 1], S_00005_00001, aux2298)
watchelement_one([4, 2, 5, 3, 1], S_00005_00003, aux2299)
watchelement_one([4, 2, 5, 3, 1], S_00002_00005, aux2300)
watchelement_one([4, 2, 5, 3], S_00002_00004, aux2301)
watchelement_one([4, 2, 5, 3], S_00002_00003, aux2302)
watchelement_one([4, 2, 5, 3, 1], S_00004_00005, aux2303)
watchelement_one([4, 2, 5, 3, 1], S_00004_00002, aux2304)
watchelement_one([4, 2, 5, 3, 1], S_00004_00004, aux2305)
watchelement_one([4, 2, 5, 3], S_00004_00001, aux2306)
watchelement_one([4, 2, 5, 3, 1], S_00004_00003, aux2307)
watchelement_one([4, 2, 5, 3, 1], S_00001_00005, aux2308)
watchelement_one([4, 2, 5, 3], S_00001_00004, aux2309)
watchelement_one([4, 2, 5, 3, 1], S_00003_00005, aux2310)
watchelement_one([4, 2, 5, 3], S_00003_00002, aux2311)
watchelement_one([4, 2, 5, 3, 1], S_00003_00004, aux2312)
watchelement_one([4, 2, 5, 3, 1], S_00003_00003, aux2313)
watchelement_one([5, 2, 4, 3, 1], S_00005_00005, aux2314)
watchelement_one([5, 2, 4, 3, 1], S_00005_00002, aux2315)
watchelement_one([5, 2, 4, 3, 1], S_00005_00004, aux2316)
watchelement_one([5, 2, 4, 3, 1], S_00005_00003, aux2317)
watchelement_one([5, 2, 4, 3, 1], S_00005_00001, aux2318)
watchelement_one([5, 2, 4, 3, 1], S_00002_00005, aux2319)
watchelement_one([5, 2, 4, 3], S_00002_00004, aux2320)
watchelement_one([5, 2, 4, 3], S_00002_00003, aux2321)
watchelement_one([5, 2, 4, 3, 1], S_00004_00005, aux2322)
watchelement_one([5, 2, 4, 3, 1], S_00004_00002, aux2323)
watchelement_one([5, 2, 4, 3, 1], S_00004_00004, aux2324)
watchelement_one([5, 2, 4, 3, 1], S_00004_00003, aux2325)
watchelement_one([5, 2, 4, 3], S_00004_00001, aux2326)
watchelement_one([5, 2, 4, 3, 1], S_00003_00005, aux2327)
watchelement_one([5, 2, 4, 3], S_00003_00002, aux2328)
watchelement_one([5, 2, 4, 3, 1], S_00003_00004, aux2329)
watchelement_one([5, 2, 4, 3, 1], S_00003_00003, aux2330)
watchelement_one([5, 2, 4, 3, 1], S_00001_00005, aux2331)
watchelement_one([5, 2, 4, 3], S_00001_00004, aux2332)
watchelement_one([3, 4, 2, 5, 1], S_00005_00005, aux2333)
watchelement_one([3, 4, 2, 5, 1], S_00005_00003, aux2334)
watchelement_one([3, 4, 2, 5, 1], S_00005_00001, aux2335)
watchelement_one([3, 4, 2, 5, 1], S_00005_00002, aux2336)
watchelement_one([3, 4, 2, 5, 1], S_00005_00004, aux2337)
watchelement_one([3, 4, 2, 5, 1], S_00003_00005, aux2338)
watchelement_one([3, 4, 2, 5, 1], S_00003_00003, aux2339)
watchelement_one([3, 4, 2, 5], S_00003_00002, aux2340)
watchelement_one([3, 4, 2, 5, 1], S_00003_00004, aux2341)
watchelement_one([3, 4, 2, 5, 1], S_00001_00005, aux2342)
watchelement_one([3, 4, 2, 5], S_00001_00004, aux2343)
watchelement_one([3, 4, 2, 5, 1], S_00002_00005, aux2344)
watchelement_one([3, 4, 2, 5], S_00002_00003, aux2345)
watchelement_one([3, 4, 2, 5], S_00002_00004, aux2346)
watchelement_one([3, 4, 2, 5, 1], S_00004_00005, aux2347)
watchelement_one([3, 4, 2, 5, 1], S_00004_00003, aux2348)
watchelement_one([3, 4, 2, 5], S_00004_00001, aux2349)
watchelement_one([3, 4, 2, 5, 1], S_00004_00002, aux2350)
watchelement_one([3, 4, 2, 5, 1], S_00004_00004, aux2351)
watchelement_one([3, 5, 2, 4, 1], S_00005_00005, aux2352)
watchelement_one([3, 5, 2, 4, 1], S_00005_00003, aux2353)
watchelement_one([3, 5, 2, 4, 1], S_00005_00001, aux2354)
watchelement_one([3, 5, 2, 4, 1], S_00005_00004, aux2355)
watchelement_one([3, 5, 2, 4, 1], S_00005_00002, aux2356)
watchelement_one([3, 5, 2, 4, 1], S_00003_00005, aux2357)
watchelement_one([3, 5, 2, 4, 1], S_00003_00003, aux2358)
watchelement_one([3, 5, 2, 4, 1], S_00003_00004, aux2359)
watchelement_one([3, 5, 2, 4], S_00003_00002, aux2360)
watchelement_one([3, 5, 2, 4, 1], S_00001_00005, aux2361)
watchelement_one([3, 5, 2, 4], S_00001_00004, aux2362)
watchelement_one([3, 5, 2, 4, 1], S_00004_00005, aux2363)
watchelement_one([3, 5, 2, 4, 1], S_00004_00003, aux2364)
watchelement_one([3, 5, 2, 4], S_00004_00001, aux2365)
watchelement_one([3, 5, 2, 4, 1], S_00004_00004, aux2366)
watchelement_one([3, 5, 2, 4, 1], S_00004_00002, aux2367)
watchelement_one([3, 5, 2, 4, 1], S_00002_00005, aux2368)
watchelement_one([3, 5, 2, 4], S_00002_00003, aux2369)
watchelement_one([3, 5, 2, 4], S_00002_00004, aux2370)
watchelement_one([4, 3, 2, 5, 1], S_00005_00005, aux2371)
watchelement_one([4, 3, 2, 5, 1], S_00005_00003, aux2372)
watchelement_one([4, 3, 2, 5, 1], S_00005_00002, aux2373)
watchelement_one([4, 3, 2, 5, 1], S_00005_00001, aux2374)
watchelement_one([4, 3, 2, 5, 1], S_00005_00004, aux2375)
watchelement_one([4, 3, 2, 5, 1], S_00003_00005, aux2376)
watchelement_one([4, 3, 2, 5, 1], S_00003_00003, aux2377)
watchelement_one([4, 3, 2, 5], S_00003_00002, aux2378)
watchelement_one([4, 3, 2, 5, 1], S_00003_00004, aux2379)
watchelement_one([4, 3, 2, 5, 1], S_00002_00005, aux2380)
watchelement_one([4, 3, 2, 5], S_00002_00003, aux2381)
watchelement_one([4, 3, 2, 5], S_00002_00004, aux2382)
watchelement_one([4, 3, 2, 5, 1], S_00001_00005, aux2383)
watchelement_one([4, 3, 2, 5], S_00001_00004, aux2384)
watchelement_one([4, 3, 2, 5, 1], S_00004_00005, aux2385)
watchelement_one([4, 3, 2, 5, 1], S_00004_00003, aux2386)
watchelement_one([4, 3, 2, 5, 1], S_00004_00002, aux2387)
watchelement_one([4, 3, 2, 5], S_00004_00001, aux2388)
watchelement_one([4, 3, 2, 5, 1], S_00004_00004, aux2389)
watchelement_one([5, 3, 2, 4, 1], S_00005_00005, aux2390)
watchelement_one([5, 3, 2, 4, 1], S_00005_00003, aux2391)
watchelement_one([5, 3, 2, 4, 1], S_00005_00002, aux2392)
watchelement_one([5, 3, 2, 4, 1], S_00005_00004, aux2393)
watchelement_one([5, 3, 2, 4, 1], S_00005_00001, aux2394)
watchelement_one([5, 3, 2, 4, 1], S_00003_00005, aux2395)
watchelement_one([5, 3, 2, 4, 1], S_00003_00003, aux2396)
watchelement_one([5, 3, 2, 4], S_00003_00002, aux2397)
watchelement_one([5, 3, 2, 4, 1], S_00003_00004, aux2398)
watchelement_one([5, 3, 2, 4, 1], S_00002_00005, aux2399)
watchelement_one([5, 3, 2, 4], S_00002_00003, aux2400)
watchelement_one([5, 3, 2, 4], S_00002_00004, aux2401)
watchelement_one([5, 3, 2, 4, 1], S_00004_00005, aux2402)
watchelement_one([5, 3, 2, 4, 1], S_00004_00003, aux2403)
watchelement_one([5, 3, 2, 4, 1], S_00004_00002, aux2404)
watchelement_one([5, 3, 2, 4, 1], S_00004_00004, aux2405)
watchelement_one([5, 3, 2, 4], S_00004_00001, aux2406)
watchelement_one([5, 3, 2, 4, 1], S_00001_00005, aux2407)
watchelement_one([5, 3, 2, 4], S_00001_00004, aux2408)
watchelement_one([4, 5, 2, 3, 1], S_00005_00005, aux2409)
watchelement_one([4, 5, 2, 3, 1], S_00005_00003, aux2410)
watchelement_one([4, 5, 2, 3, 1], S_00005_00004, aux2411)
watchelement_one([4, 5, 2, 3, 1], S_00005_00001, aux2412)
watchelement_one([4, 5, 2, 3, 1], S_00005_00002, aux2413)
watchelement_one([4, 5, 2, 3, 1], S_00003_00005, aux2414)
watchelement_one([4, 5, 2, 3, 1], S_00003_00003, aux2415)
watchelement_one([4, 5, 2, 3, 1], S_00003_00004, aux2416)
watchelement_one([4, 5, 2, 3], S_00003_00002, aux2417)
watchelement_one([4, 5, 2, 3, 1], S_00004_00005, aux2418)
watchelement_one([4, 5, 2, 3, 1], S_00004_00003, aux2419)
watchelement_one([4, 5, 2, 3, 1], S_00004_00004, aux2420)
watchelement_one([4, 5, 2, 3], S_00004_00001, aux2421)
watchelement_one([4, 5, 2, 3, 1], S_00004_00002, aux2422)
watchelement_one([4, 5, 2, 3, 1], S_00001_00005, aux2423)
watchelement_one([4, 5, 2, 3], S_00001_00004, aux2424)
watchelement_one([4, 5, 2, 3, 1], S_00002_00005, aux2425)
watchelement_one([4, 5, 2, 3], S_00002_00003, aux2426)
watchelement_one([4, 5, 2, 3], S_00002_00004, aux2427)
watchelement_one([5, 4, 2, 3, 1], S_00005_00005, aux2428)
watchelement_one([5, 4, 2, 3, 1], S_00005_00003, aux2429)
watchelement_one([5, 4, 2, 3, 1], S_00005_00004, aux2430)
watchelement_one([5, 4, 2, 3, 1], S_00005_00002, aux2431)
watchelement_one([5, 4, 2, 3, 1], S_00005_00001, aux2432)
watchelement_one([5, 4, 2, 3, 1], S_00003_00005, aux2433)
watchelement_one([5, 4, 2, 3, 1], S_00003_00003, aux2434)
watchelement_one([5, 4, 2, 3, 1], S_00003_00004, aux2435)
watchelement_one([5, 4, 2, 3], S_00003_00002, aux2436)
watchelement_one([5, 4, 2, 3, 1], S_00004_00005, aux2437)
watchelement_one([5, 4, 2, 3, 1], S_00004_00003, aux2438)
watchelement_one([5, 4, 2, 3, 1], S_00004_00004, aux2439)
watchelement_one([5, 4, 2, 3, 1], S_00004_00002, aux2440)
watchelement_one([5, 4, 2, 3], S_00004_00001, aux2441)
watchelement_one([5, 4, 2, 3, 1], S_00002_00005, aux2442)
watchelement_one([5, 4, 2, 3], S_00002_00003, aux2443)
watchelement_one([5, 4, 2, 3], S_00002_00004, aux2444)
watchelement_one([5, 4, 2, 3, 1], S_00001_00005, aux2445)
watchelement_one([5, 4, 2, 3], S_00001_00004, aux2446)
watchelement_one([3, 4, 5, 2, 1], S_00005_00005, aux2447)
watchelement_one([3, 4, 5, 2, 1], S_00005_00004, aux2448)
watchelement_one([3, 4, 5, 2, 1], S_00005_00001, aux2449)
watchelement_one([3, 4, 5, 2, 1], S_00005_00002, aux2450)
watchelement_one([3, 4, 5, 2, 1], S_00005_00003, aux2451)
watchelement_one([3, 4, 5, 2, 1], S_00004_00005, aux2452)
watchelement_one([3, 4, 5, 2, 1], S_00004_00004, aux2453)
watchelement_one([3, 4, 5, 2], S_00004_00001, aux2454)
watchelement_one([3, 4, 5, 2, 1], S_00004_00002, aux2455)
watchelement_one([3, 4, 5, 2, 1], S_00004_00003, aux2456)
watchelement_one([3, 4, 5, 2, 1], S_00001_00005, aux2457)
watchelement_one([3, 4, 5, 2], S_00001_00004, aux2458)
watchelement_one([3, 4, 5, 2, 1], S_00002_00005, aux2459)
watchelement_one([3, 4, 5, 2], S_00002_00004, aux2460)
watchelement_one([3, 4, 5, 2], S_00002_00003, aux2461)
watchelement_one([3, 4, 5, 2, 1], S_00003_00005, aux2462)
watchelement_one([3, 4, 5, 2, 1], S_00003_00004, aux2463)
watchelement_one([3, 4, 5, 2], S_00003_00002, aux2464)
watchelement_one([3, 4, 5, 2, 1], S_00003_00003, aux2465)
watchelement_one([3, 5, 4, 2, 1], S_00005_00005, aux2466)
watchelement_one([3, 5, 4, 2, 1], S_00005_00004, aux2467)
watchelement_one([3, 5, 4, 2, 1], S_00005_00001, aux2468)
watchelement_one([3, 5, 4, 2, 1], S_00005_00003, aux2469)
watchelement_one([3, 5, 4, 2, 1], S_00005_00002, aux2470)
watchelement_one([3, 5, 4, 2, 1], S_00004_00005, aux2471)
watchelement_one([3, 5, 4, 2, 1], S_00004_00004, aux2472)
watchelement_one([3, 5, 4, 2], S_00004_00001, aux2473)
watchelement_one([3, 5, 4, 2, 1], S_00004_00003, aux2474)
watchelement_one([3, 5, 4, 2, 1], S_00004_00002, aux2475)
watchelement_one([3, 5, 4, 2, 1], S_00001_00005, aux2476)
watchelement_one([3, 5, 4, 2], S_00001_00004, aux2477)
watchelement_one([3, 5, 4, 2, 1], S_00003_00005, aux2478)
watchelement_one([3, 5, 4, 2, 1], S_00003_00004, aux2479)
watchelement_one([3, 5, 4, 2, 1], S_00003_00003, aux2480)
watchelement_one([3, 5, 4, 2], S_00003_00002, aux2481)
watchelement_one([3, 5, 4, 2, 1], S_00002_00005, aux2482)
watchelement_one([3, 5, 4, 2], S_00002_00004, aux2483)
watchelement_one([3, 5, 4, 2], S_00002_00003, aux2484)
watchelement_one([4, 3, 5, 2, 1], S_00005_00005, aux2485)
watchelement_one([4, 3, 5, 2, 1], S_00005_00004, aux2486)
watchelement_one([4, 3, 5, 2, 1], S_00005_00002, aux2487)
watchelement_one([4, 3, 5, 2, 1], S_00005_00001, aux2488)
watchelement_one([4, 3, 5, 2, 1], S_00005_00003, aux2489)
watchelement_one([4, 3, 5, 2, 1], S_00004_00005, aux2490)
watchelement_one([4, 3, 5, 2, 1], S_00004_00004, aux2491)
watchelement_one([4, 3, 5, 2, 1], S_00004_00002, aux2492)
watchelement_one([4, 3, 5, 2], S_00004_00001, aux2493)
watchelement_one([4, 3, 5, 2, 1], S_00004_00003, aux2494)
watchelement_one([4, 3, 5, 2, 1], S_00002_00005, aux2495)
watchelement_one([4, 3, 5, 2], S_00002_00004, aux2496)
watchelement_one([4, 3, 5, 2], S_00002_00003, aux2497)
watchelement_one([4, 3, 5, 2, 1], S_00001_00005, aux2498)
watchelement_one([4, 3, 5, 2], S_00001_00004, aux2499)
watchelement_one([4, 3, 5, 2, 1], S_00003_00005, aux2500)
watchelement_one([4, 3, 5, 2, 1], S_00003_00004, aux2501)
watchelement_one([4, 3, 5, 2], S_00003_00002, aux2502)
watchelement_one([4, 3, 5, 2, 1], S_00003_00003, aux2503)
watchelement_one([5, 3, 4, 2, 1], S_00005_00005, aux2504)
watchelement_one([5, 3, 4, 2, 1], S_00005_00004, aux2505)
watchelement_one([5, 3, 4, 2, 1], S_00005_00002, aux2506)
watchelement_one([5, 3, 4, 2, 1], S_00005_00003, aux2507)
watchelement_one([5, 3, 4, 2, 1], S_00005_00001, aux2508)
watchelement_one([5, 3, 4, 2, 1], S_00004_00005, aux2509)
watchelement_one([5, 3, 4, 2, 1], S_00004_00004, aux2510)
watchelement_one([5, 3, 4, 2, 1], S_00004_00002, aux2511)
watchelement_one([5, 3, 4, 2, 1], S_00004_00003, aux2512)
watchelement_one([5, 3, 4, 2], S_00004_00001, aux2513)
watchelement_one([5, 3, 4, 2, 1], S_00002_00005, aux2514)
watchelement_one([5, 3, 4, 2], S_00002_00004, aux2515)
watchelement_one([5, 3, 4, 2], S_00002_00003, aux2516)
watchelement_one([5, 3, 4, 2, 1], S_00003_00005, aux2517)
watchelement_one([5, 3, 4, 2, 1], S_00003_00004, aux2518)
watchelement_one([5, 3, 4, 2], S_00003_00002, aux2519)
watchelement_one([5, 3, 4, 2, 1], S_00003_00003, aux2520)
watchelement_one([5, 3, 4, 2, 1], S_00001_00005, aux2521)
watchelement_one([5, 3, 4, 2], S_00001_00004, aux2522)
watchelement_one([4, 5, 3, 2, 1], S_00005_00005, aux2523)
watchelement_one([4, 5, 3, 2, 1], S_00005_00004, aux2524)
watchelement_one([4, 5, 3, 2, 1], S_00005_00003, aux2525)
watchelement_one([4, 5, 3, 2, 1], S_00005_00001, aux2526)
watchelement_one([4, 5, 3, 2, 1], S_00005_00002, aux2527)
watchelement_one([4, 5, 3, 2, 1], S_00004_00005, aux2528)
watchelement_one([4, 5, 3, 2, 1], S_00004_00004, aux2529)
watchelement_one([4, 5, 3, 2, 1], S_00004_00003, aux2530)
watchelement_one([4, 5, 3, 2], S_00004_00001, aux2531)
watchelement_one([4, 5, 3, 2, 1], S_00004_00002, aux2532)
watchelement_one([4, 5, 3, 2, 1], S_00003_00005, aux2533)
watchelement_one([4, 5, 3, 2, 1], S_00003_00004, aux2534)
watchelement_one([4, 5, 3, 2, 1], S_00003_00003, aux2535)
watchelement_one([4, 5, 3, 2], S_00003_00002, aux2536)
watchelement_one([4, 5, 3, 2, 1], S_00001_00005, aux2537)
watchelement_one([4, 5, 3, 2], S_00001_00004, aux2538)
watchelement_one([4, 5, 3, 2, 1], S_00002_00005, aux2539)
watchelement_one([4, 5, 3, 2], S_00002_00004, aux2540)
watchelement_one([4, 5, 3, 2], S_00002_00003, aux2541)
watchelement_one([5, 4, 3, 2, 1], S_00005_00005, aux2542)
watchelement_one([5, 4, 3, 2, 1], S_00005_00004, aux2543)
watchelement_one([5, 4, 3, 2, 1], S_00005_00003, aux2544)
watchelement_one([5, 4, 3, 2, 1], S_00005_00002, aux2545)
watchelement_one([5, 4, 3, 2, 1], S_00005_00001, aux2546)
watchelement_one([5, 4, 3, 2, 1], S_00004_00005, aux2547)
watchelement_one([5, 4, 3, 2, 1], S_00004_00004, aux2548)
watchelement_one([5, 4, 3, 2, 1], S_00004_00003, aux2549)
watchelement_one([5, 4, 3, 2, 1], S_00004_00002, aux2550)
watchelement_one([5, 4, 3, 2], S_00004_00001, aux2551)
watchelement_one([5, 4, 3, 2, 1], S_00003_00005, aux2552)
watchelement_one([5, 4, 3, 2, 1], S_00003_00004, aux2553)
watchelement_one([5, 4, 3, 2, 1], S_00003_00003, aux2554)
watchelement_one([5, 4, 3, 2], S_00003_00002, aux2555)
watchelement_one([5, 4, 3, 2, 1], S_00002_00005, aux2556)
watchelement_one([5, 4, 3, 2], S_00002_00004, aux2557)
watchelement_one([5, 4, 3, 2], S_00002_00003, aux2558)
watchelement_one([5, 4, 3, 2, 1], S_00001_00005, aux2559)
watchelement_one([5, 4, 3, 2], S_00001_00004, aux2560)
watchelement_one([3, 4, 5], S_00001_00003, aux0)
watchelement_one([3, 4, 2], S_00001_00003, aux1)
watchelement_one([3, 4, 1], S_00001_00003, aux2)
watchelement_one([3, 2, 1], S_00001_00003, aux3)
watchelement_one([3, 2, 5], S_00001_00003, aux4)
watchelement_one([3, 2, 4], S_00001_00003, aux5)
watchelement_one([3, 1, 5], S_00001_00003, aux6)
watchelement_one([3, 1, 4], S_00001_00003, aux7)
watchelement_one([3, 1, 2], S_00001_00003, aux8)
watchelement_one([3, 5, 4], S_00001_00003, aux9)
watchelement_one([3, 5, 1], S_00001_00003, aux10)
watchelement_one([3, 5, 2], S_00001_00003, aux11)
watchelement_one([2, 1, 5], S_00001_00003, aux12)
watchelement_one([2, 1, 4], S_00001_00003, aux13)
watchelement_one([2, 1, 3], S_00001_00003, aux14)
watchelement_one([2, 4, 5], S_00001_00003, aux15)
watchelement_one([2, 4, 3], S_00001_00003, aux16)
watchelement_one([2, 4, 1], S_00001_00003, aux17)
watchelement_one([2, 5, 1], S_00001_00003, aux18)
watchelement_one([2, 5, 4], S_00001_00003, aux19)
watchelement_one([2, 5, 3], S_00001_00003, aux20)
watchelement_one([2, 3, 5], S_00001_00003, aux21)
watchelement_one([2, 3, 4], S_00001_00003, aux22)
watchelement_one([2, 3, 1], S_00001_00003, aux23)
watchelement_one([1, 2, 5], S_00001_00003, aux24)
watchelement_one([1, 2, 4], S_00001_00003, aux25)
watchelement_one([1, 4, 3], S_00001_00003, aux26)
watchelement_one([1, 4, 5], S_00001_00003, aux27)
watchelement_one([1, 4, 2], S_00001_00003, aux28)
watchelement_one([1, 3, 5], S_00001_00003, aux29)
watchelement_one([1, 3, 2], S_00001_00003, aux30)
watchelement_one([1, 3, 4], S_00001_00003, aux31)
watchelement_one([1, 5, 3], S_00001_00003, aux32)
watchelement_one([1, 5, 4], S_00001_00003, aux33)
watchelement_one([1, 5, 2], S_00001_00003, aux34)
watchelement_one([5, 4, 2], S_00001_00003, aux35)
watchelement_one([5, 4, 1], S_00001_00003, aux36)
watchelement_one([5, 3, 2], S_00001_00003, aux37)
watchelement_one([5, 3, 1], S_00001_00003, aux38)
watchelement_one([5, 3, 4], S_00001_00003, aux39)
watchelement_one([5, 2, 1], S_00001_00003, aux40)
watchelement_one([5, 2, 3], S_00001_00003, aux41)
watchelement_one([5, 2, 4], S_00001_00003, aux42)
watchelement_one([5, 4, 3], S_00001_00003, aux43)
watchelement_one([5, 1, 4], S_00001_00003, aux44)
watchelement_one([5, 1, 3], S_00001_00003, aux45)
watchelement_one([5, 1, 2], S_00001_00003, aux46)
watchelement_one([4, 3, 5], S_00001_00003, aux47)
watchelement_one([4, 5, 1], S_00001_00003, aux48)
watchelement_one([4, 5, 3], S_00001_00003, aux49)
watchelement_one([4, 5, 2], S_00001_00003, aux50)
watchelement_one([4, 2, 1], S_00001_00003, aux51)
watchelement_one([4, 1, 3], S_00001_00003, aux52)
watchelement_one([4, 1, 2], S_00001_00003, aux53)
watchelement_one([4, 1, 5], S_00001_00003, aux54)
watchelement_one([4, 3, 2], S_00001_00003, aux55)
watchelement_one([4, 3, 1], S_00001_00003, aux56)
watchelement_one([4, 2, 5], S_00001_00003, aux57)
watchelement_one([4, 2, 3], S_00001_00003, aux58)
watchelement_one([1, 3, 4], S_00003_00001, aux59)
watchelement_one([1, 3, 2], S_00003_00001, aux60)
watchelement_one([1, 3, 5], S_00003_00001, aux61)
watchelement_one([1, 4, 5], S_00003_00001, aux62)
watchelement_one([1, 4, 3], S_00003_00001, aux63)
watchelement_one([1, 4, 2], S_00003_00001, aux64)
watchelement_one([1, 2, 4], S_00003_00001, aux65)
watchelement_one([1, 2, 5], S_00003_00001, aux66)
watchelement_one([1, 5, 2], S_00003_00001, aux67)
watchelement_one([1, 5, 3], S_00003_00001, aux68)
watchelement_one([1, 5, 4], S_00003_00001, aux69)
watchelement_one([2, 5, 3], S_00003_00001, aux70)
watchelement_one([2, 5, 4], S_00003_00001, aux71)
watchelement_one([2, 5, 1], S_00003_00001, aux72)
watchelement_one([2, 4, 1], S_00003_00001, aux73)
watchelement_one([2, 4, 3], S_00003_00001, aux74)
watchelement_one([2, 4, 5], S_00003_00001, aux75)
watchelement_one([2, 3, 5], S_00003_00001, aux76)
watchelement_one([2, 3, 4], S_00003_00001, aux77)
watchelement_one([2, 3, 1], S_00003_00001, aux78)
watchelement_one([2, 1, 4], S_00003_00001, aux79)
watchelement_one([2, 1, 3], S_00003_00001, aux80)
watchelement_one([2, 1, 5], S_00003_00001, aux81)
watchelement_one([3, 4, 5], S_00003_00001, aux82)
watchelement_one([3, 4, 2], S_00003_00001, aux83)
watchelement_one([3, 4, 1], S_00003_00001, aux84)
watchelement_one([3, 5, 4], S_00003_00001, aux85)
watchelement_one([3, 5, 1], S_00003_00001, aux86)
watchelement_one([3, 5, 2], S_00003_00001, aux87)
watchelement_one([3, 1, 2], S_00003_00001, aux88)
watchelement_one([3, 1, 4], S_00003_00001, aux89)
watchelement_one([3, 1, 5], S_00003_00001, aux90)
watchelement_one([3, 2, 5], S_00003_00001, aux91)
watchelement_one([3, 2, 4], S_00003_00001, aux92)
watchelement_one([3, 2, 1], S_00003_00001, aux93)
watchelement_one([4, 1, 5], S_00003_00001, aux94)
watchelement_one([4, 1, 3], S_00003_00001, aux95)
watchelement_one([4, 1, 2], S_00003_00001, aux96)
watchelement_one([4, 3, 1], S_00003_00001, aux97)
watchelement_one([4, 3, 2], S_00003_00001, aux98)
watchelement_one([4, 3, 5], S_00003_00001, aux99)
watchelement_one([4, 2, 1], S_00003_00001, aux100)
watchelement_one([4, 2, 3], S_00003_00001, aux101)
watchelement_one([4, 2, 5], S_00003_00001, aux102)
watchelement_one([4, 5, 3], S_00003_00001, aux103)
watchelement_one([4, 5, 2], S_00003_00001, aux104)
watchelement_one([4, 5, 1], S_00003_00001, aux105)
watchelement_one([5, 3, 4], S_00003_00001, aux106)
watchelement_one([5, 3, 1], S_00003_00001, aux107)
watchelement_one([5, 3, 2], S_00003_00001, aux108)
watchelement_one([5, 4, 3], S_00003_00001, aux109)
watchelement_one([5, 4, 2], S_00003_00001, aux110)
watchelement_one([5, 4, 1], S_00003_00001, aux111)
watchelement_one([5, 1, 2], S_00003_00001, aux112)
watchelement_one([5, 1, 3], S_00003_00001, aux113)
watchelement_one([5, 1, 4], S_00003_00001, aux114)
watchelement_one([5, 2, 4], S_00003_00001, aux115)
watchelement_one([5, 2, 3], S_00003_00001, aux116)
watchelement_one([5, 2, 1], S_00003_00001, aux117)
watchelement_one([4, 3], S_00002_00002, aux118)
watchelement_one([4, 3], S_00002_00001, aux119)
watchelement_one([3, 1], S_00002_00002, aux120)
watchelement_one([3, 1], S_00002_00001, aux121)
watchelement_one([2, 4], S_00002_00002, aux122)
watchelement_one([2, 4], S_00002_00001, aux123)
watchelement_one([1, 3], S_00002_00002, aux124)
watchelement_one([1, 3], S_00002_00001, aux125)
watchelement_one([3, 2], S_00002_00001, aux126)
watchelement_one([3, 2], S_00002_00002, aux127)
watchelement_one([5, 3], S_00001_00002, aux128)
watchelement_one([3, 4], S_00001_00002, aux129)
watchelement_one([1, 5], S_00001_00002, aux130)
watchelement_one([4, 1], S_00001_00002, aux131)
watchelement_one([2, 5], S_00002_00002, aux132)
watchelement_one([5, 1], S_00002_00002, aux133)
watchelement_one([2, 5], S_00002_00001, aux134)
watchelement_one([5, 1], S_00002_00001, aux135)
watchelement_one([5, 1], S_00001_00002, aux136)
watchelement_one([2, 5], S_00001_00002, aux137)
watchelement_one([4, 5], S_00001_00002, aux138)
watchelement_one([5, 2], S_00001_00002, aux139)
watchelement_one([5, 2], S_00002_00001, aux140)
watchelement_one([5, 2], S_00002_00002, aux141)
watchelement_one([4, 5], S_00002_00002, aux142)
watchelement_one([4, 5], S_00002_00001, aux143)
watchelement_one([1, 2], S_00002_00001, aux144)
watchelement_one([1, 2], S_00002_00002, aux145)
watchelement_one([1, 2], S_00001_00002, aux146)
watchelement_one([2, 1], S_00002_00002, aux147)
watchelement_one([1, 4], S_00001_00002, aux148)
watchelement_one([2, 1], S_00002_00001, aux149)
watchelement_one([2, 1], S_00001_00002, aux150)
watchelement_one([1, 4], S_00002_00001, aux151)
watchelement_one([1, 4], S_00002_00002, aux152)
watchelement_one([4, 3], S_00001_00002, aux153)
watchelement_one([2, 4], S_00001_00002, aux154)
watchelement_one([3, 1], S_00001_00002, aux155)
watchelement_one([5, 3], S_00002_00002, aux156)
watchelement_one([3, 2], S_00001_00002, aux157)
watchelement_one([1, 3], S_00001_00002, aux158)
watchelement_one([4, 1], S_00002_00001, aux159)
watchelement_one([1, 5], S_00002_00002, aux160)
watchelement_one([1, 5], S_00002_00001, aux161)
watchelement_one([4, 1], S_00002_00002, aux162)
watchelement_one([3, 4], S_00002_00002, aux163)
watchelement_one([3, 4], S_00002_00001, aux164)
watchelement_one([5, 3], S_00002_00001, aux165)
watchelement_one([2, 3], S_00002_00001, aux166)
watchelement_one([3, 5], S_00001_00002, aux167)
watchelement_one([4, 2], S_00001_00002, aux168)
watchelement_one([2, 3], S_00002_00002, aux169)
watchelement_one([4, 2], S_00002_00002, aux170)
watchelement_one([4, 2], S_00002_00001, aux171)
watchelement_one([3, 5], S_00002_00001, aux172)
watchelement_one([2, 3], S_00001_00002, aux173)
watchelement_one([3, 5], S_00002_00002, aux174)
watchelement_one([5, 4], S_00002_00002, aux175)
watchelement_one([5, 4], S_00002_00001, aux176)
watchelement_one([5, 4], S_00001_00002, aux177)
watchelement_one([S_00001_00002, S_00002_00002], S_00002_00001, 2)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003], S_00003_00001, 3)
watchelement_one([S_00001_00004, S_00002_00004, S_00003_00004, S_00004_00004], S_00004_00001, 4)
watchelement_one([S_00001_00005, S_00002_00005, S_00003_00005, S_00004_00005, S_00005_00005], S_00005_00001, 5)
watchelement_one([1, S_00002_00001], S_00001_00002, 1)
watchelement_one([S_00001_00002, S_00002_00002], S_00002_00002, 2)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003, S_00004_00003], S_00003_00002, 3)
watchelement_one([S_00001_00004, S_00002_00004, S_00003_00004, S_00004_00004, S_00005_00004], S_00004_00002, 4)
watchelement_one([S_00001_00005, S_00002_00005, S_00003_00005, S_00004_00005, S_00005_00005], S_00005_00002, 5)
watchelement_one([1, S_00002_00001, S_00003_00001], S_00001_00003, 1)
watchelement_one([S_00001_00002, S_00002_00002, S_00003_00002, S_00004_00002], S_00002_00003, 2)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003, S_00004_00003, S_00005_00003], S_00003_00003, 3)
watchelement_one([S_00001_00004, S_00002_00004, S_00003_00004, S_00004_00004, S_00005_00004], S_00004_00003, 4)
watchelement_one([S_00001_00005, S_00002_00005, S_00003_00005, S_00004_00005, S_00005_00005], S_00005_00003, 5)
watchelement_one([1, S_00002_00001, S_00003_00001, S_00004_00001], S_00001_00004, 1)
watchelement_one([S_00001_00002, S_00002_00002, S_00003_00002, S_00004_00002], S_00002_00004, 2)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003, S_00004_00003, S_00005_00003], S_00003_00004, 3)
watchelement_one([S_00001_00004, S_00002_00004, S_00003_00004, S_00004_00004, S_00005_00004], S_00004_00004, 4)
watchelement_one([S_00001_00005, S_00002_00005, S_00003_00005, S_00004_00005, S_00005_00005], S_00005_00004, 5)
watchelement_one([1, S_00002_00001, S_00003_00001, S_00004_00001, S_00005_00001], S_00001_00005, 1)
watchelement_one([S_00001_00002, S_00002_00002, S_00003_00002, S_00004_00002, S_00005_00002], S_00002_00005, 2)
watchelement_one([S_00001_00003, S_00002_00003, S_00003_00003, S_00004_00003, S_00005_00003], S_00003_00005, 3)
watchelement_one([S_00001_00004, S_00002_00004, S_00003_00004, S_00004_00004, S_00005_00004], S_00004_00005, 4)
watchelement_one([S_00001_00005, S_00002_00005, S_00003_00005, S_00004_00005, S_00005_00005], S_00005_00005, 5)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002], aux294, S_00002_00001)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003], aux295, S_00003_00001)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux296, S_00004_00001)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux297, S_00005_00001)
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux146, aux298, aux299, aux300, aux144, aux145, aux301, aux302, aux303, aux304, aux305, aux306, aux307, aux308, aux309, aux310, aux311, aux312, aux313, aux314, aux315, aux316, aux317, aux318])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux146, aux319, aux25, aux320, aux144, aux145, aux321, aux322, aux323, aux324, aux325, aux326, aux327, aux328, aux65, aux329, aux330, aux331, aux332, aux333, aux334, aux335, aux336, aux337])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux146, aux338, aux339, aux24, aux144, aux145, aux340, aux341, aux342, aux343, aux344, aux345, aux346, aux347, aux348, aux349, aux350, aux351, aux352, aux66, aux353, aux354, aux355, aux356])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux146, aux357, aux25, aux358, aux144, aux145, aux359, aux360, aux361, aux362, aux363, aux364, aux365, aux366, aux65, aux367, aux368, aux369, aux370, aux371, aux372, aux373, aux374, aux375])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux146, aux376, aux377, aux24, aux144, aux145, aux378, aux379, aux380, aux381, aux382, aux383, aux384, aux385, aux386, aux387, aux388, aux389, aux390, aux66, aux391, aux392, aux393, aux394])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux30, aux158, aux395, aux396, aux60, aux397, aux398, aux399, aux400, aux125, aux401, aux124, aux402, aux403, aux404, aux405, aux406, aux407, aux408, aux409, aux410, aux411, aux412, aux413])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux30, aux158, aux414, aux415, aux60, aux416, aux417, aux418, aux419, aux125, aux420, aux124, aux421, aux422, aux423, aux424, aux425, aux426, aux427, aux428, aux429, aux430, aux431, aux432])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux28, aux433, aux148, aux434, aux64, aux435, aux436, aux437, aux438, aux439, aux440, aux441, aux442, aux443, aux151, aux444, aux445, aux152, aux446, aux447, aux448, aux449, aux450, aux451])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux34, aux452, aux453, aux130, aux67, aux454, aux455, aux456, aux457, aux458, aux459, aux460, aux461, aux462, aux463, aux464, aux465, aux466, aux467, aux161, aux468, aux469, aux470, aux160])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux28, aux471, aux148, aux472, aux64, aux473, aux474, aux475, aux476, aux477, aux478, aux479, aux480, aux481, aux151, aux482, aux483, aux152, aux484, aux485, aux486, aux487, aux488, aux489])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux34, aux490, aux491, aux130, aux67, aux492, aux493, aux494, aux495, aux496, aux497, aux498, aux499, aux500, aux501, aux502, aux503, aux504, aux505, aux161, aux506, aux507, aux508, aux160])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux509, aux158, aux31, aux510, aux511, aux512, aux513, aux514, aux515, aux125, aux516, aux124, aux517, aux518, aux59, aux519, aux520, aux521, aux522, aux523, aux524, aux525, aux526, aux527])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux528, aux158, aux529, aux29, aux530, aux531, aux532, aux533, aux534, aux125, aux535, aux124, aux536, aux537, aux538, aux539, aux540, aux541, aux542, aux61, aux543, aux544, aux545, aux546])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux547, aux26, aux148, aux548, aux549, aux550, aux551, aux552, aux553, aux63, aux554, aux555, aux556, aux557, aux151, aux558, aux559, aux152, aux560, aux561, aux562, aux563, aux564, aux565])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux566, aux32, aux567, aux130, aux568, aux569, aux570, aux571, aux572, aux68, aux573, aux574, aux575, aux576, aux577, aux578, aux579, aux580, aux581, aux161, aux582, aux583, aux584, aux160])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux585, aux586, aux148, aux27, aux587, aux588, aux589, aux590, aux591, aux592, aux593, aux594, aux595, aux596, aux151, aux597, aux598, aux152, aux599, aux62, aux600, aux601, aux602, aux603])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux604, aux605, aux33, aux130, aux606, aux607, aux608, aux609, aux610, aux611, aux612, aux613, aux614, aux615, aux69, aux616, aux617, aux618, aux619, aux161, aux620, aux621, aux622, aux160])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux623, aux158, aux31, aux624, aux625, aux626, aux627, aux628, aux629, aux125, aux630, aux124, aux631, aux632, aux59, aux633, aux634, aux635, aux636, aux637, aux638, aux639, aux640, aux641])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux642, aux158, aux643, aux29, aux644, aux645, aux646, aux647, aux648, aux125, aux649, aux124, aux650, aux651, aux652, aux653, aux654, aux655, aux656, aux61, aux657, aux658, aux659, aux660])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux661, aux26, aux148, aux662, aux663, aux664, aux665, aux666, aux667, aux63, aux668, aux669, aux670, aux671, aux151, aux672, aux673, aux152, aux674, aux675, aux676, aux677, aux678, aux679])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux680, aux32, aux681, aux130, aux682, aux683, aux684, aux685, aux686, aux68, aux687, aux688, aux689, aux690, aux691, aux692, aux693, aux694, aux695, aux161, aux696, aux697, aux698, aux160])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux699, aux700, aux148, aux27, aux701, aux702, aux703, aux704, aux705, aux706, aux707, aux708, aux709, aux710, aux151, aux711, aux712, aux152, aux713, aux62, aux714, aux715, aux716, aux717])
lexleq([S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux718, aux719, aux33, aux130, aux720, aux721, aux722, aux723, aux724, aux725, aux726, aux727, aux728, aux729, aux69, aux730, aux731, aux732, aux733, aux161, aux734, aux735, aux736, aux160])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux147, aux149, aux737, aux738, aux739, aux150, 2, aux14, aux740, aux741, aux742, aux80, aux743, aux744, aux745, aux746, aux747, aux748, aux749, aux750, aux751, aux752, aux753, aux754, aux755])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux147, aux149, aux756, aux757, aux758, aux150, 2, aux14, aux759, aux760, aux761, aux80, aux762, aux763, aux764, aux765, aux766, aux767, aux768, aux769, aux770, aux771, aux772, aux773, aux774])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux147, aux149, aux775, aux776, aux777, aux150, 2, aux778, aux13, aux779, aux780, aux781, aux782, aux783, aux784, aux785, aux79, aux786, aux787, aux788, aux789, aux790, aux791, aux792, aux793])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux147, aux149, aux794, aux795, aux796, aux150, 2, aux797, aux798, aux12, aux799, aux800, aux801, aux802, aux803, aux804, aux805, aux806, aux807, aux808, aux809, aux81, aux810, aux811, aux812])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux147, aux149, aux813, aux814, aux815, aux150, 2, aux816, aux13, aux817, aux818, aux819, aux820, aux821, aux822, aux823, aux79, aux824, aux825, aux826, aux827, aux828, aux829, aux830, aux831])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux147, aux149, aux832, aux833, aux834, aux150, 2, aux835, aux836, aux12, aux837, aux838, aux839, aux840, aux841, aux842, aux843, aux844, aux845, aux846, aux847, aux81, aux848, aux849, aux850])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux120, aux851, aux121, aux852, aux853, aux854, aux855, aux88, aux856, aux857, aux155, aux8, 3, aux858, aux859, aux860, aux861, aux862, aux863, aux864, aux865, aux866, aux867, aux868, aux869])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux120, aux870, aux121, aux871, aux872, aux873, aux874, aux88, aux875, aux876, aux155, aux8, 3, aux877, aux878, aux879, aux880, aux881, aux882, aux883, aux884, aux885, aux886, aux887, aux888])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux162, aux889, aux890, aux159, aux891, aux892, aux893, aux894, aux96, aux895, aux896, aux897, aux898, aux899, aux900, aux131, aux53, aux901, 4, aux902, aux903, aux904, aux905, aux906, aux907])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux133, aux908, aux909, aux910, aux135, aux911, aux912, aux913, aux914, aux112, aux915, aux916, aux917, aux918, aux919, aux920, aux921, aux922, aux923, aux924, aux136, aux46, aux925, aux926, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux162, aux927, aux928, aux159, aux929, aux930, aux931, aux932, aux96, aux933, aux934, aux935, aux936, aux937, aux938, aux131, aux53, aux939, 4, aux940, aux941, aux942, aux943, aux944, aux945])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux133, aux946, aux947, aux948, aux135, aux949, aux950, aux951, aux952, aux112, aux953, aux954, aux955, aux956, aux957, aux958, aux959, aux960, aux961, aux962, aux136, aux46, aux963, aux964, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux120, aux965, aux121, aux966, aux967, aux968, aux969, aux970, aux971, aux972, aux155, aux973, 3, aux7, aux974, aux975, aux976, aux89, aux977, aux978, aux979, aux980, aux981, aux982, aux983])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux120, aux984, aux121, aux985, aux986, aux987, aux988, aux989, aux990, aux991, aux155, aux992, 3, aux993, aux6, aux994, aux995, aux996, aux997, aux998, aux999, aux1000, aux90, aux1001, aux1002])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux162, aux1003, aux1004, aux159, aux1005, aux1006, aux1007, aux1008, aux1009, aux1010, aux1011, aux1012, aux1013, aux95, aux1014, aux131, aux1015, aux52, 4, aux1016, aux1017, aux1018, aux1019, aux1020, aux1021])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux133, aux1022, aux1023, aux1024, aux135, aux1025, aux1026, aux1027, aux1028, aux1029, aux1030, aux1031, aux1032, aux1033, aux113, aux1034, aux1035, aux1036, aux1037, aux1038, aux136, aux1039, aux45, aux1040, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux162, aux1041, aux1042, aux159, aux1043, aux1044, aux1045, aux1046, aux1047, aux1048, aux1049, aux1050, aux1051, aux1052, aux1053, aux131, aux1054, aux1055, 4, aux54, aux1056, aux1057, aux1058, aux94, aux1059])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux133, aux1060, aux1061, aux1062, aux135, aux1063, aux1064, aux1065, aux1066, aux1067, aux1068, aux1069, aux1070, aux1071, aux1072, aux1073, aux1074, aux1075, aux1076, aux114, aux136, aux1077, aux1078, aux44, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux120, aux1079, aux121, aux1080, aux1081, aux1082, aux1083, aux1084, aux1085, aux1086, aux155, aux1087, 3, aux7, aux1088, aux1089, aux1090, aux89, aux1091, aux1092, aux1093, aux1094, aux1095, aux1096, aux1097])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux120, aux1098, aux121, aux1099, aux1100, aux1101, aux1102, aux1103, aux1104, aux1105, aux155, aux1106, 3, aux1107, aux6, aux1108, aux1109, aux1110, aux1111, aux1112, aux1113, aux1114, aux90, aux1115, aux1116])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux162, aux1117, aux1118, aux159, aux1119, aux1120, aux1121, aux1122, aux1123, aux1124, aux1125, aux1126, aux1127, aux95, aux1128, aux131, aux1129, aux52, 4, aux1130, aux1131, aux1132, aux1133, aux1134, aux1135])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux133, aux1136, aux1137, aux1138, aux135, aux1139, aux1140, aux1141, aux1142, aux1143, aux1144, aux1145, aux1146, aux1147, aux113, aux1148, aux1149, aux1150, aux1151, aux1152, aux136, aux1153, aux45, aux1154, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux162, aux1155, aux1156, aux159, aux1157, aux1158, aux1159, aux1160, aux1161, aux1162, aux1163, aux1164, aux1165, aux1166, aux1167, aux131, aux1168, aux1169, 4, aux54, aux1170, aux1171, aux1172, aux94, aux1173])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux133, aux1174, aux1175, aux1176, aux135, aux1177, aux1178, aux1179, aux1180, aux1181, aux1182, aux1183, aux1184, aux1185, aux1186, aux1187, aux1188, aux1189, aux1190, aux114, aux136, aux1191, aux1192, aux44, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1193, aux78, aux1194, aux1195, aux1196, aux23, 2, aux173, aux1197, aux1198, aux1199, aux166, aux169, aux1200, aux1201, aux1202, aux1203, aux1204, aux1205, aux1206, aux1207, aux1208, aux1209, aux1210, aux1211])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1212, aux78, aux1213, aux1214, aux1215, aux23, 2, aux173, aux1216, aux1217, aux1218, aux166, aux169, aux1219, aux1220, aux1221, aux1222, aux1223, aux1224, aux1225, aux1226, aux1227, aux1228, aux1229, aux1230])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1231, aux73, aux1232, aux1233, aux1234, aux17, 2, aux1235, aux154, aux1236, aux1237, aux1238, aux1239, aux1240, aux1241, aux1242, aux123, aux1243, aux122, aux1244, aux1245, aux1246, aux1247, aux1248, aux1249])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1250, aux72, aux1251, aux1252, aux1253, aux18, 2, aux1254, aux1255, aux137, aux1256, aux1257, aux1258, aux1259, aux1260, aux1261, aux1262, aux1263, aux1264, aux1265, aux1266, aux134, aux1267, aux1268, aux132])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1269, aux73, aux1270, aux1271, aux1272, aux17, 2, aux1273, aux154, aux1274, aux1275, aux1276, aux1277, aux1278, aux1279, aux1280, aux123, aux1281, aux122, aux1282, aux1283, aux1284, aux1285, aux1286, aux1287])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1288, aux72, aux1289, aux1290, aux1291, aux18, 2, aux1292, aux1293, aux137, aux1294, aux1295, aux1296, aux1297, aux1298, aux1299, aux1300, aux1301, aux1302, aux1303, aux1304, aux134, aux1305, aux1306, aux132])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1307, aux1308, aux93, aux1309, aux1310, aux1311, aux127, aux126, aux1312, aux1313, aux3, aux157, 3, aux1314, aux1315, aux1316, aux1317, aux1318, aux1319, aux1320, aux1321, aux1322, aux1323, aux1324, aux1325])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1326, aux1327, aux93, aux1328, aux1329, aux1330, aux127, aux126, aux1331, aux1332, aux3, aux157, 3, aux1333, aux1334, aux1335, aux1336, aux1337, aux1338, aux1339, aux1340, aux1341, aux1342, aux1343, aux1344])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1345, aux1346, aux1347, aux100, aux1348, aux1349, aux170, aux1350, aux171, aux1351, aux1352, aux1353, aux1354, aux1355, aux1356, aux51, aux168, aux1357, 4, aux1358, aux1359, aux1360, aux1361, aux1362, aux1363])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1364, aux1365, aux1366, aux1367, aux117, aux1368, aux141, aux1369, aux1370, aux140, aux1371, aux1372, aux1373, aux1374, aux1375, aux1376, aux1377, aux1378, aux1379, aux1380, aux40, aux139, aux1381, aux1382, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1383, aux1384, aux1385, aux100, aux1386, aux1387, aux170, aux1388, aux171, aux1389, aux1390, aux1391, aux1392, aux1393, aux1394, aux51, aux168, aux1395, 4, aux1396, aux1397, aux1398, aux1399, aux1400, aux1401])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1402, aux1403, aux1404, aux1405, aux117, aux1406, aux141, aux1407, aux1408, aux140, aux1409, aux1410, aux1411, aux1412, aux1413, aux1414, aux1415, aux1416, aux1417, aux1418, aux40, aux139, aux1419, aux1420, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1421, aux1422, aux84, aux1423, aux1424, aux1425, aux1426, aux1427, aux1428, aux1429, aux2, aux1430, 3, aux129, aux1431, aux1432, aux1433, aux164, aux163, aux1434, aux1435, aux1436, aux1437, aux1438, aux1439])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1440, aux1441, aux86, aux1442, aux1443, aux1444, aux1445, aux1446, aux1447, aux1448, aux10, aux1449, 3, aux1450, aux167, aux1451, aux1452, aux1453, aux1454, aux1455, aux1456, aux1457, aux172, aux1458, aux174])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1459, aux1460, aux1461, aux97, aux1462, aux1463, aux1464, aux1465, aux1466, aux1467, aux1468, aux1469, aux118, aux119, aux1470, aux56, aux1471, aux153, 4, aux1472, aux1473, aux1474, aux1475, aux1476, aux1477])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1478, aux1479, aux1480, aux1481, aux107, aux1482, aux1483, aux1484, aux1485, aux1486, aux1487, aux1488, aux156, aux1489, aux165, aux1490, aux1491, aux1492, aux1493, aux1494, aux38, aux1495, aux128, aux1496, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1497, aux1498, aux1499, aux105, aux1500, aux1501, aux1502, aux1503, aux1504, aux1505, aux1506, aux1507, aux1508, aux1509, aux1510, aux48, aux1511, aux1512, 4, aux138, aux1513, aux1514, aux1515, aux143, aux142])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1516, aux1517, aux1518, aux1519, aux111, aux1520, aux1521, aux1522, aux1523, aux1524, aux1525, aux1526, aux1527, aux1528, aux1529, aux1530, aux1531, aux1532, aux175, aux176, aux36, aux1533, aux1534, aux177, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1535, aux1536, aux84, aux1537, aux1538, aux1539, aux1540, aux1541, aux1542, aux1543, aux2, aux1544, 3, aux129, aux1545, aux1546, aux1547, aux164, aux163, aux1548, aux1549, aux1550, aux1551, aux1552, aux1553])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1554, aux1555, aux86, aux1556, aux1557, aux1558, aux1559, aux1560, aux1561, aux1562, aux10, aux1563, 3, aux1564, aux167, aux1565, aux1566, aux1567, aux1568, aux1569, aux1570, aux1571, aux172, aux1572, aux174])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1573, aux1574, aux1575, aux97, aux1576, aux1577, aux1578, aux1579, aux1580, aux1581, aux1582, aux1583, aux118, aux119, aux1584, aux56, aux1585, aux153, 4, aux1586, aux1587, aux1588, aux1589, aux1590, aux1591])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1592, aux1593, aux1594, aux1595, aux107, aux1596, aux1597, aux1598, aux1599, aux1600, aux1601, aux1602, aux156, aux1603, aux165, aux1604, aux1605, aux1606, aux1607, aux1608, aux38, aux1609, aux128, aux1610, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1611, aux1612, aux1613, aux105, aux1614, aux1615, aux1616, aux1617, aux1618, aux1619, aux1620, aux1621, aux1622, aux1623, aux1624, aux48, aux1625, aux1626, 4, aux138, aux1627, aux1628, aux1629, aux143, aux142])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1630, aux1631, aux1632, aux1633, aux111, aux1634, aux1635, aux1636, aux1637, aux1638, aux1639, aux1640, aux1641, aux1642, aux1643, aux1644, aux1645, aux1646, aux175, aux176, aux36, aux1647, aux1648, aux177, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1649, aux1650, aux1651, aux1652, aux1653, aux1654, 2, aux173, aux22, aux1655, aux1656, aux166, aux169, aux1657, aux1658, aux1659, aux77, aux1660, aux1661, aux1662, aux1663, aux1664, aux1665, aux1666, aux1667])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1668, aux1669, aux1670, aux1671, aux1672, aux1673, 2, aux173, aux1674, aux21, aux1675, aux166, aux169, aux1676, aux1677, aux1678, aux1679, aux1680, aux1681, aux1682, aux1683, aux76, aux1684, aux1685, aux1686])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1687, aux1688, aux1689, aux1690, aux1691, aux1692, 2, aux16, aux154, aux1693, aux1694, aux74, aux1695, aux1696, aux1697, aux1698, aux123, aux1699, aux122, aux1700, aux1701, aux1702, aux1703, aux1704, aux1705])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1706, aux1707, aux1708, aux1709, aux1710, aux1711, 2, aux20, aux1712, aux137, aux1713, aux70, aux1714, aux1715, aux1716, aux1717, aux1718, aux1719, aux1720, aux1721, aux1722, aux134, aux1723, aux1724, aux132])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1725, aux1726, aux1727, aux1728, aux1729, aux1730, 2, aux1731, aux154, aux15, aux1732, aux1733, aux1734, aux1735, aux1736, aux1737, aux123, aux1738, aux122, aux1739, aux1740, aux75, aux1741, aux1742, aux1743])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1744, aux1745, aux1746, aux1747, aux1748, aux1749, 2, aux1750, aux19, aux137, aux1751, aux1752, aux1753, aux1754, aux1755, aux1756, aux71, aux1757, aux1758, aux1759, aux1760, aux134, aux1761, aux1762, aux132])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1763, aux1764, aux1765, aux1766, aux1767, aux1768, aux127, aux126, aux1769, aux1770, aux1771, aux157, 3, aux5, aux1772, aux1773, aux1774, aux92, aux1775, aux1776, aux1777, aux1778, aux1779, aux1780, aux1781])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1782, aux1783, aux1784, aux1785, aux1786, aux1787, aux127, aux126, aux1788, aux1789, aux1790, aux157, 3, aux1791, aux4, aux1792, aux1793, aux1794, aux1795, aux1796, aux1797, aux1798, aux91, aux1799, aux1800])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1801, aux1802, aux1803, aux1804, aux1805, aux1806, aux170, aux1807, aux171, aux1808, aux1809, aux1810, aux1811, aux101, aux1812, aux1813, aux168, aux58, 4, aux1814, aux1815, aux1816, aux1817, aux1818, aux1819])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1820, aux1821, aux1822, aux1823, aux1824, aux1825, aux141, aux1826, aux1827, aux140, aux1828, aux1829, aux1830, aux1831, aux116, aux1832, aux1833, aux1834, aux1835, aux1836, aux1837, aux139, aux41, aux1838, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1839, aux1840, aux1841, aux1842, aux1843, aux1844, aux170, aux1845, aux171, aux1846, aux1847, aux1848, aux1849, aux1850, aux1851, aux1852, aux168, aux1853, 4, aux57, aux1854, aux1855, aux1856, aux102, aux1857])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1858, aux1859, aux1860, aux1861, aux1862, aux1863, aux141, aux1864, aux1865, aux140, aux1866, aux1867, aux1868, aux1869, aux1870, aux1871, aux1872, aux1873, aux1874, aux115, aux1875, aux139, aux1876, aux42, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1877, aux1878, aux1879, aux1880, aux1881, aux1882, aux1883, aux83, aux1884, aux1885, aux1886, aux1, 3, aux129, aux1887, aux1888, aux1889, aux164, aux163, aux1890, aux1891, aux1892, aux1893, aux1894, aux1895])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1896, aux1897, aux1898, aux1899, aux1900, aux1901, aux1902, aux87, aux1903, aux1904, aux1905, aux11, 3, aux1906, aux167, aux1907, aux1908, aux1909, aux1910, aux1911, aux1912, aux1913, aux172, aux1914, aux174])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1915, aux1916, aux1917, aux1918, aux1919, aux1920, aux1921, aux1922, aux98, aux1923, aux1924, aux1925, aux118, aux119, aux1926, aux1927, aux55, aux153, 4, aux1928, aux1929, aux1930, aux1931, aux1932, aux1933])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1934, aux1935, aux1936, aux1937, aux1938, aux1939, aux1940, aux1941, aux1942, aux108, aux1943, aux1944, aux156, aux1945, aux165, aux1946, aux1947, aux1948, aux1949, aux1950, aux1951, aux37, aux128, aux1952, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1953, aux1954, aux1955, aux1956, aux1957, aux1958, aux1959, aux1960, aux104, aux1961, aux1962, aux1963, aux1964, aux1965, aux1966, aux1967, aux50, aux1968, 4, aux138, aux1969, aux1970, aux1971, aux143, aux142])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1972, aux1973, aux1974, aux1975, aux1976, aux1977, aux1978, aux1979, aux1980, aux110, aux1981, aux1982, aux1983, aux1984, aux1985, aux1986, aux1987, aux1988, aux175, aux176, aux1989, aux35, aux1990, aux177, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux1991, aux1992, aux1993, aux1994, aux1995, aux1996, aux1997, aux1998, aux1999, aux2000, aux2001, aux2002, 3, aux129, aux0, aux2003, aux2004, aux164, aux163, aux2005, aux2006, aux2007, aux82, aux2008, aux2009])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2010, aux2011, aux2012, aux2013, aux2014, aux2015, aux2016, aux2017, aux2018, aux2019, aux2020, aux2021, 3, aux9, aux167, aux2022, aux2023, aux85, aux2024, aux2025, aux2026, aux2027, aux172, aux2028, aux174])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2029, aux2030, aux2031, aux2032, aux2033, aux2034, aux2035, aux2036, aux2037, aux2038, aux2039, aux2040, aux118, aux119, aux2041, aux2042, aux2043, aux153, 4, aux47, aux2044, aux2045, aux2046, aux99, aux2047])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2048, aux2049, aux2050, aux2051, aux2052, aux2053, aux2054, aux2055, aux2056, aux2057, aux2058, aux2059, aux156, aux2060, aux165, aux2061, aux2062, aux2063, aux2064, aux106, aux2065, aux2066, aux128, aux39, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2067, aux2068, aux2069, aux2070, aux2071, aux2072, aux2073, aux2074, aux2075, aux2076, aux2077, aux2078, aux2079, aux103, aux2080, aux2081, aux2082, aux49, 4, aux138, aux2083, aux2084, aux2085, aux143, aux142])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2086, aux2087, aux2088, aux2089, aux2090, aux2091, aux2092, aux2093, aux2094, aux2095, aux2096, aux2097, aux2098, aux2099, aux109, aux2100, aux2101, aux2102, aux175, aux176, aux2103, aux2104, aux43, aux177, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2105, aux2106, aux2107, aux2108, aux2109, aux2110, 2, aux173, aux22, aux2111, aux2112, aux166, aux169, aux2113, aux2114, aux2115, aux77, aux2116, aux2117, aux2118, aux2119, aux2120, aux2121, aux2122, aux2123])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2124, aux2125, aux2126, aux2127, aux2128, aux2129, 2, aux173, aux2130, aux21, aux2131, aux166, aux169, aux2132, aux2133, aux2134, aux2135, aux2136, aux2137, aux2138, aux2139, aux76, aux2140, aux2141, aux2142])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2143, aux2144, aux2145, aux2146, aux2147, aux2148, 2, aux16, aux154, aux2149, aux2150, aux74, aux2151, aux2152, aux2153, aux2154, aux123, aux2155, aux122, aux2156, aux2157, aux2158, aux2159, aux2160, aux2161])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2162, aux2163, aux2164, aux2165, aux2166, aux2167, 2, aux20, aux2168, aux137, aux2169, aux70, aux2170, aux2171, aux2172, aux2173, aux2174, aux2175, aux2176, aux2177, aux2178, aux134, aux2179, aux2180, aux132])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2181, aux2182, aux2183, aux2184, aux2185, aux2186, 2, aux2187, aux154, aux15, aux2188, aux2189, aux2190, aux2191, aux2192, aux2193, aux123, aux2194, aux122, aux2195, aux2196, aux75, aux2197, aux2198, aux2199])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2200, aux2201, aux2202, aux2203, aux2204, aux2205, 2, aux2206, aux19, aux137, aux2207, aux2208, aux2209, aux2210, aux2211, aux2212, aux71, aux2213, aux2214, aux2215, aux2216, aux134, aux2217, aux2218, aux132])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2219, aux2220, aux2221, aux2222, aux2223, aux2224, aux127, aux126, aux2225, aux2226, aux2227, aux157, 3, aux5, aux2228, aux2229, aux2230, aux92, aux2231, aux2232, aux2233, aux2234, aux2235, aux2236, aux2237])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2238, aux2239, aux2240, aux2241, aux2242, aux2243, aux127, aux126, aux2244, aux2245, aux2246, aux157, 3, aux2247, aux4, aux2248, aux2249, aux2250, aux2251, aux2252, aux2253, aux2254, aux91, aux2255, aux2256])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2257, aux2258, aux2259, aux2260, aux2261, aux2262, aux170, aux2263, aux171, aux2264, aux2265, aux2266, aux2267, aux101, aux2268, aux2269, aux168, aux58, 4, aux2270, aux2271, aux2272, aux2273, aux2274, aux2275])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2276, aux2277, aux2278, aux2279, aux2280, aux2281, aux141, aux2282, aux2283, aux140, aux2284, aux2285, aux2286, aux2287, aux116, aux2288, aux2289, aux2290, aux2291, aux2292, aux2293, aux139, aux41, aux2294, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2295, aux2296, aux2297, aux2298, aux2299, aux2300, aux170, aux2301, aux171, aux2302, aux2303, aux2304, aux2305, aux2306, aux2307, aux2308, aux168, aux2309, 4, aux57, aux2310, aux2311, aux2312, aux102, aux2313])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2314, aux2315, aux2316, aux2317, aux2318, aux2319, aux141, aux2320, aux2321, aux140, aux2322, aux2323, aux2324, aux2325, aux2326, aux2327, aux2328, aux2329, aux2330, aux115, aux2331, aux139, aux2332, aux42, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2333, aux2334, aux2335, aux2336, aux2337, aux2338, aux2339, aux83, aux2340, aux2341, aux2342, aux1, 3, aux129, aux2343, aux2344, aux2345, aux164, aux163, aux2346, aux2347, aux2348, aux2349, aux2350, aux2351])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2352, aux2353, aux2354, aux2355, aux2356, aux2357, aux2358, aux87, aux2359, aux2360, aux2361, aux11, 3, aux2362, aux167, aux2363, aux2364, aux2365, aux2366, aux2367, aux2368, aux2369, aux172, aux2370, aux174])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2371, aux2372, aux2373, aux2374, aux2375, aux2376, aux2377, aux2378, aux98, aux2379, aux2380, aux2381, aux118, aux119, aux2382, aux2383, aux55, aux153, 4, aux2384, aux2385, aux2386, aux2387, aux2388, aux2389])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2390, aux2391, aux2392, aux2393, aux2394, aux2395, aux2396, aux2397, aux2398, aux108, aux2399, aux2400, aux156, aux2401, aux165, aux2402, aux2403, aux2404, aux2405, aux2406, aux2407, aux37, aux128, aux2408, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2409, aux2410, aux2411, aux2412, aux2413, aux2414, aux2415, aux2416, aux104, aux2417, aux2418, aux2419, aux2420, aux2421, aux2422, aux2423, aux50, aux2424, 4, aux138, aux2425, aux2426, aux2427, aux143, aux142])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2428, aux2429, aux2430, aux2431, aux2432, aux2433, aux2434, aux2435, aux2436, aux110, aux2437, aux2438, aux2439, aux2440, aux2441, aux2442, aux2443, aux2444, aux175, aux176, aux2445, aux35, aux2446, aux177, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2447, aux2448, aux2449, aux2450, aux2451, aux2452, aux2453, aux2454, aux2455, aux2456, aux2457, aux2458, 3, aux129, aux0, aux2459, aux2460, aux164, aux163, aux2461, aux2462, aux2463, aux82, aux2464, aux2465])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2466, aux2467, aux2468, aux2469, aux2470, aux2471, aux2472, aux2473, aux2474, aux2475, aux2476, aux2477, 3, aux9, aux167, aux2478, aux2479, aux85, aux2480, aux2481, aux2482, aux2483, aux172, aux2484, aux174])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2485, aux2486, aux2487, aux2488, aux2489, aux2490, aux2491, aux2492, aux2493, aux2494, aux2495, aux2496, aux118, aux119, aux2497, aux2498, aux2499, aux153, 4, aux47, aux2500, aux2501, aux2502, aux99, aux2503])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2504, aux2505, aux2506, aux2507, aux2508, aux2509, aux2510, aux2511, aux2512, aux2513, aux2514, aux2515, aux156, aux2516, aux165, aux2517, aux2518, aux2519, aux2520, aux106, aux2521, aux2522, aux128, aux39, 5])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2523, aux2524, aux2525, aux2526, aux2527, aux2528, aux2529, aux2530, aux2531, aux2532, aux2533, aux2534, aux2535, aux103, aux2536, aux2537, aux2538, aux49, 4, aux138, aux2539, aux2540, aux2541, aux143, aux142])
lexleq([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005],[aux2542, aux2543, aux2544, aux2545, aux2546, aux2547, aux2548, aux2549, aux2550, aux2551, aux2552, aux2553, aux2554, aux2555, aux109, aux2556, aux2557, aux2558, aux175, aux176, aux2559, aux2560, aux43, aux177, 5])
watchelement_one([1, S_00001_00002], S_00002_00001, aux178)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001], aux2561, aux178)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002], aux2562, aux179)
watchelement_one([S_00002_00001, S_00002_00002], S_00002_00001, aux179)
watchelement_one([S_00003_00001, S_00003_00002], S_00002_00001, aux180)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001], aux2563, aux180)
watchelement_one([S_00004_00001, S_00004_00002], S_00002_00001, aux181)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001], aux2564, aux181)
watchelement_one([S_00005_00001, S_00005_00002], S_00002_00001, aux182)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2565, aux182)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001], aux2566, aux183)
watchelement_one([1, S_00001_00002, S_00001_00003], S_00003_00001, aux183)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003], S_00003_00001, aux184)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002], aux2567, aux184)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003], S_00003_00001, aux185)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001], aux2568, aux185)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003], S_00003_00001, aux186)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002], aux2569, aux186)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2570, aux187)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003], S_00003_00001, aux187)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001], aux2571, aux188)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00004_00001, aux188)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00004_00001, aux189)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002], aux2572, aux189)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001], aux2573, aux190)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00004_00001, aux190)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00004_00001, aux191)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002], aux2574, aux191)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2575, aux192)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], S_00004_00001, aux192)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001], aux2576, aux193)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00005_00001, aux193)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00005_00001, aux194)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002], aux2577, aux194)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003], aux2578, aux195)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00005_00001, aux195)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00005_00001, aux196)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], aux2579, aux196)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2580, aux197)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00005_00001, aux197)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002], aux2581, aux198)
watchelement_one([S_00002_00001, S_00002_00002], S_00001_00002, aux198)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003], aux2582, aux199)
watchelement_one([S_00003_00001, S_00003_00002], S_00001_00002, aux199)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux2583, aux200)
watchelement_one([S_00004_00001, S_00004_00002], S_00001_00002, aux200)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2584, aux201)
watchelement_one([S_00005_00001, S_00005_00002], S_00001_00002, aux201)
watchelement_one([1, S_00001_00002], S_00002_00002, aux202)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002], aux2585, aux202)
watchelement_one([S_00002_00001, S_00002_00002], S_00002_00002, aux203)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002], aux2586, aux203)
watchelement_one([S_00003_00001, S_00003_00002], S_00002_00002, aux204)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux2587, aux204)
watchelement_one([S_00004_00001, S_00004_00002], S_00002_00002, aux205)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2588, aux205)
watchelement_one([S_00005_00001, S_00005_00002], S_00002_00002, aux206)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2589, aux206)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002], aux2590, aux207)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00003_00002, aux207)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00003_00002, aux208)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002], aux2591, aux208)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00003_00002, aux209)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002], aux2592, aux209)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2593, aux210)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00003_00002, aux210)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2594, aux211)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], S_00003_00002, aux211)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002], aux2595, aux212)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00004_00002, aux212)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00004_00002, aux213)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002], aux2596, aux213)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00004_00002, aux214)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002], aux2597, aux214)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002], aux2598, aux215)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00004_00002, aux215)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2599, aux216)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00004_00002, aux216)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002], aux2600, aux217)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00005_00002, aux217)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00005_00002, aux218)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002], aux2601, aux218)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00005_00002, aux219)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], aux2602, aux219)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2603, aux220)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00005_00002, aux220)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2604, aux221)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00005_00002, aux221)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], aux2605, aux222)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003], S_00001_00003, aux222)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003], aux2606, aux223)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003], S_00001_00003, aux223)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux2607, aux224)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003], S_00001_00003, aux224)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2608, aux225)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003], S_00001_00003, aux225)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00002_00003, aux226)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003], aux2609, aux226)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], aux2610, aux227)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00002_00003, aux227)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00002_00003, aux228)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001], aux2611, aux228)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2612, aux229)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00002_00003, aux229)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2613, aux230)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], S_00002_00003, aux230)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00003_00003, aux231)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003], aux2614, aux231)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux2615, aux232)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00003_00003, aux232)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00003_00003, aux233)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2616, aux233)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2617, aux234)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00003_00003, aux234)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00003_00003, aux235)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2618, aux235)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003], aux2619, aux236)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00004_00003, aux236)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00004_00003, aux237)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux2620, aux237)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2621, aux238)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00004_00003, aux238)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2622, aux239)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00004_00003, aux239)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2623, aux240)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00004_00003, aux240)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003], aux2624, aux241)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00005_00003, aux241)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], aux2625, aux242)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00005_00003, aux242)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2626, aux243)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00005_00003, aux243)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2627, aux244)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00005_00003, aux244)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2628, aux245)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00005_00003, aux245)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], aux2629, aux246)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00001_00004, aux246)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00001_00004, aux247)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], aux2630, aux247)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux2631, aux248)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00001_00004, aux248)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2632, aux249)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], S_00001_00004, aux249)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004], S_00002_00004, aux250)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], aux2633, aux250)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], aux2634, aux251)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004], S_00002_00004, aux251)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], S_00002_00004, aux252)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux2635, aux252)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001], aux2636, aux253)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], S_00002_00004, aux253)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2637, aux254)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], S_00002_00004, aux254)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004], aux2638, aux255)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00003_00004, aux255)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux2639, aux256)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00003_00004, aux256)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2640, aux257)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00003_00004, aux257)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2641, aux258)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00003_00004, aux258)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2642, aux259)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00003_00004, aux259)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00004_00004, aux260)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux2643, aux260)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00004_00004, aux261)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004], aux2644, aux261)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00004_00004, aux262)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2645, aux262)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00004_00004, aux263)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2646, aux263)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00004_00004, aux264)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2647, aux264)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], aux2648, aux265)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00005_00004, aux265)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004], aux2649, aux266)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00005_00004, aux266)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2650, aux267)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00005_00004, aux267)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2651, aux268)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00005_00004, aux268)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2652, aux269)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00005_00004, aux269)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], aux2653, aux270)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00001_00005, aux270)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00001_00005, aux271)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], aux2654, aux271)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], aux2655, aux272)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00001_00005, aux272)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2656, aux273)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00001_00005, aux273)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00002_00005, aux274)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], aux2657, aux274)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], aux2658, aux275)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00002_00005, aux275)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00002_00005, aux276)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], aux2659, aux276)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2660, aux277)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00002_00005, aux277)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2661, aux278)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00002_00005, aux278)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], aux2662, aux279)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00003_00005, aux279)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], aux2663, aux280)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00003_00005, aux280)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2664, aux281)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00003_00005, aux281)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2665, aux282)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00003_00005, aux282)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2666, aux283)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00003_00005, aux283)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], aux2667, aux284)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00004_00005, aux284)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], aux2668, aux285)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00004_00005, aux285)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2669, aux286)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00004_00005, aux286)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2670, aux287)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00004_00005, aux287)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2671, aux288)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00004_00005, aux288)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2672, aux289)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005], S_00005_00005, aux289)
watchelement_one([S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005], S_00005_00005, aux290)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2673, aux290)
watchelement_one([S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005], S_00005_00005, aux291)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2674, aux291)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2675, aux292)
watchelement_one([S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005], S_00005_00005, aux292)
watchelement_one([1, S_00001_00002, S_00001_00003, S_00001_00004, S_00001_00005, S_00002_00001, S_00002_00002, S_00002_00003, S_00002_00004, S_00002_00005, S_00003_00001, S_00003_00002, S_00003_00003, S_00003_00004, S_00003_00005, S_00004_00001, S_00004_00002, S_00004_00003, S_00004_00004, S_00004_00005, S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], aux2676, aux293)
watchelement_one([S_00005_00001, S_00005_00002, S_00005_00003, S_00005_00004, S_00005_00005], S_00005_00005, aux293)
weightedsumleq([1,6],[-5,S_00002_00001],aux294)
weightedsumgeq([1,6],[-5,S_00002_00001],aux294)
weightedsumleq([1,6],[-5,S_00003_00001],aux295)
weightedsumgeq([1,6],[-5,S_00003_00001],aux295)
weightedsumleq([6,1],[S_00004_00001,-5],aux296)
weightedsumgeq([6,1],[S_00004_00001,-5],aux296)
weightedsumleq([6,1],[S_00005_00001,-5],aux297)
weightedsumgeq([6,1],[S_00005_00001,-5],aux297)
weightedsumleq([5,1],[S_00001_00002,-4],aux2561)
weightedsumgeq([5,1],[S_00001_00002,-4],aux2561)
weightedsumleq([1,1,5],[-5,S_00002_00001,S_00002_00002],aux2562)
weightedsumgeq([1,1,5],[-5,S_00002_00001,S_00002_00002],aux2562)
weightedsumleq([1,1,5],[-5,S_00003_00001,S_00003_00002],aux2563)
weightedsumgeq([1,1,5],[-5,S_00003_00001,S_00003_00002],aux2563)
weightedsumleq([1,5,1],[S_00004_00001,S_00004_00002,-5],aux2564)
weightedsumgeq([1,5,1],[S_00004_00001,S_00004_00002,-5],aux2564)
weightedsumleq([1,5,1],[S_00005_00001,S_00005_00002,-5],aux2565)
weightedsumgeq([1,5,1],[S_00005_00001,S_00005_00002,-5],aux2565)
weightedsumleq([5,1],[S_00001_00003,-4],aux2566)
weightedsumgeq([5,1],[S_00001_00003,-4],aux2566)
weightedsumleq([1,1,5],[-5,S_00002_00001,S_00002_00003],aux2567)
weightedsumgeq([1,1,5],[-5,S_00002_00001,S_00002_00003],aux2567)
weightedsumleq([1,1,5],[-5,S_00003_00001,S_00003_00003],aux2568)
weightedsumgeq([1,1,5],[-5,S_00003_00001,S_00003_00003],aux2568)
weightedsumleq([1,5,1],[S_00004_00001,S_00004_00003,-5],aux2569)
weightedsumgeq([1,5,1],[S_00004_00001,S_00004_00003,-5],aux2569)
weightedsumleq([1,5,1],[S_00005_00001,S_00005_00003,-5],aux2570)
weightedsumgeq([1,5,1],[S_00005_00001,S_00005_00003,-5],aux2570)
weightedsumleq([5,1],[S_00001_00004,-4],aux2571)
weightedsumgeq([5,1],[S_00001_00004,-4],aux2571)
weightedsumleq([1,1,5],[-5,S_00002_00001,S_00002_00004],aux2572)
weightedsumgeq([1,1,5],[-5,S_00002_00001,S_00002_00004],aux2572)
weightedsumleq([1,1,5],[-5,S_00003_00001,S_00003_00004],aux2573)
weightedsumgeq([1,1,5],[-5,S_00003_00001,S_00003_00004],aux2573)
weightedsumleq([1,5,1],[S_00004_00001,S_00004_00004,-5],aux2574)
weightedsumgeq([1,5,1],[S_00004_00001,S_00004_00004,-5],aux2574)
weightedsumleq([1,5,1],[S_00005_00001,S_00005_00004,-5],aux2575)
weightedsumgeq([1,5,1],[S_00005_00001,S_00005_00004,-5],aux2575)
weightedsumleq([5,1],[S_00001_00005,-4],aux2576)
weightedsumgeq([5,1],[S_00001_00005,-4],aux2576)
weightedsumleq([1,1,5],[-5,S_00002_00001,S_00002_00005],aux2577)
weightedsumgeq([1,1,5],[-5,S_00002_00001,S_00002_00005],aux2577)
weightedsumleq([1,1,5],[-5,S_00003_00001,S_00003_00005],aux2578)
weightedsumgeq([1,1,5],[-5,S_00003_00001,S_00003_00005],aux2578)
weightedsumleq([1,5,1],[S_00004_00001,S_00004_00005,-5],aux2579)
weightedsumgeq([1,5,1],[S_00004_00001,S_00004_00005,-5],aux2579)
weightedsumleq([1,5,1],[S_00005_00001,S_00005_00005,-5],aux2580)
weightedsumgeq([1,5,1],[S_00005_00001,S_00005_00005,-5],aux2580)
weightedsumleq([1,5,1],[-5,S_00002_00001,S_00002_00002],aux2581)
weightedsumgeq([1,5,1],[-5,S_00002_00001,S_00002_00002],aux2581)
weightedsumleq([1,5,1],[-5,S_00003_00001,S_00003_00002],aux2582)
weightedsumgeq([1,5,1],[-5,S_00003_00001,S_00003_00002],aux2582)
weightedsumleq([5,1,1],[S_00004_00001,S_00004_00002,-5],aux2583)
weightedsumgeq([5,1,1],[S_00004_00001,S_00004_00002,-5],aux2583)
weightedsumleq([5,1,1],[S_00005_00001,S_00005_00002,-5],aux2584)
weightedsumgeq([5,1,1],[S_00005_00001,S_00005_00002,-5],aux2584)
weightedsumleq([6,1],[S_00001_00002,-5],aux2585)
weightedsumgeq([6,1],[S_00001_00002,-5],aux2585)
weightedsumleq([1,6],[-5,S_00002_00002],aux2586)
weightedsumgeq([1,6],[-5,S_00002_00002],aux2586)
weightedsumleq([1,6],[-5,S_00003_00002],aux2587)
weightedsumgeq([1,6],[-5,S_00003_00002],aux2587)
weightedsumleq([6,1],[S_00004_00002,-5],aux2588)
weightedsumgeq([6,1],[S_00004_00002,-5],aux2588)
weightedsumleq([6,1],[S_00005_00002,-5],aux2589)
weightedsumgeq([6,1],[S_00005_00002,-5],aux2589)
weightedsumleq([1,5,1],[S_00001_00002,S_00001_00003,-5],aux2590)
weightedsumgeq([1,5,1],[S_00001_00002,S_00001_00003,-5],aux2590)
weightedsumleq([1,1,5],[-5,S_00002_00002,S_00002_00003],aux2591)
weightedsumgeq([1,1,5],[-5,S_00002_00002,S_00002_00003],aux2591)
weightedsumleq([1,1,5],[-5,S_00003_00002,S_00003_00003],aux2592)
weightedsumgeq([1,1,5],[-5,S_00003_00002,S_00003_00003],aux2592)
weightedsumleq([1,5,1],[S_00004_00002,S_00004_00003,-5],aux2593)
weightedsumgeq([1,5,1],[S_00004_00002,S_00004_00003,-5],aux2593)
weightedsumleq([1,5,1],[S_00005_00002,S_00005_00003,-5],aux2594)
weightedsumgeq([1,5,1],[S_00005_00002,S_00005_00003,-5],aux2594)
weightedsumleq([1,5,1],[S_00001_00002,S_00001_00004,-5],aux2595)
weightedsumgeq([1,5,1],[S_00001_00002,S_00001_00004,-5],aux2595)
weightedsumleq([1,1,5],[-5,S_00002_00002,S_00002_00004],aux2596)
weightedsumgeq([1,1,5],[-5,S_00002_00002,S_00002_00004],aux2596)
weightedsumleq([1,1,5],[-5,S_00003_00002,S_00003_00004],aux2597)
weightedsumgeq([1,1,5],[-5,S_00003_00002,S_00003_00004],aux2597)
weightedsumleq([1,5,1],[S_00004_00002,S_00004_00004,-5],aux2598)
weightedsumgeq([1,5,1],[S_00004_00002,S_00004_00004,-5],aux2598)
weightedsumleq([1,5,1],[S_00005_00002,S_00005_00004,-5],aux2599)
weightedsumgeq([1,5,1],[S_00005_00002,S_00005_00004,-5],aux2599)
weightedsumleq([1,5,1],[S_00001_00002,S_00001_00005,-5],aux2600)
weightedsumgeq([1,5,1],[S_00001_00002,S_00001_00005,-5],aux2600)
weightedsumleq([1,1,5],[-5,S_00002_00002,S_00002_00005],aux2601)
weightedsumgeq([1,1,5],[-5,S_00002_00002,S_00002_00005],aux2601)
weightedsumleq([1,1,5],[-5,S_00003_00002,S_00003_00005],aux2602)
weightedsumgeq([1,1,5],[-5,S_00003_00002,S_00003_00005],aux2602)
weightedsumleq([1,5,1],[S_00004_00002,S_00004_00005,-5],aux2603)
weightedsumgeq([1,5,1],[S_00004_00002,S_00004_00005,-5],aux2603)
weightedsumleq([1,5,1],[S_00005_00002,S_00005_00005,-5],aux2604)
weightedsumgeq([1,5,1],[S_00005_00002,S_00005_00005,-5],aux2604)
weightedsumleq([1,5,1],[-5,S_00002_00001,S_00002_00003],aux2605)
weightedsumgeq([1,5,1],[-5,S_00002_00001,S_00002_00003],aux2605)
weightedsumleq([1,5,1],[-5,S_00003_00001,S_00003_00003],aux2606)
weightedsumgeq([1,5,1],[-5,S_00003_00001,S_00003_00003],aux2606)
weightedsumleq([5,1,1],[S_00004_00001,S_00004_00003,-5],aux2607)
weightedsumgeq([5,1,1],[S_00004_00001,S_00004_00003,-5],aux2607)
weightedsumleq([5,1,1],[S_00005_00001,S_00005_00003,-5],aux2608)
weightedsumgeq([5,1,1],[S_00005_00001,S_00005_00003,-5],aux2608)
weightedsumleq([5,1,1],[S_00001_00002,S_00001_00003,-5],aux2609)
weightedsumgeq([5,1,1],[S_00001_00002,S_00001_00003,-5],aux2609)
weightedsumleq([1,5,1],[-5,S_00002_00002,S_00002_00003],aux2610)
weightedsumgeq([1,5,1],[-5,S_00002_00002,S_00002_00003],aux2610)
weightedsumleq([1,5,1],[-5,S_00003_00002,S_00003_00003],aux2611)
weightedsumgeq([1,5,1],[-5,S_00003_00002,S_00003_00003],aux2611)
weightedsumleq([5,1,1],[S_00004_00002,S_00004_00003,-5],aux2612)
weightedsumgeq([5,1,1],[S_00004_00002,S_00004_00003,-5],aux2612)
weightedsumleq([5,1,1],[S_00005_00002,S_00005_00003,-5],aux2613)
weightedsumgeq([5,1,1],[S_00005_00002,S_00005_00003,-5],aux2613)
weightedsumleq([6,1],[S_00001_00003,-5],aux2614)
weightedsumgeq([6,1],[S_00001_00003,-5],aux2614)
weightedsumleq([1,6],[-5,S_00002_00003],aux2615)
weightedsumgeq([1,6],[-5,S_00002_00003],aux2615)
weightedsumleq([1,6],[-5,S_00003_00003],aux2616)
weightedsumgeq([1,6],[-5,S_00003_00003],aux2616)
weightedsumleq([6,1],[S_00004_00003,-5],aux2617)
weightedsumgeq([6,1],[S_00004_00003,-5],aux2617)
weightedsumleq([6,1],[S_00005_00003,-5],aux2618)
weightedsumgeq([6,1],[S_00005_00003,-5],aux2618)
weightedsumleq([1,5,1],[S_00001_00003,S_00001_00004,-5],aux2619)
weightedsumgeq([1,5,1],[S_00001_00003,S_00001_00004,-5],aux2619)
weightedsumleq([1,1,5],[-5,S_00002_00003,S_00002_00004],aux2620)
weightedsumgeq([1,1,5],[-5,S_00002_00003,S_00002_00004],aux2620)
weightedsumleq([1,1,5],[-5,S_00003_00003,S_00003_00004],aux2621)
weightedsumgeq([1,1,5],[-5,S_00003_00003,S_00003_00004],aux2621)
weightedsumleq([1,5,1],[S_00004_00003,S_00004_00004,-5],aux2622)
weightedsumgeq([1,5,1],[S_00004_00003,S_00004_00004,-5],aux2622)
weightedsumleq([1,5,1],[S_00005_00003,S_00005_00004,-5],aux2623)
weightedsumgeq([1,5,1],[S_00005_00003,S_00005_00004,-5],aux2623)
weightedsumleq([1,5,1],[S_00001_00003,S_00001_00005,-5],aux2624)
weightedsumgeq([1,5,1],[S_00001_00003,S_00001_00005,-5],aux2624)
weightedsumleq([1,1,5],[-5,S_00002_00003,S_00002_00005],aux2625)
weightedsumgeq([1,1,5],[-5,S_00002_00003,S_00002_00005],aux2625)
weightedsumleq([1,1,5],[-5,S_00003_00003,S_00003_00005],aux2626)
weightedsumgeq([1,1,5],[-5,S_00003_00003,S_00003_00005],aux2626)
weightedsumleq([1,5,1],[S_00004_00003,S_00004_00005,-5],aux2627)
weightedsumgeq([1,5,1],[S_00004_00003,S_00004_00005,-5],aux2627)
weightedsumleq([1,5,1],[S_00005_00003,S_00005_00005,-5],aux2628)
weightedsumgeq([1,5,1],[S_00005_00003,S_00005_00005,-5],aux2628)
weightedsumleq([1,5,1],[-5,S_00002_00001,S_00002_00004],aux2629)
weightedsumgeq([1,5,1],[-5,S_00002_00001,S_00002_00004],aux2629)
weightedsumleq([1,5,1],[-5,S_00003_00001,S_00003_00004],aux2630)
weightedsumgeq([1,5,1],[-5,S_00003_00001,S_00003_00004],aux2630)
weightedsumleq([5,1,1],[S_00004_00001,S_00004_00004,-5],aux2631)
weightedsumgeq([5,1,1],[S_00004_00001,S_00004_00004,-5],aux2631)
weightedsumleq([5,1,1],[S_00005_00001,S_00005_00004,-5],aux2632)
weightedsumgeq([5,1,1],[S_00005_00001,S_00005_00004,-5],aux2632)
weightedsumleq([5,1,1],[S_00001_00002,S_00001_00004,-5],aux2633)
weightedsumgeq([5,1,1],[S_00001_00002,S_00001_00004,-5],aux2633)
weightedsumleq([1,5,1],[-5,S_00002_00002,S_00002_00004],aux2634)
weightedsumgeq([1,5,1],[-5,S_00002_00002,S_00002_00004],aux2634)
weightedsumleq([1,5,1],[-5,S_00003_00002,S_00003_00004],aux2635)
weightedsumgeq([1,5,1],[-5,S_00003_00002,S_00003_00004],aux2635)
weightedsumleq([5,1,1],[S_00004_00002,S_00004_00004,-5],aux2636)
weightedsumgeq([5,1,1],[S_00004_00002,S_00004_00004,-5],aux2636)
weightedsumleq([5,1,1],[S_00005_00002,S_00005_00004,-5],aux2637)
weightedsumgeq([5,1,1],[S_00005_00002,S_00005_00004,-5],aux2637)
weightedsumleq([5,1,1],[S_00001_00003,S_00001_00004,-5],aux2638)
weightedsumgeq([5,1,1],[S_00001_00003,S_00001_00004,-5],aux2638)
weightedsumleq([1,5,1],[-5,S_00002_00003,S_00002_00004],aux2639)
weightedsumgeq([1,5,1],[-5,S_00002_00003,S_00002_00004],aux2639)
weightedsumleq([1,5,1],[-5,S_00003_00003,S_00003_00004],aux2640)
weightedsumgeq([1,5,1],[-5,S_00003_00003,S_00003_00004],aux2640)
weightedsumleq([5,1,1],[S_00004_00003,S_00004_00004,-5],aux2641)
weightedsumgeq([5,1,1],[S_00004_00003,S_00004_00004,-5],aux2641)
weightedsumleq([5,1,1],[S_00005_00003,S_00005_00004,-5],aux2642)
weightedsumgeq([5,1,1],[S_00005_00003,S_00005_00004,-5],aux2642)
weightedsumleq([6,1],[S_00001_00004,-5],aux2643)
weightedsumgeq([6,1],[S_00001_00004,-5],aux2643)
weightedsumleq([1,6],[-5,S_00002_00004],aux2644)
weightedsumgeq([1,6],[-5,S_00002_00004],aux2644)
weightedsumleq([1,6],[-5,S_00003_00004],aux2645)
weightedsumgeq([1,6],[-5,S_00003_00004],aux2645)
weightedsumleq([6,1],[S_00004_00004,-5],aux2646)
weightedsumgeq([6,1],[S_00004_00004,-5],aux2646)
weightedsumleq([6,1],[S_00005_00004,-5],aux2647)
weightedsumgeq([6,1],[S_00005_00004,-5],aux2647)
weightedsumleq([1,5,1],[S_00001_00004,S_00001_00005,-5],aux2648)
weightedsumgeq([1,5,1],[S_00001_00004,S_00001_00005,-5],aux2648)
weightedsumleq([1,1,5],[-5,S_00002_00004,S_00002_00005],aux2649)
weightedsumgeq([1,1,5],[-5,S_00002_00004,S_00002_00005],aux2649)
weightedsumleq([1,1,5],[-5,S_00003_00004,S_00003_00005],aux2650)
weightedsumgeq([1,1,5],[-5,S_00003_00004,S_00003_00005],aux2650)
weightedsumleq([1,5,1],[S_00004_00004,S_00004_00005,-5],aux2651)
weightedsumgeq([1,5,1],[S_00004_00004,S_00004_00005,-5],aux2651)
weightedsumleq([1,5,1],[S_00005_00004,S_00005_00005,-5],aux2652)
weightedsumgeq([1,5,1],[S_00005_00004,S_00005_00005,-5],aux2652)
weightedsumleq([1,5,1],[-5,S_00002_00001,S_00002_00005],aux2653)
weightedsumgeq([1,5,1],[-5,S_00002_00001,S_00002_00005],aux2653)
weightedsumleq([1,5,1],[-5,S_00003_00001,S_00003_00005],aux2654)
weightedsumgeq([1,5,1],[-5,S_00003_00001,S_00003_00005],aux2654)
weightedsumleq([5,1,1],[S_00004_00001,S_00004_00005,-5],aux2655)
weightedsumgeq([5,1,1],[S_00004_00001,S_00004_00005,-5],aux2655)
weightedsumleq([5,1,1],[S_00005_00001,S_00005_00005,-5],aux2656)
weightedsumgeq([5,1,1],[S_00005_00001,S_00005_00005,-5],aux2656)
weightedsumleq([5,1,1],[S_00001_00002,S_00001_00005,-5],aux2657)
weightedsumgeq([5,1,1],[S_00001_00002,S_00001_00005,-5],aux2657)
weightedsumleq([1,5,1],[-5,S_00002_00002,S_00002_00005],aux2658)
weightedsumgeq([1,5,1],[-5,S_00002_00002,S_00002_00005],aux2658)
weightedsumleq([1,5,1],[-5,S_00003_00002,S_00003_00005],aux2659)
weightedsumgeq([1,5,1],[-5,S_00003_00002,S_00003_00005],aux2659)
weightedsumleq([5,1,1],[S_00004_00002,S_00004_00005,-5],aux2660)
weightedsumgeq([5,1,1],[S_00004_00002,S_00004_00005,-5],aux2660)
weightedsumleq([5,1,1],[S_00005_00002,S_00005_00005,-5],aux2661)
weightedsumgeq([5,1,1],[S_00005_00002,S_00005_00005,-5],aux2661)
weightedsumleq([5,1,1],[S_00001_00003,S_00001_00005,-5],aux2662)
weightedsumgeq([5,1,1],[S_00001_00003,S_00001_00005,-5],aux2662)
weightedsumleq([1,5,1],[-5,S_00002_00003,S_00002_00005],aux2663)
weightedsumgeq([1,5,1],[-5,S_00002_00003,S_00002_00005],aux2663)
weightedsumleq([1,5,1],[-5,S_00003_00003,S_00003_00005],aux2664)
weightedsumgeq([1,5,1],[-5,S_00003_00003,S_00003_00005],aux2664)
weightedsumleq([5,1,1],[S_00004_00003,S_00004_00005,-5],aux2665)
weightedsumgeq([5,1,1],[S_00004_00003,S_00004_00005,-5],aux2665)
weightedsumleq([5,1,1],[S_00005_00003,S_00005_00005,-5],aux2666)
weightedsumgeq([5,1,1],[S_00005_00003,S_00005_00005,-5],aux2666)
weightedsumleq([5,1,1],[S_00001_00004,S_00001_00005,-5],aux2667)
weightedsumgeq([5,1,1],[S_00001_00004,S_00001_00005,-5],aux2667)
weightedsumleq([1,5,1],[-5,S_00002_00004,S_00002_00005],aux2668)
weightedsumgeq([1,5,1],[-5,S_00002_00004,S_00002_00005],aux2668)
weightedsumleq([1,5,1],[-5,S_00003_00004,S_00003_00005],aux2669)
weightedsumgeq([1,5,1],[-5,S_00003_00004,S_00003_00005],aux2669)
weightedsumleq([5,1,1],[S_00004_00004,S_00004_00005,-5],aux2670)
weightedsumgeq([5,1,1],[S_00004_00004,S_00004_00005,-5],aux2670)
weightedsumleq([5,1,1],[S_00005_00004,S_00005_00005,-5],aux2671)
weightedsumgeq([5,1,1],[S_00005_00004,S_00005_00005,-5],aux2671)
weightedsumleq([6,1],[S_00001_00005,-5],aux2672)
weightedsumgeq([6,1],[S_00001_00005,-5],aux2672)
weightedsumleq([1,6],[-5,S_00002_00005],aux2673)
weightedsumgeq([1,6],[-5,S_00002_00005],aux2673)
weightedsumleq([1,6],[-5,S_00003_00005],aux2674)
weightedsumgeq([1,6],[-5,S_00003_00005],aux2674)
weightedsumleq([6,1],[S_00004_00005,-5],aux2675)
weightedsumgeq([6,1],[S_00004_00005,-5],aux2675)
weightedsumleq([6,1],[S_00005_00005,-5],aux2676)
weightedsumgeq([6,1],[S_00005_00005,-5],aux2676)
**EOF**
