MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 64
# CSE_active_eliminated_expressions = 128
# CSE_active_total_size = 240
**VARIABLES**
DISCRETE M_00001_00001 #
{1..3}
DISCRETE M_00001_00002 #
{1..4}
**CONSTRAINTS**
w-inintervalset(M_00001_00002, [1,2,4,4])
**VARIABLES**
DISCRETE M_00001_00003 #
{1..4}
DISCRETE M_00001_00004 #
{1..4}
DISCRETE M_00002_00001 #
{1..4}
DISCRETE M_00002_00002 #
{1..4}
DISCRETE M_00002_00003 #
{1..4}
DISCRETE M_00002_00004 #
{1..4}
DISCRETE M_00003_00001 #
{1..4}
DISCRETE M_00003_00002 #
{1..4}
DISCRETE M_00003_00003 #
{1..4}
DISCRETE M_00003_00004 #
{1..4}
DISCRETE M_00004_00001 #
{1..4}
DISCRETE M_00004_00002 #
{1..4}
DISCRETE M_00004_00003 #
{1..4}
DISCRETE M_00004_00004 #
{1..4}
DISCRETE aux0 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 4*M_00002_00004 + -4)
{3..14}
DISCRETE aux1 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 4*M_00002_00003 + -4)
{3..14}
DISCRETE aux2 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 4*M_00002_00002 + -4)
{2..15}
DISCRETE aux3 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002 + 4*M_00002_00003 + -4)
{3..14}
DISCRETE aux4 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002 + 4*M_00002_00004 + -4)
{3..14}
DISCRETE aux5 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003 + 4*M_00002_00004 + -4)
{2..15}
DISCRETE aux6 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00002_00002 + M_00002_00004 + -4)
{3..14}
DISCRETE aux7 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00002_00002 + M_00002_00003 + -4)
{3..14}
DISCRETE aux8 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00002_00001 + M_00002_00004 + -4)
{3..14}
DISCRETE aux9 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00002_00001 + M_00002_00003 + -4)
{3..14}
DISCRETE aux10 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00002_00001 + M_00002_00002 + -4)
{2..15}
DISCRETE aux11 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00002_00003 + M_00002_00004 + -4)
{2..15}
DISCRETE aux12 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00001 + M_00004_00002 + -4)
{2..15}
DISCRETE aux13 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00001 + M_00004_00003 + -4)
{3..14}
DISCRETE aux14 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00001 + M_00004_00004 + -4)
{3..14}
DISCRETE aux15 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00002 + M_00004_00004 + -4)
{3..14}
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00002 + M_00004_00003 + -4)
{3..14}
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00003 + M_00004_00004 + -4)
{2..15}
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00002 + 4*M_00004_00004 + -4)
{3..14}
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00002 + 4*M_00004_00003 + -4)
{3..14}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003 + 4*M_00004_00004 + -4)
{2..15}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 4*M_00004_00003 + -4)
{3..14}
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 4*M_00004_00002 + -4)
{2..15}
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 4*M_00004_00004 + -4)
{3..14}
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00003_00001 + M_00003_00003 + -4)
{3..14}
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00003_00001 + M_00003_00002 + -4)
{2..15}
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00003_00002 + M_00003_00004 + -4)
{3..14}
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00003_00002 + M_00003_00003 + -4)
{3..14}
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00003_00001 + M_00003_00004 + -4)
{3..14}
DISCRETE aux29 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00003_00003 + M_00003_00004 + -4)
{2..15}
DISCRETE aux30 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00002 + 4*M_00003_00004 + -4)
{3..14}
DISCRETE aux31 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00002 + 4*M_00003_00003 + -4)
{3..14}
DISCRETE aux32 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 4*M_00003_00003 + -4)
{3..14}
DISCRETE aux33 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 4*M_00003_00004 + -4)
{3..14}
DISCRETE aux34 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 4*M_00003_00002 + -4)
{2..15}
DISCRETE aux35 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003 + 4*M_00003_00004 + -4)
{2..15}
DISCRETE aux36 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 4*M_00001_00003 + M_00001_00004)
{2..15}
DISCRETE aux37 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 4*M_00001_00001 + M_00001_00002)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux37, [2,2,5,6,9,10,12,12])
**VARIABLES**
DISCRETE aux38 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 4*M_00001_00001 + M_00001_00004)
{3..10}
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 4*M_00001_00001 + M_00001_00003)
{3..10}
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 4*M_00001_00002 + M_00001_00004)
{3..14}
**CONSTRAINTS**
w-inintervalset(aux40, [3,8,13,14])
**VARIABLES**
DISCRETE aux41 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 4*M_00001_00002 + M_00001_00003)
{3..14}
**CONSTRAINTS**
w-inintervalset(aux41, [3,8,13,14])
**VARIABLES**
DISCRETE aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00002 + 4*M_00001_00003)
{4..14}
**CONSTRAINTS**
w-inintervalset(aux42, [4,6,8,10,13,14])
**VARIABLES**
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00002 + 4*M_00001_00004)
{4..14}
**CONSTRAINTS**
w-inintervalset(aux43, [4,6,8,10,13,14])
**VARIABLES**
DISCRETE aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00001 + 4*M_00001_00004)
{3..14}
**CONSTRAINTS**
w-inintervalset(aux44, [3,3,5,7,9,11,13,14])
**VARIABLES**
DISCRETE aux45 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00001 + 4*M_00001_00003)
{3..14}
**CONSTRAINTS**
w-inintervalset(aux45, [3,3,5,7,9,11,13,14])
**VARIABLES**
DISCRETE aux46 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00001 + 4*M_00001_00002)
{2..15}
**CONSTRAINTS**
w-inintervalset(aux46, [2,2,5,6,13,15])
**VARIABLES**
DISCRETE aux47 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00003 + 4*M_00001_00004)
{2..15}
DISCRETE aux48 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00001 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux48, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux49 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux49, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux50 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux50, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux51, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00004)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux52, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00001)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux53, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00002)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux54, [1,1,6,6,16,16])
**VARIABLES**
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00003)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux55, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux56, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux57, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00001 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux58, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux59, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux60, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00001 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux61, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux62, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux63, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux64 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux48) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003], aux53)
{1..4}
DISCRETE aux65 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux10) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux37)
{1..4}
DISCRETE aux66 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux9) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002], aux39)
{1..4}
DISCRETE aux67 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux8) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002], aux38)
{1..4}
DISCRETE aux68 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux58) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux45)
{1..4}
DISCRETE aux69 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux42) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux25)
{1..4}
DISCRETE aux70 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux55) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux24)
{1..4}
DISCRETE aux71 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux36) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux28)
{1..4}
DISCRETE aux72 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux61) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux44)
{1..4}
DISCRETE aux73 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux43) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux12)
{1..4}
DISCRETE aux74 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux47) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux13)
{1..4}
DISCRETE aux75 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux52) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux14)
{1..4}
DISCRETE aux76 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux46) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux2)
{1..4}
DISCRETE aux77 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux54) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux49)
{1..4}
DISCRETE aux78 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux41) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux7)
{1..4}
DISCRETE aux79 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux40) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux6)
{1..4}
DISCRETE aux80 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux34) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux1)
{1..4}
DISCRETE aux81 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux57) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux3)
{1..4}
DISCRETE aux82 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux51) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux27)
{1..4}
DISCRETE aux83 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux26) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux11)
{1..4}
DISCRETE aux84 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux22) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux0)
{1..4}
DISCRETE aux85 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux60) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux4)
{1..4}
DISCRETE aux86 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux16) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux5)
{1..4}
DISCRETE aux87 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux50) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux15)
{1..4}
DISCRETE aux88 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux21) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux32)
{1..4}
DISCRETE aux89 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux19) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux31)
{1..4}
DISCRETE aux90 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux62) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux56)
{1..4}
DISCRETE aux91 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux17) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux29)
{1..4}
DISCRETE aux92 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux23) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux33)
{1..4}
DISCRETE aux93 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux18) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux30)
{1..4}
DISCRETE aux94 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux20) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux35)
{1..4}
DISCRETE aux95 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux63) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux59)
{1..4}
DISCRETE aux96 #ElementOne([1, 2, 3], M_00001_00001)
{1..3}
DISCRETE aux97 #ElementOne([1, 2, 3, 4], M_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux97, [1,2,4,4])
**VARIABLES**
DISCRETE aux98 #ElementOne([1, 2, 3, 4], M_00001_00003)
{1..4}
DISCRETE aux99 #ElementOne([1, 2, 3, 4], M_00001_00004)
{1..4}
DISCRETE aux100 #ElementOne([1, 2, 3, 4], M_00002_00001)
{1..4}
DISCRETE aux101 #ElementOne([1, 2, 3, 4], M_00002_00002)
{1..4}
DISCRETE aux102 #ElementOne([1, 2, 3, 4], M_00002_00003)
{1..4}
DISCRETE aux103 #ElementOne([1, 2, 3, 4], M_00002_00004)
{1..4}
DISCRETE aux104 #ElementOne([1, 2, 3, 4], M_00003_00001)
{1..4}
DISCRETE aux105 #ElementOne([1, 2, 3, 4], M_00003_00002)
{1..4}
DISCRETE aux106 #ElementOne([1, 2, 3, 4], M_00003_00003)
{1..4}
DISCRETE aux107 #ElementOne([1, 2, 3, 4], M_00003_00004)
{1..4}
DISCRETE aux108 #ElementOne([1, 2, 3, 4], M_00004_00001)
{1..4}
DISCRETE aux109 #ElementOne([1, 2, 3, 4], M_00004_00002)
{1..4}
DISCRETE aux110 #ElementOne([1, 2, 3, 4], M_00004_00003)
{1..4}
DISCRETE aux111 #ElementOne([1, 2, 3, 4], M_00004_00004)
{1..4}
DISCRETE aux112 #ElementOne([1, 2, 4], M_00001_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux112, [1,2,4,4])
**VARIABLES**
DISCRETE aux113 #ElementOne([1, 2, 4, 3], M_00001_00002)
{1..3}
DISCRETE aux114 #ElementOne([1, 2, 4, 3], M_00001_00004)
{1..4}
DISCRETE aux115 #ElementOne([1, 2, 4, 3], M_00001_00003)
{1..4}
DISCRETE aux116 #ElementOne([1, 2, 4, 3], M_00002_00001)
{1..4}
DISCRETE aux117 #ElementOne([1, 2, 4, 3], M_00002_00002)
{1..4}
DISCRETE aux118 #ElementOne([1, 2, 4, 3], M_00002_00004)
{1..4}
DISCRETE aux119 #ElementOne([1, 2, 4, 3], M_00002_00003)
{1..4}
DISCRETE aux120 #ElementOne([1, 2, 4, 3], M_00004_00001)
{1..4}
DISCRETE aux121 #ElementOne([1, 2, 4, 3], M_00004_00002)
{1..4}
DISCRETE aux122 #ElementOne([1, 2, 4, 3], M_00004_00004)
{1..4}
DISCRETE aux123 #ElementOne([1, 2, 4, 3], M_00004_00003)
{1..4}
DISCRETE aux124 #ElementOne([1, 2, 4, 3], M_00003_00001)
{1..4}
DISCRETE aux125 #ElementOne([1, 2, 4, 3], M_00003_00002)
{1..4}
DISCRETE aux126 #ElementOne([1, 2, 4, 3], M_00003_00004)
{1..4}
DISCRETE aux127 #ElementOne([1, 2, 4, 3], M_00003_00003)
{1..4}
DISCRETE aux128 #ElementOne([3, 4, 2, 1], M_00004_00004)
{1..4}
DISCRETE aux129 #ElementOne([3, 4, 2, 1], M_00004_00003)
{1..4}
DISCRETE aux130 #ElementOne([3, 4, 2, 1], M_00004_00001)
{1..4}
DISCRETE aux131 #ElementOne([3, 4, 2, 1], M_00004_00002)
{1..4}
DISCRETE aux132 #ElementOne([3, 4, 2, 1], M_00003_00004)
{1..4}
DISCRETE aux133 #ElementOne([3, 4, 2, 1], M_00003_00003)
{1..4}
DISCRETE aux134 #ElementOne([3, 4, 2, 1], M_00003_00001)
{1..4}
DISCRETE aux135 #ElementOne([3, 4, 2, 1], M_00003_00002)
{1..4}
DISCRETE aux136 #ElementOne([3, 4, 2, 1], M_00001_00004)
{1..4}
DISCRETE aux137 #ElementOne([3, 4, 2, 1], M_00001_00003)
{1..4}
DISCRETE aux138 #ElementOne([3, 4, 2], M_00001_00001)
{2..4}
DISCRETE aux139 #ElementOne([3, 4, 2, 1], M_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux139, [1,1,3,4])
**VARIABLES**
DISCRETE aux140 #ElementOne([3, 4, 2, 1], M_00002_00004)
{1..4}
DISCRETE aux141 #ElementOne([3, 4, 2, 1], M_00002_00003)
{1..4}
DISCRETE aux142 #ElementOne([3, 4, 2, 1], M_00002_00001)
{1..4}
DISCRETE aux143 #ElementOne([3, 4, 2, 1], M_00002_00002)
{1..4}
DISCRETE aux144 #ElementOne([4, 3, 2, 1], M_00004_00004)
{1..4}
DISCRETE aux145 #ElementOne([4, 3, 2, 1], M_00004_00003)
{1..4}
DISCRETE aux146 #ElementOne([4, 3, 2, 1], M_00004_00002)
{1..4}
DISCRETE aux147 #ElementOne([4, 3, 2, 1], M_00004_00001)
{1..4}
DISCRETE aux148 #ElementOne([4, 3, 2, 1], M_00003_00004)
{1..4}
DISCRETE aux149 #ElementOne([4, 3, 2, 1], M_00003_00003)
{1..4}
DISCRETE aux150 #ElementOne([4, 3, 2, 1], M_00003_00002)
{1..4}
DISCRETE aux151 #ElementOne([4, 3, 2, 1], M_00003_00001)
{1..4}
DISCRETE aux152 #ElementOne([4, 3, 2, 1], M_00002_00004)
{1..4}
DISCRETE aux153 #ElementOne([4, 3, 2, 1], M_00002_00003)
{1..4}
DISCRETE aux154 #ElementOne([4, 3, 2, 1], M_00002_00002)
{1..4}
DISCRETE aux155 #ElementOne([4, 3, 2, 1], M_00002_00001)
{1..4}
DISCRETE aux156 #ElementOne([4, 3, 2, 1], M_00001_00004)
{1..4}
DISCRETE aux157 #ElementOne([4, 3, 2, 1], M_00001_00003)
{1..4}
DISCRETE aux158 #ElementOne([4, 3, 2, 1], M_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux158, [1,1,3,4])
**VARIABLES**
DISCRETE aux159 #ElementOne([4, 3, 2], M_00001_00001)
{2..4}
DISCRETE aux160 #ElementOne([2, 1, 3, 4], M_00002_00002)
{1..4}
DISCRETE aux161 #ElementOne([2, 1, 3, 4], M_00002_00001)
{1..4}
DISCRETE aux162 #ElementOne([2, 1, 3, 4], M_00002_00003)
{1..4}
DISCRETE aux163 #ElementOne([2, 1, 3, 4], M_00002_00004)
{1..4}
DISCRETE aux164 #ElementOne([2, 1, 3, 4], M_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux164, [1,2,4,4])
**VARIABLES**
DISCRETE aux165 #ElementOne([2, 1, 3], M_00001_00001)
{1..3}
DISCRETE aux166 #ElementOne([2, 1, 3, 4], M_00001_00003)
{1..4}
DISCRETE aux167 #ElementOne([2, 1, 3, 4], M_00001_00004)
{1..4}
DISCRETE aux168 #ElementOne([2, 1, 3, 4], M_00003_00002)
{1..4}
DISCRETE aux169 #ElementOne([2, 1, 3, 4], M_00003_00001)
{1..4}
DISCRETE aux170 #ElementOne([2, 1, 3, 4], M_00003_00003)
{1..4}
DISCRETE aux171 #ElementOne([2, 1, 3, 4], M_00003_00004)
{1..4}
DISCRETE aux172 #ElementOne([2, 1, 3, 4], M_00004_00002)
{1..4}
DISCRETE aux173 #ElementOne([2, 1, 3, 4], M_00004_00001)
{1..4}
DISCRETE aux174 #ElementOne([2, 1, 3, 4], M_00004_00003)
{1..4}
DISCRETE aux175 #ElementOne([2, 1, 3, 4], M_00004_00004)
{1..4}
DISCRETE aux176 #ElementOne([2, 1, 4, 3], M_00002_00002)
{1..4}
DISCRETE aux177 #ElementOne([2, 1, 4, 3], M_00002_00001)
{1..4}
DISCRETE aux178 #ElementOne([2, 1, 4, 3], M_00002_00004)
{1..4}
DISCRETE aux179 #ElementOne([2, 1, 4, 3], M_00002_00003)
{1..4}
DISCRETE aux180 #ElementOne([2, 1, 4, 3], M_00001_00002)
{1..3}
DISCRETE aux181 #ElementOne([2, 1, 4], M_00001_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux181, [1,2,4,4])
**VARIABLES**
DISCRETE aux182 #ElementOne([2, 1, 4, 3], M_00001_00004)
{1..4}
DISCRETE aux183 #ElementOne([2, 1, 4, 3], M_00001_00003)
{1..4}
DISCRETE aux184 #ElementOne([2, 1, 4, 3], M_00004_00002)
{1..4}
DISCRETE aux185 #ElementOne([2, 1, 4, 3], M_00004_00001)
{1..4}
DISCRETE aux186 #ElementOne([2, 1, 4, 3], M_00004_00004)
{1..4}
DISCRETE aux187 #ElementOne([2, 1, 4, 3], M_00004_00003)
{1..4}
DISCRETE aux188 #ElementOne([2, 1, 4, 3], M_00003_00002)
{1..4}
DISCRETE aux189 #ElementOne([2, 1, 4, 3], M_00003_00001)
{1..4}
DISCRETE aux190 #ElementOne([2, 1, 4, 3], M_00003_00004)
{1..4}
DISCRETE aux191 #ElementOne([2, 1, 4, 3], M_00003_00003)
{1..4}
DISCRETE aux192 #ElementOne([3, 4, 1, 2], M_00003_00003)
{1..4}
DISCRETE aux193 #ElementOne([3, 4, 1, 2], M_00003_00004)
{1..4}
DISCRETE aux194 #ElementOne([3, 4, 1, 2], M_00003_00001)
{1..4}
DISCRETE aux195 #ElementOne([3, 4, 1, 2], M_00003_00002)
{1..4}
DISCRETE aux196 #ElementOne([3, 4, 1, 2], M_00004_00003)
{1..4}
DISCRETE aux197 #ElementOne([3, 4, 1, 2], M_00004_00004)
{1..4}
DISCRETE aux198 #ElementOne([3, 4, 1, 2], M_00004_00001)
{1..4}
DISCRETE aux199 #ElementOne([3, 4, 1, 2], M_00004_00002)
{1..4}
DISCRETE aux200 #ElementOne([3, 4, 1, 2], M_00001_00003)
{1..4}
DISCRETE aux201 #ElementOne([3, 4, 1, 2], M_00001_00004)
{1..4}
DISCRETE aux202 #ElementOne([3, 4, 1], M_00001_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux202, [1,1,3,4])
**VARIABLES**
DISCRETE aux203 #ElementOne([3, 4, 1, 2], M_00001_00002)
{2..4}
DISCRETE aux204 #ElementOne([3, 4, 1, 2], M_00002_00003)
{1..4}
DISCRETE aux205 #ElementOne([3, 4, 1, 2], M_00002_00004)
{1..4}
DISCRETE aux206 #ElementOne([3, 4, 1, 2], M_00002_00001)
{1..4}
DISCRETE aux207 #ElementOne([3, 4, 1, 2], M_00002_00002)
{1..4}
DISCRETE aux208 #ElementOne([4, 3, 1, 2], M_00003_00003)
{1..4}
DISCRETE aux209 #ElementOne([4, 3, 1, 2], M_00003_00004)
{1..4}
DISCRETE aux210 #ElementOne([4, 3, 1, 2], M_00003_00002)
{1..4}
DISCRETE aux211 #ElementOne([4, 3, 1, 2], M_00003_00001)
{1..4}
DISCRETE aux212 #ElementOne([4, 3, 1, 2], M_00004_00003)
{1..4}
DISCRETE aux213 #ElementOne([4, 3, 1, 2], M_00004_00004)
{1..4}
DISCRETE aux214 #ElementOne([4, 3, 1, 2], M_00004_00002)
{1..4}
DISCRETE aux215 #ElementOne([4, 3, 1, 2], M_00004_00001)
{1..4}
DISCRETE aux216 #ElementOne([4, 3, 1, 2], M_00002_00003)
{1..4}
DISCRETE aux217 #ElementOne([4, 3, 1, 2], M_00002_00004)
{1..4}
DISCRETE aux218 #ElementOne([4, 3, 1, 2], M_00002_00002)
{1..4}
DISCRETE aux219 #ElementOne([4, 3, 1, 2], M_00002_00001)
{1..4}
DISCRETE aux220 #ElementOne([4, 3, 1, 2], M_00001_00003)
{1..4}
DISCRETE aux221 #ElementOne([4, 3, 1, 2], M_00001_00004)
{1..4}
DISCRETE aux222 #ElementOne([4, 3, 1, 2], M_00001_00002)
{2..4}
DISCRETE aux223 #ElementOne([4, 3, 1], M_00001_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux223, [1,1,3,4])
**VARIABLES**
**TUPLELIST**
rack 4 4
1 1 3 4 
2 2 3 4 
1 2 3 3 
1 2 4 4 
**VARIABLES**
ALIAS rack[4,4]=[[1, 1, 3, 4], [2, 2, 3, 4], [1, 2, 3, 3], [1, 2, 4, 4]]
**TUPLELIST**
perms 8 4
1 2 3 4 
1 2 4 3 
4 3 1 2 
4 3 2 1 
2 1 3 4 
2 1 4 3 
3 4 1 2 
3 4 2 1 
**VARIABLES**
ALIAS perms[8,4]=[[1, 2, 3, 4], [1, 2, 4, 3], [4, 3, 1, 2], [4, 3, 2, 1], [2, 1, 3, 4], [2, 1, 4, 3], [3, 4, 1, 2], [3, 4, 2, 1]]
**TUPLELIST**
inverses 8 4
1 2 3 4 
1 2 4 3 
3 4 2 1 
4 3 2 1 
2 1 3 4 
2 1 4 3 
3 4 1 2 
4 3 1 2 
**VARIABLES**
ALIAS inverses[8,4]=[[1, 2, 3, 4], [1, 2, 4, 3], [3, 4, 2, 1], [4, 3, 2, 1], [2, 1, 3, 4], [2, 1, 4, 3], [3, 4, 1, 2], [4, 3, 1, 2]]
**SEARCH**
PRINT[[M_00001_00001],[M_00001_00002],[M_00001_00003],[M_00001_00004],[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004]]
VARORDER STATIC [M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004]
**CONSTRAINTS**
watchelement_one([1, 2, 3], M_00001_00001, aux96)
watchelement_one([1, 2, 3, 4], M_00001_00002, aux97)
watchelement_one([1, 2, 3, 4], M_00001_00003, aux98)
watchelement_one([1, 2, 3, 4], M_00001_00004, aux99)
watchelement_one([1, 2, 3, 4], M_00002_00001, aux100)
watchelement_one([1, 2, 3, 4], M_00002_00002, aux101)
watchelement_one([1, 2, 3, 4], M_00002_00003, aux102)
watchelement_one([1, 2, 3, 4], M_00002_00004, aux103)
watchelement_one([1, 2, 3, 4], M_00003_00001, aux104)
watchelement_one([1, 2, 3, 4], M_00003_00002, aux105)
watchelement_one([1, 2, 3, 4], M_00003_00003, aux106)
watchelement_one([1, 2, 3, 4], M_00003_00004, aux107)
watchelement_one([1, 2, 3, 4], M_00004_00001, aux108)
watchelement_one([1, 2, 3, 4], M_00004_00002, aux109)
watchelement_one([1, 2, 3, 4], M_00004_00003, aux110)
watchelement_one([1, 2, 3, 4], M_00004_00004, aux111)
watchelement_one([1, 2, 4], M_00001_00001, aux112)
watchelement_one([1, 2, 4, 3], M_00001_00002, aux113)
watchelement_one([1, 2, 4, 3], M_00001_00004, aux114)
watchelement_one([1, 2, 4, 3], M_00001_00003, aux115)
watchelement_one([1, 2, 4, 3], M_00002_00001, aux116)
watchelement_one([1, 2, 4, 3], M_00002_00002, aux117)
watchelement_one([1, 2, 4, 3], M_00002_00004, aux118)
watchelement_one([1, 2, 4, 3], M_00002_00003, aux119)
watchelement_one([1, 2, 4, 3], M_00004_00001, aux120)
watchelement_one([1, 2, 4, 3], M_00004_00002, aux121)
watchelement_one([1, 2, 4, 3], M_00004_00004, aux122)
watchelement_one([1, 2, 4, 3], M_00004_00003, aux123)
watchelement_one([1, 2, 4, 3], M_00003_00001, aux124)
watchelement_one([1, 2, 4, 3], M_00003_00002, aux125)
watchelement_one([1, 2, 4, 3], M_00003_00004, aux126)
watchelement_one([1, 2, 4, 3], M_00003_00003, aux127)
watchelement_one([3, 4, 2, 1], M_00004_00004, aux128)
watchelement_one([3, 4, 2, 1], M_00004_00003, aux129)
watchelement_one([3, 4, 2, 1], M_00004_00001, aux130)
watchelement_one([3, 4, 2, 1], M_00004_00002, aux131)
watchelement_one([3, 4, 2, 1], M_00003_00004, aux132)
watchelement_one([3, 4, 2, 1], M_00003_00003, aux133)
watchelement_one([3, 4, 2, 1], M_00003_00001, aux134)
watchelement_one([3, 4, 2, 1], M_00003_00002, aux135)
watchelement_one([3, 4, 2, 1], M_00001_00004, aux136)
watchelement_one([3, 4, 2, 1], M_00001_00003, aux137)
watchelement_one([3, 4, 2], M_00001_00001, aux138)
watchelement_one([3, 4, 2, 1], M_00001_00002, aux139)
watchelement_one([3, 4, 2, 1], M_00002_00004, aux140)
watchelement_one([3, 4, 2, 1], M_00002_00003, aux141)
watchelement_one([3, 4, 2, 1], M_00002_00001, aux142)
watchelement_one([3, 4, 2, 1], M_00002_00002, aux143)
watchelement_one([4, 3, 2, 1], M_00004_00004, aux144)
watchelement_one([4, 3, 2, 1], M_00004_00003, aux145)
watchelement_one([4, 3, 2, 1], M_00004_00002, aux146)
watchelement_one([4, 3, 2, 1], M_00004_00001, aux147)
watchelement_one([4, 3, 2, 1], M_00003_00004, aux148)
watchelement_one([4, 3, 2, 1], M_00003_00003, aux149)
watchelement_one([4, 3, 2, 1], M_00003_00002, aux150)
watchelement_one([4, 3, 2, 1], M_00003_00001, aux151)
watchelement_one([4, 3, 2, 1], M_00002_00004, aux152)
watchelement_one([4, 3, 2, 1], M_00002_00003, aux153)
watchelement_one([4, 3, 2, 1], M_00002_00002, aux154)
watchelement_one([4, 3, 2, 1], M_00002_00001, aux155)
watchelement_one([4, 3, 2, 1], M_00001_00004, aux156)
watchelement_one([4, 3, 2, 1], M_00001_00003, aux157)
watchelement_one([4, 3, 2, 1], M_00001_00002, aux158)
watchelement_one([4, 3, 2], M_00001_00001, aux159)
watchelement_one([2, 1, 3, 4], M_00002_00002, aux160)
watchelement_one([2, 1, 3, 4], M_00002_00001, aux161)
watchelement_one([2, 1, 3, 4], M_00002_00003, aux162)
watchelement_one([2, 1, 3, 4], M_00002_00004, aux163)
watchelement_one([2, 1, 3, 4], M_00001_00002, aux164)
watchelement_one([2, 1, 3], M_00001_00001, aux165)
watchelement_one([2, 1, 3, 4], M_00001_00003, aux166)
watchelement_one([2, 1, 3, 4], M_00001_00004, aux167)
watchelement_one([2, 1, 3, 4], M_00003_00002, aux168)
watchelement_one([2, 1, 3, 4], M_00003_00001, aux169)
watchelement_one([2, 1, 3, 4], M_00003_00003, aux170)
watchelement_one([2, 1, 3, 4], M_00003_00004, aux171)
watchelement_one([2, 1, 3, 4], M_00004_00002, aux172)
watchelement_one([2, 1, 3, 4], M_00004_00001, aux173)
watchelement_one([2, 1, 3, 4], M_00004_00003, aux174)
watchelement_one([2, 1, 3, 4], M_00004_00004, aux175)
watchelement_one([2, 1, 4, 3], M_00002_00002, aux176)
watchelement_one([2, 1, 4, 3], M_00002_00001, aux177)
watchelement_one([2, 1, 4, 3], M_00002_00004, aux178)
watchelement_one([2, 1, 4, 3], M_00002_00003, aux179)
watchelement_one([2, 1, 4, 3], M_00001_00002, aux180)
watchelement_one([2, 1, 4], M_00001_00001, aux181)
watchelement_one([2, 1, 4, 3], M_00001_00004, aux182)
watchelement_one([2, 1, 4, 3], M_00001_00003, aux183)
watchelement_one([2, 1, 4, 3], M_00004_00002, aux184)
watchelement_one([2, 1, 4, 3], M_00004_00001, aux185)
watchelement_one([2, 1, 4, 3], M_00004_00004, aux186)
watchelement_one([2, 1, 4, 3], M_00004_00003, aux187)
watchelement_one([2, 1, 4, 3], M_00003_00002, aux188)
watchelement_one([2, 1, 4, 3], M_00003_00001, aux189)
watchelement_one([2, 1, 4, 3], M_00003_00004, aux190)
watchelement_one([2, 1, 4, 3], M_00003_00003, aux191)
watchelement_one([3, 4, 1, 2], M_00003_00003, aux192)
watchelement_one([3, 4, 1, 2], M_00003_00004, aux193)
watchelement_one([3, 4, 1, 2], M_00003_00001, aux194)
watchelement_one([3, 4, 1, 2], M_00003_00002, aux195)
watchelement_one([3, 4, 1, 2], M_00004_00003, aux196)
watchelement_one([3, 4, 1, 2], M_00004_00004, aux197)
watchelement_one([3, 4, 1, 2], M_00004_00001, aux198)
watchelement_one([3, 4, 1, 2], M_00004_00002, aux199)
watchelement_one([3, 4, 1, 2], M_00001_00003, aux200)
watchelement_one([3, 4, 1, 2], M_00001_00004, aux201)
watchelement_one([3, 4, 1], M_00001_00001, aux202)
watchelement_one([3, 4, 1, 2], M_00001_00002, aux203)
watchelement_one([3, 4, 1, 2], M_00002_00003, aux204)
watchelement_one([3, 4, 1, 2], M_00002_00004, aux205)
watchelement_one([3, 4, 1, 2], M_00002_00001, aux206)
watchelement_one([3, 4, 1, 2], M_00002_00002, aux207)
watchelement_one([4, 3, 1, 2], M_00003_00003, aux208)
watchelement_one([4, 3, 1, 2], M_00003_00004, aux209)
watchelement_one([4, 3, 1, 2], M_00003_00002, aux210)
watchelement_one([4, 3, 1, 2], M_00003_00001, aux211)
watchelement_one([4, 3, 1, 2], M_00004_00003, aux212)
watchelement_one([4, 3, 1, 2], M_00004_00004, aux213)
watchelement_one([4, 3, 1, 2], M_00004_00002, aux214)
watchelement_one([4, 3, 1, 2], M_00004_00001, aux215)
watchelement_one([4, 3, 1, 2], M_00002_00003, aux216)
watchelement_one([4, 3, 1, 2], M_00002_00004, aux217)
watchelement_one([4, 3, 1, 2], M_00002_00002, aux218)
watchelement_one([4, 3, 1, 2], M_00002_00001, aux219)
watchelement_one([4, 3, 1, 2], M_00001_00003, aux220)
watchelement_one([4, 3, 1, 2], M_00001_00004, aux221)
watchelement_one([4, 3, 1, 2], M_00001_00002, aux222)
watchelement_one([4, 3, 1], M_00001_00001, aux223)
gacalldiff([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004])
gacalldiff([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004])
gacalldiff([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004])
gacalldiff([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004])
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3], aux53, M_00001_00001)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3], aux37, M_00001_00001)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2], aux39, M_00001_00003)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2], aux38, M_00001_00004)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4], aux46, M_00001_00002)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4, 4], aux54, M_00001_00002)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux41, M_00001_00003)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux40, M_00001_00004)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux45, M_00001_00001)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux42, M_00001_00002)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4, 4], aux55, M_00001_00003)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4], aux36, M_00001_00003)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux44, M_00001_00001)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux43, M_00001_00002)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4], aux47, M_00001_00004)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4, 4], aux52, M_00001_00004)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4, 4], aux48, M_00002_00001)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4], aux10, M_00002_00001)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux9, M_00002_00003)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux8, M_00002_00004)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4], aux2, M_00002_00002)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4, 4], aux49, M_00002_00002)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux7, M_00002_00003)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux6, M_00002_00004)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux1, M_00002_00001)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux3, M_00002_00002)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4, 4], aux51, M_00002_00003)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4], aux11, M_00002_00003)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux0, M_00002_00001)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux4, M_00002_00002)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4], aux5, M_00002_00004)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4, 4], aux50, M_00002_00004)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4, 4], aux58, M_00003_00001)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4], aux25, M_00003_00001)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux24, M_00003_00003)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux28, M_00003_00004)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4], aux34, M_00003_00002)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4, 4], aux57, M_00003_00002)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux27, M_00003_00003)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux26, M_00003_00004)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux32, M_00003_00001)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux31, M_00003_00002)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4, 4], aux56, M_00003_00003)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4], aux29, M_00003_00003)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux33, M_00003_00001)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux30, M_00003_00002)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4], aux35, M_00003_00004)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4, 4], aux59, M_00003_00004)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4, 4], aux61, M_00004_00001)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4], aux12, M_00004_00001)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux13, M_00004_00003)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux14, M_00004_00004)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4], aux22, M_00004_00002)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4, 4], aux60, M_00004_00002)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux16, M_00004_00003)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux15, M_00004_00004)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux21, M_00004_00001)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux19, M_00004_00002)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4, 4], aux62, M_00004_00003)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4], aux17, M_00004_00003)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux23, M_00004_00001)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2], aux18, M_00004_00002)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4], aux20, M_00004_00004)
watchelement_one([1, 1, 3, 4, 2, 2, 3, 4, 1, 2, 3, 3, 1, 2, 4, 4], aux63, M_00004_00004)
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux96, aux97, aux98, aux99, aux100, aux101, aux102, aux103, aux104, aux105, aux106, aux107, aux108, aux109, aux110, aux111])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux112, aux113, aux114, aux115, aux116, aux117, aux118, aux119, aux120, aux121, aux122, aux123, aux124, aux125, aux126, aux127])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux128, aux129, aux130, aux131, aux132, aux133, aux134, aux135, aux136, aux137, aux138, aux139, aux140, aux141, aux142, aux143])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux144, aux145, aux146, aux147, aux148, aux149, aux150, aux151, aux152, aux153, aux154, aux155, aux156, aux157, aux158, aux159])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux160, aux161, aux162, aux163, aux164, aux165, aux166, aux167, aux168, aux169, aux170, aux171, aux172, aux173, aux174, aux175])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux176, aux177, aux178, aux179, aux180, aux181, aux182, aux183, aux184, aux185, aux186, aux187, aux188, aux189, aux190, aux191])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux192, aux193, aux194, aux195, aux196, aux197, aux198, aux199, aux200, aux201, aux202, aux203, aux204, aux205, aux206, aux207])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux208, aux209, aux210, aux211, aux212, aux213, aux214, aux215, aux216, aux217, aux218, aux219, aux220, aux221, aux222, aux223])
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux48, aux64)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003], aux53, aux64)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux10, aux65)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux37, aux65)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux9, aux66)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002], aux39, aux66)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux8, aux67)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002], aux38, aux67)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux58, aux68)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux45, aux68)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux42, aux69)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux25, aux69)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux55, aux70)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux24, aux70)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux36, aux71)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux28, aux71)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux61, aux72)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux44, aux72)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux43, aux73)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux12, aux73)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux47, aux74)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux13, aux74)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux52, aux75)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux14, aux75)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux46, aux76)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux2, aux76)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux54, aux77)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux49, aux77)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux41, aux78)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux7, aux78)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux40, aux79)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux6, aux79)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux34, aux80)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux1, aux80)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux57, aux81)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux3, aux81)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux51, aux82)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux27, aux82)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux26, aux83)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux11, aux83)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux22, aux84)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux0, aux84)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux60, aux85)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux4, aux85)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux16, aux86)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux5, aux86)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux50, aux87)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux15, aux87)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux21, aux88)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux32, aux88)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux19, aux89)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux31, aux89)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux62, aux90)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux56, aux90)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux17, aux91)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux29, aux91)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux23, aux92)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux33, aux92)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux18, aux93)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux30, aux93)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux20, aux94)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux35, aux94)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux63, aux95)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux59, aux95)
weightedsumleq([1,4,1],[M_00002_00001,M_00002_00004,-4],aux0)
weightedsumgeq([1,4,1],[M_00002_00001,M_00002_00004,-4],aux0)
weightedsumleq([1,4,1],[M_00002_00001,M_00002_00003,-4],aux1)
weightedsumgeq([1,4,1],[M_00002_00001,M_00002_00003,-4],aux1)
weightedsumleq([1,4,1],[M_00002_00001,M_00002_00002,-4],aux2)
weightedsumgeq([1,4,1],[M_00002_00001,M_00002_00002,-4],aux2)
weightedsumleq([1,4,1],[M_00002_00002,M_00002_00003,-4],aux3)
weightedsumgeq([1,4,1],[M_00002_00002,M_00002_00003,-4],aux3)
weightedsumleq([1,4,1],[M_00002_00002,M_00002_00004,-4],aux4)
weightedsumgeq([1,4,1],[M_00002_00002,M_00002_00004,-4],aux4)
weightedsumleq([1,4,1],[M_00002_00003,M_00002_00004,-4],aux5)
weightedsumgeq([1,4,1],[M_00002_00003,M_00002_00004,-4],aux5)
weightedsumleq([4,1,1],[M_00002_00002,M_00002_00004,-4],aux6)
weightedsumgeq([4,1,1],[M_00002_00002,M_00002_00004,-4],aux6)
weightedsumleq([4,1,1],[M_00002_00002,M_00002_00003,-4],aux7)
weightedsumgeq([4,1,1],[M_00002_00002,M_00002_00003,-4],aux7)
weightedsumleq([4,1,1],[M_00002_00001,M_00002_00004,-4],aux8)
weightedsumgeq([4,1,1],[M_00002_00001,M_00002_00004,-4],aux8)
weightedsumleq([4,1,1],[M_00002_00001,M_00002_00003,-4],aux9)
weightedsumgeq([4,1,1],[M_00002_00001,M_00002_00003,-4],aux9)
weightedsumleq([4,1,1],[M_00002_00001,M_00002_00002,-4],aux10)
weightedsumgeq([4,1,1],[M_00002_00001,M_00002_00002,-4],aux10)
weightedsumleq([4,1,1],[M_00002_00003,M_00002_00004,-4],aux11)
weightedsumgeq([4,1,1],[M_00002_00003,M_00002_00004,-4],aux11)
weightedsumleq([4,1,1],[M_00004_00001,M_00004_00002,-4],aux12)
weightedsumgeq([4,1,1],[M_00004_00001,M_00004_00002,-4],aux12)
weightedsumleq([4,1,1],[M_00004_00001,M_00004_00003,-4],aux13)
weightedsumgeq([4,1,1],[M_00004_00001,M_00004_00003,-4],aux13)
weightedsumleq([4,1,1],[M_00004_00001,M_00004_00004,-4],aux14)
weightedsumgeq([4,1,1],[M_00004_00001,M_00004_00004,-4],aux14)
weightedsumleq([4,1,1],[M_00004_00002,M_00004_00004,-4],aux15)
weightedsumgeq([4,1,1],[M_00004_00002,M_00004_00004,-4],aux15)
weightedsumleq([4,1,1],[M_00004_00002,M_00004_00003,-4],aux16)
weightedsumgeq([4,1,1],[M_00004_00002,M_00004_00003,-4],aux16)
weightedsumleq([4,1,1],[M_00004_00003,M_00004_00004,-4],aux17)
weightedsumgeq([4,1,1],[M_00004_00003,M_00004_00004,-4],aux17)
weightedsumleq([1,4,1],[M_00004_00002,M_00004_00004,-4],aux18)
weightedsumgeq([1,4,1],[M_00004_00002,M_00004_00004,-4],aux18)
weightedsumleq([1,4,1],[M_00004_00002,M_00004_00003,-4],aux19)
weightedsumgeq([1,4,1],[M_00004_00002,M_00004_00003,-4],aux19)
weightedsumleq([1,4,1],[M_00004_00003,M_00004_00004,-4],aux20)
weightedsumgeq([1,4,1],[M_00004_00003,M_00004_00004,-4],aux20)
weightedsumleq([1,4,1],[M_00004_00001,M_00004_00003,-4],aux21)
weightedsumgeq([1,4,1],[M_00004_00001,M_00004_00003,-4],aux21)
weightedsumleq([1,4,1],[M_00004_00001,M_00004_00002,-4],aux22)
weightedsumgeq([1,4,1],[M_00004_00001,M_00004_00002,-4],aux22)
weightedsumleq([1,4,1],[M_00004_00001,M_00004_00004,-4],aux23)
weightedsumgeq([1,4,1],[M_00004_00001,M_00004_00004,-4],aux23)
weightedsumleq([4,1,1],[M_00003_00001,M_00003_00003,-4],aux24)
weightedsumgeq([4,1,1],[M_00003_00001,M_00003_00003,-4],aux24)
weightedsumleq([4,1,1],[M_00003_00001,M_00003_00002,-4],aux25)
weightedsumgeq([4,1,1],[M_00003_00001,M_00003_00002,-4],aux25)
weightedsumleq([4,1,1],[M_00003_00002,M_00003_00004,-4],aux26)
weightedsumgeq([4,1,1],[M_00003_00002,M_00003_00004,-4],aux26)
weightedsumleq([4,1,1],[M_00003_00002,M_00003_00003,-4],aux27)
weightedsumgeq([4,1,1],[M_00003_00002,M_00003_00003,-4],aux27)
weightedsumleq([4,1,1],[M_00003_00001,M_00003_00004,-4],aux28)
weightedsumgeq([4,1,1],[M_00003_00001,M_00003_00004,-4],aux28)
weightedsumleq([4,1,1],[M_00003_00003,M_00003_00004,-4],aux29)
weightedsumgeq([4,1,1],[M_00003_00003,M_00003_00004,-4],aux29)
weightedsumleq([1,4,1],[M_00003_00002,M_00003_00004,-4],aux30)
weightedsumgeq([1,4,1],[M_00003_00002,M_00003_00004,-4],aux30)
weightedsumleq([1,4,1],[M_00003_00002,M_00003_00003,-4],aux31)
weightedsumgeq([1,4,1],[M_00003_00002,M_00003_00003,-4],aux31)
weightedsumleq([1,4,1],[M_00003_00001,M_00003_00003,-4],aux32)
weightedsumgeq([1,4,1],[M_00003_00001,M_00003_00003,-4],aux32)
weightedsumleq([1,4,1],[M_00003_00001,M_00003_00004,-4],aux33)
weightedsumgeq([1,4,1],[M_00003_00001,M_00003_00004,-4],aux33)
weightedsumleq([1,4,1],[M_00003_00001,M_00003_00002,-4],aux34)
weightedsumgeq([1,4,1],[M_00003_00001,M_00003_00002,-4],aux34)
weightedsumleq([1,4,1],[M_00003_00003,M_00003_00004,-4],aux35)
weightedsumgeq([1,4,1],[M_00003_00003,M_00003_00004,-4],aux35)
weightedsumleq([1,4,1],[-4,M_00001_00003,M_00001_00004],aux36)
weightedsumgeq([1,4,1],[-4,M_00001_00003,M_00001_00004],aux36)
weightedsumleq([1,4,1],[-4,M_00001_00001,M_00001_00002],aux37)
weightedsumgeq([1,4,1],[-4,M_00001_00001,M_00001_00002],aux37)
weightedsumleq([1,4,1],[-4,M_00001_00001,M_00001_00004],aux38)
weightedsumgeq([1,4,1],[-4,M_00001_00001,M_00001_00004],aux38)
weightedsumleq([1,4,1],[-4,M_00001_00001,M_00001_00003],aux39)
weightedsumgeq([1,4,1],[-4,M_00001_00001,M_00001_00003],aux39)
weightedsumleq([1,4,1],[-4,M_00001_00002,M_00001_00004],aux40)
weightedsumgeq([1,4,1],[-4,M_00001_00002,M_00001_00004],aux40)
weightedsumleq([1,4,1],[-4,M_00001_00002,M_00001_00003],aux41)
weightedsumgeq([1,4,1],[-4,M_00001_00002,M_00001_00003],aux41)
weightedsumleq([1,1,4],[-4,M_00001_00002,M_00001_00003],aux42)
weightedsumgeq([1,1,4],[-4,M_00001_00002,M_00001_00003],aux42)
weightedsumleq([1,1,4],[-4,M_00001_00002,M_00001_00004],aux43)
weightedsumgeq([1,1,4],[-4,M_00001_00002,M_00001_00004],aux43)
weightedsumleq([1,1,4],[-4,M_00001_00001,M_00001_00004],aux44)
weightedsumgeq([1,1,4],[-4,M_00001_00001,M_00001_00004],aux44)
weightedsumleq([1,1,4],[-4,M_00001_00001,M_00001_00003],aux45)
weightedsumgeq([1,1,4],[-4,M_00001_00001,M_00001_00003],aux45)
weightedsumleq([1,1,4],[-4,M_00001_00001,M_00001_00002],aux46)
weightedsumgeq([1,1,4],[-4,M_00001_00001,M_00001_00002],aux46)
weightedsumleq([1,1,4],[-4,M_00001_00003,M_00001_00004],aux47)
weightedsumgeq([1,1,4],[-4,M_00001_00003,M_00001_00004],aux47)
weightedsumleq([5,1],[M_00002_00001,-4],aux48)
weightedsumgeq([5,1],[M_00002_00001,-4],aux48)
weightedsumleq([5,1],[M_00002_00002,-4],aux49)
weightedsumgeq([5,1],[M_00002_00002,-4],aux49)
weightedsumleq([5,1],[M_00002_00004,-4],aux50)
weightedsumgeq([5,1],[M_00002_00004,-4],aux50)
weightedsumleq([5,1],[M_00002_00003,-4],aux51)
weightedsumgeq([5,1],[M_00002_00003,-4],aux51)
weightedsumleq([1,5],[-4,M_00001_00004],aux52)
weightedsumgeq([1,5],[-4,M_00001_00004],aux52)
weightedsumleq([1,5],[-4,M_00001_00001],aux53)
weightedsumgeq([1,5],[-4,M_00001_00001],aux53)
weightedsumleq([1,5],[-4,M_00001_00002],aux54)
weightedsumgeq([1,5],[-4,M_00001_00002],aux54)
weightedsumleq([1,5],[-4,M_00001_00003],aux55)
weightedsumgeq([1,5],[-4,M_00001_00003],aux55)
weightedsumleq([5,1],[M_00003_00003,-4],aux56)
weightedsumgeq([5,1],[M_00003_00003,-4],aux56)
weightedsumleq([5,1],[M_00003_00002,-4],aux57)
weightedsumgeq([5,1],[M_00003_00002,-4],aux57)
weightedsumleq([5,1],[M_00003_00001,-4],aux58)
weightedsumgeq([5,1],[M_00003_00001,-4],aux58)
weightedsumleq([5,1],[M_00003_00004,-4],aux59)
weightedsumgeq([5,1],[M_00003_00004,-4],aux59)
weightedsumleq([5,1],[M_00004_00002,-4],aux60)
weightedsumgeq([5,1],[M_00004_00002,-4],aux60)
weightedsumleq([5,1],[M_00004_00001,-4],aux61)
weightedsumgeq([5,1],[M_00004_00001,-4],aux61)
weightedsumleq([5,1],[M_00004_00003,-4],aux62)
weightedsumgeq([5,1],[M_00004_00003,-4],aux62)
weightedsumleq([5,1],[M_00004_00004,-4],aux63)
weightedsumgeq([5,1],[M_00004_00004,-4],aux63)
**EOF**
