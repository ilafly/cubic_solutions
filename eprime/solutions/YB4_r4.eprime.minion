MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 80
# CSE_active_eliminated_expressions = 160
# CSE_active_total_size = 604
**VARIABLES**
DISCRETE M_00001_00001 #
{1..4}
DISCRETE M_00001_00002 #
{1..4}
DISCRETE M_00001_00003 #
{1..4}
DISCRETE M_00001_00004 #
{1..4}
DISCRETE M_00002_00001 #
{1..4}
DISCRETE M_00002_00002 #
{1..4}
DISCRETE M_00002_00003 #
{1..4}
DISCRETE M_00002_00004 #
{1..4}
DISCRETE M_00003_00001 #
{1..4}
DISCRETE M_00003_00002 #
{1..4}
DISCRETE M_00003_00003 #
{1..4}
DISCRETE M_00003_00004 #
{1..4}
DISCRETE M_00004_00001 #
{1..4}
DISCRETE M_00004_00002 #
{1..4}
DISCRETE M_00004_00003 #
{1..4}
DISCRETE M_00004_00004 #
{1..4}
DISCRETE aux0 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], (4*M_00003_00001 + M_00003_00003 + -4))
{1..4}
DISCRETE aux1 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], (4*M_00003_00001 + M_00003_00002 + -4))
{1..4}
DISCRETE aux2 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], (4*M_00003_00001 + M_00003_00004 + -4))
{1..4}
DISCRETE aux6 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], (M_00002_00002 + 4*M_00002_00004 + -4))
{1..4}
DISCRETE aux7 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], (M_00002_00001 + 4*M_00002_00004 + -4))
{1..4}
DISCRETE aux8 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], (M_00002_00003 + 4*M_00002_00004 + -4))
{1..4}
DISCRETE aux9 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], (4*M_00004_00002 + M_00004_00004 + -4))
{1..4}
DISCRETE aux12 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], (5*M_00003_00001 + -4))
{1..4}
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00002 + M_00004_00003 + -4)
{4..13}
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00002 + M_00004_00004 + -4)
{3..14}
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 4*M_00004_00002 + -4)
{2..15}
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 4*M_00002_00003 + -4)
{3..14}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 4*M_00002_00002 + -4)
{2..15}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002 + 4*M_00002_00003 + -4)
{4..13}
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00002_00002 + M_00002_00004 + -4)
{3..14}
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00002_00002 + M_00002_00003 + -4)
{4..13}
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00002_00001 + M_00002_00004 + -4)
{4..13}
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00002_00001 + M_00002_00003 + -4)
{3..14}
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00002_00001 + M_00002_00002 + -4)
{2..15}
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00002_00003 + M_00002_00004 + -4)
{2..15}
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00003_00001 + M_00003_00002 + -4)
{2..15}
DISCRETE aux29 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00003_00001 + M_00003_00003 + -4)
{3..14}
DISCRETE aux30 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00003_00001 + M_00003_00004 + -4)
{4..13}
DISCRETE aux31 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00001 + M_00004_00002 + -4)
{2..15}
DISCRETE aux32 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00001 + M_00004_00003 + -4)
{3..14}
DISCRETE aux33 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00001 + M_00004_00004 + -4)
{4..13}
DISCRETE aux34 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00003 + M_00004_00004 + -4)
{2..15}
DISCRETE aux35 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00002 + 4*M_00004_00004 + -4)
{3..14}
DISCRETE aux36 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00002 + 4*M_00004_00003 + -4)
{4..13}
DISCRETE aux37 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003 + 4*M_00004_00004 + -4)
{2..15}
DISCRETE aux38 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 4*M_00004_00003 + -4)
{3..14}
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 4*M_00004_00004 + -4)
{4..13}
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00003_00002 + M_00003_00004 + -4)
{3..14}
DISCRETE aux41 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00003_00002 + M_00003_00003 + -4)
{4..13}
DISCRETE aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00003_00003 + M_00003_00004 + -4)
{2..15}
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00002 + 4*M_00003_00004 + -4)
{3..14}
DISCRETE aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00002 + 4*M_00003_00003 + -4)
{4..13}
DISCRETE aux45 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 4*M_00003_00003 + -4)
{3..14}
DISCRETE aux46 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 4*M_00003_00004 + -4)
{4..13}
DISCRETE aux47 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 4*M_00003_00002 + -4)
{2..15}
DISCRETE aux48 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003 + 4*M_00003_00004 + -4)
{2..15}
DISCRETE aux49 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 4*M_00001_00001 + M_00001_00002)
{2..15}
DISCRETE aux50 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 4*M_00001_00001 + M_00001_00004)
{4..13}
DISCRETE aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 4*M_00001_00001 + M_00001_00003)
{3..14}
DISCRETE aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 4*M_00001_00002 + M_00001_00004)
{3..14}
DISCRETE aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 4*M_00001_00002 + M_00001_00003)
{4..13}
DISCRETE aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00002 + 4*M_00001_00004)
{3..14}
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00001 + 4*M_00001_00004)
{4..13}
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00001 + 4*M_00001_00002)
{2..15}
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00003 + 4*M_00001_00004)
{2..15}
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002 + 4*M_00002_00004 + -4)
{3..14}
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003 + 4*M_00002_00004 + -4)
{2..15}
DISCRETE aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 4*M_00002_00004 + -4)
{4..13}
DISCRETE aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00001 + 4*M_00001_00003)
{3..14}
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00002 + 4*M_00001_00003)
{4..13}
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 4*M_00001_00003 + M_00001_00004)
{2..15}
DISCRETE aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00001 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux64, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux65 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux65, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux66, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux67, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00004)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux68, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux69 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00001)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux69, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00002)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux70, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00003)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux71, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux72, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux73, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux74, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00001 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux75, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux76, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00001 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux77, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux78, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux79, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux80 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux69) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux64)
{1..4}
DISCRETE aux81 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux49) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux26)
{1..4}
DISCRETE aux82 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux51) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux25)
{1..4}
DISCRETE aux83 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux50) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux24)
{1..4}
DISCRETE aux84 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux56) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux20)
{1..4}
DISCRETE aux85 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux70) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux65)
{1..4}
DISCRETE aux86 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux53) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux23)
{1..4}
DISCRETE aux87 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux52) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux22)
{1..4}
DISCRETE aux88 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux38) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux45)
{1..4}
DISCRETE aux89 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux36) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux44)
{1..4}
DISCRETE aux90 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux78) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux72)
{1..4}
DISCRETE aux91 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux34) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux42)
{1..4}
DISCRETE aux92 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux39) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux46)
{1..4}
DISCRETE aux93 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux35) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux43)
{1..4}
DISCRETE aux94 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux37) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux48)
{1..4}
DISCRETE aux95 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux79) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux74)
{1..4}
DISCRETE aux96 #ElementOne([1, 2, 3, 4], M_00001_00001)
{1..4}
DISCRETE aux97 #ElementOne([1, 2, 3, 4], M_00001_00002)
{1..4}
DISCRETE aux98 #ElementOne([1, 2, 3, 4], M_00001_00003)
{1..4}
DISCRETE aux99 #ElementOne([1, 2, 3, 4], M_00001_00004)
{1..4}
DISCRETE aux100 #ElementOne([1, 2, 3, 4], M_00002_00001)
{1..4}
DISCRETE aux101 #ElementOne([1, 2, 3, 4], M_00002_00002)
{1..4}
DISCRETE aux102 #ElementOne([1, 2, 3, 4], M_00002_00003)
{1..4}
DISCRETE aux103 #ElementOne([1, 2, 3, 4], M_00002_00004)
{1..4}
DISCRETE aux104 #ElementOne([1, 2, 3, 4], M_00003_00001)
{1..4}
DISCRETE aux105 #ElementOne([1, 2, 3, 4], M_00003_00002)
{1..4}
DISCRETE aux106 #ElementOne([1, 2, 3, 4], M_00003_00003)
{1..4}
DISCRETE aux107 #ElementOne([1, 2, 3, 4], M_00003_00004)
{1..4}
DISCRETE aux108 #ElementOne([1, 2, 3, 4], M_00004_00001)
{1..4}
DISCRETE aux109 #ElementOne([1, 2, 3, 4], M_00004_00002)
{1..4}
DISCRETE aux110 #ElementOne([1, 2, 3, 4], M_00004_00003)
{1..4}
DISCRETE aux111 #ElementOne([1, 2, 3, 4], M_00004_00004)
{1..4}
DISCRETE aux112 #ElementOne([4, 3, 2, 1], M_00004_00004)
{1..4}
DISCRETE aux113 #ElementOne([4, 3, 2, 1], M_00004_00003)
{1..4}
DISCRETE aux114 #ElementOne([4, 3, 2, 1], M_00004_00002)
{1..4}
DISCRETE aux115 #ElementOne([4, 3, 2, 1], M_00004_00001)
{1..4}
DISCRETE aux116 #ElementOne([4, 3, 2, 1], M_00003_00004)
{1..4}
DISCRETE aux117 #ElementOne([4, 3, 2, 1], M_00003_00003)
{1..4}
DISCRETE aux118 #ElementOne([4, 3, 2, 1], M_00003_00002)
{1..4}
DISCRETE aux119 #ElementOne([4, 3, 2, 1], M_00003_00001)
{1..4}
DISCRETE aux120 #ElementOne([4, 3, 2, 1], M_00002_00004)
{1..4}
DISCRETE aux121 #ElementOne([4, 3, 2, 1], M_00002_00003)
{1..4}
DISCRETE aux122 #ElementOne([4, 3, 2, 1], M_00002_00002)
{1..4}
DISCRETE aux123 #ElementOne([4, 3, 2, 1], M_00002_00001)
{1..4}
DISCRETE aux124 #ElementOne([4, 3, 2, 1], M_00001_00004)
{1..4}
DISCRETE aux125 #ElementOne([4, 3, 2, 1], M_00001_00003)
{1..4}
DISCRETE aux126 #ElementOne([4, 3, 2, 1], M_00001_00002)
{1..4}
DISCRETE aux127 #ElementOne([4, 3, 2, 1], M_00001_00001)
{1..4}
DISCRETE aux128 #ElementOne([2, 1, 4, 3], M_00002_00002)
{1..4}
DISCRETE aux129 #ElementOne([2, 1, 4, 3], M_00002_00001)
{1..4}
DISCRETE aux130 #ElementOne([2, 1, 4, 3], M_00002_00004)
{1..4}
DISCRETE aux131 #ElementOne([2, 1, 4, 3], M_00002_00003)
{1..4}
DISCRETE aux132 #ElementOne([2, 1, 4, 3], M_00001_00002)
{1..4}
DISCRETE aux133 #ElementOne([2, 1, 4, 3], M_00001_00001)
{1..4}
DISCRETE aux134 #ElementOne([2, 1, 4, 3], M_00001_00004)
{1..4}
DISCRETE aux135 #ElementOne([2, 1, 4, 3], M_00001_00003)
{1..4}
DISCRETE aux136 #ElementOne([2, 1, 4, 3], M_00004_00002)
{1..4}
DISCRETE aux137 #ElementOne([2, 1, 4, 3], M_00004_00001)
{1..4}
DISCRETE aux138 #ElementOne([2, 1, 4, 3], M_00004_00004)
{1..4}
DISCRETE aux139 #ElementOne([2, 1, 4, 3], M_00004_00003)
{1..4}
DISCRETE aux140 #ElementOne([2, 1, 4, 3], M_00003_00002)
{1..4}
DISCRETE aux141 #ElementOne([2, 1, 4, 3], M_00003_00001)
{1..4}
DISCRETE aux142 #ElementOne([2, 1, 4, 3], M_00003_00004)
{1..4}
DISCRETE aux143 #ElementOne([2, 1, 4, 3], M_00003_00003)
{1..4}
DISCRETE aux144 #ElementOne([3, 4, 1, 2], M_00003_00003)
{1..4}
DISCRETE aux145 #ElementOne([3, 4, 1, 2], M_00003_00004)
{1..4}
DISCRETE aux146 #ElementOne([3, 4, 1, 2], M_00003_00001)
{1..4}
DISCRETE aux147 #ElementOne([3, 4, 1, 2], M_00003_00002)
{1..4}
DISCRETE aux148 #ElementOne([3, 4, 1, 2], M_00004_00003)
{1..4}
DISCRETE aux149 #ElementOne([3, 4, 1, 2], M_00004_00004)
{1..4}
DISCRETE aux150 #ElementOne([3, 4, 1, 2], M_00004_00001)
{1..4}
DISCRETE aux151 #ElementOne([3, 4, 1, 2], M_00004_00002)
{1..4}
DISCRETE aux152 #ElementOne([3, 4, 1, 2], M_00001_00003)
{1..4}
DISCRETE aux153 #ElementOne([3, 4, 1, 2], M_00001_00004)
{1..4}
DISCRETE aux154 #ElementOne([3, 4, 1, 2], M_00001_00001)
{1..4}
DISCRETE aux155 #ElementOne([3, 4, 1, 2], M_00001_00002)
{1..4}
DISCRETE aux156 #ElementOne([3, 4, 1, 2], M_00002_00003)
{1..4}
DISCRETE aux157 #ElementOne([3, 4, 1, 2], M_00002_00004)
{1..4}
DISCRETE aux158 #ElementOne([3, 4, 1, 2], M_00002_00001)
{1..4}
DISCRETE aux159 #ElementOne([3, 4, 1, 2], M_00002_00002)
{1..4}
**TUPLELIST**
rack 4 4
1 1 3 3 
2 2 4 4 
1 1 3 3 
2 2 4 4 
**VARIABLES**
ALIAS rack[4,4]=[[1, 1, 3, 3], [2, 2, 4, 4], [1, 1, 3, 3], [2, 2, 4, 4]]
**TUPLELIST**
perms 4 4
1 2 3 4 
4 3 2 1 
2 1 4 3 
3 4 1 2 
**VARIABLES**
ALIAS perms[4,4]=[[1, 2, 3, 4], [4, 3, 2, 1], [2, 1, 4, 3], [3, 4, 1, 2]]
**TUPLELIST**
inverses 4 4
1 2 3 4 
4 3 2 1 
2 1 4 3 
3 4 1 2 
**VARIABLES**
ALIAS inverses[4,4]=[[1, 2, 3, 4], [4, 3, 2, 1], [2, 1, 4, 3], [3, 4, 1, 2]]
**SEARCH**
PRINT[[M_00001_00001],[M_00001_00002],[M_00001_00003],[M_00001_00004],[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004]]
VARORDER STATIC [M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004]
**CONSTRAINTS**
watchelement_one([1, 2, 3, 4], M_00001_00001, aux96)
watchelement_one([1, 2, 3, 4], M_00001_00002, aux97)
watchelement_one([1, 2, 3, 4], M_00001_00003, aux98)
watchelement_one([1, 2, 3, 4], M_00001_00004, aux99)
watchelement_one([1, 2, 3, 4], M_00002_00001, aux100)
watchelement_one([1, 2, 3, 4], M_00002_00002, aux101)
watchelement_one([1, 2, 3, 4], M_00002_00003, aux102)
watchelement_one([1, 2, 3, 4], M_00002_00004, aux103)
watchelement_one([1, 2, 3, 4], M_00003_00001, aux104)
watchelement_one([1, 2, 3, 4], M_00003_00002, aux105)
watchelement_one([1, 2, 3, 4], M_00003_00003, aux106)
watchelement_one([1, 2, 3, 4], M_00003_00004, aux107)
watchelement_one([1, 2, 3, 4], M_00004_00001, aux108)
watchelement_one([1, 2, 3, 4], M_00004_00002, aux109)
watchelement_one([1, 2, 3, 4], M_00004_00003, aux110)
watchelement_one([1, 2, 3, 4], M_00004_00004, aux111)
watchelement_one([4, 3, 2, 1], M_00004_00004, aux112)
watchelement_one([4, 3, 2, 1], M_00004_00003, aux113)
watchelement_one([4, 3, 2, 1], M_00004_00002, aux114)
watchelement_one([4, 3, 2, 1], M_00004_00001, aux115)
watchelement_one([4, 3, 2, 1], M_00003_00004, aux116)
watchelement_one([4, 3, 2, 1], M_00003_00003, aux117)
watchelement_one([4, 3, 2, 1], M_00003_00002, aux118)
watchelement_one([4, 3, 2, 1], M_00003_00001, aux119)
watchelement_one([4, 3, 2, 1], M_00002_00004, aux120)
watchelement_one([4, 3, 2, 1], M_00002_00003, aux121)
watchelement_one([4, 3, 2, 1], M_00002_00002, aux122)
watchelement_one([4, 3, 2, 1], M_00002_00001, aux123)
watchelement_one([4, 3, 2, 1], M_00001_00004, aux124)
watchelement_one([4, 3, 2, 1], M_00001_00003, aux125)
watchelement_one([4, 3, 2, 1], M_00001_00002, aux126)
watchelement_one([4, 3, 2, 1], M_00001_00001, aux127)
watchelement_one([2, 1, 4, 3], M_00002_00002, aux128)
watchelement_one([2, 1, 4, 3], M_00002_00001, aux129)
watchelement_one([2, 1, 4, 3], M_00002_00004, aux130)
watchelement_one([2, 1, 4, 3], M_00002_00003, aux131)
watchelement_one([2, 1, 4, 3], M_00001_00002, aux132)
watchelement_one([2, 1, 4, 3], M_00001_00001, aux133)
watchelement_one([2, 1, 4, 3], M_00001_00004, aux134)
watchelement_one([2, 1, 4, 3], M_00001_00003, aux135)
watchelement_one([2, 1, 4, 3], M_00004_00002, aux136)
watchelement_one([2, 1, 4, 3], M_00004_00001, aux137)
watchelement_one([2, 1, 4, 3], M_00004_00004, aux138)
watchelement_one([2, 1, 4, 3], M_00004_00003, aux139)
watchelement_one([2, 1, 4, 3], M_00003_00002, aux140)
watchelement_one([2, 1, 4, 3], M_00003_00001, aux141)
watchelement_one([2, 1, 4, 3], M_00003_00004, aux142)
watchelement_one([2, 1, 4, 3], M_00003_00003, aux143)
watchelement_one([3, 4, 1, 2], M_00003_00003, aux144)
watchelement_one([3, 4, 1, 2], M_00003_00004, aux145)
watchelement_one([3, 4, 1, 2], M_00003_00001, aux146)
watchelement_one([3, 4, 1, 2], M_00003_00002, aux147)
watchelement_one([3, 4, 1, 2], M_00004_00003, aux148)
watchelement_one([3, 4, 1, 2], M_00004_00004, aux149)
watchelement_one([3, 4, 1, 2], M_00004_00001, aux150)
watchelement_one([3, 4, 1, 2], M_00004_00002, aux151)
watchelement_one([3, 4, 1, 2], M_00001_00003, aux152)
watchelement_one([3, 4, 1, 2], M_00001_00004, aux153)
watchelement_one([3, 4, 1, 2], M_00001_00001, aux154)
watchelement_one([3, 4, 1, 2], M_00001_00002, aux155)
watchelement_one([3, 4, 1, 2], M_00002_00003, aux156)
watchelement_one([3, 4, 1, 2], M_00002_00004, aux157)
watchelement_one([3, 4, 1, 2], M_00002_00001, aux158)
watchelement_one([3, 4, 1, 2], M_00002_00002, aux159)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux29, aux0)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux28, aux1)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux30, aux2)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux63, aux2)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux62, aux1)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux61, aux12)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux58, aux6)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux60, aux7)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux59, aux8)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux17, aux9)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux16, aux8)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux18, aux7)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux75, aux12)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux76, aux6)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux67, aux9)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux71, aux0)
gacalldiff([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004])
gacalldiff([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004])
gacalldiff([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004])
gacalldiff([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004])
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux77, aux12)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux31, aux1)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux32, aux0)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux33, aux2)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux47, aux7)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux73, aux6)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux41, aux8)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux40, aux9)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux19, aux12)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux21, aux1)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux66, aux0)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux27, aux2)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux55, aux7)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux54, aux6)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux57, aux8)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux68, aux9)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4, 4], aux69, M_00001_00001)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4], aux49, M_00001_00001)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2], aux51, M_00001_00003)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2], aux50, M_00001_00003)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4], aux56, M_00001_00002)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4, 4], aux70, M_00001_00002)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2], aux53, M_00001_00004)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2], aux52, M_00001_00004)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2], aux61, M_00001_00001)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2], aux62, M_00001_00001)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4, 4], aux71, M_00001_00003)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4], aux63, M_00001_00003)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2], aux55, M_00001_00002)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2], aux54, M_00001_00002)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4], aux57, M_00001_00004)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4, 4], aux68, M_00001_00004)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4, 4], aux64, M_00002_00001)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4], aux26, M_00002_00001)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2], aux25, M_00002_00003)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2], aux24, M_00002_00003)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4], aux20, M_00002_00002)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4, 4], aux65, M_00002_00002)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2], aux23, M_00002_00004)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2], aux22, M_00002_00004)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2], aux19, M_00002_00001)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2], aux21, M_00002_00001)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4, 4], aux66, M_00002_00003)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4], aux27, M_00002_00003)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2], aux60, M_00002_00002)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2], aux58, M_00002_00002)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4], aux59, M_00002_00004)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4, 4], aux67, M_00002_00004)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4, 4], aux75, M_00003_00001)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4], aux28, M_00003_00001)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2], aux29, M_00003_00003)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2], aux30, M_00003_00003)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4], aux47, M_00003_00002)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4, 4], aux73, M_00003_00002)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2], aux41, M_00003_00004)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2], aux40, M_00003_00004)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2], aux45, M_00003_00001)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2], aux44, M_00003_00001)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4, 4], aux72, M_00003_00003)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4], aux42, M_00003_00003)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2], aux46, M_00003_00002)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2], aux43, M_00003_00002)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4], aux48, M_00003_00004)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4, 4], aux74, M_00003_00004)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4, 4], aux77, M_00004_00001)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4], aux31, M_00004_00001)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2], aux32, M_00004_00003)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2], aux33, M_00004_00003)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4], aux18, M_00004_00002)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4, 4], aux76, M_00004_00002)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2], aux16, M_00004_00004)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2], aux17, M_00004_00004)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2], aux38, M_00004_00001)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2], aux36, M_00004_00001)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4, 4], aux78, M_00004_00003)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4], aux34, M_00004_00003)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2], aux39, M_00004_00002)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2], aux35, M_00004_00002)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4], aux37, M_00004_00004)
watchelement_one([1, 1, 3, 3, 2, 2, 4, 4, 1, 1, 3, 3, 2, 2, 4, 4], aux79, M_00004_00004)
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux96, aux97, aux98, aux99, aux100, aux101, aux102, aux103, aux104, aux105, aux106, aux107, aux108, aux109, aux110, aux111])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux112, aux113, aux114, aux115, aux116, aux117, aux118, aux119, aux120, aux121, aux122, aux123, aux124, aux125, aux126, aux127])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux128, aux129, aux130, aux131, aux132, aux133, aux134, aux135, aux136, aux137, aux138, aux139, aux140, aux141, aux142, aux143])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux144, aux145, aux146, aux147, aux148, aux149, aux150, aux151, aux152, aux153, aux154, aux155, aux156, aux157, aux158, aux159])
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux69, aux80)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux64, aux80)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux49, aux81)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux26, aux81)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux51, aux82)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux25, aux82)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux50, aux83)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux24, aux83)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux56, aux84)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux20, aux84)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux70, aux85)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux65, aux85)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux53, aux86)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux23, aux86)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux52, aux87)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux22, aux87)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux38, aux88)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux45, aux88)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux36, aux89)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux44, aux89)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux78, aux90)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux72, aux90)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux34, aux91)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux42, aux91)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux39, aux92)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001], aux46, aux92)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux35, aux93)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux43, aux93)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux37, aux94)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux48, aux94)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux79, aux95)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux74, aux95)
weightedsumleq([4,1,1],[M_00004_00002,M_00004_00003,-4],aux16)
weightedsumgeq([4,1,1],[M_00004_00002,M_00004_00003,-4],aux16)
weightedsumleq([4,1,1],[M_00004_00002,M_00004_00004,-4],aux17)
weightedsumgeq([4,1,1],[M_00004_00002,M_00004_00004,-4],aux17)
weightedsumleq([1,4,1],[M_00004_00001,M_00004_00002,-4],aux18)
weightedsumgeq([1,4,1],[M_00004_00001,M_00004_00002,-4],aux18)
weightedsumleq([1,4,1],[M_00002_00001,M_00002_00003,-4],aux19)
weightedsumgeq([1,4,1],[M_00002_00001,M_00002_00003,-4],aux19)
weightedsumleq([1,4,1],[M_00002_00001,M_00002_00002,-4],aux20)
weightedsumgeq([1,4,1],[M_00002_00001,M_00002_00002,-4],aux20)
weightedsumleq([1,4,1],[M_00002_00002,M_00002_00003,-4],aux21)
weightedsumgeq([1,4,1],[M_00002_00002,M_00002_00003,-4],aux21)
weightedsumleq([4,1,1],[M_00002_00002,M_00002_00004,-4],aux22)
weightedsumgeq([4,1,1],[M_00002_00002,M_00002_00004,-4],aux22)
weightedsumleq([4,1,1],[M_00002_00002,M_00002_00003,-4],aux23)
weightedsumgeq([4,1,1],[M_00002_00002,M_00002_00003,-4],aux23)
weightedsumleq([4,1,1],[M_00002_00001,M_00002_00004,-4],aux24)
weightedsumgeq([4,1,1],[M_00002_00001,M_00002_00004,-4],aux24)
weightedsumleq([4,1,1],[M_00002_00001,M_00002_00003,-4],aux25)
weightedsumgeq([4,1,1],[M_00002_00001,M_00002_00003,-4],aux25)
weightedsumleq([4,1,1],[M_00002_00001,M_00002_00002,-4],aux26)
weightedsumgeq([4,1,1],[M_00002_00001,M_00002_00002,-4],aux26)
weightedsumleq([4,1,1],[M_00002_00003,M_00002_00004,-4],aux27)
weightedsumgeq([4,1,1],[M_00002_00003,M_00002_00004,-4],aux27)
weightedsumleq([4,1,1],[M_00003_00001,M_00003_00002,-4],aux28)
weightedsumgeq([4,1,1],[M_00003_00001,M_00003_00002,-4],aux28)
weightedsumleq([4,1,1],[M_00003_00001,M_00003_00003,-4],aux29)
weightedsumgeq([4,1,1],[M_00003_00001,M_00003_00003,-4],aux29)
weightedsumleq([4,1,1],[M_00003_00001,M_00003_00004,-4],aux30)
weightedsumgeq([4,1,1],[M_00003_00001,M_00003_00004,-4],aux30)
weightedsumleq([4,1,1],[M_00004_00001,M_00004_00002,-4],aux31)
weightedsumgeq([4,1,1],[M_00004_00001,M_00004_00002,-4],aux31)
weightedsumleq([4,1,1],[M_00004_00001,M_00004_00003,-4],aux32)
weightedsumgeq([4,1,1],[M_00004_00001,M_00004_00003,-4],aux32)
weightedsumleq([4,1,1],[M_00004_00001,M_00004_00004,-4],aux33)
weightedsumgeq([4,1,1],[M_00004_00001,M_00004_00004,-4],aux33)
weightedsumleq([4,1,1],[M_00004_00003,M_00004_00004,-4],aux34)
weightedsumgeq([4,1,1],[M_00004_00003,M_00004_00004,-4],aux34)
weightedsumleq([1,4,1],[M_00004_00002,M_00004_00004,-4],aux35)
weightedsumgeq([1,4,1],[M_00004_00002,M_00004_00004,-4],aux35)
weightedsumleq([1,4,1],[M_00004_00002,M_00004_00003,-4],aux36)
weightedsumgeq([1,4,1],[M_00004_00002,M_00004_00003,-4],aux36)
weightedsumleq([1,4,1],[M_00004_00003,M_00004_00004,-4],aux37)
weightedsumgeq([1,4,1],[M_00004_00003,M_00004_00004,-4],aux37)
weightedsumleq([1,4,1],[M_00004_00001,M_00004_00003,-4],aux38)
weightedsumgeq([1,4,1],[M_00004_00001,M_00004_00003,-4],aux38)
weightedsumleq([1,4,1],[M_00004_00001,M_00004_00004,-4],aux39)
weightedsumgeq([1,4,1],[M_00004_00001,M_00004_00004,-4],aux39)
weightedsumleq([4,1,1],[M_00003_00002,M_00003_00004,-4],aux40)
weightedsumgeq([4,1,1],[M_00003_00002,M_00003_00004,-4],aux40)
weightedsumleq([4,1,1],[M_00003_00002,M_00003_00003,-4],aux41)
weightedsumgeq([4,1,1],[M_00003_00002,M_00003_00003,-4],aux41)
weightedsumleq([4,1,1],[M_00003_00003,M_00003_00004,-4],aux42)
weightedsumgeq([4,1,1],[M_00003_00003,M_00003_00004,-4],aux42)
weightedsumleq([1,4,1],[M_00003_00002,M_00003_00004,-4],aux43)
weightedsumgeq([1,4,1],[M_00003_00002,M_00003_00004,-4],aux43)
weightedsumleq([1,4,1],[M_00003_00002,M_00003_00003,-4],aux44)
weightedsumgeq([1,4,1],[M_00003_00002,M_00003_00003,-4],aux44)
weightedsumleq([1,4,1],[M_00003_00001,M_00003_00003,-4],aux45)
weightedsumgeq([1,4,1],[M_00003_00001,M_00003_00003,-4],aux45)
weightedsumleq([1,4,1],[M_00003_00001,M_00003_00004,-4],aux46)
weightedsumgeq([1,4,1],[M_00003_00001,M_00003_00004,-4],aux46)
weightedsumleq([1,4,1],[M_00003_00001,M_00003_00002,-4],aux47)
weightedsumgeq([1,4,1],[M_00003_00001,M_00003_00002,-4],aux47)
weightedsumleq([1,4,1],[M_00003_00003,M_00003_00004,-4],aux48)
weightedsumgeq([1,4,1],[M_00003_00003,M_00003_00004,-4],aux48)
weightedsumleq([1,4,1],[-4,M_00001_00001,M_00001_00002],aux49)
weightedsumgeq([1,4,1],[-4,M_00001_00001,M_00001_00002],aux49)
weightedsumleq([1,4,1],[-4,M_00001_00001,M_00001_00004],aux50)
weightedsumgeq([1,4,1],[-4,M_00001_00001,M_00001_00004],aux50)
weightedsumleq([1,4,1],[-4,M_00001_00001,M_00001_00003],aux51)
weightedsumgeq([1,4,1],[-4,M_00001_00001,M_00001_00003],aux51)
weightedsumleq([1,4,1],[-4,M_00001_00002,M_00001_00004],aux52)
weightedsumgeq([1,4,1],[-4,M_00001_00002,M_00001_00004],aux52)
weightedsumleq([1,4,1],[-4,M_00001_00002,M_00001_00003],aux53)
weightedsumgeq([1,4,1],[-4,M_00001_00002,M_00001_00003],aux53)
weightedsumleq([1,1,4],[-4,M_00001_00002,M_00001_00004],aux54)
weightedsumgeq([1,1,4],[-4,M_00001_00002,M_00001_00004],aux54)
weightedsumleq([1,1,4],[-4,M_00001_00001,M_00001_00004],aux55)
weightedsumgeq([1,1,4],[-4,M_00001_00001,M_00001_00004],aux55)
weightedsumleq([1,1,4],[-4,M_00001_00001,M_00001_00002],aux56)
weightedsumgeq([1,1,4],[-4,M_00001_00001,M_00001_00002],aux56)
weightedsumleq([1,1,4],[-4,M_00001_00003,M_00001_00004],aux57)
weightedsumgeq([1,1,4],[-4,M_00001_00003,M_00001_00004],aux57)
weightedsumleq([1,4,1],[M_00002_00002,M_00002_00004,-4],aux58)
weightedsumgeq([1,4,1],[M_00002_00002,M_00002_00004,-4],aux58)
weightedsumleq([1,4,1],[M_00002_00003,M_00002_00004,-4],aux59)
weightedsumgeq([1,4,1],[M_00002_00003,M_00002_00004,-4],aux59)
weightedsumleq([1,4,1],[M_00002_00001,M_00002_00004,-4],aux60)
weightedsumgeq([1,4,1],[M_00002_00001,M_00002_00004,-4],aux60)
weightedsumleq([1,1,4],[-4,M_00001_00001,M_00001_00003],aux61)
weightedsumgeq([1,1,4],[-4,M_00001_00001,M_00001_00003],aux61)
weightedsumleq([1,1,4],[-4,M_00001_00002,M_00001_00003],aux62)
weightedsumgeq([1,1,4],[-4,M_00001_00002,M_00001_00003],aux62)
weightedsumleq([1,4,1],[-4,M_00001_00003,M_00001_00004],aux63)
weightedsumgeq([1,4,1],[-4,M_00001_00003,M_00001_00004],aux63)
weightedsumleq([5,1],[M_00002_00001,-4],aux64)
weightedsumgeq([5,1],[M_00002_00001,-4],aux64)
weightedsumleq([5,1],[M_00002_00002,-4],aux65)
weightedsumgeq([5,1],[M_00002_00002,-4],aux65)
weightedsumleq([5,1],[M_00002_00003,-4],aux66)
weightedsumgeq([5,1],[M_00002_00003,-4],aux66)
weightedsumleq([5,1],[M_00002_00004,-4],aux67)
weightedsumgeq([5,1],[M_00002_00004,-4],aux67)
weightedsumleq([1,5],[-4,M_00001_00004],aux68)
weightedsumgeq([1,5],[-4,M_00001_00004],aux68)
weightedsumleq([1,5],[-4,M_00001_00001],aux69)
weightedsumgeq([1,5],[-4,M_00001_00001],aux69)
weightedsumleq([1,5],[-4,M_00001_00002],aux70)
weightedsumgeq([1,5],[-4,M_00001_00002],aux70)
weightedsumleq([1,5],[-4,M_00001_00003],aux71)
weightedsumgeq([1,5],[-4,M_00001_00003],aux71)
weightedsumleq([5,1],[M_00003_00003,-4],aux72)
weightedsumgeq([5,1],[M_00003_00003,-4],aux72)
weightedsumleq([5,1],[M_00003_00002,-4],aux73)
weightedsumgeq([5,1],[M_00003_00002,-4],aux73)
weightedsumleq([5,1],[M_00003_00004,-4],aux74)
weightedsumgeq([5,1],[M_00003_00004,-4],aux74)
weightedsumleq([5,1],[M_00003_00001,-4],aux75)
weightedsumgeq([5,1],[M_00003_00001,-4],aux75)
weightedsumleq([5,1],[M_00004_00002,-4],aux76)
weightedsumgeq([5,1],[M_00004_00002,-4],aux76)
weightedsumleq([5,1],[M_00004_00001,-4],aux77)
weightedsumgeq([5,1],[M_00004_00001,-4],aux77)
weightedsumleq([5,1],[M_00004_00003,-4],aux78)
weightedsumgeq([5,1],[M_00004_00003,-4],aux78)
weightedsumleq([5,1],[M_00004_00004,-4],aux79)
weightedsumgeq([5,1],[M_00004_00004,-4],aux79)
**EOF**
