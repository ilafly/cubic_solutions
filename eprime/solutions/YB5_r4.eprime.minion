MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 94
# CSE_active_eliminated_expressions = 224
# CSE_active_total_size = 591
**VARIABLES**
DISCRETE M_00001_00001 #
{1..2}
DISCRETE M_00001_00002 #
{2..3}
DISCRETE M_00001_00003 #
{1..3}
DISCRETE M_00002_00001 #
{1..3}
DISCRETE M_00002_00002 #
{1..3}
DISCRETE M_00002_00003 #
{1..3}
DISCRETE M_00003_00001 #
{1..3}
DISCRETE M_00003_00002 #
{1..3}
DISCRETE M_00003_00003 #
{1..3}
DISCRETE M_00004_00001 #
{1..3}
DISCRETE M_00004_00002 #
{1..3}
DISCRETE M_00004_00003 #
{1..3}
DISCRETE M_00005_00001 #
{1..3}
DISCRETE M_00005_00002 #
{1..3}
DISCRETE M_00005_00003 #
{1..3}
DISCRETE aux0 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], (M_00002_00001 + 5*M_00002_00002 + -5))
{1..5}
DISCRETE aux1 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], (5*M_00002_00002 + M_00002_00003 + -5))
{1..5}
DISCRETE aux2 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], (M_00003_00001 + 5*M_00003_00003 + -5))
{1..5}
DISCRETE aux3 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], (M_00003_00002 + 5*M_00003_00003 + -5))
{1..5}
DISCRETE aux4 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], (6*M_00003_00003 + -5))
{1..5}
DISCRETE aux5 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], (6*M_00002_00002 + -5))
{1..5}
DISCRETE aux6 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4], (5*M_00002_00002 + -4))
{1..5}
DISCRETE aux7 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4, 5], (5*M_00003_00003 + -4))
{1..5}
DISCRETE aux8 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4], (5*M_00003_00003 + -4))
{1..5}
DISCRETE aux9 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4, 5], (5*M_00002_00002 + -4))
{1..5}
DISCRETE aux10 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003], (-5 + 5*M_00001_00001 + M_00001_00003))
{1..5}
DISCRETE aux11 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003], (-6 + 5*M_00001_00001 + M_00001_00002))
{1..5}
DISCRETE aux12 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002], (-5 + 6*M_00001_00001))
{1..5}
DISCRETE aux13 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5], (-4 + 5*M_00001_00001))
{1..5}
DISCRETE aux14 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4], (-4 + 5*M_00001_00001))
{1..5}
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00004_00001, M_00004_00002, M_00004_00003], M_00005_00001)
{1..3}
DISCRETE aux29 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00004_00001, M_00004_00002, M_00004_00003], M_00005_00003)
{1..3}
DISCRETE aux30 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00004_00001, M_00004_00002, M_00004_00003], M_00005_00002)
{1..3}
DISCRETE aux33 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002 + 5*M_00002_00003 + -5)
{3..12}
**CONSTRAINTS**
w-inintervalset(aux33, [3,3,6,8,11,12])
**VARIABLES**
DISCRETE aux34 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 5*M_00002_00003 + -5)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux34, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux35 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00001 + M_00002_00003 + -5)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux35, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux36 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00001 + M_00002_00002 + -5)
{2..11}
**CONSTRAINTS**
w-inintervalset(aux36, [2,3,6,8,11,11])
**VARIABLES**
DISCRETE aux37 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00002 + M_00002_00003 + -5)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux37, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux38 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00002 + 5*M_00003_00003 + -5)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux38, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 5*M_00003_00003 + -5)
{2..11}
**CONSTRAINTS**
w-inintervalset(aux39, [2,3,6,8,11,11])
**VARIABLES**
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00001 + M_00004_00003 + -5)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux40, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux41 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00001 + M_00004_00002 + -5)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux41, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00002 + M_00004_00003 + -5)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux42, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00002 + 5*M_00004_00003 + -5)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux43, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 5*M_00004_00002 + -5)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux44, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux45 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 5*M_00004_00003 + -5)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux45, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux46 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00002 + M_00003_00003 + -5)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux46, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux47 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00001 + M_00003_00003 + -5)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux47, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux48 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00001 + M_00003_00002 + -5)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux48, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux49 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 5*M_00003_00002 + -5)
{3..12}
**CONSTRAINTS**
w-inintervalset(aux49, [3,3,6,8,11,12])
**VARIABLES**
DISCRETE aux50 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00005_00001 + 5*M_00005_00002)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux50, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00005_00001 + 5*M_00005_00003)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux51, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00005_00002 + 5*M_00005_00003)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux52, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00005_00002 + M_00005_00003)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux53, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00005_00001 + M_00005_00003)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux54, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00005_00001 + M_00005_00002)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux55, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (-6 + M_00001_00002 + 5*M_00001_00003)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux56, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (-10 + M_00001_00001 + 5*M_00001_00002)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux57, [1,2,6,7])
**VARIABLES**
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (-10 + 5*M_00001_00002 + M_00001_00003)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux58, [1,3,6,8])
**VARIABLES**
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00001_00001 + 5*M_00001_00003)
{2..11}
**CONSTRAINTS**
w-inintervalset(aux59, [2,2,6,7,11,11])
**VARIABLES**
DISCRETE aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 5*M_00002_00002 + -5)
{2..12}
**CONSTRAINTS**
w-inintervalset(aux60, [2,3,6,8,11,12])
**VARIABLES**
DISCRETE aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (-6 + 5*M_00001_00001 + M_00001_00002)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux61, [1,2,6,7])
**VARIABLES**
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00001_00001 + M_00001_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux62, [2,3,6,6])
**VARIABLES**
DISCRETE aux63 #Active-CSE: 4 occurrences of this expression or equivalent: (5*M_00004_00003 + -4)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux63, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux64 #Active-CSE: 4 occurrences of this expression or equivalent: (5*M_00004_00002 + -4)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux64, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux65 #Active-CSE: 4 occurrences of this expression or equivalent: (5*M_00004_00001 + -4)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux65, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00001 + -5)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux66, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00003 + -5)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux67, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00002 + -5)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux68, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux69 #Active-CSE: 4 occurrences of this expression or equivalent: (5*M_00002_00002 + -4)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux69, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux70 #Active-CSE: 4 occurrences of this expression or equivalent: (-9 + 5*M_00001_00002)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux70, [1,1,6,6])
**VARIABLES**
DISCRETE aux71 #Active-CSE: 4 occurrences of this expression or equivalent: (-4 + 5*M_00001_00003)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux71, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00001_00003)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux72, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (-11 + 6*M_00001_00002)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux73, [1,1,7,7])
**VARIABLES**
DISCRETE aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00001_00001)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux74, [1,1,7,7])
**VARIABLES**
DISCRETE aux75 #Active-CSE: 4 occurrences of this expression or equivalent: (5*M_00003_00003 + -4)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux75, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00005_00001)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux76, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00005_00002)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux77, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00005_00003)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux78, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux79 #Active-CSE: 8 occurrences of this expression or equivalent: (-1 + M_00001_00002)
{1..2}
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00003_00001 + -5)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux80, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00003_00002 + -5)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux81, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00003_00003 + -5)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux82, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux83 #Active-CSE: 4 occurrences of this expression or equivalent: (5*M_00002_00001 + -4)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux83, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux84 #Active-CSE: 4 occurrences of this expression or equivalent: (5*M_00002_00003 + -4)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux84, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux85 #Active-CSE: 4 occurrences of this expression or equivalent: (-4 + 5*M_00001_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux85, [1,1,6,6])
**VARIABLES**
DISCRETE aux86 #Active-CSE: 4 occurrences of this expression or equivalent: (5*M_00003_00002 + -4)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux86, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux87 #Active-CSE: 4 occurrences of this expression or equivalent: (5*M_00003_00001 + -4)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux87, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux88 #Active-CSE: 4 occurrences of this expression or equivalent: (-4 + 5*M_00005_00002)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux88, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux89 #Active-CSE: 4 occurrences of this expression or equivalent: (-4 + 5*M_00005_00003)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux89, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux90 #Active-CSE: 4 occurrences of this expression or equivalent: (-4 + 5*M_00005_00001)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux90, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00004_00001 + -5)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux91, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00004_00003 + -5)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux92, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00004_00002 + -5)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux93, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux94 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux91) --- ElementOne([M_00004_00001, M_00004_00002], M_00001_00001)
{1..3}
DISCRETE aux95 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux41) --- ElementOne([M_00004_00002, M_00004_00003], aux79)
{1..3}
DISCRETE aux96 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux40) --- ElementOne([M_00004_00001, M_00004_00002, M_00004_00003], M_00001_00003)
{1..3}
DISCRETE aux97 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux76) --- ElementOne([M_00005_00001, M_00005_00002], M_00001_00001)
{1..3}
DISCRETE aux98 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux55) --- ElementOne([M_00005_00002, M_00005_00003], aux79)
{1..3}
DISCRETE aux99 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux54) --- ElementOne([M_00005_00001, M_00005_00002, M_00005_00003], M_00001_00003)
{1..3}
DISCRETE aux100 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux44) --- ElementOne([M_00004_00001, M_00004_00002, M_00004_00003], M_00002_00001)
{1..3}
DISCRETE aux101 #ElementOne([M_00004_00001, M_00004_00002, M_00004_00003], M_00002_00002) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux93)
{1..3}
DISCRETE aux102 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux42) --- ElementOne([M_00004_00001, M_00004_00002, M_00004_00003], M_00002_00003)
{1..3}
DISCRETE aux103 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux50) --- ElementOne([M_00005_00001, M_00005_00002, M_00005_00003], M_00002_00001)
{1..3}
DISCRETE aux104 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux77) --- ElementOne([M_00005_00001, M_00005_00002, M_00005_00003], M_00002_00002)
{1..3}
DISCRETE aux105 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux53) --- ElementOne([M_00005_00001, M_00005_00002, M_00005_00003], M_00002_00003)
{1..3}
DISCRETE aux106 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux45) --- ElementOne([M_00004_00001, M_00004_00002, M_00004_00003], M_00003_00001)
{1..3}
DISCRETE aux107 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux43) --- ElementOne([M_00004_00001, M_00004_00002, M_00004_00003], M_00003_00002)
{1..3}
DISCRETE aux108 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux92) --- ElementOne([M_00004_00001, M_00004_00002, M_00004_00003], M_00003_00003)
{1..3}
DISCRETE aux109 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux51) --- ElementOne([M_00005_00001, M_00005_00002, M_00005_00003], M_00003_00001)
{1..3}
DISCRETE aux110 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux52) --- ElementOne([M_00005_00001, M_00005_00002, M_00005_00003], M_00003_00002)
{1..3}
DISCRETE aux111 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux78) --- ElementOne([M_00005_00001, M_00005_00002, M_00005_00003], M_00003_00003)
{1..3}
DISCRETE aux112 #ElementOne([1, 3], M_00001_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux112, [1,1,3,3])
**VARIABLES**
DISCRETE aux113 #ElementOne([1, 3, 2], M_00001_00003)
{1..3}
DISCRETE aux114 #ElementOne([3, 2], aux79)
{2..3}
DISCRETE aux115 #ElementOne([1, 3, 2], M_00003_00001)
{1..3}
DISCRETE aux116 #ElementOne([1, 3, 2], M_00003_00003)
{1..3}
DISCRETE aux117 #ElementOne([1, 3, 2], M_00003_00002)
{1..3}
DISCRETE aux118 #ElementOne([1, 3, 2], M_00002_00001)
{1..3}
DISCRETE aux119 #ElementOne([1, 3, 2], M_00002_00003)
{1..3}
DISCRETE aux120 #ElementOne([1, 3, 2], M_00002_00002)
{1..3}
DISCRETE aux121 #ElementOne([1, 3, 2], M_00004_00001)
{1..3}
DISCRETE aux122 #ElementOne([1, 3, 2], M_00004_00003)
{1..3}
DISCRETE aux123 #ElementOne([1, 3, 2], M_00004_00002)
{1..3}
DISCRETE aux124 #ElementOne([1, 3, 2], M_00005_00001)
{1..3}
DISCRETE aux125 #ElementOne([1, 3, 2], M_00005_00003)
{1..3}
DISCRETE aux126 #ElementOne([1, 3, 2], M_00005_00002)
{1..3}
DISCRETE aux127 #ElementOne([2, 1, 3], M_00002_00002)
{1..3}
DISCRETE aux128 #ElementOne([2, 1, 3], M_00002_00001)
{1..3}
DISCRETE aux129 #ElementOne([2, 1, 3], M_00002_00003)
{1..3}
DISCRETE aux130 #ElementOne([1, 3], aux79)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux130, [1,1,3,3])
**VARIABLES**
DISCRETE aux131 #ElementOne([2, 1], M_00001_00001)
{1..2}
DISCRETE aux132 #ElementOne([2, 1, 3], M_00001_00003)
{1..3}
DISCRETE aux133 #ElementOne([2, 1, 3], M_00003_00002)
{1..3}
DISCRETE aux134 #ElementOne([2, 1, 3], M_00003_00001)
{1..3}
DISCRETE aux135 #ElementOne([2, 1, 3], M_00003_00003)
{1..3}
DISCRETE aux136 #ElementOne([2, 1, 3], M_00004_00002)
{1..3}
DISCRETE aux137 #ElementOne([2, 1, 3], M_00004_00001)
{1..3}
DISCRETE aux138 #ElementOne([2, 1, 3], M_00004_00003)
{1..3}
DISCRETE aux139 #ElementOne([2, 1, 3], M_00005_00002)
{1..3}
DISCRETE aux140 #ElementOne([2, 1, 3], M_00005_00001)
{1..3}
DISCRETE aux141 #ElementOne([2, 1, 3], M_00005_00003)
{1..3}
DISCRETE aux142 #ElementOne([3, 1, 2], M_00002_00002)
{1..3}
DISCRETE aux143 #ElementOne([3, 1, 2], M_00002_00003)
{1..3}
DISCRETE aux144 #ElementOne([3, 1, 2], M_00002_00001)
{1..3}
DISCRETE aux145 #ElementOne([3, 1, 2], M_00003_00002)
{1..3}
DISCRETE aux146 #ElementOne([3, 1, 2], M_00003_00003)
{1..3}
DISCRETE aux147 #ElementOne([3, 1, 2], M_00003_00001)
{1..3}
DISCRETE aux148 #ElementOne([1, 2], aux79)
{1..2}
DISCRETE aux149 #ElementOne([3, 1, 2], M_00001_00003)
{1..3}
DISCRETE aux150 #ElementOne([3, 1], M_00001_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux150, [1,1,3,3])
**VARIABLES**
DISCRETE aux151 #ElementOne([3, 1, 2], M_00004_00002)
{1..3}
DISCRETE aux152 #ElementOne([3, 1, 2], M_00004_00003)
{1..3}
DISCRETE aux153 #ElementOne([3, 1, 2], M_00004_00001)
{1..3}
DISCRETE aux154 #ElementOne([3, 1, 2], M_00005_00002)
{1..3}
DISCRETE aux155 #ElementOne([3, 1, 2], M_00005_00003)
{1..3}
DISCRETE aux156 #ElementOne([3, 1, 2], M_00005_00001)
{1..3}
DISCRETE aux157 #ElementOne([3, 2, 1], M_00003_00003)
{1..3}
DISCRETE aux158 #ElementOne([3, 2, 1], M_00003_00002)
{1..3}
DISCRETE aux159 #ElementOne([3, 2, 1], M_00003_00001)
{1..3}
DISCRETE aux160 #ElementOne([3, 2, 1], M_00002_00003)
{1..3}
DISCRETE aux161 #ElementOne([3, 2, 1], M_00002_00002)
{1..3}
DISCRETE aux162 #ElementOne([3, 2, 1], M_00002_00001)
{1..3}
DISCRETE aux163 #ElementOne([3, 2, 1], M_00001_00003)
{1..3}
DISCRETE aux164 #ElementOne([2, 1], aux79)
{1..2}
DISCRETE aux165 #ElementOne([3, 2], M_00001_00001)
{2..3}
DISCRETE aux166 #ElementOne([3, 2, 1], M_00004_00003)
{1..3}
DISCRETE aux167 #ElementOne([3, 2, 1], M_00004_00002)
{1..3}
DISCRETE aux168 #ElementOne([3, 2, 1], M_00004_00001)
{1..3}
DISCRETE aux169 #ElementOne([3, 2, 1], M_00005_00003)
{1..3}
DISCRETE aux170 #ElementOne([3, 2, 1], M_00005_00002)
{1..3}
DISCRETE aux171 #ElementOne([3, 2, 1], M_00005_00001)
{1..3}
DISCRETE aux172 #ElementOne([2, 3, 1], M_00003_00003)
{1..3}
DISCRETE aux173 #ElementOne([2, 3, 1], M_00003_00001)
{1..3}
DISCRETE aux174 #ElementOne([2, 3, 1], M_00003_00002)
{1..3}
DISCRETE aux175 #ElementOne([2, 3, 1], M_00001_00003)
{1..3}
DISCRETE aux176 #ElementOne([2, 3], M_00001_00001)
{2..3}
DISCRETE aux177 #ElementOne([3, 1], aux79)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux177, [1,1,3,3])
**VARIABLES**
DISCRETE aux178 #ElementOne([2, 3, 1], M_00002_00003)
{1..3}
DISCRETE aux179 #ElementOne([2, 3, 1], M_00002_00001)
{1..3}
DISCRETE aux180 #ElementOne([2, 3, 1], M_00002_00002)
{1..3}
DISCRETE aux181 #ElementOne([2, 3, 1], M_00004_00003)
{1..3}
DISCRETE aux182 #ElementOne([2, 3, 1], M_00004_00001)
{1..3}
DISCRETE aux183 #ElementOne([2, 3, 1], M_00004_00002)
{1..3}
DISCRETE aux184 #ElementOne([2, 3, 1], M_00005_00003)
{1..3}
DISCRETE aux185 #ElementOne([2, 3, 1], M_00005_00001)
{1..3}
DISCRETE aux186 #ElementOne([2, 3, 1], M_00005_00002)
{1..3}
**TUPLELIST**
rack 5 5
1 1 1 4 5 
2 2 2 4 5 
3 3 3 4 5 
1 2 3 4 5 
1 2 3 4 4 
**VARIABLES**
ALIAS rack[5,5]=[[1, 1, 1, 4, 5], [2, 2, 2, 4, 5], [3, 3, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 4]]
**TUPLELIST**
perms 6 5
1 2 3 4 5 
1 3 2 4 5 
2 1 3 4 5 
2 3 1 4 5 
3 2 1 4 5 
3 1 2 4 5 
**VARIABLES**
ALIAS perms[6,5]=[[1, 2, 3, 4, 5], [1, 3, 2, 4, 5], [2, 1, 3, 4, 5], [2, 3, 1, 4, 5], [3, 2, 1, 4, 5], [3, 1, 2, 4, 5]]
**TUPLELIST**
inverses 6 5
1 2 3 4 5 
1 3 2 4 5 
2 1 3 4 5 
3 1 2 4 5 
3 2 1 4 5 
2 3 1 4 5 
**VARIABLES**
ALIAS inverses[6,5]=[[1, 2, 3, 4, 5], [1, 3, 2, 4, 5], [2, 1, 3, 4, 5], [3, 1, 2, 4, 5], [3, 2, 1, 4, 5], [2, 3, 1, 4, 5]]
**SEARCH**
PRINT[[M_00001_00001],[M_00001_00002],[M_00001_00003],[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00005_00001],[M_00005_00002],[M_00005_00003]]
VARORDER STATIC [M_00001_00001, M_00001_00002, M_00001_00003, M_00002_00001, M_00002_00002, M_00002_00003, M_00003_00001, M_00003_00002, M_00003_00003, M_00004_00001, M_00004_00002, M_00004_00003, M_00005_00001, M_00005_00002, M_00005_00003]
**CONSTRAINTS**
watchelement_one([1, 3], M_00001_00001, aux112)
watchelement_one([1, 3, 2], M_00001_00003, aux113)
watchelement_one([3, 2], aux79, aux114)
watchelement_one([1, 3, 2], M_00003_00001, aux115)
watchelement_one([1, 3, 2], M_00003_00003, aux116)
watchelement_one([1, 3, 2], M_00003_00002, aux117)
watchelement_one([1, 3, 2], M_00002_00001, aux118)
watchelement_one([1, 3, 2], M_00002_00003, aux119)
watchelement_one([1, 3, 2], M_00002_00002, aux120)
watchelement_one([1, 3, 2], M_00004_00001, aux121)
watchelement_one([1, 3, 2], M_00004_00003, aux122)
watchelement_one([1, 3, 2], M_00004_00002, aux123)
watchelement_one([1, 3, 2], M_00005_00001, aux124)
watchelement_one([1, 3, 2], M_00005_00003, aux125)
watchelement_one([1, 3, 2], M_00005_00002, aux126)
watchelement_one([2, 1, 3], M_00002_00002, aux127)
watchelement_one([2, 1, 3], M_00002_00001, aux128)
watchelement_one([2, 1, 3], M_00002_00003, aux129)
watchelement_one([1, 3], aux79, aux130)
watchelement_one([2, 1], M_00001_00001, aux131)
watchelement_one([2, 1, 3], M_00001_00003, aux132)
watchelement_one([2, 1, 3], M_00003_00002, aux133)
watchelement_one([2, 1, 3], M_00003_00001, aux134)
watchelement_one([2, 1, 3], M_00003_00003, aux135)
watchelement_one([2, 1, 3], M_00004_00002, aux136)
watchelement_one([2, 1, 3], M_00004_00001, aux137)
watchelement_one([2, 1, 3], M_00004_00003, aux138)
watchelement_one([2, 1, 3], M_00005_00002, aux139)
watchelement_one([2, 1, 3], M_00005_00001, aux140)
watchelement_one([2, 1, 3], M_00005_00003, aux141)
watchelement_one([3, 1, 2], M_00002_00002, aux142)
watchelement_one([3, 1, 2], M_00002_00003, aux143)
watchelement_one([3, 1, 2], M_00002_00001, aux144)
watchelement_one([3, 1, 2], M_00003_00002, aux145)
watchelement_one([3, 1, 2], M_00003_00003, aux146)
watchelement_one([3, 1, 2], M_00003_00001, aux147)
watchelement_one([1, 2], aux79, aux148)
watchelement_one([3, 1, 2], M_00001_00003, aux149)
watchelement_one([3, 1], M_00001_00001, aux150)
watchelement_one([3, 1, 2], M_00004_00002, aux151)
watchelement_one([3, 1, 2], M_00004_00003, aux152)
watchelement_one([3, 1, 2], M_00004_00001, aux153)
watchelement_one([3, 1, 2], M_00005_00002, aux154)
watchelement_one([3, 1, 2], M_00005_00003, aux155)
watchelement_one([3, 1, 2], M_00005_00001, aux156)
watchelement_one([3, 2, 1], M_00003_00003, aux157)
watchelement_one([3, 2, 1], M_00003_00002, aux158)
watchelement_one([3, 2, 1], M_00003_00001, aux159)
watchelement_one([3, 2, 1], M_00002_00003, aux160)
watchelement_one([3, 2, 1], M_00002_00002, aux161)
watchelement_one([3, 2, 1], M_00002_00001, aux162)
watchelement_one([3, 2, 1], M_00001_00003, aux163)
watchelement_one([2, 1], aux79, aux164)
watchelement_one([3, 2], M_00001_00001, aux165)
watchelement_one([3, 2, 1], M_00004_00003, aux166)
watchelement_one([3, 2, 1], M_00004_00002, aux167)
watchelement_one([3, 2, 1], M_00004_00001, aux168)
watchelement_one([3, 2, 1], M_00005_00003, aux169)
watchelement_one([3, 2, 1], M_00005_00002, aux170)
watchelement_one([3, 2, 1], M_00005_00001, aux171)
watchelement_one([2, 3, 1], M_00003_00003, aux172)
watchelement_one([2, 3, 1], M_00003_00001, aux173)
watchelement_one([2, 3, 1], M_00003_00002, aux174)
watchelement_one([2, 3, 1], M_00001_00003, aux175)
watchelement_one([2, 3], M_00001_00001, aux176)
watchelement_one([3, 1], aux79, aux177)
watchelement_one([2, 3, 1], M_00002_00003, aux178)
watchelement_one([2, 3, 1], M_00002_00001, aux179)
watchelement_one([2, 3, 1], M_00002_00002, aux180)
watchelement_one([2, 3, 1], M_00004_00003, aux181)
watchelement_one([2, 3, 1], M_00004_00001, aux182)
watchelement_one([2, 3, 1], M_00004_00002, aux183)
watchelement_one([2, 3, 1], M_00005_00003, aux184)
watchelement_one([2, 3, 1], M_00005_00001, aux185)
watchelement_one([2, 3, 1], M_00005_00002, aux186)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux60, aux0)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux37, aux1)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001], aux39, aux2)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux38, aux3)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux82, aux4)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux68, aux5)
watchelement_one([4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4], aux69, aux6)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4, 5], aux75, aux7)
watchelement_one([4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4], aux75, aux8)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4, 5], aux69, aux9)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001], aux62, aux10)
watchelement_one([M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003], aux61, aux11)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002], aux74, aux12)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5], aux85, aux13)
watchelement_one([4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4], aux85, aux14)
watchelement_one([2, 3], aux79, M_00001_00002)
watchelement_one([1, 2, 3], M_00003_00003, M_00003_00003)
watchelement_one([1, 2, 3], M_00003_00001, M_00003_00001)
watchelement_one([1, 2, 3], M_00003_00002, M_00003_00002)
watchelement_one([1, 2, 3], M_00005_00003, M_00005_00003)
watchelement_one([1, 2, 3], M_00005_00002, M_00005_00002)
watchelement_one([1, 2, 3], M_00005_00001, M_00005_00001)
watchelement_one([1, 2, 3], M_00004_00001, M_00004_00001)
watchelement_one([1, 2, 3], M_00004_00003, M_00004_00003)
watchelement_one([1, 2, 3], M_00004_00002, M_00004_00002)
watchelement_one([1, 2, 3], M_00002_00001, M_00002_00001)
watchelement_one([1, 2, 3], M_00002_00002, M_00002_00002)
watchelement_one([1, 2, 3], M_00002_00003, M_00002_00003)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003], M_00005_00001, aux28)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003], M_00005_00003, aux29)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003], M_00005_00002, aux30)
watchelement_one([1, 2, 3], M_00001_00003, M_00001_00003)
watchelement_one([1, 2], M_00001_00001, M_00001_00001)
gacalldiff([M_00001_00001, M_00001_00002, M_00001_00003])
gacalldiff([M_00002_00001, M_00002_00002, M_00002_00003])
gacalldiff([M_00003_00001, M_00003_00002, M_00003_00003])
gacalldiff([M_00004_00001, M_00004_00002, M_00004_00003])
gacalldiff([M_00005_00001, M_00005_00002, M_00005_00003])
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux66, aux12)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001], aux36, aux11)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux35, aux10)
watchelement_one([4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4], aux83, aux14)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4, 5], aux83, aux13)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux80, aux12)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux48, aux11)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux47, aux10)
watchelement_one([4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4], aux87, aux14)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4, 5], aux87, aux13)
watchelement_one([4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4], aux65, 4)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4, 5], aux65, 5)
watchelement_one([4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4], aux90, 4)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4, 5], aux90, 5)
watchelement_one([M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux57, aux0)
watchelement_one([M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux73, aux5)
watchelement_one([M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux58, aux1)
watchelement_one([4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4], aux70, aux6)
watchelement_one([5, M_00003_00001, M_00003_00002, M_00003_00003, 4, 5], aux70, aux9)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux49, aux0)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux81, aux5)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux46, aux1)
watchelement_one([4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4], aux86, aux6)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4, 5], aux86, aux9)
watchelement_one([4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4], aux64, 4)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4, 5], aux64, 5)
watchelement_one([4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4], aux88, 4)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4, 5], aux88, 5)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001], aux59, aux2)
watchelement_one([M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux56, aux3)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux72, aux4)
watchelement_one([4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4], aux71, aux8)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4, 5], aux71, aux7)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux34, aux2)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux33, aux3)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux67, aux4)
watchelement_one([4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4], aux84, aux8)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4, 5], aux84, aux7)
watchelement_one([4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4], aux63, 4)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4, 5], aux63, 5)
watchelement_one([4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4], aux89, 4)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003, 4, 5], aux89, 5)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003], M_00004_00001, aux28)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003], M_00004_00002, aux30)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003], M_00004_00003, aux29)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003], M_00005_00001, aux28)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003], M_00005_00002, aux30)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003], M_00005_00003, aux29)
watchelement_one([1, 1, 1, 4, 5, 2, 2], aux74, M_00001_00001)
watchelement_one([1, 1, 4, 5, 2, 2, 2], aux61, M_00001_00001)
watchelement_one([1, 1, 1, 4, 5, 2], aux62, M_00001_00001)
watchelement_one([4, 5, 2, 2, 2, 4], aux85, 4)
watchelement_one([5, 2, 2, 2, 4, 5], aux85, 5)
watchelement_one([2, 2, 2, 4, 5, 3, 3], aux57, M_00001_00002)
watchelement_one([2, 2, 4, 5, 3, 3, 3], aux73, M_00001_00002)
watchelement_one([2, 2, 2, 4, 5, 3, 3, 3], aux58, M_00001_00002)
watchelement_one([4, 5, 3, 3, 3, 4], aux70, 4)
watchelement_one([5, 3, 3, 3, 4, 5], aux70, 5)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3], aux59, M_00001_00003)
watchelement_one([1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3, 3], aux56, M_00001_00003)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3, 3], aux72, M_00001_00003)
watchelement_one([4, 5, 2, 2, 2, 4, 5, 3, 3, 3, 4], aux71, 4)
watchelement_one([5, 2, 2, 2, 4, 5, 3, 3, 3, 4, 5], aux71, 5)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3, 3], aux66, M_00002_00001)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3], aux36, M_00002_00001)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux35, M_00002_00001)
watchelement_one([4, 5, 2, 2, 2, 4, 5, 3, 3, 3, 4], aux83, 4)
watchelement_one([5, 2, 2, 2, 4, 5, 3, 3, 3, 4, 5], aux83, 5)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux60, M_00002_00002)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3, 3], aux68, M_00002_00002)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux37, M_00002_00002)
watchelement_one([4, 5, 2, 2, 2, 4, 5, 3, 3, 3, 4], aux69, 4)
watchelement_one([5, 2, 2, 2, 4, 5, 3, 3, 3, 4, 5], aux69, 5)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux34, M_00002_00003)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux33, M_00002_00003)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3, 3], aux67, M_00002_00003)
watchelement_one([4, 5, 2, 2, 2, 4, 5, 3, 3, 3, 4], aux84, 4)
watchelement_one([5, 2, 2, 2, 4, 5, 3, 3, 3, 4, 5], aux84, 5)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3, 3], aux80, M_00003_00001)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux48, M_00003_00001)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux47, M_00003_00001)
watchelement_one([4, 5, 2, 2, 2, 4, 5, 3, 3, 3, 4], aux87, 4)
watchelement_one([5, 2, 2, 2, 4, 5, 3, 3, 3, 4, 5], aux87, 5)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux49, M_00003_00002)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3, 3], aux81, M_00003_00002)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux46, M_00003_00002)
watchelement_one([4, 5, 2, 2, 2, 4, 5, 3, 3, 3, 4], aux86, 4)
watchelement_one([5, 2, 2, 2, 4, 5, 3, 3, 3, 4, 5], aux86, 5)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3], aux39, M_00003_00003)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux38, M_00003_00003)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3, 3], aux82, M_00003_00003)
watchelement_one([4, 5, 2, 2, 2, 4, 5, 3, 3, 3, 4], aux75, 4)
watchelement_one([5, 2, 2, 2, 4, 5, 3, 3, 3, 4, 5], aux75, 5)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3, 3], aux91, M_00004_00001)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux41, M_00004_00001)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux40, M_00004_00001)
watchelement_one([4, 5, 2, 2, 2, 4, 5, 3, 3, 3, 4], aux65, 4)
watchelement_one([5, 2, 2, 2, 4, 5, 3, 3, 3, 4, 5], aux65, 5)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux44, M_00004_00002)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3, 3], aux93, M_00004_00002)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux42, M_00004_00002)
watchelement_one([4, 5, 2, 2, 2, 4, 5, 3, 3, 3, 4], aux64, 4)
watchelement_one([5, 2, 2, 2, 4, 5, 3, 3, 3, 4, 5], aux64, 5)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux45, M_00004_00003)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux43, M_00004_00003)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3, 3], aux92, M_00004_00003)
watchelement_one([4, 5, 2, 2, 2, 4, 5, 3, 3, 3, 4], aux63, 4)
watchelement_one([5, 2, 2, 2, 4, 5, 3, 3, 3, 4, 5], aux63, 5)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3, 3], aux76, M_00005_00001)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux55, M_00005_00001)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux54, M_00005_00001)
watchelement_one([4, 5, 2, 2, 2, 4, 5, 3, 3, 3, 4], aux90, 4)
watchelement_one([5, 2, 2, 2, 4, 5, 3, 3, 3, 4, 5], aux90, 5)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux50, M_00005_00002)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3, 3], aux77, M_00005_00002)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux53, M_00005_00002)
watchelement_one([4, 5, 2, 2, 2, 4, 5, 3, 3, 3, 4], aux88, 4)
watchelement_one([5, 2, 2, 2, 4, 5, 3, 3, 3, 4, 5], aux88, 5)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux51, M_00005_00003)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3], aux52, M_00005_00003)
watchelement_one([1, 1, 1, 4, 5, 2, 2, 2, 4, 5, 3, 3, 3], aux78, M_00005_00003)
watchelement_one([4, 5, 2, 2, 2, 4, 5, 3, 3, 3, 4], aux89, 4)
watchelement_one([5, 2, 2, 2, 4, 5, 3, 3, 3, 4, 5], aux89, 5)
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00002_00001, M_00002_00002, M_00002_00003, M_00003_00001, M_00003_00002, M_00003_00003, M_00004_00001, M_00004_00002, M_00004_00003, M_00005_00001, M_00005_00002, M_00005_00003],[aux112, aux113, aux114, aux115, aux116, aux117, aux118, aux119, aux120, aux121, aux122, aux123, aux124, aux125, aux126])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00002_00001, M_00002_00002, M_00002_00003, M_00003_00001, M_00003_00002, M_00003_00003, M_00004_00001, M_00004_00002, M_00004_00003, M_00005_00001, M_00005_00002, M_00005_00003],[aux127, aux128, aux129, aux130, aux131, aux132, aux133, aux134, aux135, aux136, aux137, aux138, aux139, aux140, aux141])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00002_00001, M_00002_00002, M_00002_00003, M_00003_00001, M_00003_00002, M_00003_00003, M_00004_00001, M_00004_00002, M_00004_00003, M_00005_00001, M_00005_00002, M_00005_00003],[aux142, aux143, aux144, aux145, aux146, aux147, aux148, aux149, aux150, aux151, aux152, aux153, aux154, aux155, aux156])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00002_00001, M_00002_00002, M_00002_00003, M_00003_00001, M_00003_00002, M_00003_00003, M_00004_00001, M_00004_00002, M_00004_00003, M_00005_00001, M_00005_00002, M_00005_00003],[aux157, aux158, aux159, aux160, aux161, aux162, aux163, aux164, aux165, aux166, aux167, aux168, aux169, aux170, aux171])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00002_00001, M_00002_00002, M_00002_00003, M_00003_00001, M_00003_00002, M_00003_00003, M_00004_00001, M_00004_00002, M_00004_00003, M_00005_00001, M_00005_00002, M_00005_00003],[aux172, aux173, aux174, aux175, aux176, aux177, aux178, aux179, aux180, aux181, aux182, aux183, aux184, aux185, aux186])
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux91, aux94)
watchelement_one([M_00004_00001, M_00004_00002], M_00001_00001, aux94)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux41, aux95)
watchelement_one([M_00004_00002, M_00004_00003], aux79, aux95)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux40, aux96)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003], M_00001_00003, aux96)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux76, aux97)
watchelement_one([M_00005_00001, M_00005_00002], M_00001_00001, aux97)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux55, aux98)
watchelement_one([M_00005_00002, M_00005_00003], aux79, aux98)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux54, aux99)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003], M_00001_00003, aux99)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux44, aux100)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003], M_00002_00001, aux100)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003], M_00002_00002, aux101)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux93, aux101)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux42, aux102)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003], M_00002_00003, aux102)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux50, aux103)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003], M_00002_00001, aux103)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux77, aux104)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003], M_00002_00002, aux104)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux53, aux105)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003], M_00002_00003, aux105)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux45, aux106)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003], M_00003_00001, aux106)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux43, aux107)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003], M_00003_00002, aux107)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux92, aux108)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003], M_00003_00003, aux108)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux51, aux109)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003], M_00003_00001, aux109)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002], aux52, aux110)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003], M_00003_00002, aux110)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, 4, 5, M_00002_00001, M_00002_00002, M_00002_00003, 4, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux78, aux111)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003], M_00003_00003, aux111)
weightedsumleq([1,5,1],[M_00002_00002,M_00002_00003,-5],aux33)
weightedsumgeq([1,5,1],[M_00002_00002,M_00002_00003,-5],aux33)
weightedsumleq([1,5,1],[M_00002_00001,M_00002_00003,-5],aux34)
weightedsumgeq([1,5,1],[M_00002_00001,M_00002_00003,-5],aux34)
weightedsumleq([5,1,1],[M_00002_00001,M_00002_00003,-5],aux35)
weightedsumgeq([5,1,1],[M_00002_00001,M_00002_00003,-5],aux35)
weightedsumleq([5,1,1],[M_00002_00001,M_00002_00002,-5],aux36)
weightedsumgeq([5,1,1],[M_00002_00001,M_00002_00002,-5],aux36)
weightedsumleq([5,1,1],[M_00002_00002,M_00002_00003,-5],aux37)
weightedsumgeq([5,1,1],[M_00002_00002,M_00002_00003,-5],aux37)
weightedsumleq([1,5,1],[M_00003_00002,M_00003_00003,-5],aux38)
weightedsumgeq([1,5,1],[M_00003_00002,M_00003_00003,-5],aux38)
weightedsumleq([1,5,1],[M_00003_00001,M_00003_00003,-5],aux39)
weightedsumgeq([1,5,1],[M_00003_00001,M_00003_00003,-5],aux39)
weightedsumleq([5,1,1],[M_00004_00001,M_00004_00003,-5],aux40)
weightedsumgeq([5,1,1],[M_00004_00001,M_00004_00003,-5],aux40)
weightedsumleq([5,1,1],[M_00004_00001,M_00004_00002,-5],aux41)
weightedsumgeq([5,1,1],[M_00004_00001,M_00004_00002,-5],aux41)
weightedsumleq([5,1,1],[M_00004_00002,M_00004_00003,-5],aux42)
weightedsumgeq([5,1,1],[M_00004_00002,M_00004_00003,-5],aux42)
weightedsumleq([1,5,1],[M_00004_00002,M_00004_00003,-5],aux43)
weightedsumgeq([1,5,1],[M_00004_00002,M_00004_00003,-5],aux43)
weightedsumleq([1,5,1],[M_00004_00001,M_00004_00002,-5],aux44)
weightedsumgeq([1,5,1],[M_00004_00001,M_00004_00002,-5],aux44)
weightedsumleq([1,5,1],[M_00004_00001,M_00004_00003,-5],aux45)
weightedsumgeq([1,5,1],[M_00004_00001,M_00004_00003,-5],aux45)
weightedsumleq([5,1,1],[M_00003_00002,M_00003_00003,-5],aux46)
weightedsumgeq([5,1,1],[M_00003_00002,M_00003_00003,-5],aux46)
weightedsumleq([5,1,1],[M_00003_00001,M_00003_00003,-5],aux47)
weightedsumgeq([5,1,1],[M_00003_00001,M_00003_00003,-5],aux47)
weightedsumleq([5,1,1],[M_00003_00001,M_00003_00002,-5],aux48)
weightedsumgeq([5,1,1],[M_00003_00001,M_00003_00002,-5],aux48)
weightedsumleq([1,5,1],[M_00003_00001,M_00003_00002,-5],aux49)
weightedsumgeq([1,5,1],[M_00003_00001,M_00003_00002,-5],aux49)
weightedsumleq([1,1,5],[-5,M_00005_00001,M_00005_00002],aux50)
weightedsumgeq([1,1,5],[-5,M_00005_00001,M_00005_00002],aux50)
weightedsumleq([1,1,5],[-5,M_00005_00001,M_00005_00003],aux51)
weightedsumgeq([1,1,5],[-5,M_00005_00001,M_00005_00003],aux51)
weightedsumleq([1,1,5],[-5,M_00005_00002,M_00005_00003],aux52)
weightedsumgeq([1,1,5],[-5,M_00005_00002,M_00005_00003],aux52)
weightedsumleq([1,5,1],[-5,M_00005_00002,M_00005_00003],aux53)
weightedsumgeq([1,5,1],[-5,M_00005_00002,M_00005_00003],aux53)
weightedsumleq([1,5,1],[-5,M_00005_00001,M_00005_00003],aux54)
weightedsumgeq([1,5,1],[-5,M_00005_00001,M_00005_00003],aux54)
weightedsumleq([1,5,1],[-5,M_00005_00001,M_00005_00002],aux55)
weightedsumgeq([1,5,1],[-5,M_00005_00001,M_00005_00002],aux55)
weightedsumleq([1,1,5],[-6,M_00001_00002,M_00001_00003],aux56)
weightedsumgeq([1,1,5],[-6,M_00001_00002,M_00001_00003],aux56)
weightedsumleq([1,1,5],[-10,M_00001_00001,M_00001_00002],aux57)
weightedsumgeq([1,1,5],[-10,M_00001_00001,M_00001_00002],aux57)
weightedsumleq([1,5,1],[-10,M_00001_00002,M_00001_00003],aux58)
weightedsumgeq([1,5,1],[-10,M_00001_00002,M_00001_00003],aux58)
weightedsumleq([1,1,5],[-5,M_00001_00001,M_00001_00003],aux59)
weightedsumgeq([1,1,5],[-5,M_00001_00001,M_00001_00003],aux59)
weightedsumleq([1,5,1],[M_00002_00001,M_00002_00002,-5],aux60)
weightedsumgeq([1,5,1],[M_00002_00001,M_00002_00002,-5],aux60)
weightedsumleq([1,5,1],[-6,M_00001_00001,M_00001_00002],aux61)
weightedsumgeq([1,5,1],[-6,M_00001_00001,M_00001_00002],aux61)
weightedsumleq([1,5,1],[-5,M_00001_00001,M_00001_00003],aux62)
weightedsumgeq([1,5,1],[-5,M_00001_00001,M_00001_00003],aux62)
weightedsumleq([5,1],[M_00004_00003,-4],aux63)
weightedsumgeq([5,1],[M_00004_00003,-4],aux63)
weightedsumleq([5,1],[M_00004_00002,-4],aux64)
weightedsumgeq([5,1],[M_00004_00002,-4],aux64)
weightedsumleq([5,1],[M_00004_00001,-4],aux65)
weightedsumgeq([5,1],[M_00004_00001,-4],aux65)
weightedsumleq([6,1],[M_00002_00001,-5],aux66)
weightedsumgeq([6,1],[M_00002_00001,-5],aux66)
weightedsumleq([6,1],[M_00002_00003,-5],aux67)
weightedsumgeq([6,1],[M_00002_00003,-5],aux67)
weightedsumleq([6,1],[M_00002_00002,-5],aux68)
weightedsumgeq([6,1],[M_00002_00002,-5],aux68)
weightedsumleq([5,1],[M_00002_00002,-4],aux69)
weightedsumgeq([5,1],[M_00002_00002,-4],aux69)
weightedsumleq([1,5],[-9,M_00001_00002],aux70)
weightedsumgeq([1,5],[-9,M_00001_00002],aux70)
weightedsumleq([1,5],[-4,M_00001_00003],aux71)
weightedsumgeq([1,5],[-4,M_00001_00003],aux71)
weightedsumleq([1,6],[-5,M_00001_00003],aux72)
weightedsumgeq([1,6],[-5,M_00001_00003],aux72)
weightedsumleq([1,6],[-11,M_00001_00002],aux73)
weightedsumgeq([1,6],[-11,M_00001_00002],aux73)
weightedsumleq([1,6],[-5,M_00001_00001],aux74)
weightedsumgeq([1,6],[-5,M_00001_00001],aux74)
weightedsumleq([5,1],[M_00003_00003,-4],aux75)
weightedsumgeq([5,1],[M_00003_00003,-4],aux75)
weightedsumleq([1,6],[-5,M_00005_00001],aux76)
weightedsumgeq([1,6],[-5,M_00005_00001],aux76)
weightedsumleq([1,6],[-5,M_00005_00002],aux77)
weightedsumgeq([1,6],[-5,M_00005_00002],aux77)
weightedsumleq([1,6],[-5,M_00005_00003],aux78)
weightedsumgeq([1,6],[-5,M_00005_00003],aux78)
sumleq([-1,M_00001_00002],aux79)
sumgeq([-1,M_00001_00002],aux79)
weightedsumleq([6,1],[M_00003_00001,-5],aux80)
weightedsumgeq([6,1],[M_00003_00001,-5],aux80)
weightedsumleq([6,1],[M_00003_00002,-5],aux81)
weightedsumgeq([6,1],[M_00003_00002,-5],aux81)
weightedsumleq([6,1],[M_00003_00003,-5],aux82)
weightedsumgeq([6,1],[M_00003_00003,-5],aux82)
weightedsumleq([5,1],[M_00002_00001,-4],aux83)
weightedsumgeq([5,1],[M_00002_00001,-4],aux83)
weightedsumleq([5,1],[M_00002_00003,-4],aux84)
weightedsumgeq([5,1],[M_00002_00003,-4],aux84)
weightedsumleq([1,5],[-4,M_00001_00001],aux85)
weightedsumgeq([1,5],[-4,M_00001_00001],aux85)
weightedsumleq([5,1],[M_00003_00002,-4],aux86)
weightedsumgeq([5,1],[M_00003_00002,-4],aux86)
weightedsumleq([5,1],[M_00003_00001,-4],aux87)
weightedsumgeq([5,1],[M_00003_00001,-4],aux87)
weightedsumleq([1,5],[-4,M_00005_00002],aux88)
weightedsumgeq([1,5],[-4,M_00005_00002],aux88)
weightedsumleq([1,5],[-4,M_00005_00003],aux89)
weightedsumgeq([1,5],[-4,M_00005_00003],aux89)
weightedsumleq([1,5],[-4,M_00005_00001],aux90)
weightedsumgeq([1,5],[-4,M_00005_00001],aux90)
weightedsumleq([6,1],[M_00004_00001,-5],aux91)
weightedsumgeq([6,1],[M_00004_00001,-5],aux91)
weightedsumleq([6,1],[M_00004_00003,-5],aux92)
weightedsumgeq([6,1],[M_00004_00003,-5],aux92)
weightedsumleq([6,1],[M_00004_00002,-5],aux93)
weightedsumgeq([6,1],[M_00004_00002,-5],aux93)
**EOF**
