MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 120
# CSE_active_eliminated_expressions = 240
# CSE_active_total_size = 519
**VARIABLES**
DISCRETE M_00001_00001 #
{1..3}
DISCRETE M_00001_00002 #
{1..4}
**CONSTRAINTS**
w-inintervalset(M_00001_00002, [1,2,4,4])
**VARIABLES**
DISCRETE M_00001_00003 #
{1..4}
DISCRETE M_00001_00004 #
{1..4}
DISCRETE M_00002_00001 #
{1..4}
DISCRETE M_00002_00002 #
{1..4}
DISCRETE M_00002_00003 #
{1..4}
DISCRETE M_00002_00004 #
{1..4}
DISCRETE M_00003_00001 #
{1..4}
DISCRETE M_00003_00002 #
{1..4}
DISCRETE M_00003_00003 #
{1..4}
DISCRETE M_00003_00004 #
{1..4}
DISCRETE M_00004_00001 #
{1..4}
DISCRETE M_00004_00002 #
{1..4}
DISCRETE M_00004_00003 #
{1..4}
DISCRETE M_00004_00004 #
{1..4}
DISCRETE M_00005_00001 #
{1..4}
DISCRETE M_00005_00002 #
{1..4}
DISCRETE M_00005_00003 #
{1..4}
DISCRETE M_00005_00004 #
{1..4}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 5*M_00002_00002 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux20, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002 + 5*M_00002_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux21, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002 + 5*M_00002_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux22, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 5*M_00002_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux23, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 5*M_00002_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux24, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003 + 5*M_00002_00004 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux25, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00001 + M_00002_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux26, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00001 + M_00002_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux27, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00001 + M_00002_00002 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux28, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux29 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00002 + M_00002_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux29, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux30 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00002 + M_00002_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux30, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux31 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00003 + M_00002_00004 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux31, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux32 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00001 + M_00004_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux32, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux33 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00001 + M_00004_00002 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux33, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux34 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00001 + M_00004_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux34, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux35 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00002 + M_00004_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux35, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux36 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00002 + M_00004_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux36, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux37 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00003 + M_00004_00004 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux37, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux38 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00002 + 5*M_00004_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux38, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00002 + 5*M_00004_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux39, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003 + 5*M_00004_00004 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux40, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux41 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 5*M_00004_00002 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux41, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 5*M_00004_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux42, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 5*M_00004_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux43, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00002 + M_00003_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux44, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux45 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00002 + M_00003_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux45, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux46 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00001 + M_00003_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux46, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux47 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00001 + M_00003_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux47, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux48 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00001 + M_00003_00002 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux48, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux49 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00003 + M_00003_00004 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux49, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux50 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00002 + 5*M_00003_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux50, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00002 + 5*M_00003_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux51, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 5*M_00003_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux52, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 5*M_00003_00002 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux53, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 5*M_00003_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux54, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003 + 5*M_00003_00004 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux55, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00005_00003 + 5*M_00005_00004)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux56, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00005_00001 + 5*M_00005_00002)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux57, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00005_00001 + 5*M_00005_00004)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux58, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00005_00001 + 5*M_00005_00003)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux59, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00005_00002 + 5*M_00005_00004)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux60, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00005_00002 + 5*M_00005_00003)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux61, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00005_00002 + M_00005_00004)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux62, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00005_00002 + M_00005_00003)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux63, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00005_00003 + M_00005_00004)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux64, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux65 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00005_00001 + M_00005_00003)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux65, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00005_00001 + M_00005_00004)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux66, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00005_00001 + M_00005_00002)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux67, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00001_00002 + M_00001_00004)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux68, [3,4,6,9,16,17])
**VARIABLES**
DISCRETE aux69 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00001_00002 + M_00001_00003)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux69, [3,4,6,9,16,17])
**VARIABLES**
DISCRETE aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00001_00003 + M_00001_00004)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux70, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00001_00001 + M_00001_00003)
{3..12}
**CONSTRAINTS**
w-inintervalset(aux71, [3,4,6,9,11,12])
**VARIABLES**
DISCRETE aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00001_00001 + M_00001_00004)
{3..12}
**CONSTRAINTS**
w-inintervalset(aux72, [3,4,6,9,11,12])
**VARIABLES**
DISCRETE aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00001_00001 + M_00001_00002)
{2..14}
**CONSTRAINTS**
w-inintervalset(aux73, [2,2,6,7,11,12,14,14])
**VARIABLES**
DISCRETE aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00001_00003 + 5*M_00001_00004)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux74, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00001_00001 + 5*M_00001_00002)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux75, [2,2,6,7,16,18])
**VARIABLES**
DISCRETE aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00001_00001 + 5*M_00001_00004)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux76, [3,3,6,8,11,13,16,17])
**VARIABLES**
DISCRETE aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00001_00001 + 5*M_00001_00003)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux77, [3,3,6,8,11,13,16,17])
**VARIABLES**
DISCRETE aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00001_00002 + 5*M_00001_00004)
{4..17}
**CONSTRAINTS**
w-inintervalset(aux78, [4,4,6,7,9,9,11,12,16,17])
**VARIABLES**
DISCRETE aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00001_00002 + 5*M_00001_00003)
{4..17}
**CONSTRAINTS**
w-inintervalset(aux79, [4,4,6,7,9,9,11,12,16,17])
**VARIABLES**
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00001 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux80, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00001 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux81, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00004 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux82, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00002 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux83, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00003 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux84, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux85 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux85, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux86, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux87, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux88 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00004)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux88, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux89 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00001)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux89, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00002)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux90, [1,1,6,6,16,16])
**VARIABLES**
DISCRETE aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00003)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux91, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00001_00002)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux92, [1,1,7,7,19,19])
**VARIABLES**
DISCRETE aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00001_00003)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux93, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux94 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00001_00004)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux94, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00001_00001)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux95, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00005_00001)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux96, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00005_00002)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux97, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux98 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00005_00003)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux98, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux99 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00005_00004)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux99, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux100 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00005_00004)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux100, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux101 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00005_00001)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux101, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux102 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00005_00002)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux102, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux103 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00005_00003)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux103, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00003_00003 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux104, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00003_00004 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux105, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00003_00001 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux106, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00003_00002 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux107, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux108, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux109 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux109, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00001 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux110, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux111 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux111, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux112 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00004_00001 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux112, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux113 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00004_00003 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux113, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux114 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00004_00002 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux114, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00004_00004 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux115, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux116, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux117 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00001 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux117, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux118 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux118, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux119 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux119, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux120 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux81) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux95)
{1..5}
DISCRETE aux121 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux28) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux73)
{1..5}
DISCRETE aux122 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux27) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002], aux71)
{1..5}
DISCRETE aux123 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux26) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002], aux72)
{1..5}
DISCRETE aux124 #ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5], aux89) --- ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux80)
{1..5}
DISCRETE aux125 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux77) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux106)
{1..5}
DISCRETE aux126 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux48) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux79)
{1..5}
DISCRETE aux127 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux46) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux93)
{1..5}
DISCRETE aux128 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux47) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux70)
{1..5}
DISCRETE aux129 #ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux110) --- ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux91)
{1..5}
DISCRETE aux130 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux112) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux76)
{1..5}
DISCRETE aux131 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux33) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux78)
{1..5}
DISCRETE aux132 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux32) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux74)
{1..5}
DISCRETE aux133 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux34) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux94)
{1..5}
DISCRETE aux134 #ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux88) --- ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux117)
{1..5}
DISCRETE aux135 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux96) --- ElementOne([M_00005_00001, M_00005_00002, M_00005_00003], M_00001_00001)
{1..4}
DISCRETE aux136 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00001_00002) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux67)
{1..4}
DISCRETE aux137 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00001_00003) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux65)
{1..4}
DISCRETE aux138 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00001_00004) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux66)
{1..4}
DISCRETE aux139 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux20) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux75)
{1..5}
DISCRETE aux140 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux92) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux83)
{1..5}
DISCRETE aux141 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux29) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux69)
{1..5}
DISCRETE aux142 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux30) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux68)
{1..5}
DISCRETE aux143 #ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux90) --- ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux85)
{1..5}
DISCRETE aux144 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux53) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux23)
{1..5}
DISCRETE aux145 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux21) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux107)
{1..5}
DISCRETE aux146 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux45) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux84)
{1..5}
DISCRETE aux147 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux44) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux31)
{1..5}
DISCRETE aux148 #ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux109) --- ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux87)
{1..5}
DISCRETE aux149 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux41) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux24)
{1..5}
DISCRETE aux150 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux22) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux114)
{1..5}
DISCRETE aux151 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux36) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux25)
{1..5}
DISCRETE aux152 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux35) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux82)
{1..5}
DISCRETE aux153 #ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux116) --- ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux86)
{1..5}
DISCRETE aux154 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00002_00001) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux57)
{1..4}
DISCRETE aux155 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux97) --- ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00002_00002)
{1..4}
DISCRETE aux156 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00002_00003) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux63)
{1..4}
DISCRETE aux157 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00002_00004) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux62)
{1..4}
DISCRETE aux158 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux43) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux54)
{1..5}
DISCRETE aux159 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux38) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux51)
{1..5}
DISCRETE aux160 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux113) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux104)
{1..5}
DISCRETE aux161 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux37) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux49)
{1..5}
DISCRETE aux162 #ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux108) --- ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux118)
{1..5}
DISCRETE aux163 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00003_00001) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux59)
{1..4}
DISCRETE aux164 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00003_00002) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux61)
{1..4}
DISCRETE aux165 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux98) --- ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00003_00003)
{1..4}
DISCRETE aux166 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00003_00004) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux64)
{1..4}
DISCRETE aux167 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux42) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux52)
{1..5}
DISCRETE aux168 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux39) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux50)
{1..5}
DISCRETE aux169 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux40) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux55)
{1..5}
DISCRETE aux170 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux115) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux105)
{1..5}
DISCRETE aux171 #ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux111) --- ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux119)
{1..5}
DISCRETE aux172 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00004_00001) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux58)
{1..4}
DISCRETE aux173 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00004_00002) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux60)
{1..4}
DISCRETE aux174 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00004_00003) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux56)
{1..4}
DISCRETE aux175 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux99) --- ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00004_00004)
{1..4}
DISCRETE aux176 #ElementOne([1, 2, 4], M_00001_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux176, [1,2,4,4])
**VARIABLES**
DISCRETE aux177 #ElementOne([1, 2, 4, 3], M_00001_00002)
{1..4}
DISCRETE aux178 #ElementOne([1, 2, 4, 3], M_00001_00004)
{1..4}
DISCRETE aux179 #ElementOne([1, 2, 4, 3], M_00001_00003)
{1..4}
DISCRETE aux180 #ElementOne([1, 2, 4, 3], M_00002_00001)
{1..4}
DISCRETE aux181 #ElementOne([1, 2, 4, 3], M_00002_00002)
{1..4}
DISCRETE aux182 #ElementOne([1, 2, 4, 3], M_00002_00004)
{1..4}
DISCRETE aux183 #ElementOne([1, 2, 4, 3], M_00002_00003)
{1..4}
DISCRETE aux184 #ElementOne([1, 2, 4, 3], M_00004_00001)
{1..4}
DISCRETE aux185 #ElementOne([1, 2, 4, 3], M_00004_00002)
{1..4}
DISCRETE aux186 #ElementOne([1, 2, 4, 3], M_00004_00004)
{1..4}
DISCRETE aux187 #ElementOne([1, 2, 4, 3], M_00004_00003)
{1..4}
DISCRETE aux188 #ElementOne([1, 2, 4, 3], M_00003_00001)
{1..4}
DISCRETE aux189 #ElementOne([1, 2, 4, 3], M_00003_00002)
{1..4}
DISCRETE aux190 #ElementOne([1, 2, 4, 3], M_00003_00004)
{1..4}
DISCRETE aux191 #ElementOne([1, 2, 4, 3], M_00003_00003)
{1..4}
DISCRETE aux192 #ElementOne([1, 2, 4, 3], M_00005_00001)
{1..4}
DISCRETE aux193 #ElementOne([1, 2, 4, 3], M_00005_00002)
{1..4}
DISCRETE aux194 #ElementOne([1, 2, 4, 3], M_00005_00004)
{1..4}
DISCRETE aux195 #ElementOne([1, 2, 4, 3], M_00005_00003)
{1..4}
DISCRETE aux196 #ElementOne([2, 1, 3, 4], M_00002_00002)
{1..4}
DISCRETE aux197 #ElementOne([2, 1, 3, 4], M_00002_00001)
{1..4}
DISCRETE aux198 #ElementOne([2, 1, 3, 4], M_00002_00003)
{1..4}
DISCRETE aux199 #ElementOne([2, 1, 3, 4], M_00002_00004)
{1..4}
DISCRETE aux200 #ElementOne([2, 1, 3, 4], M_00001_00002)
{1..4}
DISCRETE aux201 #ElementOne([2, 1, 3], M_00001_00001)
{1..3}
DISCRETE aux202 #ElementOne([2, 1, 3, 4], M_00001_00003)
{1..4}
DISCRETE aux203 #ElementOne([2, 1, 3, 4], M_00001_00004)
{1..4}
DISCRETE aux204 #ElementOne([2, 1, 3, 4], M_00003_00002)
{1..4}
DISCRETE aux205 #ElementOne([2, 1, 3, 4], M_00003_00001)
{1..4}
DISCRETE aux206 #ElementOne([2, 1, 3, 4], M_00003_00003)
{1..4}
DISCRETE aux207 #ElementOne([2, 1, 3, 4], M_00003_00004)
{1..4}
DISCRETE aux208 #ElementOne([2, 1, 3, 4], M_00004_00002)
{1..4}
DISCRETE aux209 #ElementOne([2, 1, 3, 4], M_00004_00001)
{1..4}
DISCRETE aux210 #ElementOne([2, 1, 3, 4], M_00004_00003)
{1..4}
DISCRETE aux211 #ElementOne([2, 1, 3, 4], M_00004_00004)
{1..4}
DISCRETE aux212 #ElementOne([2, 1, 3, 4], M_00005_00002)
{1..4}
DISCRETE aux213 #ElementOne([2, 1, 3, 4], M_00005_00001)
{1..4}
DISCRETE aux214 #ElementOne([2, 1, 3, 4], M_00005_00003)
{1..4}
DISCRETE aux215 #ElementOne([2, 1, 3, 4], M_00005_00004)
{1..4}
DISCRETE aux216 #ElementOne([2, 1, 4, 3], M_00002_00002)
{1..4}
DISCRETE aux217 #ElementOne([2, 1, 4, 3], M_00002_00001)
{1..4}
DISCRETE aux218 #ElementOne([2, 1, 4, 3], M_00002_00004)
{1..4}
DISCRETE aux219 #ElementOne([2, 1, 4, 3], M_00002_00003)
{1..4}
DISCRETE aux220 #ElementOne([2, 1, 4, 3], M_00001_00002)
{1..4}
DISCRETE aux221 #ElementOne([2, 1, 4], M_00001_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux221, [1,2,4,4])
**VARIABLES**
DISCRETE aux222 #ElementOne([2, 1, 4, 3], M_00001_00004)
{1..4}
DISCRETE aux223 #ElementOne([2, 1, 4, 3], M_00001_00003)
{1..4}
DISCRETE aux224 #ElementOne([2, 1, 4, 3], M_00004_00002)
{1..4}
DISCRETE aux225 #ElementOne([2, 1, 4, 3], M_00004_00001)
{1..4}
DISCRETE aux226 #ElementOne([2, 1, 4, 3], M_00004_00004)
{1..4}
DISCRETE aux227 #ElementOne([2, 1, 4, 3], M_00004_00003)
{1..4}
DISCRETE aux228 #ElementOne([2, 1, 4, 3], M_00003_00002)
{1..4}
DISCRETE aux229 #ElementOne([2, 1, 4, 3], M_00003_00001)
{1..4}
DISCRETE aux230 #ElementOne([2, 1, 4, 3], M_00003_00004)
{1..4}
DISCRETE aux231 #ElementOne([2, 1, 4, 3], M_00003_00003)
{1..4}
DISCRETE aux232 #ElementOne([2, 1, 4, 3], M_00005_00002)
{1..4}
DISCRETE aux233 #ElementOne([2, 1, 4, 3], M_00005_00001)
{1..4}
DISCRETE aux234 #ElementOne([2, 1, 4, 3], M_00005_00004)
{1..4}
DISCRETE aux235 #ElementOne([2, 1, 4, 3], M_00005_00003)
{1..4}
DISCRETE aux236 #ElementOne([4, 3, 1, 2], M_00003_00003)
{1..4}
DISCRETE aux237 #ElementOne([4, 3, 1, 2], M_00003_00004)
{1..4}
DISCRETE aux238 #ElementOne([4, 3, 1, 2], M_00003_00002)
{1..4}
DISCRETE aux239 #ElementOne([4, 3, 1, 2], M_00003_00001)
{1..4}
DISCRETE aux240 #ElementOne([4, 3, 1, 2], M_00004_00003)
{1..4}
DISCRETE aux241 #ElementOne([4, 3, 1, 2], M_00004_00004)
{1..4}
DISCRETE aux242 #ElementOne([4, 3, 1, 2], M_00004_00002)
{1..4}
DISCRETE aux243 #ElementOne([4, 3, 1, 2], M_00004_00001)
{1..4}
DISCRETE aux244 #ElementOne([4, 3, 1, 2], M_00002_00003)
{1..4}
DISCRETE aux245 #ElementOne([4, 3, 1, 2], M_00002_00004)
{1..4}
DISCRETE aux246 #ElementOne([4, 3, 1, 2], M_00002_00002)
{1..4}
DISCRETE aux247 #ElementOne([4, 3, 1, 2], M_00002_00001)
{1..4}
DISCRETE aux248 #ElementOne([4, 3, 1, 2], M_00001_00003)
{1..4}
DISCRETE aux249 #ElementOne([4, 3, 1, 2], M_00001_00004)
{1..4}
DISCRETE aux250 #ElementOne([4, 3, 1, 2], M_00001_00002)
{1..4}
DISCRETE aux251 #ElementOne([4, 3, 1], M_00001_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux251, [1,1,3,4])
**VARIABLES**
DISCRETE aux252 #ElementOne([4, 3, 1, 2], M_00005_00003)
{1..4}
DISCRETE aux253 #ElementOne([4, 3, 1, 2], M_00005_00004)
{1..4}
DISCRETE aux254 #ElementOne([4, 3, 1, 2], M_00005_00002)
{1..4}
DISCRETE aux255 #ElementOne([4, 3, 1, 2], M_00005_00001)
{1..4}
DISCRETE aux256 #ElementOne([3, 4, 1, 2], M_00003_00003)
{1..4}
DISCRETE aux257 #ElementOne([3, 4, 1, 2], M_00003_00004)
{1..4}
DISCRETE aux258 #ElementOne([3, 4, 1, 2], M_00003_00001)
{1..4}
DISCRETE aux259 #ElementOne([3, 4, 1, 2], M_00003_00002)
{1..4}
DISCRETE aux260 #ElementOne([3, 4, 1, 2], M_00004_00003)
{1..4}
DISCRETE aux261 #ElementOne([3, 4, 1, 2], M_00004_00004)
{1..4}
DISCRETE aux262 #ElementOne([3, 4, 1, 2], M_00004_00001)
{1..4}
DISCRETE aux263 #ElementOne([3, 4, 1, 2], M_00004_00002)
{1..4}
DISCRETE aux264 #ElementOne([3, 4, 1, 2], M_00001_00003)
{1..4}
DISCRETE aux265 #ElementOne([3, 4, 1, 2], M_00001_00004)
{1..4}
DISCRETE aux266 #ElementOne([3, 4, 1], M_00001_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux266, [1,1,3,4])
**VARIABLES**
DISCRETE aux267 #ElementOne([3, 4, 1, 2], M_00001_00002)
{1..4}
DISCRETE aux268 #ElementOne([3, 4, 1, 2], M_00002_00003)
{1..4}
DISCRETE aux269 #ElementOne([3, 4, 1, 2], M_00002_00004)
{1..4}
DISCRETE aux270 #ElementOne([3, 4, 1, 2], M_00002_00001)
{1..4}
DISCRETE aux271 #ElementOne([3, 4, 1, 2], M_00002_00002)
{1..4}
DISCRETE aux272 #ElementOne([3, 4, 1, 2], M_00005_00003)
{1..4}
DISCRETE aux273 #ElementOne([3, 4, 1, 2], M_00005_00004)
{1..4}
DISCRETE aux274 #ElementOne([3, 4, 1, 2], M_00005_00001)
{1..4}
DISCRETE aux275 #ElementOne([3, 4, 1, 2], M_00005_00002)
{1..4}
DISCRETE aux276 #ElementOne([3, 4, 2, 1], M_00004_00004)
{1..4}
DISCRETE aux277 #ElementOne([3, 4, 2, 1], M_00004_00003)
{1..4}
DISCRETE aux278 #ElementOne([3, 4, 2, 1], M_00004_00001)
{1..4}
DISCRETE aux279 #ElementOne([3, 4, 2, 1], M_00004_00002)
{1..4}
DISCRETE aux280 #ElementOne([3, 4, 2, 1], M_00003_00004)
{1..4}
DISCRETE aux281 #ElementOne([3, 4, 2, 1], M_00003_00003)
{1..4}
DISCRETE aux282 #ElementOne([3, 4, 2, 1], M_00003_00001)
{1..4}
DISCRETE aux283 #ElementOne([3, 4, 2, 1], M_00003_00002)
{1..4}
DISCRETE aux284 #ElementOne([3, 4, 2, 1], M_00001_00004)
{1..4}
DISCRETE aux285 #ElementOne([3, 4, 2, 1], M_00001_00003)
{1..4}
DISCRETE aux286 #ElementOne([3, 4, 2], M_00001_00001)
{2..4}
DISCRETE aux287 #ElementOne([3, 4, 2, 1], M_00001_00002)
{1..4}
DISCRETE aux288 #ElementOne([3, 4, 2, 1], M_00002_00004)
{1..4}
DISCRETE aux289 #ElementOne([3, 4, 2, 1], M_00002_00003)
{1..4}
DISCRETE aux290 #ElementOne([3, 4, 2, 1], M_00002_00001)
{1..4}
DISCRETE aux291 #ElementOne([3, 4, 2, 1], M_00002_00002)
{1..4}
DISCRETE aux292 #ElementOne([3, 4, 2, 1], M_00005_00004)
{1..4}
DISCRETE aux293 #ElementOne([3, 4, 2, 1], M_00005_00003)
{1..4}
DISCRETE aux294 #ElementOne([3, 4, 2, 1], M_00005_00001)
{1..4}
DISCRETE aux295 #ElementOne([3, 4, 2, 1], M_00005_00002)
{1..4}
DISCRETE aux296 #ElementOne([4, 3, 2, 1], M_00004_00004)
{1..4}
DISCRETE aux297 #ElementOne([4, 3, 2, 1], M_00004_00003)
{1..4}
DISCRETE aux298 #ElementOne([4, 3, 2, 1], M_00004_00002)
{1..4}
DISCRETE aux299 #ElementOne([4, 3, 2, 1], M_00004_00001)
{1..4}
DISCRETE aux300 #ElementOne([4, 3, 2, 1], M_00003_00004)
{1..4}
DISCRETE aux301 #ElementOne([4, 3, 2, 1], M_00003_00003)
{1..4}
DISCRETE aux302 #ElementOne([4, 3, 2, 1], M_00003_00002)
{1..4}
DISCRETE aux303 #ElementOne([4, 3, 2, 1], M_00003_00001)
{1..4}
DISCRETE aux304 #ElementOne([4, 3, 2, 1], M_00002_00004)
{1..4}
DISCRETE aux305 #ElementOne([4, 3, 2, 1], M_00002_00003)
{1..4}
DISCRETE aux306 #ElementOne([4, 3, 2, 1], M_00002_00002)
{1..4}
DISCRETE aux307 #ElementOne([4, 3, 2, 1], M_00002_00001)
{1..4}
DISCRETE aux308 #ElementOne([4, 3, 2, 1], M_00001_00004)
{1..4}
DISCRETE aux309 #ElementOne([4, 3, 2, 1], M_00001_00003)
{1..4}
DISCRETE aux310 #ElementOne([4, 3, 2, 1], M_00001_00002)
{1..4}
DISCRETE aux311 #ElementOne([4, 3, 2], M_00001_00001)
{2..4}
DISCRETE aux312 #ElementOne([4, 3, 2, 1], M_00005_00004)
{1..4}
DISCRETE aux313 #ElementOne([4, 3, 2, 1], M_00005_00003)
{1..4}
DISCRETE aux314 #ElementOne([4, 3, 2, 1], M_00005_00002)
{1..4}
DISCRETE aux315 #ElementOne([4, 3, 2, 1], M_00005_00001)
{1..4}
**TUPLELIST**
rack 5 5
1 1 3 4 5 
2 2 3 4 5 
1 2 3 3 5 
1 2 4 4 5 
1 2 3 4 5 
**VARIABLES**
ALIAS rack[5,5]=[[1, 1, 3, 4, 5], [2, 2, 3, 4, 5], [1, 2, 3, 3, 5], [1, 2, 4, 4, 5], [1, 2, 3, 4, 5]]
**TUPLELIST**
perms 8 5
1 2 3 4 5 
1 2 4 3 5 
2 1 3 4 5 
2 1 4 3 5 
3 4 2 1 5 
3 4 1 2 5 
4 3 1 2 5 
4 3 2 1 5 
**VARIABLES**
ALIAS perms[8,5]=[[1, 2, 3, 4, 5], [1, 2, 4, 3, 5], [2, 1, 3, 4, 5], [2, 1, 4, 3, 5], [3, 4, 2, 1, 5], [3, 4, 1, 2, 5], [4, 3, 1, 2, 5], [4, 3, 2, 1, 5]]
**TUPLELIST**
inverses 8 5
1 2 3 4 5 
1 2 4 3 5 
2 1 3 4 5 
2 1 4 3 5 
4 3 1 2 5 
3 4 1 2 5 
3 4 2 1 5 
4 3 2 1 5 
**VARIABLES**
ALIAS inverses[8,5]=[[1, 2, 3, 4, 5], [1, 2, 4, 3, 5], [2, 1, 3, 4, 5], [2, 1, 4, 3, 5], [4, 3, 1, 2, 5], [3, 4, 1, 2, 5], [3, 4, 2, 1, 5], [4, 3, 2, 1, 5]]
**SEARCH**
PRINT[[M_00001_00001],[M_00001_00002],[M_00001_00003],[M_00001_00004],[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004]]
VARORDER STATIC [M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004]
**CONSTRAINTS**
watchelement_one([1, 2, 4], M_00001_00001, aux176)
watchelement_one([1, 2, 4, 3], M_00001_00002, aux177)
watchelement_one([1, 2, 4, 3], M_00001_00004, aux178)
watchelement_one([1, 2, 4, 3], M_00001_00003, aux179)
watchelement_one([1, 2, 4, 3], M_00002_00001, aux180)
watchelement_one([1, 2, 4, 3], M_00002_00002, aux181)
watchelement_one([1, 2, 4, 3], M_00002_00004, aux182)
watchelement_one([1, 2, 4, 3], M_00002_00003, aux183)
watchelement_one([1, 2, 4, 3], M_00004_00001, aux184)
watchelement_one([1, 2, 4, 3], M_00004_00002, aux185)
watchelement_one([1, 2, 4, 3], M_00004_00004, aux186)
watchelement_one([1, 2, 4, 3], M_00004_00003, aux187)
watchelement_one([1, 2, 4, 3], M_00003_00001, aux188)
watchelement_one([1, 2, 4, 3], M_00003_00002, aux189)
watchelement_one([1, 2, 4, 3], M_00003_00004, aux190)
watchelement_one([1, 2, 4, 3], M_00003_00003, aux191)
watchelement_one([1, 2, 4, 3], M_00005_00001, aux192)
watchelement_one([1, 2, 4, 3], M_00005_00002, aux193)
watchelement_one([1, 2, 4, 3], M_00005_00004, aux194)
watchelement_one([1, 2, 4, 3], M_00005_00003, aux195)
watchelement_one([2, 1, 3, 4], M_00002_00002, aux196)
watchelement_one([2, 1, 3, 4], M_00002_00001, aux197)
watchelement_one([2, 1, 3, 4], M_00002_00003, aux198)
watchelement_one([2, 1, 3, 4], M_00002_00004, aux199)
watchelement_one([2, 1, 3, 4], M_00001_00002, aux200)
watchelement_one([2, 1, 3], M_00001_00001, aux201)
watchelement_one([2, 1, 3, 4], M_00001_00003, aux202)
watchelement_one([2, 1, 3, 4], M_00001_00004, aux203)
watchelement_one([2, 1, 3, 4], M_00003_00002, aux204)
watchelement_one([2, 1, 3, 4], M_00003_00001, aux205)
watchelement_one([2, 1, 3, 4], M_00003_00003, aux206)
watchelement_one([2, 1, 3, 4], M_00003_00004, aux207)
watchelement_one([2, 1, 3, 4], M_00004_00002, aux208)
watchelement_one([2, 1, 3, 4], M_00004_00001, aux209)
watchelement_one([2, 1, 3, 4], M_00004_00003, aux210)
watchelement_one([2, 1, 3, 4], M_00004_00004, aux211)
watchelement_one([2, 1, 3, 4], M_00005_00002, aux212)
watchelement_one([2, 1, 3, 4], M_00005_00001, aux213)
watchelement_one([2, 1, 3, 4], M_00005_00003, aux214)
watchelement_one([2, 1, 3, 4], M_00005_00004, aux215)
watchelement_one([2, 1, 4, 3], M_00002_00002, aux216)
watchelement_one([2, 1, 4, 3], M_00002_00001, aux217)
watchelement_one([2, 1, 4, 3], M_00002_00004, aux218)
watchelement_one([2, 1, 4, 3], M_00002_00003, aux219)
watchelement_one([2, 1, 4, 3], M_00001_00002, aux220)
watchelement_one([2, 1, 4], M_00001_00001, aux221)
watchelement_one([2, 1, 4, 3], M_00001_00004, aux222)
watchelement_one([2, 1, 4, 3], M_00001_00003, aux223)
watchelement_one([2, 1, 4, 3], M_00004_00002, aux224)
watchelement_one([2, 1, 4, 3], M_00004_00001, aux225)
watchelement_one([2, 1, 4, 3], M_00004_00004, aux226)
watchelement_one([2, 1, 4, 3], M_00004_00003, aux227)
watchelement_one([2, 1, 4, 3], M_00003_00002, aux228)
watchelement_one([2, 1, 4, 3], M_00003_00001, aux229)
watchelement_one([2, 1, 4, 3], M_00003_00004, aux230)
watchelement_one([2, 1, 4, 3], M_00003_00003, aux231)
watchelement_one([2, 1, 4, 3], M_00005_00002, aux232)
watchelement_one([2, 1, 4, 3], M_00005_00001, aux233)
watchelement_one([2, 1, 4, 3], M_00005_00004, aux234)
watchelement_one([2, 1, 4, 3], M_00005_00003, aux235)
watchelement_one([4, 3, 1, 2], M_00003_00003, aux236)
watchelement_one([4, 3, 1, 2], M_00003_00004, aux237)
watchelement_one([4, 3, 1, 2], M_00003_00002, aux238)
watchelement_one([4, 3, 1, 2], M_00003_00001, aux239)
watchelement_one([4, 3, 1, 2], M_00004_00003, aux240)
watchelement_one([4, 3, 1, 2], M_00004_00004, aux241)
watchelement_one([4, 3, 1, 2], M_00004_00002, aux242)
watchelement_one([4, 3, 1, 2], M_00004_00001, aux243)
watchelement_one([4, 3, 1, 2], M_00002_00003, aux244)
watchelement_one([4, 3, 1, 2], M_00002_00004, aux245)
watchelement_one([4, 3, 1, 2], M_00002_00002, aux246)
watchelement_one([4, 3, 1, 2], M_00002_00001, aux247)
watchelement_one([4, 3, 1, 2], M_00001_00003, aux248)
watchelement_one([4, 3, 1, 2], M_00001_00004, aux249)
watchelement_one([4, 3, 1, 2], M_00001_00002, aux250)
watchelement_one([4, 3, 1], M_00001_00001, aux251)
watchelement_one([4, 3, 1, 2], M_00005_00003, aux252)
watchelement_one([4, 3, 1, 2], M_00005_00004, aux253)
watchelement_one([4, 3, 1, 2], M_00005_00002, aux254)
watchelement_one([4, 3, 1, 2], M_00005_00001, aux255)
watchelement_one([3, 4, 1, 2], M_00003_00003, aux256)
watchelement_one([3, 4, 1, 2], M_00003_00004, aux257)
watchelement_one([3, 4, 1, 2], M_00003_00001, aux258)
watchelement_one([3, 4, 1, 2], M_00003_00002, aux259)
watchelement_one([3, 4, 1, 2], M_00004_00003, aux260)
watchelement_one([3, 4, 1, 2], M_00004_00004, aux261)
watchelement_one([3, 4, 1, 2], M_00004_00001, aux262)
watchelement_one([3, 4, 1, 2], M_00004_00002, aux263)
watchelement_one([3, 4, 1, 2], M_00001_00003, aux264)
watchelement_one([3, 4, 1, 2], M_00001_00004, aux265)
watchelement_one([3, 4, 1], M_00001_00001, aux266)
watchelement_one([3, 4, 1, 2], M_00001_00002, aux267)
watchelement_one([3, 4, 1, 2], M_00002_00003, aux268)
watchelement_one([3, 4, 1, 2], M_00002_00004, aux269)
watchelement_one([3, 4, 1, 2], M_00002_00001, aux270)
watchelement_one([3, 4, 1, 2], M_00002_00002, aux271)
watchelement_one([3, 4, 1, 2], M_00005_00003, aux272)
watchelement_one([3, 4, 1, 2], M_00005_00004, aux273)
watchelement_one([3, 4, 1, 2], M_00005_00001, aux274)
watchelement_one([3, 4, 1, 2], M_00005_00002, aux275)
watchelement_one([3, 4, 2, 1], M_00004_00004, aux276)
watchelement_one([3, 4, 2, 1], M_00004_00003, aux277)
watchelement_one([3, 4, 2, 1], M_00004_00001, aux278)
watchelement_one([3, 4, 2, 1], M_00004_00002, aux279)
watchelement_one([3, 4, 2, 1], M_00003_00004, aux280)
watchelement_one([3, 4, 2, 1], M_00003_00003, aux281)
watchelement_one([3, 4, 2, 1], M_00003_00001, aux282)
watchelement_one([3, 4, 2, 1], M_00003_00002, aux283)
watchelement_one([3, 4, 2, 1], M_00001_00004, aux284)
watchelement_one([3, 4, 2, 1], M_00001_00003, aux285)
watchelement_one([3, 4, 2], M_00001_00001, aux286)
watchelement_one([3, 4, 2, 1], M_00001_00002, aux287)
watchelement_one([3, 4, 2, 1], M_00002_00004, aux288)
watchelement_one([3, 4, 2, 1], M_00002_00003, aux289)
watchelement_one([3, 4, 2, 1], M_00002_00001, aux290)
watchelement_one([3, 4, 2, 1], M_00002_00002, aux291)
watchelement_one([3, 4, 2, 1], M_00005_00004, aux292)
watchelement_one([3, 4, 2, 1], M_00005_00003, aux293)
watchelement_one([3, 4, 2, 1], M_00005_00001, aux294)
watchelement_one([3, 4, 2, 1], M_00005_00002, aux295)
watchelement_one([4, 3, 2, 1], M_00004_00004, aux296)
watchelement_one([4, 3, 2, 1], M_00004_00003, aux297)
watchelement_one([4, 3, 2, 1], M_00004_00002, aux298)
watchelement_one([4, 3, 2, 1], M_00004_00001, aux299)
watchelement_one([4, 3, 2, 1], M_00003_00004, aux300)
watchelement_one([4, 3, 2, 1], M_00003_00003, aux301)
watchelement_one([4, 3, 2, 1], M_00003_00002, aux302)
watchelement_one([4, 3, 2, 1], M_00003_00001, aux303)
watchelement_one([4, 3, 2, 1], M_00002_00004, aux304)
watchelement_one([4, 3, 2, 1], M_00002_00003, aux305)
watchelement_one([4, 3, 2, 1], M_00002_00002, aux306)
watchelement_one([4, 3, 2, 1], M_00002_00001, aux307)
watchelement_one([4, 3, 2, 1], M_00001_00004, aux308)
watchelement_one([4, 3, 2, 1], M_00001_00003, aux309)
watchelement_one([4, 3, 2, 1], M_00001_00002, aux310)
watchelement_one([4, 3, 2], M_00001_00001, aux311)
watchelement_one([4, 3, 2, 1], M_00005_00004, aux312)
watchelement_one([4, 3, 2, 1], M_00005_00003, aux313)
watchelement_one([4, 3, 2, 1], M_00005_00002, aux314)
watchelement_one([4, 3, 2, 1], M_00005_00001, aux315)
watchelement_one([1, 2, 3, 4], M_00005_00001, M_00005_00001)
watchelement_one([1, 2, 3, 4], M_00005_00004, M_00005_00004)
watchelement_one([1, 2, 3, 4], M_00005_00003, M_00005_00003)
watchelement_one([1, 2, 3, 4], M_00005_00002, M_00005_00002)
watchelement_one([1, 2, 3, 4], M_00002_00002, M_00002_00002)
watchelement_one([1, 2, 3, 4], M_00002_00001, M_00002_00001)
watchelement_one([1, 2, 3, 4], M_00002_00004, M_00002_00004)
watchelement_one([1, 2, 3, 4], M_00002_00003, M_00002_00003)
watchelement_one([1, 2, 3, 4], M_00003_00004, M_00003_00004)
watchelement_one([1, 2, 3, 4], M_00003_00003, M_00003_00003)
watchelement_one([1, 2, 3, 4], M_00003_00002, M_00003_00002)
watchelement_one([1, 2, 3, 4], M_00003_00001, M_00003_00001)
watchelement_one([1, 2, 3, 4], M_00001_00004, M_00001_00004)
watchelement_one([1, 2, 3, 4], M_00001_00003, M_00001_00003)
watchelement_one([1, 2, 3, 4], M_00001_00002, M_00001_00002)
watchelement_one([1, 2, 3, 4], M_00004_00004, M_00004_00004)
watchelement_one([1, 2, 3, 4], M_00004_00003, M_00004_00003)
watchelement_one([1, 2, 3, 4], M_00004_00002, M_00004_00002)
watchelement_one([1, 2, 3, 4], M_00004_00001, M_00004_00001)
watchelement_one([1, 2, 3], M_00001_00001, M_00001_00001)
gacalldiff([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004])
gacalldiff([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004])
gacalldiff([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004])
gacalldiff([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004])
gacalldiff([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004])
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux101, 5)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux102, 5)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux103, 5)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux100, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3], aux95, M_00001_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3], aux73, M_00001_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2], aux71, M_00001_00003)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2], aux72, M_00001_00004)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5], aux89, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux75, M_00001_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux92, M_00001_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux69, M_00001_00003)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux68, M_00001_00004)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux90, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux77, M_00001_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux79, M_00001_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux93, M_00001_00003)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux70, M_00001_00003)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux91, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux76, M_00001_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux78, M_00001_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux74, M_00001_00004)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux94, M_00001_00004)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux88, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux81, M_00002_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux28, M_00002_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux27, M_00002_00003)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux26, M_00002_00004)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux80, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux20, M_00002_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux83, M_00002_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux29, M_00002_00003)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux30, M_00002_00004)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux85, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux23, M_00002_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux21, M_00002_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux84, M_00002_00003)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux31, M_00002_00003)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux87, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux24, M_00002_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux22, M_00002_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux25, M_00002_00004)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux82, M_00002_00004)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux86, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux106, M_00003_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux48, M_00003_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux46, M_00003_00003)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux47, M_00003_00004)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux110, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux53, M_00003_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux107, M_00003_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux45, M_00003_00003)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux44, M_00003_00004)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux109, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux54, M_00003_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux51, M_00003_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux104, M_00003_00003)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux49, M_00003_00003)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux108, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux52, M_00003_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux50, M_00003_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux55, M_00003_00004)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux105, M_00003_00004)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux111, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux112, M_00004_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux33, M_00004_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux32, M_00004_00003)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux34, M_00004_00004)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux117, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux41, M_00004_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux114, M_00004_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux36, M_00004_00003)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux35, M_00004_00004)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux116, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux43, M_00004_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux38, M_00004_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux113, M_00004_00003)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux37, M_00004_00003)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux118, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux42, M_00004_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux39, M_00004_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux40, M_00004_00004)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux115, M_00004_00004)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux119, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux96, M_00005_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux67, M_00005_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux65, M_00005_00003)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux66, M_00005_00004)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux101, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux57, M_00005_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux97, M_00005_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux63, M_00005_00003)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux62, M_00005_00004)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux102, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux59, M_00005_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux61, M_00005_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux98, M_00005_00003)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux64, M_00005_00003)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux103, 5)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux58, M_00005_00001)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2], aux60, M_00005_00002)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4], aux56, M_00005_00004)
watchelement_one([1, 1, 3, 4, 5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4], aux99, M_00005_00004)
watchelement_one([5, 2, 2, 3, 4, 5, 1, 2, 3, 3, 5, 1, 2, 4, 4, 5], aux100, 5)
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux176, aux177, aux178, aux179, aux180, aux181, aux182, aux183, aux184, aux185, aux186, aux187, aux188, aux189, aux190, aux191, aux192, aux193, aux194, aux195])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux196, aux197, aux198, aux199, aux200, aux201, aux202, aux203, aux204, aux205, aux206, aux207, aux208, aux209, aux210, aux211, aux212, aux213, aux214, aux215])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux216, aux217, aux218, aux219, aux220, aux221, aux222, aux223, aux224, aux225, aux226, aux227, aux228, aux229, aux230, aux231, aux232, aux233, aux234, aux235])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux236, aux237, aux238, aux239, aux240, aux241, aux242, aux243, aux244, aux245, aux246, aux247, aux248, aux249, aux250, aux251, aux252, aux253, aux254, aux255])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux256, aux257, aux258, aux259, aux260, aux261, aux262, aux263, aux264, aux265, aux266, aux267, aux268, aux269, aux270, aux271, aux272, aux273, aux274, aux275])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux276, aux277, aux278, aux279, aux280, aux281, aux282, aux283, aux284, aux285, aux286, aux287, aux288, aux289, aux290, aux291, aux292, aux293, aux294, aux295])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux296, aux297, aux298, aux299, aux300, aux301, aux302, aux303, aux304, aux305, aux306, aux307, aux308, aux309, aux310, aux311, aux312, aux313, aux314, aux315])
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux81, aux120)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003], aux95, aux120)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux28, aux121)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux73, aux121)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux27, aux122)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002], aux71, aux122)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux26, aux123)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002], aux72, aux123)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5], aux89, aux124)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux80, aux124)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux77, aux125)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux106, aux125)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux48, aux126)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux79, aux126)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux46, aux127)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux93, aux127)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux47, aux128)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux70, aux128)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux110, aux129)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux91, aux129)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux112, aux130)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux76, aux130)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux33, aux131)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux78, aux131)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux32, aux132)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux74, aux132)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux34, aux133)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux94, aux133)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux88, aux134)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux117, aux134)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux96, aux135)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003], M_00001_00001, aux135)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00001_00002, aux136)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux67, aux136)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00001_00003, aux137)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux65, aux137)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00001_00004, aux138)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux66, aux138)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux20, aux139)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux75, aux139)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux92, aux140)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux83, aux140)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux29, aux141)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux69, aux141)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux30, aux142)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux68, aux142)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux90, aux143)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux85, aux143)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux53, aux144)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux23, aux144)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux21, aux145)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux107, aux145)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux45, aux146)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux84, aux146)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux44, aux147)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux31, aux147)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux109, aux148)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux87, aux148)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux41, aux149)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux24, aux149)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux22, aux150)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux114, aux150)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux36, aux151)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux25, aux151)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux35, aux152)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux82, aux152)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux116, aux153)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux86, aux153)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00002_00001, aux154)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux57, aux154)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux97, aux155)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00002_00002, aux155)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00002_00003, aux156)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux63, aux156)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00002_00004, aux157)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux62, aux157)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux43, aux158)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux54, aux158)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux38, aux159)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux51, aux159)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux113, aux160)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux104, aux160)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux37, aux161)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux49, aux161)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux108, aux162)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux118, aux162)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00003_00001, aux163)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux59, aux163)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00003_00002, aux164)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux61, aux164)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux98, aux165)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00003_00003, aux165)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00003_00004, aux166)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux64, aux166)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux42, aux167)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux52, aux167)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux39, aux168)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux50, aux168)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux40, aux169)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux55, aux169)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux115, aux170)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux105, aux170)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux111, aux171)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux119, aux171)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00004_00001, aux172)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux58, aux172)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00004_00002, aux173)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux60, aux173)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00004_00003, aux174)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux56, aux174)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux99, aux175)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00004_00004, aux175)
weightedsumleq([1,5,1],[M_00002_00001,M_00002_00002,-5],aux20)
weightedsumgeq([1,5,1],[M_00002_00001,M_00002_00002,-5],aux20)
weightedsumleq([1,5,1],[M_00002_00002,M_00002_00003,-5],aux21)
weightedsumgeq([1,5,1],[M_00002_00002,M_00002_00003,-5],aux21)
weightedsumleq([1,5,1],[M_00002_00002,M_00002_00004,-5],aux22)
weightedsumgeq([1,5,1],[M_00002_00002,M_00002_00004,-5],aux22)
weightedsumleq([1,5,1],[M_00002_00001,M_00002_00003,-5],aux23)
weightedsumgeq([1,5,1],[M_00002_00001,M_00002_00003,-5],aux23)
weightedsumleq([1,5,1],[M_00002_00001,M_00002_00004,-5],aux24)
weightedsumgeq([1,5,1],[M_00002_00001,M_00002_00004,-5],aux24)
weightedsumleq([1,5,1],[M_00002_00003,M_00002_00004,-5],aux25)
weightedsumgeq([1,5,1],[M_00002_00003,M_00002_00004,-5],aux25)
weightedsumleq([5,1,1],[M_00002_00001,M_00002_00004,-5],aux26)
weightedsumgeq([5,1,1],[M_00002_00001,M_00002_00004,-5],aux26)
weightedsumleq([5,1,1],[M_00002_00001,M_00002_00003,-5],aux27)
weightedsumgeq([5,1,1],[M_00002_00001,M_00002_00003,-5],aux27)
weightedsumleq([5,1,1],[M_00002_00001,M_00002_00002,-5],aux28)
weightedsumgeq([5,1,1],[M_00002_00001,M_00002_00002,-5],aux28)
weightedsumleq([5,1,1],[M_00002_00002,M_00002_00003,-5],aux29)
weightedsumgeq([5,1,1],[M_00002_00002,M_00002_00003,-5],aux29)
weightedsumleq([5,1,1],[M_00002_00002,M_00002_00004,-5],aux30)
weightedsumgeq([5,1,1],[M_00002_00002,M_00002_00004,-5],aux30)
weightedsumleq([5,1,1],[M_00002_00003,M_00002_00004,-5],aux31)
weightedsumgeq([5,1,1],[M_00002_00003,M_00002_00004,-5],aux31)
weightedsumleq([5,1,1],[M_00004_00001,M_00004_00003,-5],aux32)
weightedsumgeq([5,1,1],[M_00004_00001,M_00004_00003,-5],aux32)
weightedsumleq([5,1,1],[M_00004_00001,M_00004_00002,-5],aux33)
weightedsumgeq([5,1,1],[M_00004_00001,M_00004_00002,-5],aux33)
weightedsumleq([5,1,1],[M_00004_00001,M_00004_00004,-5],aux34)
weightedsumgeq([5,1,1],[M_00004_00001,M_00004_00004,-5],aux34)
weightedsumleq([5,1,1],[M_00004_00002,M_00004_00004,-5],aux35)
weightedsumgeq([5,1,1],[M_00004_00002,M_00004_00004,-5],aux35)
weightedsumleq([5,1,1],[M_00004_00002,M_00004_00003,-5],aux36)
weightedsumgeq([5,1,1],[M_00004_00002,M_00004_00003,-5],aux36)
weightedsumleq([5,1,1],[M_00004_00003,M_00004_00004,-5],aux37)
weightedsumgeq([5,1,1],[M_00004_00003,M_00004_00004,-5],aux37)
weightedsumleq([1,5,1],[M_00004_00002,M_00004_00003,-5],aux38)
weightedsumgeq([1,5,1],[M_00004_00002,M_00004_00003,-5],aux38)
weightedsumleq([1,5,1],[M_00004_00002,M_00004_00004,-5],aux39)
weightedsumgeq([1,5,1],[M_00004_00002,M_00004_00004,-5],aux39)
weightedsumleq([1,5,1],[M_00004_00003,M_00004_00004,-5],aux40)
weightedsumgeq([1,5,1],[M_00004_00003,M_00004_00004,-5],aux40)
weightedsumleq([1,5,1],[M_00004_00001,M_00004_00002,-5],aux41)
weightedsumgeq([1,5,1],[M_00004_00001,M_00004_00002,-5],aux41)
weightedsumleq([1,5,1],[M_00004_00001,M_00004_00004,-5],aux42)
weightedsumgeq([1,5,1],[M_00004_00001,M_00004_00004,-5],aux42)
weightedsumleq([1,5,1],[M_00004_00001,M_00004_00003,-5],aux43)
weightedsumgeq([1,5,1],[M_00004_00001,M_00004_00003,-5],aux43)
weightedsumleq([5,1,1],[M_00003_00002,M_00003_00004,-5],aux44)
weightedsumgeq([5,1,1],[M_00003_00002,M_00003_00004,-5],aux44)
weightedsumleq([5,1,1],[M_00003_00002,M_00003_00003,-5],aux45)
weightedsumgeq([5,1,1],[M_00003_00002,M_00003_00003,-5],aux45)
weightedsumleq([5,1,1],[M_00003_00001,M_00003_00003,-5],aux46)
weightedsumgeq([5,1,1],[M_00003_00001,M_00003_00003,-5],aux46)
weightedsumleq([5,1,1],[M_00003_00001,M_00003_00004,-5],aux47)
weightedsumgeq([5,1,1],[M_00003_00001,M_00003_00004,-5],aux47)
weightedsumleq([5,1,1],[M_00003_00001,M_00003_00002,-5],aux48)
weightedsumgeq([5,1,1],[M_00003_00001,M_00003_00002,-5],aux48)
weightedsumleq([5,1,1],[M_00003_00003,M_00003_00004,-5],aux49)
weightedsumgeq([5,1,1],[M_00003_00003,M_00003_00004,-5],aux49)
weightedsumleq([1,5,1],[M_00003_00002,M_00003_00004,-5],aux50)
weightedsumgeq([1,5,1],[M_00003_00002,M_00003_00004,-5],aux50)
weightedsumleq([1,5,1],[M_00003_00002,M_00003_00003,-5],aux51)
weightedsumgeq([1,5,1],[M_00003_00002,M_00003_00003,-5],aux51)
weightedsumleq([1,5,1],[M_00003_00001,M_00003_00004,-5],aux52)
weightedsumgeq([1,5,1],[M_00003_00001,M_00003_00004,-5],aux52)
weightedsumleq([1,5,1],[M_00003_00001,M_00003_00002,-5],aux53)
weightedsumgeq([1,5,1],[M_00003_00001,M_00003_00002,-5],aux53)
weightedsumleq([1,5,1],[M_00003_00001,M_00003_00003,-5],aux54)
weightedsumgeq([1,5,1],[M_00003_00001,M_00003_00003,-5],aux54)
weightedsumleq([1,5,1],[M_00003_00003,M_00003_00004,-5],aux55)
weightedsumgeq([1,5,1],[M_00003_00003,M_00003_00004,-5],aux55)
weightedsumleq([1,1,5],[-5,M_00005_00003,M_00005_00004],aux56)
weightedsumgeq([1,1,5],[-5,M_00005_00003,M_00005_00004],aux56)
weightedsumleq([1,1,5],[-5,M_00005_00001,M_00005_00002],aux57)
weightedsumgeq([1,1,5],[-5,M_00005_00001,M_00005_00002],aux57)
weightedsumleq([1,1,5],[-5,M_00005_00001,M_00005_00004],aux58)
weightedsumgeq([1,1,5],[-5,M_00005_00001,M_00005_00004],aux58)
weightedsumleq([1,1,5],[-5,M_00005_00001,M_00005_00003],aux59)
weightedsumgeq([1,1,5],[-5,M_00005_00001,M_00005_00003],aux59)
weightedsumleq([1,1,5],[-5,M_00005_00002,M_00005_00004],aux60)
weightedsumgeq([1,1,5],[-5,M_00005_00002,M_00005_00004],aux60)
weightedsumleq([1,1,5],[-5,M_00005_00002,M_00005_00003],aux61)
weightedsumgeq([1,1,5],[-5,M_00005_00002,M_00005_00003],aux61)
weightedsumleq([1,5,1],[-5,M_00005_00002,M_00005_00004],aux62)
weightedsumgeq([1,5,1],[-5,M_00005_00002,M_00005_00004],aux62)
weightedsumleq([1,5,1],[-5,M_00005_00002,M_00005_00003],aux63)
weightedsumgeq([1,5,1],[-5,M_00005_00002,M_00005_00003],aux63)
weightedsumleq([1,5,1],[-5,M_00005_00003,M_00005_00004],aux64)
weightedsumgeq([1,5,1],[-5,M_00005_00003,M_00005_00004],aux64)
weightedsumleq([1,5,1],[-5,M_00005_00001,M_00005_00003],aux65)
weightedsumgeq([1,5,1],[-5,M_00005_00001,M_00005_00003],aux65)
weightedsumleq([1,5,1],[-5,M_00005_00001,M_00005_00004],aux66)
weightedsumgeq([1,5,1],[-5,M_00005_00001,M_00005_00004],aux66)
weightedsumleq([1,5,1],[-5,M_00005_00001,M_00005_00002],aux67)
weightedsumgeq([1,5,1],[-5,M_00005_00001,M_00005_00002],aux67)
weightedsumleq([1,5,1],[-5,M_00001_00002,M_00001_00004],aux68)
weightedsumgeq([1,5,1],[-5,M_00001_00002,M_00001_00004],aux68)
weightedsumleq([1,5,1],[-5,M_00001_00002,M_00001_00003],aux69)
weightedsumgeq([1,5,1],[-5,M_00001_00002,M_00001_00003],aux69)
weightedsumleq([1,5,1],[-5,M_00001_00003,M_00001_00004],aux70)
weightedsumgeq([1,5,1],[-5,M_00001_00003,M_00001_00004],aux70)
weightedsumleq([1,5,1],[-5,M_00001_00001,M_00001_00003],aux71)
weightedsumgeq([1,5,1],[-5,M_00001_00001,M_00001_00003],aux71)
weightedsumleq([1,5,1],[-5,M_00001_00001,M_00001_00004],aux72)
weightedsumgeq([1,5,1],[-5,M_00001_00001,M_00001_00004],aux72)
weightedsumleq([1,5,1],[-5,M_00001_00001,M_00001_00002],aux73)
weightedsumgeq([1,5,1],[-5,M_00001_00001,M_00001_00002],aux73)
weightedsumleq([1,1,5],[-5,M_00001_00003,M_00001_00004],aux74)
weightedsumgeq([1,1,5],[-5,M_00001_00003,M_00001_00004],aux74)
weightedsumleq([1,1,5],[-5,M_00001_00001,M_00001_00002],aux75)
weightedsumgeq([1,1,5],[-5,M_00001_00001,M_00001_00002],aux75)
weightedsumleq([1,1,5],[-5,M_00001_00001,M_00001_00004],aux76)
weightedsumgeq([1,1,5],[-5,M_00001_00001,M_00001_00004],aux76)
weightedsumleq([1,1,5],[-5,M_00001_00001,M_00001_00003],aux77)
weightedsumgeq([1,1,5],[-5,M_00001_00001,M_00001_00003],aux77)
weightedsumleq([1,1,5],[-5,M_00001_00002,M_00001_00004],aux78)
weightedsumgeq([1,1,5],[-5,M_00001_00002,M_00001_00004],aux78)
weightedsumleq([1,1,5],[-5,M_00001_00002,M_00001_00003],aux79)
weightedsumgeq([1,1,5],[-5,M_00001_00002,M_00001_00003],aux79)
weightedsumleq([5,1],[M_00002_00001,-4],aux80)
weightedsumgeq([5,1],[M_00002_00001,-4],aux80)
weightedsumleq([6,1],[M_00002_00001,-5],aux81)
weightedsumgeq([6,1],[M_00002_00001,-5],aux81)
weightedsumleq([6,1],[M_00002_00004,-5],aux82)
weightedsumgeq([6,1],[M_00002_00004,-5],aux82)
weightedsumleq([6,1],[M_00002_00002,-5],aux83)
weightedsumgeq([6,1],[M_00002_00002,-5],aux83)
weightedsumleq([6,1],[M_00002_00003,-5],aux84)
weightedsumgeq([6,1],[M_00002_00003,-5],aux84)
weightedsumleq([5,1],[M_00002_00002,-4],aux85)
weightedsumgeq([5,1],[M_00002_00002,-4],aux85)
weightedsumleq([5,1],[M_00002_00004,-4],aux86)
weightedsumgeq([5,1],[M_00002_00004,-4],aux86)
weightedsumleq([5,1],[M_00002_00003,-4],aux87)
weightedsumgeq([5,1],[M_00002_00003,-4],aux87)
weightedsumleq([1,5],[-4,M_00001_00004],aux88)
weightedsumgeq([1,5],[-4,M_00001_00004],aux88)
weightedsumleq([1,5],[-4,M_00001_00001],aux89)
weightedsumgeq([1,5],[-4,M_00001_00001],aux89)
weightedsumleq([1,5],[-4,M_00001_00002],aux90)
weightedsumgeq([1,5],[-4,M_00001_00002],aux90)
weightedsumleq([1,5],[-4,M_00001_00003],aux91)
weightedsumgeq([1,5],[-4,M_00001_00003],aux91)
weightedsumleq([1,6],[-5,M_00001_00002],aux92)
weightedsumgeq([1,6],[-5,M_00001_00002],aux92)
weightedsumleq([1,6],[-5,M_00001_00003],aux93)
weightedsumgeq([1,6],[-5,M_00001_00003],aux93)
weightedsumleq([1,6],[-5,M_00001_00004],aux94)
weightedsumgeq([1,6],[-5,M_00001_00004],aux94)
weightedsumleq([1,6],[-5,M_00001_00001],aux95)
weightedsumgeq([1,6],[-5,M_00001_00001],aux95)
weightedsumleq([1,6],[-5,M_00005_00001],aux96)
weightedsumgeq([1,6],[-5,M_00005_00001],aux96)
weightedsumleq([1,6],[-5,M_00005_00002],aux97)
weightedsumgeq([1,6],[-5,M_00005_00002],aux97)
weightedsumleq([1,6],[-5,M_00005_00003],aux98)
weightedsumgeq([1,6],[-5,M_00005_00003],aux98)
weightedsumleq([1,6],[-5,M_00005_00004],aux99)
weightedsumgeq([1,6],[-5,M_00005_00004],aux99)
weightedsumleq([1,5],[-4,M_00005_00004],aux100)
weightedsumgeq([1,5],[-4,M_00005_00004],aux100)
weightedsumleq([1,5],[-4,M_00005_00001],aux101)
weightedsumgeq([1,5],[-4,M_00005_00001],aux101)
weightedsumleq([1,5],[-4,M_00005_00002],aux102)
weightedsumgeq([1,5],[-4,M_00005_00002],aux102)
weightedsumleq([1,5],[-4,M_00005_00003],aux103)
weightedsumgeq([1,5],[-4,M_00005_00003],aux103)
weightedsumleq([6,1],[M_00003_00003,-5],aux104)
weightedsumgeq([6,1],[M_00003_00003,-5],aux104)
weightedsumleq([6,1],[M_00003_00004,-5],aux105)
weightedsumgeq([6,1],[M_00003_00004,-5],aux105)
weightedsumleq([6,1],[M_00003_00001,-5],aux106)
weightedsumgeq([6,1],[M_00003_00001,-5],aux106)
weightedsumleq([6,1],[M_00003_00002,-5],aux107)
weightedsumgeq([6,1],[M_00003_00002,-5],aux107)
weightedsumleq([5,1],[M_00003_00003,-4],aux108)
weightedsumgeq([5,1],[M_00003_00003,-4],aux108)
weightedsumleq([5,1],[M_00003_00002,-4],aux109)
weightedsumgeq([5,1],[M_00003_00002,-4],aux109)
weightedsumleq([5,1],[M_00003_00001,-4],aux110)
weightedsumgeq([5,1],[M_00003_00001,-4],aux110)
weightedsumleq([5,1],[M_00003_00004,-4],aux111)
weightedsumgeq([5,1],[M_00003_00004,-4],aux111)
weightedsumleq([6,1],[M_00004_00001,-5],aux112)
weightedsumgeq([6,1],[M_00004_00001,-5],aux112)
weightedsumleq([6,1],[M_00004_00003,-5],aux113)
weightedsumgeq([6,1],[M_00004_00003,-5],aux113)
weightedsumleq([6,1],[M_00004_00002,-5],aux114)
weightedsumgeq([6,1],[M_00004_00002,-5],aux114)
weightedsumleq([6,1],[M_00004_00004,-5],aux115)
weightedsumgeq([6,1],[M_00004_00004,-5],aux115)
weightedsumleq([5,1],[M_00004_00002,-4],aux116)
weightedsumgeq([5,1],[M_00004_00002,-4],aux116)
weightedsumleq([5,1],[M_00004_00001,-4],aux117)
weightedsumgeq([5,1],[M_00004_00001,-4],aux117)
weightedsumleq([5,1],[M_00004_00003,-4],aux118)
weightedsumgeq([5,1],[M_00004_00003,-4],aux118)
weightedsumleq([5,1],[M_00004_00004,-4],aux119)
weightedsumgeq([5,1],[M_00004_00004,-4],aux119)
**EOF**
