MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 140
# CSE_active_eliminated_expressions = 280
# CSE_active_total_size = 1020
**VARIABLES**
DISCRETE M_00001_00001 #
{1..4}
DISCRETE M_00001_00002 #
{1..4}
DISCRETE M_00001_00003 #
{1..4}
DISCRETE M_00001_00004 #
{1..4}
DISCRETE M_00002_00001 #
{1..4}
DISCRETE M_00002_00002 #
{1..4}
DISCRETE M_00002_00003 #
{1..4}
DISCRETE M_00002_00004 #
{1..4}
DISCRETE M_00003_00001 #
{1..4}
DISCRETE M_00003_00002 #
{1..4}
DISCRETE M_00003_00003 #
{1..4}
DISCRETE M_00003_00004 #
{1..4}
DISCRETE M_00004_00001 #
{1..4}
DISCRETE M_00004_00002 #
{1..4}
DISCRETE M_00004_00003 #
{1..4}
DISCRETE M_00004_00004 #
{1..4}
DISCRETE M_00005_00001 #
{1..4}
DISCRETE M_00005_00002 #
{1..4}
DISCRETE M_00005_00003 #
{1..4}
DISCRETE M_00005_00004 #
{1..4}
DISCRETE aux6 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], (-5 + 5*M_00001_00003 + M_00001_00004))
{1..5}
DISCRETE aux7 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], (-5 + M_00001_00002 + 5*M_00001_00003))
{1..5}
DISCRETE aux9 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], (M_00002_00001 + 5*M_00002_00004 + -5))
{1..5}
DISCRETE aux11 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], (M_00002_00003 + 5*M_00002_00004 + -5))
{1..5}
DISCRETE aux12 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], (6*M_00004_00002 + -5))
{1..5}
DISCRETE aux13 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], (6*M_00003_00001 + -5))
{1..5}
DISCRETE aux14 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], (-5 + 6*M_00001_00003))
{1..5}
DISCRETE aux15 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], (6*M_00002_00004 + -5))
{1..5}
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], (5*M_00002_00004 + -4))
{1..5}
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], (-4 + 5*M_00001_00003))
{1..5}
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00002 + M_00004_00003 + -5)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux40, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux41 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00002 + M_00004_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux41, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 5*M_00004_00002 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux42, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 5*M_00002_00002 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux43, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002 + 5*M_00002_00003 + -5)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux44, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux45 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 5*M_00002_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux45, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux46 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00001 + M_00002_00004 + -5)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux46, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux47 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00001 + M_00002_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux47, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux48 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00001 + M_00002_00002 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux48, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux49 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00002 + M_00002_00003 + -5)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux49, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux50 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00002 + M_00002_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux50, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00003 + M_00002_00004 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux51, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00001 + M_00003_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux52, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00001 + M_00003_00002 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux53, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00001 + M_00003_00004 + -5)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux54, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00001 + M_00004_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux55, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00001 + M_00004_00002 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux56, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00001 + M_00004_00004 + -5)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux57, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00003 + M_00004_00004 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux58, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00002 + 5*M_00004_00003 + -5)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux59, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00002 + 5*M_00004_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux60, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003 + 5*M_00004_00004 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux61, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 5*M_00004_00004 + -5)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux62, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 5*M_00004_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux63, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00002 + M_00003_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux64, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux65 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00002 + M_00003_00003 + -5)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux65, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00003 + M_00003_00004 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux66, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00002 + 5*M_00003_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux67, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00002 + 5*M_00003_00003 + -5)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux68, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux69 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 5*M_00003_00004 + -5)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux69, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 5*M_00003_00002 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux70, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 5*M_00003_00003 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux71, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003 + 5*M_00003_00004 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux72, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00005_00003 + 5*M_00005_00004)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux73, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00005_00001 + 5*M_00005_00002)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux74, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00005_00001 + 5*M_00005_00004)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux75, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00005_00001 + 5*M_00005_00003)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux76, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00005_00002 + 5*M_00005_00004)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux77, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00005_00002 + 5*M_00005_00003)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux78, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00005_00002 + M_00005_00004)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux79, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00005_00002 + M_00005_00003)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux80, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00005_00003 + M_00005_00004)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux81, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00005_00001 + M_00005_00003)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux82, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00005_00001 + M_00005_00004)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux83, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00005_00001 + M_00005_00002)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux84, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux85 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00001_00002 + M_00001_00004)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux85, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00001_00002 + M_00001_00003)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux86, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00001_00001 + M_00001_00003)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux87, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux88 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00001_00001 + M_00001_00004)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux88, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux89 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00001_00001 + M_00001_00002)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux89, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00001_00003 + 5*M_00001_00004)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux90, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00001_00001 + 5*M_00001_00002)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux91, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00001_00001 + 5*M_00001_00004)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux92, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00001_00002 + 5*M_00001_00004)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux93, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux94 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002 + 5*M_00002_00004 + -5)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux94, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003 + 5*M_00002_00004 + -5)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux95, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 5*M_00002_00004 + -5)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux96, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00001_00001 + 5*M_00001_00003)
{3..17}
**CONSTRAINTS**
w-inintervalset(aux97, [3,4,6,9,11,14,16,17])
**VARIABLES**
DISCRETE aux98 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + M_00001_00002 + 5*M_00001_00003)
{4..16}
**CONSTRAINTS**
w-inintervalset(aux98, [4,4,6,9,11,14,16,16])
**VARIABLES**
DISCRETE aux99 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 5*M_00001_00003 + M_00001_00004)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux99, [2,4,6,9,11,14,16,18])
**VARIABLES**
DISCRETE aux100 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00001 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux100, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux101 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00001 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux101, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux102 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00002 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux102, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux103 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00003 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux103, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux104, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux105, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00004 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux106, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux107, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00004)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux108, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux109 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00001)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux109, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00002)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux110, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux111 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00001_00002)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux111, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux112 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00001_00004)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux112, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux113 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00001_00001)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux113, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux114 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00001_00003)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux114, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00003)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux115, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00005_00001)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux116, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux117 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00005_00002)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux117, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux118 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00005_00003)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux118, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux119 #Active-CSE: 2 occurrences of this expression or equivalent: (-5 + 6*M_00005_00004)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux119, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux120 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00005_00004)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux120, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux121 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00005_00001)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux121, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux122 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00005_00002)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux122, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux123 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00005_00003)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux123, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux124 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00003_00003 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux124, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux125 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00003_00004 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux125, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux126 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00003_00002 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux126, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux127, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux128, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux129, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00001 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux130, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux131 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00003_00001 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux131, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux132 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00004_00002 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux132, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux133 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux133, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux134 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00004_00001 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux134, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux135 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00004_00003 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux135, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux136 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00004_00004 + -5)
{1..19}
**CONSTRAINTS**
w-inintervalset(aux136, [1,1,7,7,13,13,19,19])
**VARIABLES**
DISCRETE aux137 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00001 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux137, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux138 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux138, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux139 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux139, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux140 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux113) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux101)
{1..5}
DISCRETE aux141 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux48) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux89)
{1..5}
DISCRETE aux142 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux47) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux87)
{1..5}
DISCRETE aux143 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux46) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux88)
{1..5}
DISCRETE aux144 #ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux109) --- ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux100)
{1..5}
DISCRETE aux145 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux116) --- ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00001_00001)
{1..4}
DISCRETE aux146 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00001_00002) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux84)
{1..4}
DISCRETE aux147 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00001_00003) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux82)
{1..4}
DISCRETE aux148 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00001_00004) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux83)
{1..4}
DISCRETE aux149 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux43) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux91)
{1..5}
DISCRETE aux150 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux111) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux102)
{1..5}
DISCRETE aux151 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux49) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux86)
{1..5}
DISCRETE aux152 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux50) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux85)
{1..5}
DISCRETE aux153 #ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux110) --- ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux104)
{1..5}
DISCRETE aux154 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00002_00001) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux74)
{1..4}
DISCRETE aux155 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux117) --- ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00002_00002)
{1..4}
DISCRETE aux156 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00002_00003) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux80)
{1..4}
DISCRETE aux157 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00002_00004) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux79)
{1..4}
DISCRETE aux158 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux63) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux71)
{1..5}
DISCRETE aux159 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux59) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux68)
{1..5}
DISCRETE aux160 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux135) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux124)
{1..5}
DISCRETE aux161 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux58) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux66)
{1..5}
DISCRETE aux162 #ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux127) --- ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux138)
{1..5}
DISCRETE aux163 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00003_00001) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux76)
{1..4}
DISCRETE aux164 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00003_00002) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux78)
{1..4}
DISCRETE aux165 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux118) --- ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00003_00003)
{1..4}
DISCRETE aux166 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00003_00004) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux81)
{1..4}
DISCRETE aux167 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux62) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux69)
{1..5}
DISCRETE aux168 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux60) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux67)
{1..5}
DISCRETE aux169 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux61) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux72)
{1..5}
DISCRETE aux170 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux136) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux125)
{1..5}
DISCRETE aux171 #ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux129) --- ElementOne([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux139)
{1..5}
DISCRETE aux172 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00004_00001) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux75)
{1..4}
DISCRETE aux173 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00004_00002) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux77)
{1..4}
DISCRETE aux174 #ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00004_00003) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux73)
{1..4}
DISCRETE aux175 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux119) --- ElementOne([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00004_00004)
{1..4}
DISCRETE aux176 #ElementOne([2, 1, 4, 3], M_00002_00002)
{1..4}
DISCRETE aux177 #ElementOne([2, 1, 4, 3], M_00002_00001)
{1..4}
DISCRETE aux178 #ElementOne([2, 1, 4, 3], M_00002_00004)
{1..4}
DISCRETE aux179 #ElementOne([2, 1, 4, 3], M_00002_00003)
{1..4}
DISCRETE aux180 #ElementOne([2, 1, 4, 3], M_00001_00002)
{1..4}
DISCRETE aux181 #ElementOne([2, 1, 4, 3], M_00001_00001)
{1..4}
DISCRETE aux182 #ElementOne([2, 1, 4, 3], M_00001_00004)
{1..4}
DISCRETE aux183 #ElementOne([2, 1, 4, 3], M_00001_00003)
{1..4}
DISCRETE aux184 #ElementOne([2, 1, 4, 3], M_00004_00002)
{1..4}
DISCRETE aux185 #ElementOne([2, 1, 4, 3], M_00004_00001)
{1..4}
DISCRETE aux186 #ElementOne([2, 1, 4, 3], M_00004_00004)
{1..4}
DISCRETE aux187 #ElementOne([2, 1, 4, 3], M_00004_00003)
{1..4}
DISCRETE aux188 #ElementOne([2, 1, 4, 3], M_00003_00002)
{1..4}
DISCRETE aux189 #ElementOne([2, 1, 4, 3], M_00003_00001)
{1..4}
DISCRETE aux190 #ElementOne([2, 1, 4, 3], M_00003_00004)
{1..4}
DISCRETE aux191 #ElementOne([2, 1, 4, 3], M_00003_00003)
{1..4}
DISCRETE aux192 #ElementOne([2, 1, 4, 3], M_00005_00002)
{1..4}
DISCRETE aux193 #ElementOne([2, 1, 4, 3], M_00005_00001)
{1..4}
DISCRETE aux194 #ElementOne([2, 1, 4, 3], M_00005_00004)
{1..4}
DISCRETE aux195 #ElementOne([2, 1, 4, 3], M_00005_00003)
{1..4}
DISCRETE aux196 #ElementOne([3, 4, 1, 2], M_00003_00003)
{1..4}
DISCRETE aux197 #ElementOne([3, 4, 1, 2], M_00003_00004)
{1..4}
DISCRETE aux198 #ElementOne([3, 4, 1, 2], M_00003_00001)
{1..4}
DISCRETE aux199 #ElementOne([3, 4, 1, 2], M_00003_00002)
{1..4}
DISCRETE aux200 #ElementOne([3, 4, 1, 2], M_00004_00003)
{1..4}
DISCRETE aux201 #ElementOne([3, 4, 1, 2], M_00004_00004)
{1..4}
DISCRETE aux202 #ElementOne([3, 4, 1, 2], M_00004_00001)
{1..4}
DISCRETE aux203 #ElementOne([3, 4, 1, 2], M_00004_00002)
{1..4}
DISCRETE aux204 #ElementOne([3, 4, 1, 2], M_00001_00003)
{1..4}
DISCRETE aux205 #ElementOne([3, 4, 1, 2], M_00001_00004)
{1..4}
DISCRETE aux206 #ElementOne([3, 4, 1, 2], M_00001_00001)
{1..4}
DISCRETE aux207 #ElementOne([3, 4, 1, 2], M_00001_00002)
{1..4}
DISCRETE aux208 #ElementOne([3, 4, 1, 2], M_00002_00003)
{1..4}
DISCRETE aux209 #ElementOne([3, 4, 1, 2], M_00002_00004)
{1..4}
DISCRETE aux210 #ElementOne([3, 4, 1, 2], M_00002_00001)
{1..4}
DISCRETE aux211 #ElementOne([3, 4, 1, 2], M_00002_00002)
{1..4}
DISCRETE aux212 #ElementOne([3, 4, 1, 2], M_00005_00003)
{1..4}
DISCRETE aux213 #ElementOne([3, 4, 1, 2], M_00005_00004)
{1..4}
DISCRETE aux214 #ElementOne([3, 4, 1, 2], M_00005_00001)
{1..4}
DISCRETE aux215 #ElementOne([3, 4, 1, 2], M_00005_00002)
{1..4}
DISCRETE aux216 #ElementOne([4, 3, 2, 1], M_00004_00004)
{1..4}
DISCRETE aux217 #ElementOne([4, 3, 2, 1], M_00004_00003)
{1..4}
DISCRETE aux218 #ElementOne([4, 3, 2, 1], M_00004_00002)
{1..4}
DISCRETE aux219 #ElementOne([4, 3, 2, 1], M_00004_00001)
{1..4}
DISCRETE aux220 #ElementOne([4, 3, 2, 1], M_00003_00004)
{1..4}
DISCRETE aux221 #ElementOne([4, 3, 2, 1], M_00003_00003)
{1..4}
DISCRETE aux222 #ElementOne([4, 3, 2, 1], M_00003_00002)
{1..4}
DISCRETE aux223 #ElementOne([4, 3, 2, 1], M_00003_00001)
{1..4}
DISCRETE aux224 #ElementOne([4, 3, 2, 1], M_00002_00004)
{1..4}
DISCRETE aux225 #ElementOne([4, 3, 2, 1], M_00002_00003)
{1..4}
DISCRETE aux226 #ElementOne([4, 3, 2, 1], M_00002_00002)
{1..4}
DISCRETE aux227 #ElementOne([4, 3, 2, 1], M_00002_00001)
{1..4}
DISCRETE aux228 #ElementOne([4, 3, 2, 1], M_00001_00004)
{1..4}
DISCRETE aux229 #ElementOne([4, 3, 2, 1], M_00001_00003)
{1..4}
DISCRETE aux230 #ElementOne([4, 3, 2, 1], M_00001_00002)
{1..4}
DISCRETE aux231 #ElementOne([4, 3, 2, 1], M_00001_00001)
{1..4}
DISCRETE aux232 #ElementOne([4, 3, 2, 1], M_00005_00004)
{1..4}
DISCRETE aux233 #ElementOne([4, 3, 2, 1], M_00005_00003)
{1..4}
DISCRETE aux234 #ElementOne([4, 3, 2, 1], M_00005_00002)
{1..4}
DISCRETE aux235 #ElementOne([4, 3, 2, 1], M_00005_00001)
{1..4}
**TUPLELIST**
rack 5 5
1 1 3 3 5 
2 2 4 4 5 
1 1 3 3 5 
2 2 4 4 5 
1 2 3 4 5 
**VARIABLES**
ALIAS rack[5,5]=[[1, 1, 3, 3, 5], [2, 2, 4, 4, 5], [1, 1, 3, 3, 5], [2, 2, 4, 4, 5], [1, 2, 3, 4, 5]]
**TUPLELIST**
perms 4 5
1 2 3 4 5 
2 1 4 3 5 
3 4 1 2 5 
4 3 2 1 5 
**VARIABLES**
ALIAS perms[4,5]=[[1, 2, 3, 4, 5], [2, 1, 4, 3, 5], [3, 4, 1, 2, 5], [4, 3, 2, 1, 5]]
**TUPLELIST**
inverses 4 5
1 2 3 4 5 
2 1 4 3 5 
3 4 1 2 5 
4 3 2 1 5 
**VARIABLES**
ALIAS inverses[4,5]=[[1, 2, 3, 4, 5], [2, 1, 4, 3, 5], [3, 4, 1, 2, 5], [4, 3, 2, 1, 5]]
**SEARCH**
PRINT[[M_00001_00001],[M_00001_00002],[M_00001_00003],[M_00001_00004],[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004]]
VARORDER STATIC [M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004]
**CONSTRAINTS**
watchelement_one([2, 1, 4, 3], M_00002_00002, aux176)
watchelement_one([2, 1, 4, 3], M_00002_00001, aux177)
watchelement_one([2, 1, 4, 3], M_00002_00004, aux178)
watchelement_one([2, 1, 4, 3], M_00002_00003, aux179)
watchelement_one([2, 1, 4, 3], M_00001_00002, aux180)
watchelement_one([2, 1, 4, 3], M_00001_00001, aux181)
watchelement_one([2, 1, 4, 3], M_00001_00004, aux182)
watchelement_one([2, 1, 4, 3], M_00001_00003, aux183)
watchelement_one([2, 1, 4, 3], M_00004_00002, aux184)
watchelement_one([2, 1, 4, 3], M_00004_00001, aux185)
watchelement_one([2, 1, 4, 3], M_00004_00004, aux186)
watchelement_one([2, 1, 4, 3], M_00004_00003, aux187)
watchelement_one([2, 1, 4, 3], M_00003_00002, aux188)
watchelement_one([2, 1, 4, 3], M_00003_00001, aux189)
watchelement_one([2, 1, 4, 3], M_00003_00004, aux190)
watchelement_one([2, 1, 4, 3], M_00003_00003, aux191)
watchelement_one([2, 1, 4, 3], M_00005_00002, aux192)
watchelement_one([2, 1, 4, 3], M_00005_00001, aux193)
watchelement_one([2, 1, 4, 3], M_00005_00004, aux194)
watchelement_one([2, 1, 4, 3], M_00005_00003, aux195)
watchelement_one([3, 4, 1, 2], M_00003_00003, aux196)
watchelement_one([3, 4, 1, 2], M_00003_00004, aux197)
watchelement_one([3, 4, 1, 2], M_00003_00001, aux198)
watchelement_one([3, 4, 1, 2], M_00003_00002, aux199)
watchelement_one([3, 4, 1, 2], M_00004_00003, aux200)
watchelement_one([3, 4, 1, 2], M_00004_00004, aux201)
watchelement_one([3, 4, 1, 2], M_00004_00001, aux202)
watchelement_one([3, 4, 1, 2], M_00004_00002, aux203)
watchelement_one([3, 4, 1, 2], M_00001_00003, aux204)
watchelement_one([3, 4, 1, 2], M_00001_00004, aux205)
watchelement_one([3, 4, 1, 2], M_00001_00001, aux206)
watchelement_one([3, 4, 1, 2], M_00001_00002, aux207)
watchelement_one([3, 4, 1, 2], M_00002_00003, aux208)
watchelement_one([3, 4, 1, 2], M_00002_00004, aux209)
watchelement_one([3, 4, 1, 2], M_00002_00001, aux210)
watchelement_one([3, 4, 1, 2], M_00002_00002, aux211)
watchelement_one([3, 4, 1, 2], M_00005_00003, aux212)
watchelement_one([3, 4, 1, 2], M_00005_00004, aux213)
watchelement_one([3, 4, 1, 2], M_00005_00001, aux214)
watchelement_one([3, 4, 1, 2], M_00005_00002, aux215)
watchelement_one([4, 3, 2, 1], M_00004_00004, aux216)
watchelement_one([4, 3, 2, 1], M_00004_00003, aux217)
watchelement_one([4, 3, 2, 1], M_00004_00002, aux218)
watchelement_one([4, 3, 2, 1], M_00004_00001, aux219)
watchelement_one([4, 3, 2, 1], M_00003_00004, aux220)
watchelement_one([4, 3, 2, 1], M_00003_00003, aux221)
watchelement_one([4, 3, 2, 1], M_00003_00002, aux222)
watchelement_one([4, 3, 2, 1], M_00003_00001, aux223)
watchelement_one([4, 3, 2, 1], M_00002_00004, aux224)
watchelement_one([4, 3, 2, 1], M_00002_00003, aux225)
watchelement_one([4, 3, 2, 1], M_00002_00002, aux226)
watchelement_one([4, 3, 2, 1], M_00002_00001, aux227)
watchelement_one([4, 3, 2, 1], M_00001_00004, aux228)
watchelement_one([4, 3, 2, 1], M_00001_00003, aux229)
watchelement_one([4, 3, 2, 1], M_00001_00002, aux230)
watchelement_one([4, 3, 2, 1], M_00001_00001, aux231)
watchelement_one([4, 3, 2, 1], M_00005_00004, aux232)
watchelement_one([4, 3, 2, 1], M_00005_00003, aux233)
watchelement_one([4, 3, 2, 1], M_00005_00002, aux234)
watchelement_one([4, 3, 2, 1], M_00005_00001, aux235)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux42, aux9)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux40, aux11)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux41, aux15)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux53, aux7)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux52, aux14)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux54, aux6)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux99, aux6)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux98, aux7)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux97, aux13)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux96, aux9)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux94, aux12)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux95, aux11)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux132, aux12)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux131, aux13)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux114, aux14)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux106, aux15)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux107, aux16)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux133, aux16)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux130, aux19)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux115, aux19)
watchelement_one([1, 2, 3, 4], M_00005_00001, M_00005_00001)
watchelement_one([1, 2, 3, 4], M_00005_00004, M_00005_00004)
watchelement_one([1, 2, 3, 4], M_00005_00003, M_00005_00003)
watchelement_one([1, 2, 3, 4], M_00005_00002, M_00005_00002)
watchelement_one([1, 2, 3, 4], M_00002_00002, M_00002_00002)
watchelement_one([1, 2, 3, 4], M_00002_00001, M_00002_00001)
watchelement_one([1, 2, 3, 4], M_00002_00004, M_00002_00004)
watchelement_one([1, 2, 3, 4], M_00002_00003, M_00002_00003)
watchelement_one([1, 2, 3, 4], M_00003_00004, M_00003_00004)
watchelement_one([1, 2, 3, 4], M_00003_00003, M_00003_00003)
watchelement_one([1, 2, 3, 4], M_00003_00002, M_00003_00002)
watchelement_one([1, 2, 3, 4], M_00003_00001, M_00003_00001)
watchelement_one([1, 2, 3, 4], M_00001_00001, M_00001_00001)
watchelement_one([1, 2, 3, 4], M_00001_00004, M_00001_00004)
watchelement_one([1, 2, 3, 4], M_00001_00003, M_00001_00003)
watchelement_one([1, 2, 3, 4], M_00001_00002, M_00001_00002)
watchelement_one([1, 2, 3, 4], M_00004_00004, M_00004_00004)
watchelement_one([1, 2, 3, 4], M_00004_00003, M_00004_00003)
watchelement_one([1, 2, 3, 4], M_00004_00002, M_00004_00002)
watchelement_one([1, 2, 3, 4], M_00004_00001, M_00004_00001)
gacalldiff([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004])
gacalldiff([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004])
gacalldiff([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004])
gacalldiff([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004])
gacalldiff([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004])
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux134, aux13)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux56, aux7)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux55, aux14)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux57, aux6)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux137, aux19)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux121, 5)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux70, aux9)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux126, aux12)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux65, aux11)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux64, aux15)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux128, aux16)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux122, 5)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux45, aux13)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux44, aux7)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux103, aux14)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux51, aux6)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux105, aux19)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux123, 5)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux92, aux9)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux93, aux12)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux90, aux11)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux112, aux15)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux108, aux16)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux120, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux113, M_00001_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux89, M_00001_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux87, M_00001_00003)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux88, M_00001_00003)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux109, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux91, M_00001_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux111, M_00001_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux86, M_00001_00004)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux85, M_00001_00004)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux110, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux97, M_00001_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux98, M_00001_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux114, M_00001_00003)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux99, M_00001_00003)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux115, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux92, M_00001_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux93, M_00001_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux90, M_00001_00004)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux112, M_00001_00004)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux108, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux101, M_00002_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux48, M_00002_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux47, M_00002_00003)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux46, M_00002_00003)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux100, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux43, M_00002_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux102, M_00002_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux49, M_00002_00004)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux50, M_00002_00004)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux104, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux45, M_00002_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux44, M_00002_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux103, M_00002_00003)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux51, M_00002_00003)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux105, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux96, M_00002_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux94, M_00002_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux95, M_00002_00004)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux106, M_00002_00004)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux107, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux131, M_00003_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux53, M_00003_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux52, M_00003_00003)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux54, M_00003_00003)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux130, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux70, M_00003_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux126, M_00003_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux65, M_00003_00004)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux64, M_00003_00004)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux128, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux71, M_00003_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux68, M_00003_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux124, M_00003_00003)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux66, M_00003_00003)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux127, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux69, M_00003_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux67, M_00003_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux72, M_00003_00004)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux125, M_00003_00004)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux129, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux134, M_00004_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux56, M_00004_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux55, M_00004_00003)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux57, M_00004_00003)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux137, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux42, M_00004_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux132, M_00004_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux40, M_00004_00004)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux41, M_00004_00004)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux133, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux63, M_00004_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux59, M_00004_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux135, M_00004_00003)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux58, M_00004_00003)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux138, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux62, M_00004_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux60, M_00004_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux61, M_00004_00004)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux136, M_00004_00004)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux139, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux116, M_00005_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux84, M_00005_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux82, M_00005_00003)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux83, M_00005_00003)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux121, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux74, M_00005_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux117, M_00005_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux80, M_00005_00004)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux79, M_00005_00004)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux122, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux76, M_00005_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux78, M_00005_00001)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux118, M_00005_00003)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux81, M_00005_00003)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux123, 5)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2], aux75, M_00005_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2], aux77, M_00005_00002)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4], aux73, M_00005_00004)
watchelement_one([1, 1, 3, 3, 5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4], aux119, M_00005_00004)
watchelement_one([5, 2, 2, 4, 4, 5, 1, 1, 3, 3, 5, 2, 2, 4, 4, 5], aux120, 5)
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux176, aux177, aux178, aux179, aux180, aux181, aux182, aux183, aux184, aux185, aux186, aux187, aux188, aux189, aux190, aux191, aux192, aux193, aux194, aux195])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux196, aux197, aux198, aux199, aux200, aux201, aux202, aux203, aux204, aux205, aux206, aux207, aux208, aux209, aux210, aux211, aux212, aux213, aux214, aux215])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux216, aux217, aux218, aux219, aux220, aux221, aux222, aux223, aux224, aux225, aux226, aux227, aux228, aux229, aux230, aux231, aux232, aux233, aux234, aux235])
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux113, aux140)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux101, aux140)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux48, aux141)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux89, aux141)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux47, aux142)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux87, aux142)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux46, aux143)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux88, aux143)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux109, aux144)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux100, aux144)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux116, aux145)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00001_00001, aux145)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00001_00002, aux146)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux84, aux146)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00001_00003, aux147)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux82, aux147)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00001_00004, aux148)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux83, aux148)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux43, aux149)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux91, aux149)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux111, aux150)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux102, aux150)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux49, aux151)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux86, aux151)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux50, aux152)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux85, aux152)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux110, aux153)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux104, aux153)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00002_00001, aux154)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux74, aux154)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux117, aux155)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00002_00002, aux155)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00002_00003, aux156)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux80, aux156)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00002_00004, aux157)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux79, aux157)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux63, aux158)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux71, aux158)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux59, aux159)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux68, aux159)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux135, aux160)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux124, aux160)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux58, aux161)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux66, aux161)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux127, aux162)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux138, aux162)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00003_00001, aux163)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux76, aux163)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00003_00002, aux164)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux78, aux164)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux118, aux165)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00003_00003, aux165)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00003_00004, aux166)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux81, aux166)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux62, aux167)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux69, aux167)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux60, aux168)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux67, aux168)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux61, aux169)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux72, aux169)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux136, aux170)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux125, aux170)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux129, aux171)
watchelement_one([5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, 5], aux139, aux171)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00004_00001, aux172)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001], aux75, aux172)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00004_00002, aux173)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002], aux77, aux173)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00004_00003, aux174)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003], aux73, aux174)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, 5, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, 5, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, 5, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux119, aux175)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004], M_00004_00004, aux175)
weightedsumleq([5,1,1],[M_00004_00002,M_00004_00003,-5],aux40)
weightedsumgeq([5,1,1],[M_00004_00002,M_00004_00003,-5],aux40)
weightedsumleq([5,1,1],[M_00004_00002,M_00004_00004,-5],aux41)
weightedsumgeq([5,1,1],[M_00004_00002,M_00004_00004,-5],aux41)
weightedsumleq([1,5,1],[M_00004_00001,M_00004_00002,-5],aux42)
weightedsumgeq([1,5,1],[M_00004_00001,M_00004_00002,-5],aux42)
weightedsumleq([1,5,1],[M_00002_00001,M_00002_00002,-5],aux43)
weightedsumgeq([1,5,1],[M_00002_00001,M_00002_00002,-5],aux43)
weightedsumleq([1,5,1],[M_00002_00002,M_00002_00003,-5],aux44)
weightedsumgeq([1,5,1],[M_00002_00002,M_00002_00003,-5],aux44)
weightedsumleq([1,5,1],[M_00002_00001,M_00002_00003,-5],aux45)
weightedsumgeq([1,5,1],[M_00002_00001,M_00002_00003,-5],aux45)
weightedsumleq([5,1,1],[M_00002_00001,M_00002_00004,-5],aux46)
weightedsumgeq([5,1,1],[M_00002_00001,M_00002_00004,-5],aux46)
weightedsumleq([5,1,1],[M_00002_00001,M_00002_00003,-5],aux47)
weightedsumgeq([5,1,1],[M_00002_00001,M_00002_00003,-5],aux47)
weightedsumleq([5,1,1],[M_00002_00001,M_00002_00002,-5],aux48)
weightedsumgeq([5,1,1],[M_00002_00001,M_00002_00002,-5],aux48)
weightedsumleq([5,1,1],[M_00002_00002,M_00002_00003,-5],aux49)
weightedsumgeq([5,1,1],[M_00002_00002,M_00002_00003,-5],aux49)
weightedsumleq([5,1,1],[M_00002_00002,M_00002_00004,-5],aux50)
weightedsumgeq([5,1,1],[M_00002_00002,M_00002_00004,-5],aux50)
weightedsumleq([5,1,1],[M_00002_00003,M_00002_00004,-5],aux51)
weightedsumgeq([5,1,1],[M_00002_00003,M_00002_00004,-5],aux51)
weightedsumleq([5,1,1],[M_00003_00001,M_00003_00003,-5],aux52)
weightedsumgeq([5,1,1],[M_00003_00001,M_00003_00003,-5],aux52)
weightedsumleq([5,1,1],[M_00003_00001,M_00003_00002,-5],aux53)
weightedsumgeq([5,1,1],[M_00003_00001,M_00003_00002,-5],aux53)
weightedsumleq([5,1,1],[M_00003_00001,M_00003_00004,-5],aux54)
weightedsumgeq([5,1,1],[M_00003_00001,M_00003_00004,-5],aux54)
weightedsumleq([5,1,1],[M_00004_00001,M_00004_00003,-5],aux55)
weightedsumgeq([5,1,1],[M_00004_00001,M_00004_00003,-5],aux55)
weightedsumleq([5,1,1],[M_00004_00001,M_00004_00002,-5],aux56)
weightedsumgeq([5,1,1],[M_00004_00001,M_00004_00002,-5],aux56)
weightedsumleq([5,1,1],[M_00004_00001,M_00004_00004,-5],aux57)
weightedsumgeq([5,1,1],[M_00004_00001,M_00004_00004,-5],aux57)
weightedsumleq([5,1,1],[M_00004_00003,M_00004_00004,-5],aux58)
weightedsumgeq([5,1,1],[M_00004_00003,M_00004_00004,-5],aux58)
weightedsumleq([1,5,1],[M_00004_00002,M_00004_00003,-5],aux59)
weightedsumgeq([1,5,1],[M_00004_00002,M_00004_00003,-5],aux59)
weightedsumleq([1,5,1],[M_00004_00002,M_00004_00004,-5],aux60)
weightedsumgeq([1,5,1],[M_00004_00002,M_00004_00004,-5],aux60)
weightedsumleq([1,5,1],[M_00004_00003,M_00004_00004,-5],aux61)
weightedsumgeq([1,5,1],[M_00004_00003,M_00004_00004,-5],aux61)
weightedsumleq([1,5,1],[M_00004_00001,M_00004_00004,-5],aux62)
weightedsumgeq([1,5,1],[M_00004_00001,M_00004_00004,-5],aux62)
weightedsumleq([1,5,1],[M_00004_00001,M_00004_00003,-5],aux63)
weightedsumgeq([1,5,1],[M_00004_00001,M_00004_00003,-5],aux63)
weightedsumleq([5,1,1],[M_00003_00002,M_00003_00004,-5],aux64)
weightedsumgeq([5,1,1],[M_00003_00002,M_00003_00004,-5],aux64)
weightedsumleq([5,1,1],[M_00003_00002,M_00003_00003,-5],aux65)
weightedsumgeq([5,1,1],[M_00003_00002,M_00003_00003,-5],aux65)
weightedsumleq([5,1,1],[M_00003_00003,M_00003_00004,-5],aux66)
weightedsumgeq([5,1,1],[M_00003_00003,M_00003_00004,-5],aux66)
weightedsumleq([1,5,1],[M_00003_00002,M_00003_00004,-5],aux67)
weightedsumgeq([1,5,1],[M_00003_00002,M_00003_00004,-5],aux67)
weightedsumleq([1,5,1],[M_00003_00002,M_00003_00003,-5],aux68)
weightedsumgeq([1,5,1],[M_00003_00002,M_00003_00003,-5],aux68)
weightedsumleq([1,5,1],[M_00003_00001,M_00003_00004,-5],aux69)
weightedsumgeq([1,5,1],[M_00003_00001,M_00003_00004,-5],aux69)
weightedsumleq([1,5,1],[M_00003_00001,M_00003_00002,-5],aux70)
weightedsumgeq([1,5,1],[M_00003_00001,M_00003_00002,-5],aux70)
weightedsumleq([1,5,1],[M_00003_00001,M_00003_00003,-5],aux71)
weightedsumgeq([1,5,1],[M_00003_00001,M_00003_00003,-5],aux71)
weightedsumleq([1,5,1],[M_00003_00003,M_00003_00004,-5],aux72)
weightedsumgeq([1,5,1],[M_00003_00003,M_00003_00004,-5],aux72)
weightedsumleq([1,1,5],[-5,M_00005_00003,M_00005_00004],aux73)
weightedsumgeq([1,1,5],[-5,M_00005_00003,M_00005_00004],aux73)
weightedsumleq([1,1,5],[-5,M_00005_00001,M_00005_00002],aux74)
weightedsumgeq([1,1,5],[-5,M_00005_00001,M_00005_00002],aux74)
weightedsumleq([1,1,5],[-5,M_00005_00001,M_00005_00004],aux75)
weightedsumgeq([1,1,5],[-5,M_00005_00001,M_00005_00004],aux75)
weightedsumleq([1,1,5],[-5,M_00005_00001,M_00005_00003],aux76)
weightedsumgeq([1,1,5],[-5,M_00005_00001,M_00005_00003],aux76)
weightedsumleq([1,1,5],[-5,M_00005_00002,M_00005_00004],aux77)
weightedsumgeq([1,1,5],[-5,M_00005_00002,M_00005_00004],aux77)
weightedsumleq([1,1,5],[-5,M_00005_00002,M_00005_00003],aux78)
weightedsumgeq([1,1,5],[-5,M_00005_00002,M_00005_00003],aux78)
weightedsumleq([1,5,1],[-5,M_00005_00002,M_00005_00004],aux79)
weightedsumgeq([1,5,1],[-5,M_00005_00002,M_00005_00004],aux79)
weightedsumleq([1,5,1],[-5,M_00005_00002,M_00005_00003],aux80)
weightedsumgeq([1,5,1],[-5,M_00005_00002,M_00005_00003],aux80)
weightedsumleq([1,5,1],[-5,M_00005_00003,M_00005_00004],aux81)
weightedsumgeq([1,5,1],[-5,M_00005_00003,M_00005_00004],aux81)
weightedsumleq([1,5,1],[-5,M_00005_00001,M_00005_00003],aux82)
weightedsumgeq([1,5,1],[-5,M_00005_00001,M_00005_00003],aux82)
weightedsumleq([1,5,1],[-5,M_00005_00001,M_00005_00004],aux83)
weightedsumgeq([1,5,1],[-5,M_00005_00001,M_00005_00004],aux83)
weightedsumleq([1,5,1],[-5,M_00005_00001,M_00005_00002],aux84)
weightedsumgeq([1,5,1],[-5,M_00005_00001,M_00005_00002],aux84)
weightedsumleq([1,5,1],[-5,M_00001_00002,M_00001_00004],aux85)
weightedsumgeq([1,5,1],[-5,M_00001_00002,M_00001_00004],aux85)
weightedsumleq([1,5,1],[-5,M_00001_00002,M_00001_00003],aux86)
weightedsumgeq([1,5,1],[-5,M_00001_00002,M_00001_00003],aux86)
weightedsumleq([1,5,1],[-5,M_00001_00001,M_00001_00003],aux87)
weightedsumgeq([1,5,1],[-5,M_00001_00001,M_00001_00003],aux87)
weightedsumleq([1,5,1],[-5,M_00001_00001,M_00001_00004],aux88)
weightedsumgeq([1,5,1],[-5,M_00001_00001,M_00001_00004],aux88)
weightedsumleq([1,5,1],[-5,M_00001_00001,M_00001_00002],aux89)
weightedsumgeq([1,5,1],[-5,M_00001_00001,M_00001_00002],aux89)
weightedsumleq([1,1,5],[-5,M_00001_00003,M_00001_00004],aux90)
weightedsumgeq([1,1,5],[-5,M_00001_00003,M_00001_00004],aux90)
weightedsumleq([1,1,5],[-5,M_00001_00001,M_00001_00002],aux91)
weightedsumgeq([1,1,5],[-5,M_00001_00001,M_00001_00002],aux91)
weightedsumleq([1,1,5],[-5,M_00001_00001,M_00001_00004],aux92)
weightedsumgeq([1,1,5],[-5,M_00001_00001,M_00001_00004],aux92)
weightedsumleq([1,1,5],[-5,M_00001_00002,M_00001_00004],aux93)
weightedsumgeq([1,1,5],[-5,M_00001_00002,M_00001_00004],aux93)
weightedsumleq([1,5,1],[M_00002_00002,M_00002_00004,-5],aux94)
weightedsumgeq([1,5,1],[M_00002_00002,M_00002_00004,-5],aux94)
weightedsumleq([1,5,1],[M_00002_00003,M_00002_00004,-5],aux95)
weightedsumgeq([1,5,1],[M_00002_00003,M_00002_00004,-5],aux95)
weightedsumleq([1,5,1],[M_00002_00001,M_00002_00004,-5],aux96)
weightedsumgeq([1,5,1],[M_00002_00001,M_00002_00004,-5],aux96)
weightedsumleq([1,1,5],[-5,M_00001_00001,M_00001_00003],aux97)
weightedsumgeq([1,1,5],[-5,M_00001_00001,M_00001_00003],aux97)
weightedsumleq([1,1,5],[-5,M_00001_00002,M_00001_00003],aux98)
weightedsumgeq([1,1,5],[-5,M_00001_00002,M_00001_00003],aux98)
weightedsumleq([1,5,1],[-5,M_00001_00003,M_00001_00004],aux99)
weightedsumgeq([1,5,1],[-5,M_00001_00003,M_00001_00004],aux99)
weightedsumleq([5,1],[M_00002_00001,-4],aux100)
weightedsumgeq([5,1],[M_00002_00001,-4],aux100)
weightedsumleq([6,1],[M_00002_00001,-5],aux101)
weightedsumgeq([6,1],[M_00002_00001,-5],aux101)
weightedsumleq([6,1],[M_00002_00002,-5],aux102)
weightedsumgeq([6,1],[M_00002_00002,-5],aux102)
weightedsumleq([6,1],[M_00002_00003,-5],aux103)
weightedsumgeq([6,1],[M_00002_00003,-5],aux103)
weightedsumleq([5,1],[M_00002_00002,-4],aux104)
weightedsumgeq([5,1],[M_00002_00002,-4],aux104)
weightedsumleq([5,1],[M_00002_00003,-4],aux105)
weightedsumgeq([5,1],[M_00002_00003,-4],aux105)
weightedsumleq([6,1],[M_00002_00004,-5],aux106)
weightedsumgeq([6,1],[M_00002_00004,-5],aux106)
weightedsumleq([5,1],[M_00002_00004,-4],aux107)
weightedsumgeq([5,1],[M_00002_00004,-4],aux107)
weightedsumleq([1,5],[-4,M_00001_00004],aux108)
weightedsumgeq([1,5],[-4,M_00001_00004],aux108)
weightedsumleq([1,5],[-4,M_00001_00001],aux109)
weightedsumgeq([1,5],[-4,M_00001_00001],aux109)
weightedsumleq([1,5],[-4,M_00001_00002],aux110)
weightedsumgeq([1,5],[-4,M_00001_00002],aux110)
weightedsumleq([1,6],[-5,M_00001_00002],aux111)
weightedsumgeq([1,6],[-5,M_00001_00002],aux111)
weightedsumleq([1,6],[-5,M_00001_00004],aux112)
weightedsumgeq([1,6],[-5,M_00001_00004],aux112)
weightedsumleq([1,6],[-5,M_00001_00001],aux113)
weightedsumgeq([1,6],[-5,M_00001_00001],aux113)
weightedsumleq([1,6],[-5,M_00001_00003],aux114)
weightedsumgeq([1,6],[-5,M_00001_00003],aux114)
weightedsumleq([1,5],[-4,M_00001_00003],aux115)
weightedsumgeq([1,5],[-4,M_00001_00003],aux115)
weightedsumleq([1,6],[-5,M_00005_00001],aux116)
weightedsumgeq([1,6],[-5,M_00005_00001],aux116)
weightedsumleq([1,6],[-5,M_00005_00002],aux117)
weightedsumgeq([1,6],[-5,M_00005_00002],aux117)
weightedsumleq([1,6],[-5,M_00005_00003],aux118)
weightedsumgeq([1,6],[-5,M_00005_00003],aux118)
weightedsumleq([1,6],[-5,M_00005_00004],aux119)
weightedsumgeq([1,6],[-5,M_00005_00004],aux119)
weightedsumleq([1,5],[-4,M_00005_00004],aux120)
weightedsumgeq([1,5],[-4,M_00005_00004],aux120)
weightedsumleq([1,5],[-4,M_00005_00001],aux121)
weightedsumgeq([1,5],[-4,M_00005_00001],aux121)
weightedsumleq([1,5],[-4,M_00005_00002],aux122)
weightedsumgeq([1,5],[-4,M_00005_00002],aux122)
weightedsumleq([1,5],[-4,M_00005_00003],aux123)
weightedsumgeq([1,5],[-4,M_00005_00003],aux123)
weightedsumleq([6,1],[M_00003_00003,-5],aux124)
weightedsumgeq([6,1],[M_00003_00003,-5],aux124)
weightedsumleq([6,1],[M_00003_00004,-5],aux125)
weightedsumgeq([6,1],[M_00003_00004,-5],aux125)
weightedsumleq([6,1],[M_00003_00002,-5],aux126)
weightedsumgeq([6,1],[M_00003_00002,-5],aux126)
weightedsumleq([5,1],[M_00003_00003,-4],aux127)
weightedsumgeq([5,1],[M_00003_00003,-4],aux127)
weightedsumleq([5,1],[M_00003_00002,-4],aux128)
weightedsumgeq([5,1],[M_00003_00002,-4],aux128)
weightedsumleq([5,1],[M_00003_00004,-4],aux129)
weightedsumgeq([5,1],[M_00003_00004,-4],aux129)
weightedsumleq([5,1],[M_00003_00001,-4],aux130)
weightedsumgeq([5,1],[M_00003_00001,-4],aux130)
weightedsumleq([6,1],[M_00003_00001,-5],aux131)
weightedsumgeq([6,1],[M_00003_00001,-5],aux131)
weightedsumleq([6,1],[M_00004_00002,-5],aux132)
weightedsumgeq([6,1],[M_00004_00002,-5],aux132)
weightedsumleq([5,1],[M_00004_00002,-4],aux133)
weightedsumgeq([5,1],[M_00004_00002,-4],aux133)
weightedsumleq([6,1],[M_00004_00001,-5],aux134)
weightedsumgeq([6,1],[M_00004_00001,-5],aux134)
weightedsumleq([6,1],[M_00004_00003,-5],aux135)
weightedsumgeq([6,1],[M_00004_00003,-5],aux135)
weightedsumleq([6,1],[M_00004_00004,-5],aux136)
weightedsumgeq([6,1],[M_00004_00004,-5],aux136)
weightedsumleq([5,1],[M_00004_00001,-4],aux137)
weightedsumgeq([5,1],[M_00004_00001,-4],aux137)
weightedsumleq([5,1],[M_00004_00003,-4],aux138)
weightedsumgeq([5,1],[M_00004_00003,-4],aux138)
weightedsumleq([5,1],[M_00004_00004,-4],aux139)
weightedsumgeq([5,1],[M_00004_00004,-4],aux139)
**EOF**
