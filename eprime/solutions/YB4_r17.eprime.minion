MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 60
# CSE_active_eliminated_expressions = 120
# CSE_active_total_size = 252
**VARIABLES**
DISCRETE M_00001_00001 #
{1..2}
DISCRETE M_00001_00002 #
{1..3}
DISCRETE M_00001_00003 #
{1..4}
**CONSTRAINTS**
w-inintervalset(M_00001_00003, [1,1,3,4])
**VARIABLES**
DISCRETE M_00001_00004 #
{1..4}
DISCRETE M_00002_00001 #
{1..4}
DISCRETE M_00002_00002 #
{1..4}
DISCRETE M_00002_00003 #
{1..4}
DISCRETE M_00002_00004 #
{1..4}
DISCRETE M_00003_00001 #
{1..4}
DISCRETE M_00003_00002 #
{1..4}
DISCRETE M_00003_00003 #
{1..4}
DISCRETE M_00003_00004 #
{1..4}
DISCRETE M_00004_00001 #
{1..4}
DISCRETE M_00004_00002 #
{1..4}
DISCRETE M_00004_00003 #
{1..4}
DISCRETE M_00004_00004 #
{1..4}
DISCRETE aux0 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 4], M_00001_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux0, [2,2,4,4])
**VARIABLES**
DISCRETE aux1 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 1], M_00001_00001)
{1..2}
DISCRETE aux2 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 3], M_00001_00001)
{2..3}
DISCRETE aux3 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 1], M_00001_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux3, [1,1,3,3])
**VARIABLES**
DISCRETE aux4 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 2], M_00001_00001)
{2..3}
DISCRETE aux5 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4], M_00001_00001)
{3..4}
DISCRETE aux6 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 2], M_00001_00001)
{2..4}
**CONSTRAINTS**
w-inintervalset(aux6, [2,2,4,4])
**VARIABLES**
DISCRETE aux7 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3], M_00001_00001)
{3..4}
DISCRETE aux8 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 1], M_00001_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux8, [1,1,4,4])
**VARIABLES**
DISCRETE aux9 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 4], M_00001_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux9, [1,1,4,4])
**VARIABLES**
DISCRETE aux10 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 3], M_00001_00001)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux10, [1,1,3,3])
**VARIABLES**
DISCRETE aux11 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 2], M_00001_00001)
{1..2}
DISCRETE aux12 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 4*M_00002_00004 + -4)
{2..15}
DISCRETE aux13 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001 + 4*M_00002_00003 + -4)
{2..15}
DISCRETE aux14 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002 + 4*M_00002_00003 + -4)
{2..15}
DISCRETE aux15 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002 + 4*M_00002_00004 + -4)
{2..15}
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003 + 4*M_00002_00004 + -4)
{2..15}
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00002_00001 + M_00002_00004 + -4)
{2..15}
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00002_00001 + M_00002_00003 + -4)
{2..15}
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00002_00001 + M_00002_00002 + -4)
{2..15}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00002_00003 + M_00002_00004 + -4)
{2..15}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00001 + M_00004_00002 + -4)
{2..15}
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00001 + M_00004_00003 + -4)
{2..15}
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00001 + M_00004_00004 + -4)
{2..15}
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00002 + M_00004_00004 + -4)
{2..15}
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00002 + M_00004_00003 + -4)
{2..15}
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00004_00003 + M_00004_00004 + -4)
{2..15}
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00002 + 4*M_00004_00003 + -4)
{2..15}
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 4*M_00004_00003 + -4)
{2..15}
DISCRETE aux29 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001 + 4*M_00004_00002 + -4)
{2..15}
DISCRETE aux30 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00003_00001 + M_00003_00003 + -4)
{2..15}
DISCRETE aux31 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00003_00001 + M_00003_00002 + -4)
{2..15}
DISCRETE aux32 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00003_00002 + M_00003_00004 + -4)
{2..15}
DISCRETE aux33 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00003_00002 + M_00003_00003 + -4)
{2..15}
DISCRETE aux34 #Active-CSE: 2 occurrences of this expression or equivalent: (4*M_00003_00001 + M_00003_00004 + -4)
{2..15}
DISCRETE aux35 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00002 + 4*M_00003_00004 + -4)
{2..15}
DISCRETE aux36 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 4*M_00003_00004 + -4)
{2..15}
DISCRETE aux37 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001 + 4*M_00003_00002 + -4)
{2..15}
DISCRETE aux38 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003 + 4*M_00003_00004 + -4)
{2..15}
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 4*M_00001_00003 + M_00001_00004)
{4..15}
**CONSTRAINTS**
w-inintervalset(aux39, [4,4,9,15])
**VARIABLES**
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 4*M_00001_00002 + M_00001_00004)
{3..12}
DISCRETE aux41 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 4*M_00001_00002 + M_00001_00003)
{3..12}
**CONSTRAINTS**
w-inintervalset(aux41, [3,5,7,9,11,12])
**VARIABLES**
DISCRETE aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00002 + 4*M_00001_00003)
{3..15}
**CONSTRAINTS**
w-inintervalset(aux42, [3,3,9,11,13,15])
**VARIABLES**
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00002 + 4*M_00001_00004)
{3..15}
**CONSTRAINTS**
w-inintervalset(aux43, [3,3,5,7,9,11,13,15])
**VARIABLES**
DISCRETE aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00001 + 4*M_00001_00004)
{2..14}
**CONSTRAINTS**
w-inintervalset(aux44, [2,2,5,6,9,10,13,14])
**VARIABLES**
DISCRETE aux45 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00001 + 4*M_00001_00003)
{2..14}
**CONSTRAINTS**
w-inintervalset(aux45, [2,2,9,10,13,14])
**VARIABLES**
DISCRETE aux46 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00001 + 4*M_00001_00002)
{2..10}
**CONSTRAINTS**
w-inintervalset(aux46, [2,2,5,6,9,10])
**VARIABLES**
DISCRETE aux47 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + M_00001_00003 + 4*M_00001_00004)
{4..15}
**CONSTRAINTS**
w-inintervalset(aux47, [4,5,7,9,11,13,15,15])
**VARIABLES**
DISCRETE aux48 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00001 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux48, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux49 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux49, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux50 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux50, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00004)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux51, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00002)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux52, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (-4 + 5*M_00001_00003)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux53, [1,1,11,11,16,16])
**VARIABLES**
DISCRETE aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux54, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00001 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux55, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux56, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux57, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00001 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux58, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux59, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux60 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux48) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002], aux46)
{1..4}
DISCRETE aux61 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003], aux52) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux19)
{1..4}
DISCRETE aux62 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux18) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux41)
{1..4}
DISCRETE aux63 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux17) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux40)
{1..4}
DISCRETE aux64 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux55) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux45)
{1..4}
DISCRETE aux65 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux42) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux31)
{1..4}
DISCRETE aux66 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux53) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux30)
{1..4}
DISCRETE aux67 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux39) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux34)
{1..4}
DISCRETE aux68 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux58) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux44)
{1..4}
DISCRETE aux69 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux43) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux21)
{1..4}
DISCRETE aux70 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux47) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux22)
{1..4}
DISCRETE aux71 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux51) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux23)
{1..4}
DISCRETE aux72 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux37) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux13)
{1..4}
DISCRETE aux73 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux54) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux14)
{1..4}
DISCRETE aux74 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux50) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux33)
{1..4}
DISCRETE aux75 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux32) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux20)
{1..4}
DISCRETE aux76 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux29) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux12)
{1..4}
DISCRETE aux77 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux57) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux15)
{1..4}
DISCRETE aux78 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux25) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux16)
{1..4}
DISCRETE aux79 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux49) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux24)
{1..4}
DISCRETE aux80 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux28) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux36)
{1..4}
DISCRETE aux81 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux27) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux35)
{1..4}
DISCRETE aux82 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux59) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux38)
{1..4}
DISCRETE aux83 #ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux56) --- ElementOne([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux26)
{1..4}
DISCRETE aux84 #(-4 + 5*M_00001_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux84, [1,1,6,6])
**VARIABLES**
DISCRETE aux85 #(-4 + 4*M_00001_00001 + M_00001_00002)
{2..7}
**CONSTRAINTS**
w-inintervalset(aux85, [2,3,5,7])
**VARIABLES**
DISCRETE aux86 #(-4 + 4*M_00001_00001 + M_00001_00003)
{3..8}
**CONSTRAINTS**
w-inintervalset(aux86, [3,5,7,8])
**VARIABLES**
DISCRETE aux87 #(-4 + 4*M_00001_00001 + M_00001_00004)
{2..8}
DISCRETE aux88 #(M_00002_00001 + 4*M_00002_00002 + -4)
{2..15}
DISCRETE aux89 #(5*M_00002_00002 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux89, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux90 #(4*M_00002_00002 + M_00002_00003 + -4)
{2..15}
DISCRETE aux91 #(4*M_00002_00002 + M_00002_00004 + -4)
{2..15}
DISCRETE aux92 #(M_00003_00001 + 4*M_00003_00003 + -4)
{2..15}
DISCRETE aux93 #(M_00003_00002 + 4*M_00003_00003 + -4)
{2..15}
DISCRETE aux94 #(5*M_00003_00003 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux94, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux95 #(4*M_00003_00003 + M_00003_00004 + -4)
{2..15}
DISCRETE aux96 #(M_00004_00001 + 4*M_00004_00004 + -4)
{2..15}
DISCRETE aux97 #(M_00004_00002 + 4*M_00004_00004 + -4)
{2..15}
DISCRETE aux98 #(M_00004_00003 + 4*M_00004_00004 + -4)
{2..15}
DISCRETE aux99 #(5*M_00004_00004 + -4)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux99, [1,1,6,6,11,11,16,16])
**VARIABLES**
DISCRETE aux100 #ElementOne([1, 2, 3], M_00001_00002)
{1..3}
DISCRETE aux101 #ElementOne([1, 2, 3, 4], M_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux101, [1,1,3,4])
**VARIABLES**
DISCRETE aux102 #ElementOne([1, 2, 3, 4], M_00001_00004)
{1..4}
DISCRETE aux103 #ElementOne([1, 2, 3, 4], M_00002_00001)
{1..4}
DISCRETE aux104 #ElementOne([1, 2, 3, 4], M_00002_00002)
{1..4}
DISCRETE aux105 #ElementOne([1, 2, 3, 4], M_00002_00003)
{1..4}
DISCRETE aux106 #ElementOne([1, 2, 3, 4], M_00002_00004)
{1..4}
DISCRETE aux107 #ElementOne([1, 2, 3, 4], M_00003_00001)
{1..4}
DISCRETE aux108 #ElementOne([1, 2, 3, 4], M_00003_00002)
{1..4}
DISCRETE aux109 #ElementOne([1, 2, 3, 4], M_00003_00003)
{1..4}
DISCRETE aux110 #ElementOne([1, 2, 3, 4], M_00003_00004)
{1..4}
DISCRETE aux111 #ElementOne([1, 2, 3, 4], M_00004_00001)
{1..4}
DISCRETE aux112 #ElementOne([1, 2, 3, 4], M_00004_00002)
{1..4}
DISCRETE aux113 #ElementOne([1, 2, 3, 4], M_00004_00003)
{1..4}
DISCRETE aux114 #ElementOne([1, 2, 3, 4], M_00004_00004)
{1..4}
DISCRETE aux115 #ElementOne([1, 2, 4], M_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux115, [1,2,4,4])
**VARIABLES**
DISCRETE aux116 #ElementOne([1, 2, 4, 3], M_00001_00004)
{1..4}
DISCRETE aux117 #ElementOne([1, 2, 4, 3], M_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux117, [1,1,3,4])
**VARIABLES**
DISCRETE aux118 #ElementOne([1, 2, 4, 3], M_00002_00001)
{1..4}
DISCRETE aux119 #ElementOne([1, 2, 4, 3], M_00002_00002)
{1..4}
DISCRETE aux120 #ElementOne([1, 2, 4, 3], M_00002_00004)
{1..4}
DISCRETE aux121 #ElementOne([1, 2, 4, 3], M_00002_00003)
{1..4}
DISCRETE aux122 #ElementOne([1, 2, 4, 3], M_00004_00001)
{1..4}
DISCRETE aux123 #ElementOne([1, 2, 4, 3], M_00004_00002)
{1..4}
DISCRETE aux124 #ElementOne([1, 2, 4, 3], M_00004_00004)
{1..4}
DISCRETE aux125 #ElementOne([1, 2, 4, 3], M_00004_00003)
{1..4}
DISCRETE aux126 #ElementOne([1, 2, 4, 3], M_00003_00001)
{1..4}
DISCRETE aux127 #ElementOne([1, 2, 4, 3], M_00003_00002)
{1..4}
DISCRETE aux128 #ElementOne([1, 2, 4, 3], M_00003_00004)
{1..4}
DISCRETE aux129 #ElementOne([1, 2, 4, 3], M_00003_00003)
{1..4}
DISCRETE aux130 #ElementOne([1, 4, 3, 2], M_00001_00004)
{1..4}
DISCRETE aux131 #ElementOne([1, 4, 3, 2], M_00001_00003)
{1..3}
DISCRETE aux132 #ElementOne([1, 4, 3], M_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux132, [1,1,3,4])
**VARIABLES**
DISCRETE aux133 #ElementOne([1, 4, 3, 2], M_00004_00001)
{1..4}
DISCRETE aux134 #ElementOne([1, 4, 3, 2], M_00004_00004)
{1..4}
DISCRETE aux135 #ElementOne([1, 4, 3, 2], M_00004_00003)
{1..4}
DISCRETE aux136 #ElementOne([1, 4, 3, 2], M_00004_00002)
{1..4}
DISCRETE aux137 #ElementOne([1, 4, 3, 2], M_00003_00001)
{1..4}
DISCRETE aux138 #ElementOne([1, 4, 3, 2], M_00003_00004)
{1..4}
DISCRETE aux139 #ElementOne([1, 4, 3, 2], M_00003_00003)
{1..4}
DISCRETE aux140 #ElementOne([1, 4, 3, 2], M_00003_00002)
{1..4}
DISCRETE aux141 #ElementOne([1, 4, 3, 2], M_00002_00001)
{1..4}
DISCRETE aux142 #ElementOne([1, 4, 3, 2], M_00002_00004)
{1..4}
DISCRETE aux143 #ElementOne([1, 4, 3, 2], M_00002_00003)
{1..4}
DISCRETE aux144 #ElementOne([1, 4, 3, 2], M_00002_00002)
{1..4}
DISCRETE aux145 #ElementOne([1, 3, 4, 2], M_00001_00004)
{1..4}
DISCRETE aux146 #ElementOne([1, 3, 4], M_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux146, [1,1,3,4])
**VARIABLES**
DISCRETE aux147 #ElementOne([1, 3, 4, 2], M_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux147, [1,2,4,4])
**VARIABLES**
DISCRETE aux148 #ElementOne([1, 3, 4, 2], M_00004_00001)
{1..4}
DISCRETE aux149 #ElementOne([1, 3, 4, 2], M_00004_00004)
{1..4}
DISCRETE aux150 #ElementOne([1, 3, 4, 2], M_00004_00002)
{1..4}
DISCRETE aux151 #ElementOne([1, 3, 4, 2], M_00004_00003)
{1..4}
DISCRETE aux152 #ElementOne([1, 3, 4, 2], M_00002_00001)
{1..4}
DISCRETE aux153 #ElementOne([1, 3, 4, 2], M_00002_00004)
{1..4}
DISCRETE aux154 #ElementOne([1, 3, 4, 2], M_00002_00002)
{1..4}
DISCRETE aux155 #ElementOne([1, 3, 4, 2], M_00002_00003)
{1..4}
DISCRETE aux156 #ElementOne([1, 3, 4, 2], M_00003_00001)
{1..4}
DISCRETE aux157 #ElementOne([1, 3, 4, 2], M_00003_00004)
{1..4}
DISCRETE aux158 #ElementOne([1, 3, 4, 2], M_00003_00002)
{1..4}
DISCRETE aux159 #ElementOne([1, 3, 4, 2], M_00003_00003)
{1..4}
DISCRETE aux160 #ElementOne([1, 4, 2, 3], M_00001_00003)
{1..3}
DISCRETE aux161 #ElementOne([1, 4, 2, 3], M_00001_00004)
{1..4}
DISCRETE aux162 #ElementOne([1, 4, 2], M_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux162, [1,2,4,4])
**VARIABLES**
DISCRETE aux163 #ElementOne([1, 4, 2, 3], M_00003_00001)
{1..4}
DISCRETE aux164 #ElementOne([1, 4, 2, 3], M_00003_00003)
{1..4}
DISCRETE aux165 #ElementOne([1, 4, 2, 3], M_00003_00004)
{1..4}
DISCRETE aux166 #ElementOne([1, 4, 2, 3], M_00003_00002)
{1..4}
DISCRETE aux167 #ElementOne([1, 4, 2, 3], M_00004_00001)
{1..4}
DISCRETE aux168 #ElementOne([1, 4, 2, 3], M_00004_00003)
{1..4}
DISCRETE aux169 #ElementOne([1, 4, 2, 3], M_00004_00004)
{1..4}
DISCRETE aux170 #ElementOne([1, 4, 2, 3], M_00004_00002)
{1..4}
DISCRETE aux171 #ElementOne([1, 4, 2, 3], M_00002_00001)
{1..4}
DISCRETE aux172 #ElementOne([1, 4, 2, 3], M_00002_00003)
{1..4}
DISCRETE aux173 #ElementOne([1, 4, 2, 3], M_00002_00004)
{1..4}
DISCRETE aux174 #ElementOne([1, 4, 2, 3], M_00002_00002)
{1..4}
DISCRETE aux175 #ElementOne([1, 3, 2, 4], M_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux175, [1,2,4,4])
**VARIABLES**
DISCRETE aux176 #ElementOne([1, 3, 2], M_00001_00002)
{1..3}
DISCRETE aux177 #ElementOne([1, 3, 2, 4], M_00001_00004)
{1..4}
DISCRETE aux178 #ElementOne([1, 3, 2, 4], M_00003_00001)
{1..4}
DISCRETE aux179 #ElementOne([1, 3, 2, 4], M_00003_00003)
{1..4}
DISCRETE aux180 #ElementOne([1, 3, 2, 4], M_00003_00002)
{1..4}
DISCRETE aux181 #ElementOne([1, 3, 2, 4], M_00003_00004)
{1..4}
DISCRETE aux182 #ElementOne([1, 3, 2, 4], M_00002_00001)
{1..4}
DISCRETE aux183 #ElementOne([1, 3, 2, 4], M_00002_00003)
{1..4}
DISCRETE aux184 #ElementOne([1, 3, 2, 4], M_00002_00002)
{1..4}
DISCRETE aux185 #ElementOne([1, 3, 2, 4], M_00002_00004)
{1..4}
DISCRETE aux186 #ElementOne([1, 3, 2, 4], M_00004_00001)
{1..4}
DISCRETE aux187 #ElementOne([1, 3, 2, 4], M_00004_00003)
{1..4}
DISCRETE aux188 #ElementOne([1, 3, 2, 4], M_00004_00002)
{1..4}
DISCRETE aux189 #ElementOne([1, 3, 2, 4], M_00004_00004)
{1..4}
DISCRETE aux190 #ElementOne([4, 2, 3, 1], M_00004_00004)
{1..4}
DISCRETE aux191 #ElementOne([4, 2, 3, 1], M_00004_00002)
{1..4}
DISCRETE aux192 #ElementOne([4, 2, 3, 1], M_00004_00003)
{1..4}
DISCRETE aux193 #ElementOne([4, 2, 3, 1], M_00004_00001)
{1..4}
DISCRETE aux194 #ElementOne([4, 2, 3, 1], M_00002_00004)
{1..4}
DISCRETE aux195 #ElementOne([4, 2, 3, 1], M_00002_00002)
{1..4}
DISCRETE aux196 #ElementOne([4, 2, 3, 1], M_00002_00003)
{1..4}
DISCRETE aux197 #ElementOne([4, 2, 3, 1], M_00002_00001)
{1..4}
DISCRETE aux198 #ElementOne([4, 2, 3, 1], M_00003_00004)
{1..4}
DISCRETE aux199 #ElementOne([4, 2, 3, 1], M_00003_00002)
{1..4}
DISCRETE aux200 #ElementOne([4, 2, 3, 1], M_00003_00003)
{1..4}
DISCRETE aux201 #ElementOne([4, 2, 3, 1], M_00003_00001)
{1..4}
DISCRETE aux202 #ElementOne([4, 2, 3, 1], M_00001_00004)
{1..4}
DISCRETE aux203 #ElementOne([4, 2, 3], M_00001_00002)
{2..4}
DISCRETE aux204 #ElementOne([4, 2, 3, 1], M_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux204, [1,1,3,4])
**VARIABLES**
DISCRETE aux205 #ElementOne([3, 2, 4, 1], M_00004_00004)
{1..4}
DISCRETE aux206 #ElementOne([3, 2, 4, 1], M_00004_00002)
{1..4}
DISCRETE aux207 #ElementOne([3, 2, 4, 1], M_00004_00001)
{1..4}
DISCRETE aux208 #ElementOne([3, 2, 4, 1], M_00004_00003)
{1..4}
DISCRETE aux209 #ElementOne([3, 2, 4, 1], M_00002_00004)
{1..4}
DISCRETE aux210 #ElementOne([3, 2, 4, 1], M_00002_00002)
{1..4}
DISCRETE aux211 #ElementOne([3, 2, 4, 1], M_00002_00001)
{1..4}
DISCRETE aux212 #ElementOne([3, 2, 4, 1], M_00002_00003)
{1..4}
DISCRETE aux213 #ElementOne([3, 2, 4, 1], M_00001_00004)
{1..4}
DISCRETE aux214 #ElementOne([3, 2, 4], M_00001_00002)
{2..4}
DISCRETE aux215 #ElementOne([3, 2, 4, 1], M_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux215, [1,1,3,4])
**VARIABLES**
DISCRETE aux216 #ElementOne([3, 2, 4, 1], M_00003_00004)
{1..4}
DISCRETE aux217 #ElementOne([3, 2, 4, 1], M_00003_00002)
{1..4}
DISCRETE aux218 #ElementOne([3, 2, 4, 1], M_00003_00001)
{1..4}
DISCRETE aux219 #ElementOne([3, 2, 4, 1], M_00003_00003)
{1..4}
DISCRETE aux220 #ElementOne([2, 4, 3, 1], M_00004_00004)
{1..4}
DISCRETE aux221 #ElementOne([2, 4, 3, 1], M_00004_00001)
{1..4}
DISCRETE aux222 #ElementOne([2, 4, 3, 1], M_00004_00003)
{1..4}
DISCRETE aux223 #ElementOne([2, 4, 3, 1], M_00004_00002)
{1..4}
DISCRETE aux224 #ElementOne([2, 4, 3, 1], M_00001_00004)
{1..4}
DISCRETE aux225 #ElementOne([2, 4, 3, 1], M_00001_00003)
{1..3}
DISCRETE aux226 #ElementOne([2, 4, 3], M_00001_00002)
{2..4}
DISCRETE aux227 #ElementOne([2, 4, 3, 1], M_00003_00004)
{1..4}
DISCRETE aux228 #ElementOne([2, 4, 3, 1], M_00003_00001)
{1..4}
DISCRETE aux229 #ElementOne([2, 4, 3, 1], M_00003_00003)
{1..4}
DISCRETE aux230 #ElementOne([2, 4, 3, 1], M_00003_00002)
{1..4}
DISCRETE aux231 #ElementOne([2, 4, 3, 1], M_00002_00004)
{1..4}
DISCRETE aux232 #ElementOne([2, 4, 3, 1], M_00002_00001)
{1..4}
DISCRETE aux233 #ElementOne([2, 4, 3, 1], M_00002_00003)
{1..4}
DISCRETE aux234 #ElementOne([2, 4, 3, 1], M_00002_00002)
{1..4}
DISCRETE aux235 #ElementOne([2, 3, 4, 1], M_00004_00004)
{1..4}
DISCRETE aux236 #ElementOne([2, 3, 4, 1], M_00004_00001)
{1..4}
DISCRETE aux237 #ElementOne([2, 3, 4, 1], M_00004_00002)
{1..4}
DISCRETE aux238 #ElementOne([2, 3, 4, 1], M_00004_00003)
{1..4}
DISCRETE aux239 #ElementOne([2, 3, 4, 1], M_00001_00004)
{1..4}
DISCRETE aux240 #ElementOne([2, 3, 4], M_00001_00002)
{2..4}
DISCRETE aux241 #ElementOne([2, 3, 4, 1], M_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux241, [1,2,4,4])
**VARIABLES**
DISCRETE aux242 #ElementOne([2, 3, 4, 1], M_00002_00004)
{1..4}
DISCRETE aux243 #ElementOne([2, 3, 4, 1], M_00002_00001)
{1..4}
DISCRETE aux244 #ElementOne([2, 3, 4, 1], M_00002_00002)
{1..4}
DISCRETE aux245 #ElementOne([2, 3, 4, 1], M_00002_00003)
{1..4}
DISCRETE aux246 #ElementOne([2, 3, 4, 1], M_00003_00004)
{1..4}
DISCRETE aux247 #ElementOne([2, 3, 4, 1], M_00003_00001)
{1..4}
DISCRETE aux248 #ElementOne([2, 3, 4, 1], M_00003_00002)
{1..4}
DISCRETE aux249 #ElementOne([2, 3, 4, 1], M_00003_00003)
{1..4}
DISCRETE aux250 #ElementOne([3, 4, 2, 1], M_00004_00004)
{1..4}
DISCRETE aux251 #ElementOne([3, 4, 2, 1], M_00004_00003)
{1..4}
DISCRETE aux252 #ElementOne([3, 4, 2, 1], M_00004_00001)
{1..4}
DISCRETE aux253 #ElementOne([3, 4, 2, 1], M_00004_00002)
{1..4}
DISCRETE aux254 #ElementOne([3, 4, 2, 1], M_00003_00004)
{1..4}
DISCRETE aux255 #ElementOne([3, 4, 2, 1], M_00003_00003)
{1..4}
DISCRETE aux256 #ElementOne([3, 4, 2, 1], M_00003_00001)
{1..4}
DISCRETE aux257 #ElementOne([3, 4, 2, 1], M_00003_00002)
{1..4}
DISCRETE aux258 #ElementOne([3, 4, 2, 1], M_00001_00004)
{1..4}
DISCRETE aux259 #ElementOne([3, 4, 2, 1], M_00001_00003)
{1..3}
DISCRETE aux260 #ElementOne([3, 4, 2], M_00001_00002)
{2..4}
DISCRETE aux261 #ElementOne([3, 4, 2, 1], M_00002_00004)
{1..4}
DISCRETE aux262 #ElementOne([3, 4, 2, 1], M_00002_00003)
{1..4}
DISCRETE aux263 #ElementOne([3, 4, 2, 1], M_00002_00001)
{1..4}
DISCRETE aux264 #ElementOne([3, 4, 2, 1], M_00002_00002)
{1..4}
DISCRETE aux265 #ElementOne([4, 3, 2, 1], M_00004_00004)
{1..4}
DISCRETE aux266 #ElementOne([4, 3, 2, 1], M_00004_00003)
{1..4}
DISCRETE aux267 #ElementOne([4, 3, 2, 1], M_00004_00002)
{1..4}
DISCRETE aux268 #ElementOne([4, 3, 2, 1], M_00004_00001)
{1..4}
DISCRETE aux269 #ElementOne([4, 3, 2, 1], M_00003_00004)
{1..4}
DISCRETE aux270 #ElementOne([4, 3, 2, 1], M_00003_00003)
{1..4}
DISCRETE aux271 #ElementOne([4, 3, 2, 1], M_00003_00002)
{1..4}
DISCRETE aux272 #ElementOne([4, 3, 2, 1], M_00003_00001)
{1..4}
DISCRETE aux273 #ElementOne([4, 3, 2, 1], M_00002_00004)
{1..4}
DISCRETE aux274 #ElementOne([4, 3, 2, 1], M_00002_00003)
{1..4}
DISCRETE aux275 #ElementOne([4, 3, 2, 1], M_00002_00002)
{1..4}
DISCRETE aux276 #ElementOne([4, 3, 2, 1], M_00002_00001)
{1..4}
DISCRETE aux277 #ElementOne([4, 3, 2, 1], M_00001_00004)
{1..4}
DISCRETE aux278 #ElementOne([4, 3, 2, 1], M_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux278, [1,2,4,4])
**VARIABLES**
DISCRETE aux279 #ElementOne([4, 3, 2], M_00001_00002)
{2..4}
DISCRETE aux280 #ElementOne([4, 1, 3, 2], M_00002_00002)
{1..4}
DISCRETE aux281 #ElementOne([4, 1, 3, 2], M_00002_00004)
{1..4}
DISCRETE aux282 #ElementOne([4, 1, 3, 2], M_00002_00003)
{1..4}
DISCRETE aux283 #ElementOne([4, 1, 3, 2], M_00002_00001)
{1..4}
DISCRETE aux284 #ElementOne([4, 1, 3, 2], M_00004_00002)
{1..4}
DISCRETE aux285 #ElementOne([4, 1, 3, 2], M_00004_00004)
{1..4}
DISCRETE aux286 #ElementOne([4, 1, 3, 2], M_00004_00003)
{1..4}
DISCRETE aux287 #ElementOne([4, 1, 3, 2], M_00004_00001)
{1..4}
DISCRETE aux288 #ElementOne([4, 1, 3, 2], M_00003_00002)
{1..4}
DISCRETE aux289 #ElementOne([4, 1, 3, 2], M_00003_00004)
{1..4}
DISCRETE aux290 #ElementOne([4, 1, 3, 2], M_00003_00003)
{1..4}
DISCRETE aux291 #ElementOne([4, 1, 3, 2], M_00003_00001)
{1..4}
DISCRETE aux292 #ElementOne([4, 1, 3], M_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux292, [1,1,3,4])
**VARIABLES**
DISCRETE aux293 #ElementOne([4, 1, 3, 2], M_00001_00004)
{1..4}
DISCRETE aux294 #ElementOne([4, 1, 3, 2], M_00001_00003)
{2..4}
DISCRETE aux295 #ElementOne([3, 1, 4, 2], M_00002_00002)
{1..4}
DISCRETE aux296 #ElementOne([3, 1, 4, 2], M_00002_00004)
{1..4}
DISCRETE aux297 #ElementOne([3, 1, 4, 2], M_00002_00001)
{1..4}
DISCRETE aux298 #ElementOne([3, 1, 4, 2], M_00002_00003)
{1..4}
DISCRETE aux299 #ElementOne([3, 1, 4, 2], M_00004_00002)
{1..4}
DISCRETE aux300 #ElementOne([3, 1, 4, 2], M_00004_00004)
{1..4}
DISCRETE aux301 #ElementOne([3, 1, 4, 2], M_00004_00001)
{1..4}
DISCRETE aux302 #ElementOne([3, 1, 4, 2], M_00004_00003)
{1..4}
DISCRETE aux303 #ElementOne([3, 1, 4], M_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux303, [1,1,3,4])
**VARIABLES**
DISCRETE aux304 #ElementOne([3, 1, 4, 2], M_00001_00004)
{1..4}
DISCRETE aux305 #ElementOne([3, 1, 4, 2], M_00001_00003)
{2..4}
DISCRETE aux306 #ElementOne([3, 1, 4, 2], M_00003_00002)
{1..4}
DISCRETE aux307 #ElementOne([3, 1, 4, 2], M_00003_00004)
{1..4}
DISCRETE aux308 #ElementOne([3, 1, 4, 2], M_00003_00001)
{1..4}
DISCRETE aux309 #ElementOne([3, 1, 4, 2], M_00003_00003)
{1..4}
DISCRETE aux310 #ElementOne([2, 1, 3, 4], M_00002_00002)
{1..4}
DISCRETE aux311 #ElementOne([2, 1, 3, 4], M_00002_00001)
{1..4}
DISCRETE aux312 #ElementOne([2, 1, 3, 4], M_00002_00003)
{1..4}
DISCRETE aux313 #ElementOne([2, 1, 3, 4], M_00002_00004)
{1..4}
DISCRETE aux314 #ElementOne([2, 1, 3], M_00001_00002)
{1..3}
DISCRETE aux315 #ElementOne([2, 1, 3, 4], M_00001_00003)
{2..4}
DISCRETE aux316 #ElementOne([2, 1, 3, 4], M_00001_00004)
{1..4}
DISCRETE aux317 #ElementOne([2, 1, 3, 4], M_00003_00002)
{1..4}
DISCRETE aux318 #ElementOne([2, 1, 3, 4], M_00003_00001)
{1..4}
DISCRETE aux319 #ElementOne([2, 1, 3, 4], M_00003_00003)
{1..4}
DISCRETE aux320 #ElementOne([2, 1, 3, 4], M_00003_00004)
{1..4}
DISCRETE aux321 #ElementOne([2, 1, 3, 4], M_00004_00002)
{1..4}
DISCRETE aux322 #ElementOne([2, 1, 3, 4], M_00004_00001)
{1..4}
DISCRETE aux323 #ElementOne([2, 1, 3, 4], M_00004_00003)
{1..4}
DISCRETE aux324 #ElementOne([2, 1, 3, 4], M_00004_00004)
{1..4}
DISCRETE aux325 #ElementOne([2, 1, 4, 3], M_00002_00002)
{1..4}
DISCRETE aux326 #ElementOne([2, 1, 4, 3], M_00002_00001)
{1..4}
DISCRETE aux327 #ElementOne([2, 1, 4, 3], M_00002_00004)
{1..4}
DISCRETE aux328 #ElementOne([2, 1, 4, 3], M_00002_00003)
{1..4}
DISCRETE aux329 #ElementOne([2, 1, 4], M_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux329, [1,2,4,4])
**VARIABLES**
DISCRETE aux330 #ElementOne([2, 1, 4, 3], M_00001_00004)
{1..4}
DISCRETE aux331 #ElementOne([2, 1, 4, 3], M_00001_00003)
{2..4}
DISCRETE aux332 #ElementOne([2, 1, 4, 3], M_00004_00002)
{1..4}
DISCRETE aux333 #ElementOne([2, 1, 4, 3], M_00004_00001)
{1..4}
DISCRETE aux334 #ElementOne([2, 1, 4, 3], M_00004_00004)
{1..4}
DISCRETE aux335 #ElementOne([2, 1, 4, 3], M_00004_00003)
{1..4}
DISCRETE aux336 #ElementOne([2, 1, 4, 3], M_00003_00002)
{1..4}
DISCRETE aux337 #ElementOne([2, 1, 4, 3], M_00003_00001)
{1..4}
DISCRETE aux338 #ElementOne([2, 1, 4, 3], M_00003_00004)
{1..4}
DISCRETE aux339 #ElementOne([2, 1, 4, 3], M_00003_00003)
{1..4}
DISCRETE aux340 #ElementOne([3, 1, 2, 4], M_00002_00002)
{1..4}
DISCRETE aux341 #ElementOne([3, 1, 2, 4], M_00002_00003)
{1..4}
DISCRETE aux342 #ElementOne([3, 1, 2, 4], M_00002_00001)
{1..4}
DISCRETE aux343 #ElementOne([3, 1, 2, 4], M_00002_00004)
{1..4}
DISCRETE aux344 #ElementOne([3, 1, 2, 4], M_00003_00002)
{1..4}
DISCRETE aux345 #ElementOne([3, 1, 2, 4], M_00003_00003)
{1..4}
DISCRETE aux346 #ElementOne([3, 1, 2, 4], M_00003_00001)
{1..4}
DISCRETE aux347 #ElementOne([3, 1, 2, 4], M_00003_00004)
{1..4}
DISCRETE aux348 #ElementOne([3, 1, 2], M_00001_00002)
{1..3}
DISCRETE aux349 #ElementOne([3, 1, 2, 4], M_00001_00003)
{2..4}
DISCRETE aux350 #ElementOne([3, 1, 2, 4], M_00001_00004)
{1..4}
DISCRETE aux351 #ElementOne([3, 1, 2, 4], M_00004_00002)
{1..4}
DISCRETE aux352 #ElementOne([3, 1, 2, 4], M_00004_00003)
{1..4}
DISCRETE aux353 #ElementOne([3, 1, 2, 4], M_00004_00001)
{1..4}
DISCRETE aux354 #ElementOne([3, 1, 2, 4], M_00004_00004)
{1..4}
DISCRETE aux355 #ElementOne([4, 1, 2, 3], M_00002_00002)
{1..4}
DISCRETE aux356 #ElementOne([4, 1, 2, 3], M_00002_00003)
{1..4}
DISCRETE aux357 #ElementOne([4, 1, 2, 3], M_00002_00004)
{1..4}
DISCRETE aux358 #ElementOne([4, 1, 2, 3], M_00002_00001)
{1..4}
DISCRETE aux359 #ElementOne([4, 1, 2, 3], M_00003_00002)
{1..4}
DISCRETE aux360 #ElementOne([4, 1, 2, 3], M_00003_00003)
{1..4}
DISCRETE aux361 #ElementOne([4, 1, 2, 3], M_00003_00004)
{1..4}
DISCRETE aux362 #ElementOne([4, 1, 2, 3], M_00003_00001)
{1..4}
DISCRETE aux363 #ElementOne([4, 1, 2, 3], M_00004_00002)
{1..4}
DISCRETE aux364 #ElementOne([4, 1, 2, 3], M_00004_00003)
{1..4}
DISCRETE aux365 #ElementOne([4, 1, 2, 3], M_00004_00004)
{1..4}
DISCRETE aux366 #ElementOne([4, 1, 2, 3], M_00004_00001)
{1..4}
DISCRETE aux367 #ElementOne([4, 1, 2], M_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux367, [1,2,4,4])
**VARIABLES**
DISCRETE aux368 #ElementOne([4, 1, 2, 3], M_00001_00003)
{2..4}
DISCRETE aux369 #ElementOne([4, 1, 2, 3], M_00001_00004)
{1..4}
DISCRETE aux370 #ElementOne([4, 2, 1, 3], M_00003_00003)
{1..4}
DISCRETE aux371 #ElementOne([4, 2, 1, 3], M_00003_00002)
{1..4}
DISCRETE aux372 #ElementOne([4, 2, 1, 3], M_00003_00004)
{1..4}
DISCRETE aux373 #ElementOne([4, 2, 1, 3], M_00003_00001)
{1..4}
DISCRETE aux374 #ElementOne([4, 2, 1, 3], M_00002_00003)
{1..4}
DISCRETE aux375 #ElementOne([4, 2, 1, 3], M_00002_00002)
{1..4}
DISCRETE aux376 #ElementOne([4, 2, 1, 3], M_00002_00004)
{1..4}
DISCRETE aux377 #ElementOne([4, 2, 1, 3], M_00002_00001)
{1..4}
DISCRETE aux378 #ElementOne([4, 2, 1, 3], M_00004_00003)
{1..4}
DISCRETE aux379 #ElementOne([4, 2, 1, 3], M_00004_00002)
{1..4}
DISCRETE aux380 #ElementOne([4, 2, 1, 3], M_00004_00004)
{1..4}
DISCRETE aux381 #ElementOne([4, 2, 1, 3], M_00004_00001)
{1..4}
DISCRETE aux382 #ElementOne([4, 2, 1, 3], M_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux382, [1,1,3,4])
**VARIABLES**
DISCRETE aux383 #ElementOne([4, 2, 1], M_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux383, [1,2,4,4])
**VARIABLES**
DISCRETE aux384 #ElementOne([4, 2, 1, 3], M_00001_00004)
{1..4}
DISCRETE aux385 #ElementOne([3, 2, 1, 4], M_00003_00003)
{1..4}
DISCRETE aux386 #ElementOne([3, 2, 1, 4], M_00003_00002)
{1..4}
DISCRETE aux387 #ElementOne([3, 2, 1, 4], M_00003_00001)
{1..4}
DISCRETE aux388 #ElementOne([3, 2, 1, 4], M_00003_00004)
{1..4}
DISCRETE aux389 #ElementOne([3, 2, 1, 4], M_00002_00003)
{1..4}
DISCRETE aux390 #ElementOne([3, 2, 1, 4], M_00002_00002)
{1..4}
DISCRETE aux391 #ElementOne([3, 2, 1, 4], M_00002_00001)
{1..4}
DISCRETE aux392 #ElementOne([3, 2, 1, 4], M_00002_00004)
{1..4}
DISCRETE aux393 #ElementOne([3, 2, 1, 4], M_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux393, [1,1,3,4])
**VARIABLES**
DISCRETE aux394 #ElementOne([3, 2, 1], M_00001_00002)
{1..3}
DISCRETE aux395 #ElementOne([3, 2, 1, 4], M_00001_00004)
{1..4}
DISCRETE aux396 #ElementOne([3, 2, 1, 4], M_00004_00003)
{1..4}
DISCRETE aux397 #ElementOne([3, 2, 1, 4], M_00004_00002)
{1..4}
DISCRETE aux398 #ElementOne([3, 2, 1, 4], M_00004_00001)
{1..4}
DISCRETE aux399 #ElementOne([3, 2, 1, 4], M_00004_00004)
{1..4}
DISCRETE aux400 #ElementOne([2, 4, 1, 3], M_00003_00003)
{1..4}
DISCRETE aux401 #ElementOne([2, 4, 1, 3], M_00003_00001)
{1..4}
DISCRETE aux402 #ElementOne([2, 4, 1, 3], M_00003_00004)
{1..4}
DISCRETE aux403 #ElementOne([2, 4, 1, 3], M_00003_00002)
{1..4}
DISCRETE aux404 #ElementOne([2, 4, 1, 3], M_00001_00003)
{1..3}
DISCRETE aux405 #ElementOne([2, 4, 1, 3], M_00001_00004)
{1..4}
DISCRETE aux406 #ElementOne([2, 4, 1], M_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux406, [1,2,4,4])
**VARIABLES**
DISCRETE aux407 #ElementOne([2, 4, 1, 3], M_00004_00003)
{1..4}
DISCRETE aux408 #ElementOne([2, 4, 1, 3], M_00004_00001)
{1..4}
DISCRETE aux409 #ElementOne([2, 4, 1, 3], M_00004_00004)
{1..4}
DISCRETE aux410 #ElementOne([2, 4, 1, 3], M_00004_00002)
{1..4}
DISCRETE aux411 #ElementOne([2, 4, 1, 3], M_00002_00003)
{1..4}
DISCRETE aux412 #ElementOne([2, 4, 1, 3], M_00002_00001)
{1..4}
DISCRETE aux413 #ElementOne([2, 4, 1, 3], M_00002_00004)
{1..4}
DISCRETE aux414 #ElementOne([2, 4, 1, 3], M_00002_00002)
{1..4}
DISCRETE aux415 #ElementOne([2, 3, 1, 4], M_00003_00003)
{1..4}
DISCRETE aux416 #ElementOne([2, 3, 1, 4], M_00003_00001)
{1..4}
DISCRETE aux417 #ElementOne([2, 3, 1, 4], M_00003_00002)
{1..4}
DISCRETE aux418 #ElementOne([2, 3, 1, 4], M_00003_00004)
{1..4}
DISCRETE aux419 #ElementOne([2, 3, 1, 4], M_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux419, [1,2,4,4])
**VARIABLES**
DISCRETE aux420 #ElementOne([2, 3, 1], M_00001_00002)
{1..3}
DISCRETE aux421 #ElementOne([2, 3, 1, 4], M_00001_00004)
{1..4}
DISCRETE aux422 #ElementOne([2, 3, 1, 4], M_00002_00003)
{1..4}
DISCRETE aux423 #ElementOne([2, 3, 1, 4], M_00002_00001)
{1..4}
DISCRETE aux424 #ElementOne([2, 3, 1, 4], M_00002_00002)
{1..4}
DISCRETE aux425 #ElementOne([2, 3, 1, 4], M_00002_00004)
{1..4}
DISCRETE aux426 #ElementOne([2, 3, 1, 4], M_00004_00003)
{1..4}
DISCRETE aux427 #ElementOne([2, 3, 1, 4], M_00004_00001)
{1..4}
DISCRETE aux428 #ElementOne([2, 3, 1, 4], M_00004_00002)
{1..4}
DISCRETE aux429 #ElementOne([2, 3, 1, 4], M_00004_00004)
{1..4}
DISCRETE aux430 #ElementOne([3, 4, 1, 2], M_00003_00003)
{1..4}
DISCRETE aux431 #ElementOne([3, 4, 1, 2], M_00003_00004)
{1..4}
DISCRETE aux432 #ElementOne([3, 4, 1, 2], M_00003_00001)
{1..4}
DISCRETE aux433 #ElementOne([3, 4, 1, 2], M_00003_00002)
{1..4}
DISCRETE aux434 #ElementOne([3, 4, 1, 2], M_00004_00003)
{1..4}
DISCRETE aux435 #ElementOne([3, 4, 1, 2], M_00004_00004)
{1..4}
DISCRETE aux436 #ElementOne([3, 4, 1, 2], M_00004_00001)
{1..4}
DISCRETE aux437 #ElementOne([3, 4, 1, 2], M_00004_00002)
{1..4}
DISCRETE aux438 #ElementOne([3, 4, 1, 2], M_00001_00003)
{1..3}
DISCRETE aux439 #ElementOne([3, 4, 1, 2], M_00001_00004)
{1..4}
DISCRETE aux440 #ElementOne([3, 4, 1], M_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux440, [1,1,3,4])
**VARIABLES**
DISCRETE aux441 #ElementOne([3, 4, 1, 2], M_00002_00003)
{1..4}
DISCRETE aux442 #ElementOne([3, 4, 1, 2], M_00002_00004)
{1..4}
DISCRETE aux443 #ElementOne([3, 4, 1, 2], M_00002_00001)
{1..4}
DISCRETE aux444 #ElementOne([3, 4, 1, 2], M_00002_00002)
{1..4}
DISCRETE aux445 #ElementOne([4, 3, 1, 2], M_00003_00003)
{1..4}
DISCRETE aux446 #ElementOne([4, 3, 1, 2], M_00003_00004)
{1..4}
DISCRETE aux447 #ElementOne([4, 3, 1, 2], M_00003_00002)
{1..4}
DISCRETE aux448 #ElementOne([4, 3, 1, 2], M_00003_00001)
{1..4}
DISCRETE aux449 #ElementOne([4, 3, 1, 2], M_00004_00003)
{1..4}
DISCRETE aux450 #ElementOne([4, 3, 1, 2], M_00004_00004)
{1..4}
DISCRETE aux451 #ElementOne([4, 3, 1, 2], M_00004_00002)
{1..4}
DISCRETE aux452 #ElementOne([4, 3, 1, 2], M_00004_00001)
{1..4}
DISCRETE aux453 #ElementOne([4, 3, 1, 2], M_00002_00003)
{1..4}
DISCRETE aux454 #ElementOne([4, 3, 1, 2], M_00002_00004)
{1..4}
DISCRETE aux455 #ElementOne([4, 3, 1, 2], M_00002_00002)
{1..4}
DISCRETE aux456 #ElementOne([4, 3, 1, 2], M_00002_00001)
{1..4}
DISCRETE aux457 #ElementOne([4, 3, 1, 2], M_00001_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux457, [1,2,4,4])
**VARIABLES**
DISCRETE aux458 #ElementOne([4, 3, 1, 2], M_00001_00004)
{1..4}
DISCRETE aux459 #ElementOne([4, 3, 1], M_00001_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux459, [1,1,3,4])
**VARIABLES**
**TUPLELIST**
rack 4 4
1 2 3 4 
1 2 3 4 
1 2 3 4 
1 2 3 4 
**VARIABLES**
ALIAS rack[4,4]=[[1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]]
**TUPLELIST**
perms 24 4
1 2 3 4 
1 2 4 3 
1 4 3 2 
1 4 2 3 
1 3 4 2 
1 3 2 4 
4 2 3 1 
4 2 1 3 
4 1 3 2 
4 1 2 3 
4 3 1 2 
4 3 2 1 
2 4 3 1 
2 4 1 3 
2 1 3 4 
2 1 4 3 
2 3 1 4 
2 3 4 1 
3 2 4 1 
3 2 1 4 
3 1 4 2 
3 1 2 4 
3 4 1 2 
3 4 2 1 
**VARIABLES**
ALIAS perms[24,4]=[[1, 2, 3, 4], [1, 2, 4, 3], [1, 4, 3, 2], [1, 4, 2, 3], [1, 3, 4, 2], [1, 3, 2, 4], [4, 2, 3, 1], [4, 2, 1, 3], [4, 1, 3, 2], [4, 1, 2, 3], [4, 3, 1, 2], [4, 3, 2, 1], [2, 4, 3, 1], [2, 4, 1, 3], [2, 1, 3, 4], [2, 1, 4, 3], [2, 3, 1, 4], [2, 3, 4, 1], [3, 2, 4, 1], [3, 2, 1, 4], [3, 1, 4, 2], [3, 1, 2, 4], [3, 4, 1, 2], [3, 4, 2, 1]]
**TUPLELIST**
inverses 24 4
1 2 3 4 
1 2 4 3 
1 4 3 2 
1 3 4 2 
1 4 2 3 
1 3 2 4 
4 2 3 1 
3 2 4 1 
2 4 3 1 
2 3 4 1 
3 4 2 1 
4 3 2 1 
4 1 3 2 
3 1 4 2 
2 1 3 4 
2 1 4 3 
3 1 2 4 
4 1 2 3 
4 2 1 3 
3 2 1 4 
2 4 1 3 
2 3 1 4 
3 4 1 2 
4 3 1 2 
**VARIABLES**
ALIAS inverses[24,4]=[[1, 2, 3, 4], [1, 2, 4, 3], [1, 4, 3, 2], [1, 3, 4, 2], [1, 4, 2, 3], [1, 3, 2, 4], [4, 2, 3, 1], [3, 2, 4, 1], [2, 4, 3, 1], [2, 3, 4, 1], [3, 4, 2, 1], [4, 3, 2, 1], [4, 1, 3, 2], [3, 1, 4, 2], [2, 1, 3, 4], [2, 1, 4, 3], [3, 1, 2, 4], [4, 1, 2, 3], [4, 2, 1, 3], [3, 2, 1, 4], [2, 4, 1, 3], [2, 3, 1, 4], [3, 4, 1, 2], [4, 3, 1, 2]]
**SEARCH**
PRINT[[M_00001_00001],[M_00001_00002],[M_00001_00003],[M_00001_00004],[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004]]
VARORDER STATIC [M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004]
**CONSTRAINTS**
watchelement_one([1, 2, 3], M_00001_00002, aux100)
watchelement_one([1, 2, 3, 4], M_00001_00003, aux101)
watchelement_one([1, 2, 3, 4], M_00001_00004, aux102)
watchelement_one([1, 2, 3, 4], M_00002_00001, aux103)
watchelement_one([1, 2, 3, 4], M_00002_00002, aux104)
watchelement_one([1, 2, 3, 4], M_00002_00003, aux105)
watchelement_one([1, 2, 3, 4], M_00002_00004, aux106)
watchelement_one([1, 2, 3, 4], M_00003_00001, aux107)
watchelement_one([1, 2, 3, 4], M_00003_00002, aux108)
watchelement_one([1, 2, 3, 4], M_00003_00003, aux109)
watchelement_one([1, 2, 3, 4], M_00003_00004, aux110)
watchelement_one([1, 2, 3, 4], M_00004_00001, aux111)
watchelement_one([1, 2, 3, 4], M_00004_00002, aux112)
watchelement_one([1, 2, 3, 4], M_00004_00003, aux113)
watchelement_one([1, 2, 3, 4], M_00004_00004, aux114)
watchelement_one([1, 2, 4], M_00001_00002, aux115)
watchelement_one([1, 2, 4, 3], M_00001_00004, aux116)
watchelement_one([1, 2, 4, 3], M_00001_00003, aux117)
watchelement_one([1, 2, 4, 3], M_00002_00001, aux118)
watchelement_one([1, 2, 4, 3], M_00002_00002, aux119)
watchelement_one([1, 2, 4, 3], M_00002_00004, aux120)
watchelement_one([1, 2, 4, 3], M_00002_00003, aux121)
watchelement_one([1, 2, 4, 3], M_00004_00001, aux122)
watchelement_one([1, 2, 4, 3], M_00004_00002, aux123)
watchelement_one([1, 2, 4, 3], M_00004_00004, aux124)
watchelement_one([1, 2, 4, 3], M_00004_00003, aux125)
watchelement_one([1, 2, 4, 3], M_00003_00001, aux126)
watchelement_one([1, 2, 4, 3], M_00003_00002, aux127)
watchelement_one([1, 2, 4, 3], M_00003_00004, aux128)
watchelement_one([1, 2, 4, 3], M_00003_00003, aux129)
watchelement_one([1, 4, 3, 2], M_00001_00004, aux130)
watchelement_one([1, 4, 3, 2], M_00001_00003, aux131)
watchelement_one([1, 4, 3], M_00001_00002, aux132)
watchelement_one([1, 4, 3, 2], M_00004_00001, aux133)
watchelement_one([1, 4, 3, 2], M_00004_00004, aux134)
watchelement_one([1, 4, 3, 2], M_00004_00003, aux135)
watchelement_one([1, 4, 3, 2], M_00004_00002, aux136)
watchelement_one([1, 4, 3, 2], M_00003_00001, aux137)
watchelement_one([1, 4, 3, 2], M_00003_00004, aux138)
watchelement_one([1, 4, 3, 2], M_00003_00003, aux139)
watchelement_one([1, 4, 3, 2], M_00003_00002, aux140)
watchelement_one([1, 4, 3, 2], M_00002_00001, aux141)
watchelement_one([1, 4, 3, 2], M_00002_00004, aux142)
watchelement_one([1, 4, 3, 2], M_00002_00003, aux143)
watchelement_one([1, 4, 3, 2], M_00002_00002, aux144)
watchelement_one([1, 3, 4, 2], M_00001_00004, aux145)
watchelement_one([1, 3, 4], M_00001_00002, aux146)
watchelement_one([1, 3, 4, 2], M_00001_00003, aux147)
watchelement_one([1, 3, 4, 2], M_00004_00001, aux148)
watchelement_one([1, 3, 4, 2], M_00004_00004, aux149)
watchelement_one([1, 3, 4, 2], M_00004_00002, aux150)
watchelement_one([1, 3, 4, 2], M_00004_00003, aux151)
watchelement_one([1, 3, 4, 2], M_00002_00001, aux152)
watchelement_one([1, 3, 4, 2], M_00002_00004, aux153)
watchelement_one([1, 3, 4, 2], M_00002_00002, aux154)
watchelement_one([1, 3, 4, 2], M_00002_00003, aux155)
watchelement_one([1, 3, 4, 2], M_00003_00001, aux156)
watchelement_one([1, 3, 4, 2], M_00003_00004, aux157)
watchelement_one([1, 3, 4, 2], M_00003_00002, aux158)
watchelement_one([1, 3, 4, 2], M_00003_00003, aux159)
watchelement_one([1, 4, 2, 3], M_00001_00003, aux160)
watchelement_one([1, 4, 2, 3], M_00001_00004, aux161)
watchelement_one([1, 4, 2], M_00001_00002, aux162)
watchelement_one([1, 4, 2, 3], M_00003_00001, aux163)
watchelement_one([1, 4, 2, 3], M_00003_00003, aux164)
watchelement_one([1, 4, 2, 3], M_00003_00004, aux165)
watchelement_one([1, 4, 2, 3], M_00003_00002, aux166)
watchelement_one([1, 4, 2, 3], M_00004_00001, aux167)
watchelement_one([1, 4, 2, 3], M_00004_00003, aux168)
watchelement_one([1, 4, 2, 3], M_00004_00004, aux169)
watchelement_one([1, 4, 2, 3], M_00004_00002, aux170)
watchelement_one([1, 4, 2, 3], M_00002_00001, aux171)
watchelement_one([1, 4, 2, 3], M_00002_00003, aux172)
watchelement_one([1, 4, 2, 3], M_00002_00004, aux173)
watchelement_one([1, 4, 2, 3], M_00002_00002, aux174)
watchelement_one([1, 3, 2, 4], M_00001_00003, aux175)
watchelement_one([1, 3, 2], M_00001_00002, aux176)
watchelement_one([1, 3, 2, 4], M_00001_00004, aux177)
watchelement_one([1, 3, 2, 4], M_00003_00001, aux178)
watchelement_one([1, 3, 2, 4], M_00003_00003, aux179)
watchelement_one([1, 3, 2, 4], M_00003_00002, aux180)
watchelement_one([1, 3, 2, 4], M_00003_00004, aux181)
watchelement_one([1, 3, 2, 4], M_00002_00001, aux182)
watchelement_one([1, 3, 2, 4], M_00002_00003, aux183)
watchelement_one([1, 3, 2, 4], M_00002_00002, aux184)
watchelement_one([1, 3, 2, 4], M_00002_00004, aux185)
watchelement_one([1, 3, 2, 4], M_00004_00001, aux186)
watchelement_one([1, 3, 2, 4], M_00004_00003, aux187)
watchelement_one([1, 3, 2, 4], M_00004_00002, aux188)
watchelement_one([1, 3, 2, 4], M_00004_00004, aux189)
watchelement_one([4, 2, 3, 1], M_00004_00004, aux190)
watchelement_one([4, 2, 3, 1], M_00004_00002, aux191)
watchelement_one([4, 2, 3, 1], M_00004_00003, aux192)
watchelement_one([4, 2, 3, 1], M_00004_00001, aux193)
watchelement_one([4, 2, 3, 1], M_00002_00004, aux194)
watchelement_one([4, 2, 3, 1], M_00002_00002, aux195)
watchelement_one([4, 2, 3, 1], M_00002_00003, aux196)
watchelement_one([4, 2, 3, 1], M_00002_00001, aux197)
watchelement_one([4, 2, 3, 1], M_00003_00004, aux198)
watchelement_one([4, 2, 3, 1], M_00003_00002, aux199)
watchelement_one([4, 2, 3, 1], M_00003_00003, aux200)
watchelement_one([4, 2, 3, 1], M_00003_00001, aux201)
watchelement_one([4, 2, 3, 1], M_00001_00004, aux202)
watchelement_one([4, 2, 3], M_00001_00002, aux203)
watchelement_one([4, 2, 3, 1], M_00001_00003, aux204)
watchelement_one([3, 2, 4, 1], M_00004_00004, aux205)
watchelement_one([3, 2, 4, 1], M_00004_00002, aux206)
watchelement_one([3, 2, 4, 1], M_00004_00001, aux207)
watchelement_one([3, 2, 4, 1], M_00004_00003, aux208)
watchelement_one([3, 2, 4, 1], M_00002_00004, aux209)
watchelement_one([3, 2, 4, 1], M_00002_00002, aux210)
watchelement_one([3, 2, 4, 1], M_00002_00001, aux211)
watchelement_one([3, 2, 4, 1], M_00002_00003, aux212)
watchelement_one([3, 2, 4, 1], M_00001_00004, aux213)
watchelement_one([3, 2, 4], M_00001_00002, aux214)
watchelement_one([3, 2, 4, 1], M_00001_00003, aux215)
watchelement_one([3, 2, 4, 1], M_00003_00004, aux216)
watchelement_one([3, 2, 4, 1], M_00003_00002, aux217)
watchelement_one([3, 2, 4, 1], M_00003_00001, aux218)
watchelement_one([3, 2, 4, 1], M_00003_00003, aux219)
watchelement_one([2, 4, 3, 1], M_00004_00004, aux220)
watchelement_one([2, 4, 3, 1], M_00004_00001, aux221)
watchelement_one([2, 4, 3, 1], M_00004_00003, aux222)
watchelement_one([2, 4, 3, 1], M_00004_00002, aux223)
watchelement_one([2, 4, 3, 1], M_00001_00004, aux224)
watchelement_one([2, 4, 3, 1], M_00001_00003, aux225)
watchelement_one([2, 4, 3], M_00001_00002, aux226)
watchelement_one([2, 4, 3, 1], M_00003_00004, aux227)
watchelement_one([2, 4, 3, 1], M_00003_00001, aux228)
watchelement_one([2, 4, 3, 1], M_00003_00003, aux229)
watchelement_one([2, 4, 3, 1], M_00003_00002, aux230)
watchelement_one([2, 4, 3, 1], M_00002_00004, aux231)
watchelement_one([2, 4, 3, 1], M_00002_00001, aux232)
watchelement_one([2, 4, 3, 1], M_00002_00003, aux233)
watchelement_one([2, 4, 3, 1], M_00002_00002, aux234)
watchelement_one([2, 3, 4, 1], M_00004_00004, aux235)
watchelement_one([2, 3, 4, 1], M_00004_00001, aux236)
watchelement_one([2, 3, 4, 1], M_00004_00002, aux237)
watchelement_one([2, 3, 4, 1], M_00004_00003, aux238)
watchelement_one([2, 3, 4, 1], M_00001_00004, aux239)
watchelement_one([2, 3, 4], M_00001_00002, aux240)
watchelement_one([2, 3, 4, 1], M_00001_00003, aux241)
watchelement_one([2, 3, 4, 1], M_00002_00004, aux242)
watchelement_one([2, 3, 4, 1], M_00002_00001, aux243)
watchelement_one([2, 3, 4, 1], M_00002_00002, aux244)
watchelement_one([2, 3, 4, 1], M_00002_00003, aux245)
watchelement_one([2, 3, 4, 1], M_00003_00004, aux246)
watchelement_one([2, 3, 4, 1], M_00003_00001, aux247)
watchelement_one([2, 3, 4, 1], M_00003_00002, aux248)
watchelement_one([2, 3, 4, 1], M_00003_00003, aux249)
watchelement_one([3, 4, 2, 1], M_00004_00004, aux250)
watchelement_one([3, 4, 2, 1], M_00004_00003, aux251)
watchelement_one([3, 4, 2, 1], M_00004_00001, aux252)
watchelement_one([3, 4, 2, 1], M_00004_00002, aux253)
watchelement_one([3, 4, 2, 1], M_00003_00004, aux254)
watchelement_one([3, 4, 2, 1], M_00003_00003, aux255)
watchelement_one([3, 4, 2, 1], M_00003_00001, aux256)
watchelement_one([3, 4, 2, 1], M_00003_00002, aux257)
watchelement_one([3, 4, 2, 1], M_00001_00004, aux258)
watchelement_one([3, 4, 2, 1], M_00001_00003, aux259)
watchelement_one([3, 4, 2], M_00001_00002, aux260)
watchelement_one([3, 4, 2, 1], M_00002_00004, aux261)
watchelement_one([3, 4, 2, 1], M_00002_00003, aux262)
watchelement_one([3, 4, 2, 1], M_00002_00001, aux263)
watchelement_one([3, 4, 2, 1], M_00002_00002, aux264)
watchelement_one([4, 3, 2, 1], M_00004_00004, aux265)
watchelement_one([4, 3, 2, 1], M_00004_00003, aux266)
watchelement_one([4, 3, 2, 1], M_00004_00002, aux267)
watchelement_one([4, 3, 2, 1], M_00004_00001, aux268)
watchelement_one([4, 3, 2, 1], M_00003_00004, aux269)
watchelement_one([4, 3, 2, 1], M_00003_00003, aux270)
watchelement_one([4, 3, 2, 1], M_00003_00002, aux271)
watchelement_one([4, 3, 2, 1], M_00003_00001, aux272)
watchelement_one([4, 3, 2, 1], M_00002_00004, aux273)
watchelement_one([4, 3, 2, 1], M_00002_00003, aux274)
watchelement_one([4, 3, 2, 1], M_00002_00002, aux275)
watchelement_one([4, 3, 2, 1], M_00002_00001, aux276)
watchelement_one([4, 3, 2, 1], M_00001_00004, aux277)
watchelement_one([4, 3, 2, 1], M_00001_00003, aux278)
watchelement_one([4, 3, 2], M_00001_00002, aux279)
watchelement_one([4, 1, 3, 2], M_00002_00002, aux280)
watchelement_one([4, 1, 3, 2], M_00002_00004, aux281)
watchelement_one([4, 1, 3, 2], M_00002_00003, aux282)
watchelement_one([4, 1, 3, 2], M_00002_00001, aux283)
watchelement_one([4, 1, 3, 2], M_00004_00002, aux284)
watchelement_one([4, 1, 3, 2], M_00004_00004, aux285)
watchelement_one([4, 1, 3, 2], M_00004_00003, aux286)
watchelement_one([4, 1, 3, 2], M_00004_00001, aux287)
watchelement_one([4, 1, 3, 2], M_00003_00002, aux288)
watchelement_one([4, 1, 3, 2], M_00003_00004, aux289)
watchelement_one([4, 1, 3, 2], M_00003_00003, aux290)
watchelement_one([4, 1, 3, 2], M_00003_00001, aux291)
watchelement_one([4, 1, 3], M_00001_00002, aux292)
watchelement_one([4, 1, 3, 2], M_00001_00004, aux293)
watchelement_one([4, 1, 3, 2], M_00001_00003, aux294)
watchelement_one([3, 1, 4, 2], M_00002_00002, aux295)
watchelement_one([3, 1, 4, 2], M_00002_00004, aux296)
watchelement_one([3, 1, 4, 2], M_00002_00001, aux297)
watchelement_one([3, 1, 4, 2], M_00002_00003, aux298)
watchelement_one([3, 1, 4, 2], M_00004_00002, aux299)
watchelement_one([3, 1, 4, 2], M_00004_00004, aux300)
watchelement_one([3, 1, 4, 2], M_00004_00001, aux301)
watchelement_one([3, 1, 4, 2], M_00004_00003, aux302)
watchelement_one([3, 1, 4], M_00001_00002, aux303)
watchelement_one([3, 1, 4, 2], M_00001_00004, aux304)
watchelement_one([3, 1, 4, 2], M_00001_00003, aux305)
watchelement_one([3, 1, 4, 2], M_00003_00002, aux306)
watchelement_one([3, 1, 4, 2], M_00003_00004, aux307)
watchelement_one([3, 1, 4, 2], M_00003_00001, aux308)
watchelement_one([3, 1, 4, 2], M_00003_00003, aux309)
watchelement_one([2, 1, 3, 4], M_00002_00002, aux310)
watchelement_one([2, 1, 3, 4], M_00002_00001, aux311)
watchelement_one([2, 1, 3, 4], M_00002_00003, aux312)
watchelement_one([2, 1, 3, 4], M_00002_00004, aux313)
watchelement_one([2, 1, 3], M_00001_00002, aux314)
watchelement_one([2, 1, 3, 4], M_00001_00003, aux315)
watchelement_one([2, 1, 3, 4], M_00001_00004, aux316)
watchelement_one([2, 1, 3, 4], M_00003_00002, aux317)
watchelement_one([2, 1, 3, 4], M_00003_00001, aux318)
watchelement_one([2, 1, 3, 4], M_00003_00003, aux319)
watchelement_one([2, 1, 3, 4], M_00003_00004, aux320)
watchelement_one([2, 1, 3, 4], M_00004_00002, aux321)
watchelement_one([2, 1, 3, 4], M_00004_00001, aux322)
watchelement_one([2, 1, 3, 4], M_00004_00003, aux323)
watchelement_one([2, 1, 3, 4], M_00004_00004, aux324)
watchelement_one([2, 1, 4, 3], M_00002_00002, aux325)
watchelement_one([2, 1, 4, 3], M_00002_00001, aux326)
watchelement_one([2, 1, 4, 3], M_00002_00004, aux327)
watchelement_one([2, 1, 4, 3], M_00002_00003, aux328)
watchelement_one([2, 1, 4], M_00001_00002, aux329)
watchelement_one([2, 1, 4, 3], M_00001_00004, aux330)
watchelement_one([2, 1, 4, 3], M_00001_00003, aux331)
watchelement_one([2, 1, 4, 3], M_00004_00002, aux332)
watchelement_one([2, 1, 4, 3], M_00004_00001, aux333)
watchelement_one([2, 1, 4, 3], M_00004_00004, aux334)
watchelement_one([2, 1, 4, 3], M_00004_00003, aux335)
watchelement_one([2, 1, 4, 3], M_00003_00002, aux336)
watchelement_one([2, 1, 4, 3], M_00003_00001, aux337)
watchelement_one([2, 1, 4, 3], M_00003_00004, aux338)
watchelement_one([2, 1, 4, 3], M_00003_00003, aux339)
watchelement_one([3, 1, 2, 4], M_00002_00002, aux340)
watchelement_one([3, 1, 2, 4], M_00002_00003, aux341)
watchelement_one([3, 1, 2, 4], M_00002_00001, aux342)
watchelement_one([3, 1, 2, 4], M_00002_00004, aux343)
watchelement_one([3, 1, 2, 4], M_00003_00002, aux344)
watchelement_one([3, 1, 2, 4], M_00003_00003, aux345)
watchelement_one([3, 1, 2, 4], M_00003_00001, aux346)
watchelement_one([3, 1, 2, 4], M_00003_00004, aux347)
watchelement_one([3, 1, 2], M_00001_00002, aux348)
watchelement_one([3, 1, 2, 4], M_00001_00003, aux349)
watchelement_one([3, 1, 2, 4], M_00001_00004, aux350)
watchelement_one([3, 1, 2, 4], M_00004_00002, aux351)
watchelement_one([3, 1, 2, 4], M_00004_00003, aux352)
watchelement_one([3, 1, 2, 4], M_00004_00001, aux353)
watchelement_one([3, 1, 2, 4], M_00004_00004, aux354)
watchelement_one([4, 1, 2, 3], M_00002_00002, aux355)
watchelement_one([4, 1, 2, 3], M_00002_00003, aux356)
watchelement_one([4, 1, 2, 3], M_00002_00004, aux357)
watchelement_one([4, 1, 2, 3], M_00002_00001, aux358)
watchelement_one([4, 1, 2, 3], M_00003_00002, aux359)
watchelement_one([4, 1, 2, 3], M_00003_00003, aux360)
watchelement_one([4, 1, 2, 3], M_00003_00004, aux361)
watchelement_one([4, 1, 2, 3], M_00003_00001, aux362)
watchelement_one([4, 1, 2, 3], M_00004_00002, aux363)
watchelement_one([4, 1, 2, 3], M_00004_00003, aux364)
watchelement_one([4, 1, 2, 3], M_00004_00004, aux365)
watchelement_one([4, 1, 2, 3], M_00004_00001, aux366)
watchelement_one([4, 1, 2], M_00001_00002, aux367)
watchelement_one([4, 1, 2, 3], M_00001_00003, aux368)
watchelement_one([4, 1, 2, 3], M_00001_00004, aux369)
watchelement_one([4, 2, 1, 3], M_00003_00003, aux370)
watchelement_one([4, 2, 1, 3], M_00003_00002, aux371)
watchelement_one([4, 2, 1, 3], M_00003_00004, aux372)
watchelement_one([4, 2, 1, 3], M_00003_00001, aux373)
watchelement_one([4, 2, 1, 3], M_00002_00003, aux374)
watchelement_one([4, 2, 1, 3], M_00002_00002, aux375)
watchelement_one([4, 2, 1, 3], M_00002_00004, aux376)
watchelement_one([4, 2, 1, 3], M_00002_00001, aux377)
watchelement_one([4, 2, 1, 3], M_00004_00003, aux378)
watchelement_one([4, 2, 1, 3], M_00004_00002, aux379)
watchelement_one([4, 2, 1, 3], M_00004_00004, aux380)
watchelement_one([4, 2, 1, 3], M_00004_00001, aux381)
watchelement_one([4, 2, 1, 3], M_00001_00003, aux382)
watchelement_one([4, 2, 1], M_00001_00002, aux383)
watchelement_one([4, 2, 1, 3], M_00001_00004, aux384)
watchelement_one([3, 2, 1, 4], M_00003_00003, aux385)
watchelement_one([3, 2, 1, 4], M_00003_00002, aux386)
watchelement_one([3, 2, 1, 4], M_00003_00001, aux387)
watchelement_one([3, 2, 1, 4], M_00003_00004, aux388)
watchelement_one([3, 2, 1, 4], M_00002_00003, aux389)
watchelement_one([3, 2, 1, 4], M_00002_00002, aux390)
watchelement_one([3, 2, 1, 4], M_00002_00001, aux391)
watchelement_one([3, 2, 1, 4], M_00002_00004, aux392)
watchelement_one([3, 2, 1, 4], M_00001_00003, aux393)
watchelement_one([3, 2, 1], M_00001_00002, aux394)
watchelement_one([3, 2, 1, 4], M_00001_00004, aux395)
watchelement_one([3, 2, 1, 4], M_00004_00003, aux396)
watchelement_one([3, 2, 1, 4], M_00004_00002, aux397)
watchelement_one([3, 2, 1, 4], M_00004_00001, aux398)
watchelement_one([3, 2, 1, 4], M_00004_00004, aux399)
watchelement_one([2, 4, 1, 3], M_00003_00003, aux400)
watchelement_one([2, 4, 1, 3], M_00003_00001, aux401)
watchelement_one([2, 4, 1, 3], M_00003_00004, aux402)
watchelement_one([2, 4, 1, 3], M_00003_00002, aux403)
watchelement_one([2, 4, 1, 3], M_00001_00003, aux404)
watchelement_one([2, 4, 1, 3], M_00001_00004, aux405)
watchelement_one([2, 4, 1], M_00001_00002, aux406)
watchelement_one([2, 4, 1, 3], M_00004_00003, aux407)
watchelement_one([2, 4, 1, 3], M_00004_00001, aux408)
watchelement_one([2, 4, 1, 3], M_00004_00004, aux409)
watchelement_one([2, 4, 1, 3], M_00004_00002, aux410)
watchelement_one([2, 4, 1, 3], M_00002_00003, aux411)
watchelement_one([2, 4, 1, 3], M_00002_00001, aux412)
watchelement_one([2, 4, 1, 3], M_00002_00004, aux413)
watchelement_one([2, 4, 1, 3], M_00002_00002, aux414)
watchelement_one([2, 3, 1, 4], M_00003_00003, aux415)
watchelement_one([2, 3, 1, 4], M_00003_00001, aux416)
watchelement_one([2, 3, 1, 4], M_00003_00002, aux417)
watchelement_one([2, 3, 1, 4], M_00003_00004, aux418)
watchelement_one([2, 3, 1, 4], M_00001_00003, aux419)
watchelement_one([2, 3, 1], M_00001_00002, aux420)
watchelement_one([2, 3, 1, 4], M_00001_00004, aux421)
watchelement_one([2, 3, 1, 4], M_00002_00003, aux422)
watchelement_one([2, 3, 1, 4], M_00002_00001, aux423)
watchelement_one([2, 3, 1, 4], M_00002_00002, aux424)
watchelement_one([2, 3, 1, 4], M_00002_00004, aux425)
watchelement_one([2, 3, 1, 4], M_00004_00003, aux426)
watchelement_one([2, 3, 1, 4], M_00004_00001, aux427)
watchelement_one([2, 3, 1, 4], M_00004_00002, aux428)
watchelement_one([2, 3, 1, 4], M_00004_00004, aux429)
watchelement_one([3, 4, 1, 2], M_00003_00003, aux430)
watchelement_one([3, 4, 1, 2], M_00003_00004, aux431)
watchelement_one([3, 4, 1, 2], M_00003_00001, aux432)
watchelement_one([3, 4, 1, 2], M_00003_00002, aux433)
watchelement_one([3, 4, 1, 2], M_00004_00003, aux434)
watchelement_one([3, 4, 1, 2], M_00004_00004, aux435)
watchelement_one([3, 4, 1, 2], M_00004_00001, aux436)
watchelement_one([3, 4, 1, 2], M_00004_00002, aux437)
watchelement_one([3, 4, 1, 2], M_00001_00003, aux438)
watchelement_one([3, 4, 1, 2], M_00001_00004, aux439)
watchelement_one([3, 4, 1], M_00001_00002, aux440)
watchelement_one([3, 4, 1, 2], M_00002_00003, aux441)
watchelement_one([3, 4, 1, 2], M_00002_00004, aux442)
watchelement_one([3, 4, 1, 2], M_00002_00001, aux443)
watchelement_one([3, 4, 1, 2], M_00002_00002, aux444)
watchelement_one([4, 3, 1, 2], M_00003_00003, aux445)
watchelement_one([4, 3, 1, 2], M_00003_00004, aux446)
watchelement_one([4, 3, 1, 2], M_00003_00002, aux447)
watchelement_one([4, 3, 1, 2], M_00003_00001, aux448)
watchelement_one([4, 3, 1, 2], M_00004_00003, aux449)
watchelement_one([4, 3, 1, 2], M_00004_00004, aux450)
watchelement_one([4, 3, 1, 2], M_00004_00002, aux451)
watchelement_one([4, 3, 1, 2], M_00004_00001, aux452)
watchelement_one([4, 3, 1, 2], M_00002_00003, aux453)
watchelement_one([4, 3, 1, 2], M_00002_00004, aux454)
watchelement_one([4, 3, 1, 2], M_00002_00002, aux455)
watchelement_one([4, 3, 1, 2], M_00002_00001, aux456)
watchelement_one([4, 3, 1, 2], M_00001_00003, aux457)
watchelement_one([4, 3, 1, 2], M_00001_00004, aux458)
watchelement_one([4, 3, 1], M_00001_00002, aux459)
watchelement_one([2, 4], M_00001_00001, aux0)
watchelement_one([2, 1], M_00001_00001, aux1)
watchelement_one([2, 3], M_00001_00001, aux2)
watchelement_one([3, 1], M_00001_00001, aux3)
watchelement_one([3, 2], M_00001_00001, aux4)
watchelement_one([3, 4], M_00001_00001, aux5)
watchelement_one([4, 2], M_00001_00001, aux6)
watchelement_one([4, 3], M_00001_00001, aux7)
watchelement_one([4, 1], M_00001_00001, aux8)
watchelement_one([1, 4], M_00001_00001, aux9)
watchelement_one([1, 3], M_00001_00001, aux10)
watchelement_one([1, 2], M_00001_00001, aux11)
gacalldiff([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004])
gacalldiff([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004])
gacalldiff([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004])
gacalldiff([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004])
watchelement_one([1, 2, 3, 4, 1, 2], aux84, M_00001_00001)
watchelement_one([1, 2, 3, 4, 1, 2, 3], aux85, M_00001_00002)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4], aux86, M_00001_00003)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4], aux87, M_00001_00004)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2], aux46, M_00001_00001)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux52, M_00001_00002)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], aux41, M_00001_00003)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], aux40, M_00001_00004)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2], aux45, M_00001_00001)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux42, M_00001_00002)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], aux53, M_00001_00003)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux39, M_00001_00004)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2], aux44, M_00001_00001)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux43, M_00001_00002)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux47, M_00001_00003)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], aux51, M_00001_00004)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], aux48, M_00002_00001)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux19, M_00002_00002)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux18, M_00002_00003)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux17, M_00002_00004)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux88, M_00002_00001)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], aux89, M_00002_00002)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux90, M_00002_00003)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux91, M_00002_00004)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux13, M_00002_00001)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux14, M_00002_00002)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], aux50, M_00002_00003)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux20, M_00002_00004)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux12, M_00002_00001)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux15, M_00002_00002)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux16, M_00002_00003)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], aux49, M_00002_00004)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], aux55, M_00003_00001)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux31, M_00003_00002)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux30, M_00003_00003)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux34, M_00003_00004)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux37, M_00003_00001)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], aux54, M_00003_00002)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux33, M_00003_00003)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux32, M_00003_00004)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux92, M_00003_00001)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux93, M_00003_00002)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], aux94, M_00003_00003)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux95, M_00003_00004)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux36, M_00003_00001)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux35, M_00003_00002)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux38, M_00003_00003)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], aux56, M_00003_00004)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], aux58, M_00004_00001)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux21, M_00004_00002)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux22, M_00004_00003)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux23, M_00004_00004)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux29, M_00004_00001)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], aux57, M_00004_00002)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux25, M_00004_00003)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux24, M_00004_00004)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux28, M_00004_00001)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux27, M_00004_00002)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], aux59, M_00004_00003)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux26, M_00004_00004)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux96, M_00004_00001)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux97, M_00004_00002)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3], aux98, M_00004_00003)
watchelement_one([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], aux99, M_00004_00004)
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux11, aux100, aux101, aux102, aux103, aux104, aux105, aux106, aux107, aux108, aux109, aux110, aux111, aux112, aux113, aux114])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux11, aux115, aux116, aux117, aux118, aux119, aux120, aux121, aux122, aux123, aux124, aux125, aux126, aux127, aux128, aux129])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux9, aux130, aux131, aux132, aux133, aux134, aux135, aux136, aux137, aux138, aux139, aux140, aux141, aux142, aux143, aux144])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux10, aux145, aux146, aux147, aux148, aux149, aux150, aux151, aux152, aux153, aux154, aux155, aux156, aux157, aux158, aux159])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux9, aux160, aux161, aux162, aux163, aux164, aux165, aux166, aux167, aux168, aux169, aux170, aux171, aux172, aux173, aux174])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux10, aux175, aux176, aux177, aux178, aux179, aux180, aux181, aux182, aux183, aux184, aux185, aux186, aux187, aux188, aux189])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux190, aux191, aux192, aux193, aux194, aux195, aux196, aux197, aux198, aux199, aux200, aux201, aux202, aux203, aux204, aux6])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux205, aux206, aux207, aux208, aux209, aux210, aux211, aux212, aux213, aux214, aux4, aux215, aux216, aux217, aux218, aux219])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux220, aux221, aux222, aux223, aux224, aux0, aux225, aux226, aux227, aux228, aux229, aux230, aux231, aux232, aux233, aux234])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux235, aux236, aux237, aux238, aux239, aux2, aux240, aux241, aux242, aux243, aux244, aux245, aux246, aux247, aux248, aux249])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux250, aux251, aux252, aux253, aux254, aux255, aux256, aux257, aux258, aux259, aux5, aux260, aux261, aux262, aux263, aux264])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux265, aux266, aux267, aux268, aux269, aux270, aux271, aux272, aux273, aux274, aux275, aux276, aux277, aux278, aux279, aux7])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux280, aux281, aux282, aux283, aux284, aux285, aux286, aux287, aux288, aux289, aux290, aux291, aux292, aux293, aux294, aux8])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux295, aux296, aux297, aux298, aux299, aux300, aux301, aux302, aux303, aux304, aux3, aux305, aux306, aux307, aux308, aux309])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux310, aux311, aux312, aux313, aux314, aux1, aux315, aux316, aux317, aux318, aux319, aux320, aux321, aux322, aux323, aux324])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux325, aux326, aux327, aux328, aux329, aux1, aux330, aux331, aux332, aux333, aux334, aux335, aux336, aux337, aux338, aux339])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux340, aux341, aux342, aux343, aux344, aux345, aux346, aux347, aux348, aux349, aux3, aux350, aux351, aux352, aux353, aux354])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux355, aux356, aux357, aux358, aux359, aux360, aux361, aux362, aux363, aux364, aux365, aux366, aux367, aux368, aux369, aux8])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux370, aux371, aux372, aux373, aux374, aux375, aux376, aux377, aux378, aux379, aux380, aux381, aux382, aux383, aux384, aux6])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux385, aux386, aux387, aux388, aux389, aux390, aux391, aux392, aux393, aux394, aux4, aux395, aux396, aux397, aux398, aux399])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux400, aux401, aux402, aux403, aux404, aux0, aux405, aux406, aux407, aux408, aux409, aux410, aux411, aux412, aux413, aux414])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux415, aux416, aux417, aux418, aux419, aux2, aux420, aux421, aux422, aux423, aux424, aux425, aux426, aux427, aux428, aux429])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux430, aux431, aux432, aux433, aux434, aux435, aux436, aux437, aux438, aux439, aux5, aux440, aux441, aux442, aux443, aux444])
lexleq([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004],[aux445, aux446, aux447, aux448, aux449, aux450, aux451, aux452, aux453, aux454, aux455, aux456, aux457, aux458, aux459, aux7])
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux48, aux60)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002], aux46, aux60)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003], aux52, aux61)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux19, aux61)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux18, aux62)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux41, aux62)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux17, aux63)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux40, aux63)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux55, aux64)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux45, aux64)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux42, aux65)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux31, aux65)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux53, aux66)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux30, aux66)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux39, aux67)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux34, aux67)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux58, aux68)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002], aux44, aux68)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux43, aux69)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux21, aux69)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux47, aux70)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux22, aux70)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux51, aux71)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux23, aux71)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux37, aux72)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux13, aux72)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux54, aux73)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux14, aux73)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux50, aux74)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux33, aux74)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux32, aux75)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux20, aux75)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux29, aux76)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux12, aux76)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux57, aux77)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux15, aux77)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux25, aux78)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux16, aux78)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux49, aux79)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux24, aux79)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux28, aux80)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux36, aux80)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux27, aux81)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux35, aux81)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux59, aux82)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux38, aux82)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux56, aux83)
watchelement_one([M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003], aux26, aux83)
weightedsumleq([1,5],[-4,M_00001_00001],aux84)
weightedsumgeq([1,5],[-4,M_00001_00001],aux84)
weightedsumleq([1,4,1],[-4,M_00001_00001,M_00001_00002],aux85)
weightedsumgeq([1,4,1],[-4,M_00001_00001,M_00001_00002],aux85)
weightedsumleq([1,4,1],[-4,M_00001_00001,M_00001_00003],aux86)
weightedsumgeq([1,4,1],[-4,M_00001_00001,M_00001_00003],aux86)
weightedsumleq([1,4,1],[-4,M_00001_00001,M_00001_00004],aux87)
weightedsumgeq([1,4,1],[-4,M_00001_00001,M_00001_00004],aux87)
weightedsumleq([1,4,1],[M_00002_00001,M_00002_00002,-4],aux88)
weightedsumgeq([1,4,1],[M_00002_00001,M_00002_00002,-4],aux88)
weightedsumleq([5,1],[M_00002_00002,-4],aux89)
weightedsumgeq([5,1],[M_00002_00002,-4],aux89)
weightedsumleq([4,1,1],[M_00002_00002,M_00002_00003,-4],aux90)
weightedsumgeq([4,1,1],[M_00002_00002,M_00002_00003,-4],aux90)
weightedsumleq([4,1,1],[M_00002_00002,M_00002_00004,-4],aux91)
weightedsumgeq([4,1,1],[M_00002_00002,M_00002_00004,-4],aux91)
weightedsumleq([1,4,1],[M_00003_00001,M_00003_00003,-4],aux92)
weightedsumgeq([1,4,1],[M_00003_00001,M_00003_00003,-4],aux92)
weightedsumleq([1,4,1],[M_00003_00002,M_00003_00003,-4],aux93)
weightedsumgeq([1,4,1],[M_00003_00002,M_00003_00003,-4],aux93)
weightedsumleq([5,1],[M_00003_00003,-4],aux94)
weightedsumgeq([5,1],[M_00003_00003,-4],aux94)
weightedsumleq([4,1,1],[M_00003_00003,M_00003_00004,-4],aux95)
weightedsumgeq([4,1,1],[M_00003_00003,M_00003_00004,-4],aux95)
weightedsumleq([1,4,1],[M_00004_00001,M_00004_00004,-4],aux96)
weightedsumgeq([1,4,1],[M_00004_00001,M_00004_00004,-4],aux96)
weightedsumleq([1,4,1],[M_00004_00002,M_00004_00004,-4],aux97)
weightedsumgeq([1,4,1],[M_00004_00002,M_00004_00004,-4],aux97)
weightedsumleq([1,4,1],[M_00004_00003,M_00004_00004,-4],aux98)
weightedsumgeq([1,4,1],[M_00004_00003,M_00004_00004,-4],aux98)
weightedsumleq([5,1],[M_00004_00004,-4],aux99)
weightedsumgeq([5,1],[M_00004_00004,-4],aux99)
weightedsumleq([1,4,1],[M_00002_00001,M_00002_00004,-4],aux12)
weightedsumgeq([1,4,1],[M_00002_00001,M_00002_00004,-4],aux12)
weightedsumleq([1,4,1],[M_00002_00001,M_00002_00003,-4],aux13)
weightedsumgeq([1,4,1],[M_00002_00001,M_00002_00003,-4],aux13)
weightedsumleq([1,4,1],[M_00002_00002,M_00002_00003,-4],aux14)
weightedsumgeq([1,4,1],[M_00002_00002,M_00002_00003,-4],aux14)
weightedsumleq([1,4,1],[M_00002_00002,M_00002_00004,-4],aux15)
weightedsumgeq([1,4,1],[M_00002_00002,M_00002_00004,-4],aux15)
weightedsumleq([1,4,1],[M_00002_00003,M_00002_00004,-4],aux16)
weightedsumgeq([1,4,1],[M_00002_00003,M_00002_00004,-4],aux16)
weightedsumleq([4,1,1],[M_00002_00001,M_00002_00004,-4],aux17)
weightedsumgeq([4,1,1],[M_00002_00001,M_00002_00004,-4],aux17)
weightedsumleq([4,1,1],[M_00002_00001,M_00002_00003,-4],aux18)
weightedsumgeq([4,1,1],[M_00002_00001,M_00002_00003,-4],aux18)
weightedsumleq([4,1,1],[M_00002_00001,M_00002_00002,-4],aux19)
weightedsumgeq([4,1,1],[M_00002_00001,M_00002_00002,-4],aux19)
weightedsumleq([4,1,1],[M_00002_00003,M_00002_00004,-4],aux20)
weightedsumgeq([4,1,1],[M_00002_00003,M_00002_00004,-4],aux20)
weightedsumleq([4,1,1],[M_00004_00001,M_00004_00002,-4],aux21)
weightedsumgeq([4,1,1],[M_00004_00001,M_00004_00002,-4],aux21)
weightedsumleq([4,1,1],[M_00004_00001,M_00004_00003,-4],aux22)
weightedsumgeq([4,1,1],[M_00004_00001,M_00004_00003,-4],aux22)
weightedsumleq([4,1,1],[M_00004_00001,M_00004_00004,-4],aux23)
weightedsumgeq([4,1,1],[M_00004_00001,M_00004_00004,-4],aux23)
weightedsumleq([4,1,1],[M_00004_00002,M_00004_00004,-4],aux24)
weightedsumgeq([4,1,1],[M_00004_00002,M_00004_00004,-4],aux24)
weightedsumleq([4,1,1],[M_00004_00002,M_00004_00003,-4],aux25)
weightedsumgeq([4,1,1],[M_00004_00002,M_00004_00003,-4],aux25)
weightedsumleq([4,1,1],[M_00004_00003,M_00004_00004,-4],aux26)
weightedsumgeq([4,1,1],[M_00004_00003,M_00004_00004,-4],aux26)
weightedsumleq([1,4,1],[M_00004_00002,M_00004_00003,-4],aux27)
weightedsumgeq([1,4,1],[M_00004_00002,M_00004_00003,-4],aux27)
weightedsumleq([1,4,1],[M_00004_00001,M_00004_00003,-4],aux28)
weightedsumgeq([1,4,1],[M_00004_00001,M_00004_00003,-4],aux28)
weightedsumleq([1,4,1],[M_00004_00001,M_00004_00002,-4],aux29)
weightedsumgeq([1,4,1],[M_00004_00001,M_00004_00002,-4],aux29)
weightedsumleq([4,1,1],[M_00003_00001,M_00003_00003,-4],aux30)
weightedsumgeq([4,1,1],[M_00003_00001,M_00003_00003,-4],aux30)
weightedsumleq([4,1,1],[M_00003_00001,M_00003_00002,-4],aux31)
weightedsumgeq([4,1,1],[M_00003_00001,M_00003_00002,-4],aux31)
weightedsumleq([4,1,1],[M_00003_00002,M_00003_00004,-4],aux32)
weightedsumgeq([4,1,1],[M_00003_00002,M_00003_00004,-4],aux32)
weightedsumleq([4,1,1],[M_00003_00002,M_00003_00003,-4],aux33)
weightedsumgeq([4,1,1],[M_00003_00002,M_00003_00003,-4],aux33)
weightedsumleq([4,1,1],[M_00003_00001,M_00003_00004,-4],aux34)
weightedsumgeq([4,1,1],[M_00003_00001,M_00003_00004,-4],aux34)
weightedsumleq([1,4,1],[M_00003_00002,M_00003_00004,-4],aux35)
weightedsumgeq([1,4,1],[M_00003_00002,M_00003_00004,-4],aux35)
weightedsumleq([1,4,1],[M_00003_00001,M_00003_00004,-4],aux36)
weightedsumgeq([1,4,1],[M_00003_00001,M_00003_00004,-4],aux36)
weightedsumleq([1,4,1],[M_00003_00001,M_00003_00002,-4],aux37)
weightedsumgeq([1,4,1],[M_00003_00001,M_00003_00002,-4],aux37)
weightedsumleq([1,4,1],[M_00003_00003,M_00003_00004,-4],aux38)
weightedsumgeq([1,4,1],[M_00003_00003,M_00003_00004,-4],aux38)
weightedsumleq([1,4,1],[-4,M_00001_00003,M_00001_00004],aux39)
weightedsumgeq([1,4,1],[-4,M_00001_00003,M_00001_00004],aux39)
weightedsumleq([1,4,1],[-4,M_00001_00002,M_00001_00004],aux40)
weightedsumgeq([1,4,1],[-4,M_00001_00002,M_00001_00004],aux40)
weightedsumleq([1,4,1],[-4,M_00001_00002,M_00001_00003],aux41)
weightedsumgeq([1,4,1],[-4,M_00001_00002,M_00001_00003],aux41)
weightedsumleq([1,1,4],[-4,M_00001_00002,M_00001_00003],aux42)
weightedsumgeq([1,1,4],[-4,M_00001_00002,M_00001_00003],aux42)
weightedsumleq([1,1,4],[-4,M_00001_00002,M_00001_00004],aux43)
weightedsumgeq([1,1,4],[-4,M_00001_00002,M_00001_00004],aux43)
weightedsumleq([1,1,4],[-4,M_00001_00001,M_00001_00004],aux44)
weightedsumgeq([1,1,4],[-4,M_00001_00001,M_00001_00004],aux44)
weightedsumleq([1,1,4],[-4,M_00001_00001,M_00001_00003],aux45)
weightedsumgeq([1,1,4],[-4,M_00001_00001,M_00001_00003],aux45)
weightedsumleq([1,1,4],[-4,M_00001_00001,M_00001_00002],aux46)
weightedsumgeq([1,1,4],[-4,M_00001_00001,M_00001_00002],aux46)
weightedsumleq([1,1,4],[-4,M_00001_00003,M_00001_00004],aux47)
weightedsumgeq([1,1,4],[-4,M_00001_00003,M_00001_00004],aux47)
weightedsumleq([5,1],[M_00002_00001,-4],aux48)
weightedsumgeq([5,1],[M_00002_00001,-4],aux48)
weightedsumleq([5,1],[M_00002_00004,-4],aux49)
weightedsumgeq([5,1],[M_00002_00004,-4],aux49)
weightedsumleq([5,1],[M_00002_00003,-4],aux50)
weightedsumgeq([5,1],[M_00002_00003,-4],aux50)
weightedsumleq([1,5],[-4,M_00001_00004],aux51)
weightedsumgeq([1,5],[-4,M_00001_00004],aux51)
weightedsumleq([1,5],[-4,M_00001_00002],aux52)
weightedsumgeq([1,5],[-4,M_00001_00002],aux52)
weightedsumleq([1,5],[-4,M_00001_00003],aux53)
weightedsumgeq([1,5],[-4,M_00001_00003],aux53)
weightedsumleq([5,1],[M_00003_00002,-4],aux54)
weightedsumgeq([5,1],[M_00003_00002,-4],aux54)
weightedsumleq([5,1],[M_00003_00001,-4],aux55)
weightedsumgeq([5,1],[M_00003_00001,-4],aux55)
weightedsumleq([5,1],[M_00003_00004,-4],aux56)
weightedsumgeq([5,1],[M_00003_00004,-4],aux56)
weightedsumleq([5,1],[M_00004_00002,-4],aux57)
weightedsumgeq([5,1],[M_00004_00002,-4],aux57)
weightedsumleq([5,1],[M_00004_00001,-4],aux58)
weightedsumgeq([5,1],[M_00004_00001,-4],aux58)
weightedsumleq([5,1],[M_00004_00003,-4],aux59)
weightedsumgeq([5,1],[M_00004_00003,-4],aux59)
**EOF**
