MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 0
# CSE_active_eliminated_expressions = 0
# CSE_active_total_size = 0
**VARIABLES**
DISCRETE S_00001_00002 #
{1..2}
DISCRETE S_00002_00001 #
{1..2}
DISCRETE S_00002_00002 #
{1..2}
DISCRETE aux0 #ElementOne([1, S_00001_00002], S_00002_00001) --- ElementOne([1, S_00001_00002, S_00002_00001], (2*S_00001_00002 + -1))
{1..2}
DISCRETE aux1 #ElementOne([S_00002_00001, S_00002_00002], S_00002_00001) --- ElementOne([1, S_00001_00002, S_00002_00001, S_00002_00002], (-2 + S_00002_00001 + 2*S_00002_00002))
{1..2}
DISCRETE aux2 #ElementOne([1, S_00001_00002, S_00002_00001, S_00002_00002], (-2 + 2*S_00002_00001 + S_00002_00002)) --- ElementOne([S_00002_00001, S_00002_00002], S_00001_00002)
{1..2}
DISCRETE aux3 #ElementOne([1, S_00001_00002], S_00002_00002) --- ElementOne([1, S_00001_00002, S_00002_00001, S_00002_00002], (3*S_00001_00002 + -2))
{1..2}
DISCRETE aux4 #ElementOne([S_00002_00001, S_00002_00002], S_00002_00002) --- ElementOne([1, S_00001_00002, S_00002_00001, S_00002_00002], (-2 + 3*S_00002_00002))
{1..2}
DISCRETE aux5 #ElementOne([2, 1], S_00002_00002)
{1..2}
DISCRETE aux6 #ElementOne([2, 1], S_00002_00001)
{1..2}
DISCRETE aux7 #ElementOne([2, 1], S_00001_00002)
{1..2}
DISCRETE aux8 #(-2 + 3*S_00002_00001)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux8, [1,1,4,4])
**VARIABLES**
DISCRETE aux9 #(2*S_00001_00002 + -1)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux9, [1,1,3,3])
**VARIABLES**
DISCRETE aux10 #(-2 + S_00002_00001 + 2*S_00002_00002)
{1..4}
DISCRETE aux11 #(-2 + 2*S_00002_00001 + S_00002_00002)
{1..4}
DISCRETE aux12 #(3*S_00001_00002 + -2)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux12, [1,1,4,4])
**VARIABLES**
DISCRETE aux13 #(-2 + 3*S_00002_00002)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux13, [1,1,4,4])
**VARIABLES**
**TUPLELIST**
perms 1 2
2 1 
**VARIABLES**
ALIAS perms[1,2]=[[2, 1]]
**TUPLELIST**
inverses 1 2
2 1 
**VARIABLES**
ALIAS inverses[1,2]=[[2, 1]]
**SEARCH**
PRINT[[S_00001_00002],[S_00002_00001],[S_00002_00002]]
VARORDER STATIC [S_00001_00002, S_00002_00001, S_00002_00002]
**CONSTRAINTS**
watchelement_one([2, 1], S_00002_00002, aux5)
watchelement_one([2, 1], S_00002_00001, aux6)
watchelement_one([2, 1], S_00001_00002, aux7)
lexleq([1, S_00001_00002, S_00002_00001, S_00002_00002],[aux5, aux6, aux7, 2])
watchelement_one([S_00001_00002, S_00002_00002], S_00002_00001, 2)
watchelement_one([1, S_00002_00001], S_00001_00002, 1)
watchelement_one([S_00001_00002, S_00002_00002], S_00002_00002, 2)
watchelement_one([1, S_00001_00002, S_00002_00001, S_00002_00002], aux8, S_00002_00001)
watchelement_one([1, S_00001_00002], S_00002_00001, aux0)
watchelement_one([1, S_00001_00002, S_00002_00001], aux9, aux0)
watchelement_one([S_00002_00001, S_00002_00002], S_00002_00001, aux1)
watchelement_one([1, S_00001_00002, S_00002_00001, S_00002_00002], aux10, aux1)
watchelement_one([1, S_00001_00002, S_00002_00001, S_00002_00002], aux11, aux2)
watchelement_one([S_00002_00001, S_00002_00002], S_00001_00002, aux2)
watchelement_one([1, S_00001_00002], S_00002_00002, aux3)
watchelement_one([1, S_00001_00002, S_00002_00001, S_00002_00002], aux12, aux3)
watchelement_one([S_00002_00001, S_00002_00002], S_00002_00002, aux4)
watchelement_one([1, S_00001_00002, S_00002_00001, S_00002_00002], aux13, aux4)
weightedsumleq([1,3],[-2,S_00002_00001],aux8)
weightedsumgeq([1,3],[-2,S_00002_00001],aux8)
weightedsumleq([2,1],[S_00001_00002,-1],aux9)
weightedsumgeq([2,1],[S_00001_00002,-1],aux9)
weightedsumleq([1,1,2],[-2,S_00002_00001,S_00002_00002],aux10)
weightedsumgeq([1,1,2],[-2,S_00002_00001,S_00002_00002],aux10)
weightedsumleq([1,2,1],[-2,S_00002_00001,S_00002_00002],aux11)
weightedsumgeq([1,2,1],[-2,S_00002_00001,S_00002_00002],aux11)
weightedsumleq([3,1],[S_00001_00002,-2],aux12)
weightedsumgeq([3,1],[S_00001_00002,-2],aux12)
weightedsumleq([1,3],[-2,S_00002_00002],aux13)
weightedsumgeq([1,3],[-2,S_00002_00002],aux13)
**EOF**
