MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 84
# CSE_active_eliminated_expressions = 279
# CSE_active_total_size = 378
**VARIABLES**
DISCRETE M_00001_00003 #
{3..4}
DISCRETE M_00001_00004 #
{4..5}
DISCRETE M_00001_00005 #
{3..5}
DISCRETE M_00002_00003 #
{3..4}
DISCRETE M_00002_00004 #
{4..5}
DISCRETE M_00002_00005 #
{3..5}
DISCRETE M_00003_00003 #
{3..5}
DISCRETE M_00003_00004 #
{3..5}
DISCRETE M_00003_00005 #
{3..5}
DISCRETE M_00004_00003 #
{3..5}
DISCRETE M_00004_00004 #
{3..5}
DISCRETE M_00004_00005 #
{3..5}
DISCRETE M_00005_00003 #
{3..5}
DISCRETE M_00005_00004 #
{3..5}
DISCRETE M_00005_00005 #
{3..5}
DISCRETE aux6 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00003, M_00001_00004, M_00001_00005], (M_00002_00005 + -2))
{3..5}
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00004, M_00001_00005], (M_00002_00004 + -3))
{3..5}
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00003, M_00001_00004], (M_00002_00003 + -2))
{3..5}
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003 + 5*M_00002_00005 + -17)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux18, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003 + 5*M_00002_00004 + -22)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux19, [1,2,6,7])
**VARIABLES**
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00004 + 5*M_00002_00005 + -18)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux20, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00004 + M_00002_00005 + -22)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux21, [1,3,6,8])
**VARIABLES**
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00003 + M_00002_00004 + -18)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux22, [1,2,6,7])
**VARIABLES**
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00002_00003 + M_00002_00005 + -17)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux23, [1,3,6,8])
**VARIABLES**
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00003 + M_00004_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux24, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00003 + M_00004_00004 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux25, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003 + 5*M_00004_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux26, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00004 + 5*M_00004_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux27, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00004 + M_00003_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux28, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux29 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00004 + 5*M_00003_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux29, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux30 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003 + 5*M_00003_00004 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux30, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux31 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003 + 5*M_00003_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux31, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux32 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + M_00005_00003 + 5*M_00005_00004)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux32, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux33 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + 5*M_00005_00004 + M_00005_00005)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux33, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux34 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + 5*M_00005_00003 + M_00005_00005)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux34, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux35 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + 5*M_00005_00003 + M_00005_00004)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux35, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux36 #Active-CSE: 2 occurrences of this expression or equivalent: (-22 + M_00001_00003 + 5*M_00001_00004)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux36, [1,2,6,7])
**VARIABLES**
DISCRETE aux37 #Active-CSE: 2 occurrences of this expression or equivalent: (-22 + 5*M_00001_00004 + M_00001_00005)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux37, [1,3,6,8])
**VARIABLES**
DISCRETE aux38 #Active-CSE: 2 occurrences of this expression or equivalent: (-18 + 5*M_00001_00003 + M_00001_00004)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux38, [1,2,6,7])
**VARIABLES**
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + 5*M_00001_00003 + M_00001_00005)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux39, [1,3,6,8])
**VARIABLES**
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (-18 + M_00001_00004 + 5*M_00001_00005)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux40, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux41 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + M_00001_00003 + 5*M_00001_00005)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux41, [1,2,6,7,11,12])
**VARIABLES**
DISCRETE aux42 #Active-CSE: 4 occurrences of this expression or equivalent: (5*M_00004_00003 + -14)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux42, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux43 #Active-CSE: 4 occurrences of this expression or equivalent: (5*M_00004_00005 + -14)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux43, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux44, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux45 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00004 + -23)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux45, [1,1,7,7])
**VARIABLES**
DISCRETE aux46 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00002_00003 + -17)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux46, [1,1,7,7])
**VARIABLES**
DISCRETE aux47 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00004_00005 + -2)
{1..3}
DISCRETE aux48 #Active-CSE: 4 occurrences of this expression or equivalent: (-14 + 5*M_00001_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux48, [1,1,6,6])
**VARIABLES**
DISCRETE aux49 #Active-CSE: 4 occurrences of this expression or equivalent: (-14 + 5*M_00001_00005)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux49, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux50 #Active-CSE: 4 occurrences of this expression or equivalent: (-19 + 5*M_00001_00004)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux50, [1,1,6,6])
**VARIABLES**
DISCRETE aux51 #Active-CSE: 8 occurrences of this expression or equivalent: (-2 + M_00005_00005)
{1..3}
DISCRETE aux52 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00004 + -3)
{1..2}
DISCRETE aux53 #Active-CSE: 7 occurrences of this expression or equivalent: (-2 + M_00001_00003)
{1..2}
DISCRETE aux54 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00004_00004 + -2)
{1..3}
DISCRETE aux55 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00003 + -2)
{1..2}
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (-23 + 6*M_00001_00004)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux56, [1,1,7,7])
**VARIABLES**
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + 6*M_00001_00003)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux57, [1,1,7,7])
**VARIABLES**
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + 6*M_00001_00005)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux58, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux59 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00003_00003 + -2)
{1..3}
DISCRETE aux60 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00004_00003 + -2)
{1..3}
DISCRETE aux61 #Active-CSE: 7 occurrences of this expression or equivalent: (-3 + M_00001_00004)
{1..2}
DISCRETE aux62 #Active-CSE: 8 occurrences of this expression or equivalent: (-2 + M_00005_00003)
{1..3}
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (-14 + 5*M_00005_00005)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux63, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + 6*M_00005_00003)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux64, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux65 #Active-CSE: 2 occurrences of this expression or equivalent: (-17 + 6*M_00005_00004)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux65, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux66 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00003_00004 + -2)
{1..3}
DISCRETE aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00003_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux67, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00003_00004 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux68, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux69 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00003_00003 + -14)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux69, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux70 #Active-CSE: 4 occurrences of this expression or equivalent: (5*M_00002_00005 + -14)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux70, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux71 #Active-CSE: 4 occurrences of this expression or equivalent: (5*M_00002_00003 + -14)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux71, [1,1,6,6])
**VARIABLES**
DISCRETE aux72 #Active-CSE: 4 occurrences of this expression or equivalent: (5*M_00002_00004 + -19)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux72, [1,1,6,6])
**VARIABLES**
DISCRETE aux73 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00005 + -2)
{1..3}
DISCRETE aux74 #Active-CSE: 8 occurrences of this expression or equivalent: (-2 + M_00005_00004)
{1..3}
DISCRETE aux75 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00003_00005 + -2)
{1..3}
DISCRETE aux76 #Active-CSE: 4 occurrences of this expression or equivalent: (-14 + 5*M_00005_00003)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux76, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux77 #Active-CSE: 4 occurrences of this expression or equivalent: (-14 + 5*M_00005_00004)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux77, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux78 #Active-CSE: 4 occurrences of this expression or equivalent: (5*M_00003_00004 + -14)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux78, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux79 #Active-CSE: 4 occurrences of this expression or equivalent: (5*M_00003_00005 + -14)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux79, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00004_00003 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux80, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (6*M_00004_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux81, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (5*M_00004_00004 + -14)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux82, [1,1,6,6,11,11])
**VARIABLES**
DISCRETE aux83 #Active-CSE: 7 occurrences of this expression or equivalent: (-2 + M_00001_00005)
{1..3}
DISCRETE aux84 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004], aux57) --- ElementOne([M_00001_00003, M_00001_00004, M_00001_00005], aux59)
{3..5}
DISCRETE aux85 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005], aux66) --- ElementOne([M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005], aux38)
{3..5}
DISCRETE aux86 #ElementOne([M_00001_00003, M_00001_00004, M_00001_00005], aux75) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005], aux39)
{3..5}
DISCRETE aux87 #ElementOne([M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004], aux36) --- ElementOne([M_00001_00003, M_00001_00004, M_00001_00005], aux60)
{3..5}
DISCRETE aux88 #ElementOne([M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux56) --- ElementOne([M_00001_00003, M_00001_00004, M_00001_00005], aux54)
{3..5}
DISCRETE aux89 #ElementOne([M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux37) --- ElementOne([M_00001_00003, M_00001_00004, M_00001_00005], aux47)
{3..5}
DISCRETE aux90 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004], aux41) --- ElementOne([M_00001_00003, M_00001_00004, M_00001_00005], aux62)
{3..5}
DISCRETE aux91 #ElementOne([M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux40) --- ElementOne([M_00001_00003, M_00001_00004, M_00001_00005], aux74)
{3..5}
DISCRETE aux92 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux58) --- ElementOne([M_00001_00003, M_00001_00004, M_00001_00005], aux51)
{3..5}
DISCRETE aux93 #ElementOne([M_00002_00003, M_00002_00004, M_00002_00005], aux59) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004], aux46)
{3..5}
DISCRETE aux94 #ElementOne([M_00002_00003, M_00002_00004, M_00002_00005], aux66) --- ElementOne([M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005], aux22)
{3..5}
DISCRETE aux95 #ElementOne([M_00002_00003, M_00002_00004, M_00002_00005], aux75) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005], aux23)
{3..5}
DISCRETE aux96 #ElementOne([M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004], aux19) --- ElementOne([M_00002_00003, M_00002_00004, M_00002_00005], aux60)
{3..5}
DISCRETE aux97 #ElementOne([M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux45) --- ElementOne([M_00002_00003, M_00002_00004, M_00002_00005], aux54)
{3..5}
DISCRETE aux98 #ElementOne([M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux21) --- ElementOne([M_00002_00003, M_00002_00004, M_00002_00005], aux47)
{3..5}
DISCRETE aux99 #ElementOne([M_00002_00003, M_00002_00004, M_00002_00005], aux62) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004], aux18)
{3..5}
DISCRETE aux100 #ElementOne([M_00002_00003, M_00002_00004, M_00002_00005], aux74) --- ElementOne([M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux20)
{3..5}
DISCRETE aux101 #ElementOne([M_00002_00003, M_00002_00004, M_00002_00005], aux51) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux44)
{3..5}
DISCRETE aux102 #ElementOne([1, 2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1], aux78) --- ElementOne([1, 2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1], aux42)
{1..5}
DISCRETE aux103 #ElementOne([2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2], aux78) --- ElementOne([2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2], aux42)
{1..5}
DISCRETE aux104 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux30) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux80)
{1..5}
DISCRETE aux105 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux68) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux25)
{1..5}
DISCRETE aux106 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux24) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux28)
{1..5}
DISCRETE aux107 #ElementOne([1, 2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1], aux79) --- ElementOne([1, 2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1], aux76)
{1..5}
DISCRETE aux108 #ElementOne([2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2], aux79) --- ElementOne([2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2], aux76)
{1..5}
DISCRETE aux109 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux31) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux64)
{1..5}
DISCRETE aux110 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux35) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux29)
{1..5}
DISCRETE aux111 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux67) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux34)
{1..5}
DISCRETE aux112 #ElementOne([1, 2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1], aux77) --- ElementOne([1, 2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1], aux43)
{1..5}
DISCRETE aux113 #ElementOne([2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2], aux77) --- ElementOne([2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2], aux43)
{1..5}
DISCRETE aux114 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux32) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux26)
{1..5}
DISCRETE aux115 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux27) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux65)
{1..5}
DISCRETE aux116 #ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux33) --- ElementOne([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux81)
{1..5}
DISCRETE aux117 #(6*M_00003_00003 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux117, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux118 #(5*M_00003_00003 + M_00003_00004 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux118, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux119 #(5*M_00003_00003 + M_00003_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux119, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux120 #(M_00004_00003 + 5*M_00004_00004 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux120, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux121 #(6*M_00004_00004 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux121, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux122 #(5*M_00004_00004 + M_00004_00005 + -17)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux122, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux123 #(-17 + M_00005_00003 + 5*M_00005_00005)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux123, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux124 #(-17 + M_00005_00004 + 5*M_00005_00005)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux124, [1,3,6,8,11,13])
**VARIABLES**
DISCRETE aux125 #(-17 + 6*M_00005_00005)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux125, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux126 #ElementOne([3, 5], aux53)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux126, [3,3,5,5])
**VARIABLES**
DISCRETE aux127 #ElementOne([3, 5, 4], aux83)
{3..5}
DISCRETE aux128 #ElementOne([5, 4], aux61)
{4..5}
DISCRETE aux129 #ElementOne([3, 5], aux55)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux129, [3,3,5,5])
**VARIABLES**
DISCRETE aux130 #ElementOne([3, 5, 4], aux73)
{3..5}
DISCRETE aux131 #ElementOne([5, 4], aux52)
{4..5}
DISCRETE aux132 #ElementOne([3, 5, 4], aux59)
{3..5}
DISCRETE aux133 #ElementOne([3, 5, 4], aux75)
{3..5}
DISCRETE aux134 #ElementOne([3, 5, 4], aux66)
{3..5}
DISCRETE aux135 #ElementOne([3, 5, 4], aux62)
{3..5}
DISCRETE aux136 #ElementOne([3, 5, 4], aux51)
{3..5}
DISCRETE aux137 #ElementOne([3, 5, 4], aux74)
{3..5}
DISCRETE aux138 #ElementOne([3, 5, 4], aux60)
{3..5}
DISCRETE aux139 #ElementOne([3, 5, 4], aux47)
{3..5}
DISCRETE aux140 #ElementOne([3, 5, 4], aux54)
{3..5}
DISCRETE aux141 #ElementOne([5, 4, 3], aux83)
{3..5}
DISCRETE aux142 #ElementOne([4, 3], aux61)
{3..4}
DISCRETE aux143 #ElementOne([5, 4], aux53)
{4..5}
DISCRETE aux144 #ElementOne([5, 4, 3], aux73)
{3..5}
DISCRETE aux145 #ElementOne([4, 3], aux52)
{3..4}
DISCRETE aux146 #ElementOne([5, 4], aux55)
{4..5}
DISCRETE aux147 #ElementOne([5, 4, 3], aux51)
{3..5}
DISCRETE aux148 #ElementOne([5, 4, 3], aux74)
{3..5}
DISCRETE aux149 #ElementOne([5, 4, 3], aux62)
{3..5}
DISCRETE aux150 #ElementOne([5, 4, 3], aux47)
{3..5}
DISCRETE aux151 #ElementOne([5, 4, 3], aux54)
{3..5}
DISCRETE aux152 #ElementOne([5, 4, 3], aux60)
{3..5}
DISCRETE aux153 #ElementOne([5, 4, 3], aux75)
{3..5}
DISCRETE aux154 #ElementOne([5, 4, 3], aux66)
{3..5}
DISCRETE aux155 #ElementOne([5, 4, 3], aux59)
{3..5}
DISCRETE aux156 #ElementOne([4, 5, 3], aux83)
{3..5}
DISCRETE aux157 #ElementOne([4, 5], aux53)
{4..5}
DISCRETE aux158 #ElementOne([5, 3], aux61)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux158, [3,3,5,5])
**VARIABLES**
DISCRETE aux159 #ElementOne([4, 5, 3], aux73)
{3..5}
DISCRETE aux160 #ElementOne([4, 5], aux55)
{4..5}
DISCRETE aux161 #ElementOne([5, 3], aux52)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux161, [3,3,5,5])
**VARIABLES**
DISCRETE aux162 #ElementOne([4, 5, 3], aux51)
{3..5}
DISCRETE aux163 #ElementOne([4, 5, 3], aux62)
{3..5}
DISCRETE aux164 #ElementOne([4, 5, 3], aux74)
{3..5}
DISCRETE aux165 #ElementOne([4, 5, 3], aux75)
{3..5}
DISCRETE aux166 #ElementOne([4, 5, 3], aux59)
{3..5}
DISCRETE aux167 #ElementOne([4, 5, 3], aux66)
{3..5}
DISCRETE aux168 #ElementOne([4, 5, 3], aux47)
{3..5}
DISCRETE aux169 #ElementOne([4, 5, 3], aux60)
{3..5}
DISCRETE aux170 #ElementOne([4, 5, 3], aux54)
{3..5}
DISCRETE aux171 #ElementOne([3, 4], aux61)
{3..4}
DISCRETE aux172 #ElementOne([5, 3, 4], aux83)
{3..5}
DISCRETE aux173 #ElementOne([5, 3], aux53)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux173, [3,3,5,5])
**VARIABLES**
DISCRETE aux174 #ElementOne([3, 4], aux52)
{3..4}
DISCRETE aux175 #ElementOne([5, 3, 4], aux73)
{3..5}
DISCRETE aux176 #ElementOne([5, 3], aux55)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux176, [3,3,5,5])
**VARIABLES**
DISCRETE aux177 #ElementOne([5, 3, 4], aux54)
{3..5}
DISCRETE aux178 #ElementOne([5, 3, 4], aux47)
{3..5}
DISCRETE aux179 #ElementOne([5, 3, 4], aux60)
{3..5}
DISCRETE aux180 #ElementOne([5, 3, 4], aux74)
{3..5}
DISCRETE aux181 #ElementOne([5, 3, 4], aux51)
{3..5}
DISCRETE aux182 #ElementOne([5, 3, 4], aux62)
{3..5}
DISCRETE aux183 #ElementOne([5, 3, 4], aux66)
{3..5}
DISCRETE aux184 #ElementOne([5, 3, 4], aux75)
{3..5}
DISCRETE aux185 #ElementOne([5, 3, 4], aux59)
{3..5}
DISCRETE aux186 #ElementOne([3, 5], aux61)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux186, [3,3,5,5])
**VARIABLES**
DISCRETE aux187 #ElementOne([4, 3], aux53)
{3..4}
DISCRETE aux188 #ElementOne([4, 3, 5], aux83)
{3..5}
DISCRETE aux189 #ElementOne([3, 5], aux52)
{3..5}
**CONSTRAINTS**
w-inintervalset(aux189, [3,3,5,5])
**VARIABLES**
DISCRETE aux190 #ElementOne([4, 3], aux55)
{3..4}
DISCRETE aux191 #ElementOne([4, 3, 5], aux73)
{3..5}
DISCRETE aux192 #ElementOne([4, 3, 5], aux54)
{3..5}
DISCRETE aux193 #ElementOne([4, 3, 5], aux60)
{3..5}
DISCRETE aux194 #ElementOne([4, 3, 5], aux47)
{3..5}
DISCRETE aux195 #ElementOne([4, 3, 5], aux66)
{3..5}
DISCRETE aux196 #ElementOne([4, 3, 5], aux59)
{3..5}
DISCRETE aux197 #ElementOne([4, 3, 5], aux75)
{3..5}
DISCRETE aux198 #ElementOne([4, 3, 5], aux74)
{3..5}
DISCRETE aux199 #ElementOne([4, 3, 5], aux62)
{3..5}
DISCRETE aux200 #ElementOne([4, 3, 5], aux51)
{3..5}
**TUPLELIST**
rack 5 5
1 2 3 4 5 
1 1 3 4 5 
1 2 3 4 5 
1 2 3 4 5 
1 2 3 4 5 
**VARIABLES**
ALIAS rack[5,5]=[[1, 2, 3, 4, 5], [1, 1, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]]
**TUPLELIST**
perms 6 5
1 2 3 4 5 
1 2 3 5 4 
1 2 5 4 3 
1 2 5 3 4 
1 2 4 5 3 
1 2 4 3 5 
**VARIABLES**
ALIAS perms[6,5]=[[1, 2, 3, 4, 5], [1, 2, 3, 5, 4], [1, 2, 5, 4, 3], [1, 2, 5, 3, 4], [1, 2, 4, 5, 3], [1, 2, 4, 3, 5]]
**TUPLELIST**
inverses 6 5
1 2 3 4 5 
1 2 3 5 4 
1 2 5 4 3 
1 2 4 5 3 
1 2 5 3 4 
1 2 4 3 5 
**VARIABLES**
ALIAS inverses[6,5]=[[1, 2, 3, 4, 5], [1, 2, 3, 5, 4], [1, 2, 5, 4, 3], [1, 2, 4, 5, 3], [1, 2, 5, 3, 4], [1, 2, 4, 3, 5]]
**SEARCH**
PRINT[[M_00001_00003],[M_00001_00004],[M_00001_00005],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00005_00003],[M_00005_00004],[M_00005_00005]]
VARORDER STATIC [M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00003, M_00005_00004, M_00005_00005]
**CONSTRAINTS**
watchelement_one([3, 5], aux53, aux126)
watchelement_one([3, 5, 4], aux83, aux127)
watchelement_one([5, 4], aux61, aux128)
watchelement_one([3, 5], aux55, aux129)
watchelement_one([3, 5, 4], aux73, aux130)
watchelement_one([5, 4], aux52, aux131)
watchelement_one([3, 5, 4], aux59, aux132)
watchelement_one([3, 5, 4], aux75, aux133)
watchelement_one([3, 5, 4], aux66, aux134)
watchelement_one([3, 5, 4], aux62, aux135)
watchelement_one([3, 5, 4], aux51, aux136)
watchelement_one([3, 5, 4], aux74, aux137)
watchelement_one([3, 5, 4], aux60, aux138)
watchelement_one([3, 5, 4], aux47, aux139)
watchelement_one([3, 5, 4], aux54, aux140)
watchelement_one([5, 4, 3], aux83, aux141)
watchelement_one([4, 3], aux61, aux142)
watchelement_one([5, 4], aux53, aux143)
watchelement_one([5, 4, 3], aux73, aux144)
watchelement_one([4, 3], aux52, aux145)
watchelement_one([5, 4], aux55, aux146)
watchelement_one([5, 4, 3], aux51, aux147)
watchelement_one([5, 4, 3], aux74, aux148)
watchelement_one([5, 4, 3], aux62, aux149)
watchelement_one([5, 4, 3], aux47, aux150)
watchelement_one([5, 4, 3], aux54, aux151)
watchelement_one([5, 4, 3], aux60, aux152)
watchelement_one([5, 4, 3], aux75, aux153)
watchelement_one([5, 4, 3], aux66, aux154)
watchelement_one([5, 4, 3], aux59, aux155)
watchelement_one([4, 5, 3], aux83, aux156)
watchelement_one([4, 5], aux53, aux157)
watchelement_one([5, 3], aux61, aux158)
watchelement_one([4, 5, 3], aux73, aux159)
watchelement_one([4, 5], aux55, aux160)
watchelement_one([5, 3], aux52, aux161)
watchelement_one([4, 5, 3], aux51, aux162)
watchelement_one([4, 5, 3], aux62, aux163)
watchelement_one([4, 5, 3], aux74, aux164)
watchelement_one([4, 5, 3], aux75, aux165)
watchelement_one([4, 5, 3], aux59, aux166)
watchelement_one([4, 5, 3], aux66, aux167)
watchelement_one([4, 5, 3], aux47, aux168)
watchelement_one([4, 5, 3], aux60, aux169)
watchelement_one([4, 5, 3], aux54, aux170)
watchelement_one([3, 4], aux61, aux171)
watchelement_one([5, 3, 4], aux83, aux172)
watchelement_one([5, 3], aux53, aux173)
watchelement_one([3, 4], aux52, aux174)
watchelement_one([5, 3, 4], aux73, aux175)
watchelement_one([5, 3], aux55, aux176)
watchelement_one([5, 3, 4], aux54, aux177)
watchelement_one([5, 3, 4], aux47, aux178)
watchelement_one([5, 3, 4], aux60, aux179)
watchelement_one([5, 3, 4], aux74, aux180)
watchelement_one([5, 3, 4], aux51, aux181)
watchelement_one([5, 3, 4], aux62, aux182)
watchelement_one([5, 3, 4], aux66, aux183)
watchelement_one([5, 3, 4], aux75, aux184)
watchelement_one([5, 3, 4], aux59, aux185)
watchelement_one([3, 5], aux61, aux186)
watchelement_one([4, 3], aux53, aux187)
watchelement_one([4, 3, 5], aux83, aux188)
watchelement_one([3, 5], aux52, aux189)
watchelement_one([4, 3], aux55, aux190)
watchelement_one([4, 3, 5], aux73, aux191)
watchelement_one([4, 3, 5], aux54, aux192)
watchelement_one([4, 3, 5], aux60, aux193)
watchelement_one([4, 3, 5], aux47, aux194)
watchelement_one([4, 3, 5], aux66, aux195)
watchelement_one([4, 3, 5], aux59, aux196)
watchelement_one([4, 3, 5], aux75, aux197)
watchelement_one([4, 3, 5], aux74, aux198)
watchelement_one([4, 3, 5], aux62, aux199)
watchelement_one([4, 3, 5], aux51, aux200)
watchelement_one([3, 4, 5], aux75, M_00003_00005)
watchelement_one([3, 4, 5], aux59, M_00003_00003)
watchelement_one([3, 4, 5], aux66, M_00003_00004)
watchelement_one([3, 4, 5], aux51, M_00005_00005)
watchelement_one([3, 4, 5], aux62, M_00005_00003)
watchelement_one([3, 4, 5], aux74, M_00005_00004)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005], aux73, aux6)
watchelement_one([3, 4, 5], aux60, M_00004_00003)
watchelement_one([3, 4, 5], aux54, M_00004_00004)
watchelement_one([3, 4, 5], aux47, M_00004_00005)
watchelement_one([3, 4, 5], aux73, M_00002_00005)
watchelement_one([3, 4, 5], aux83, M_00001_00005)
watchelement_one([4, 5], aux61, M_00001_00004)
watchelement_one([3, 4], aux53, M_00001_00003)
watchelement_one([3, 4], aux55, M_00002_00003)
watchelement_one([4, 5], aux52, M_00002_00004)
watchelement_one([M_00001_00004, M_00001_00005], aux52, aux16)
watchelement_one([M_00001_00003, M_00001_00004], aux55, aux17)
gacalldiff([M_00001_00003, M_00001_00004, M_00001_00005])
gacalldiff([M_00002_00003, M_00002_00004, M_00002_00005])
gacalldiff([M_00003_00003, M_00003_00004, M_00003_00005])
gacalldiff([M_00004_00003, M_00004_00004, M_00004_00005])
gacalldiff([M_00005_00003, M_00005_00004, M_00005_00005])
watchelement_one([M_00002_00003, M_00002_00004], aux53, aux17)
watchelement_one([M_00002_00004, M_00002_00005], aux61, aux16)
watchelement_one([M_00002_00003, M_00002_00004, M_00002_00005], aux83, aux6)
watchelement_one([1, 2, M_00003_00003, M_00003_00004, M_00003_00005, 1], aux48, 1)
watchelement_one([2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2], aux48, 2)
watchelement_one([1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1], aux50, 1)
watchelement_one([2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2], aux50, 2)
watchelement_one([1, 2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1], aux49, 1)
watchelement_one([2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2], aux49, 2)
watchelement_one([M_00002_00003, M_00002_00004], aux55, aux17)
watchelement_one([M_00002_00004, M_00002_00005], aux52, aux16)
watchelement_one([M_00002_00003, M_00002_00004, M_00002_00005], aux73, aux6)
watchelement_one([1, 2, M_00003_00003, M_00003_00004, M_00003_00005, 1], aux71, 1)
watchelement_one([2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2], aux71, 2)
watchelement_one([1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1], aux72, 1)
watchelement_one([2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2], aux72, 2)
watchelement_one([1, 2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1], aux70, 1)
watchelement_one([2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2], aux70, 2)
watchelement_one([1, 2, 3, 4, 5, 1], aux48, 1)
watchelement_one([2, 3, 4, 5, 1, 2], aux48, 2)
watchelement_one([3, 4, 5, 1, 2, 3, 4], aux57, M_00001_00003)
watchelement_one([4, 5, 1, 2, 3, 4, 5], aux38, M_00001_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5], aux39, M_00001_00005)
watchelement_one([1, 2, 3, 4, 5, 1], aux50, 1)
watchelement_one([2, 3, 4, 5, 1, 2], aux50, 2)
watchelement_one([3, 4, 5, 1, 2, 3, 4], aux36, M_00001_00003)
watchelement_one([4, 5, 1, 2, 3, 4, 5], aux56, M_00001_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5], aux37, M_00001_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1], aux49, 1)
watchelement_one([2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux49, 2)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4], aux41, M_00001_00003)
watchelement_one([4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux40, M_00001_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux58, M_00001_00005)
watchelement_one([1, 2, 3, 4, 5, 1], aux71, 1)
watchelement_one([2, 3, 4, 5, 1, 2], aux71, 2)
watchelement_one([3, 4, 5, 1, 2, 3, 4], aux46, M_00002_00003)
watchelement_one([4, 5, 1, 2, 3, 4, 5], aux22, M_00002_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5], aux23, M_00002_00005)
watchelement_one([1, 2, 3, 4, 5, 1], aux72, 1)
watchelement_one([2, 3, 4, 5, 1, 2], aux72, 2)
watchelement_one([3, 4, 5, 1, 2, 3, 4], aux19, M_00002_00003)
watchelement_one([4, 5, 1, 2, 3, 4, 5], aux45, M_00002_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5], aux21, M_00002_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1], aux70, 1)
watchelement_one([2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux70, 2)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4], aux18, M_00002_00003)
watchelement_one([4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux20, M_00002_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux44, M_00002_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1], aux69, 1)
watchelement_one([2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux69, 2)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux117, M_00003_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux118, M_00003_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux119, M_00003_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1], aux78, 1)
watchelement_one([2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux78, 2)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux30, M_00003_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux68, M_00003_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux28, M_00003_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1], aux79, 1)
watchelement_one([2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux79, 2)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux31, M_00003_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux29, M_00003_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux67, M_00003_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1], aux42, 1)
watchelement_one([2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux42, 2)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux80, M_00004_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux25, M_00004_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux24, M_00004_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1], aux82, 1)
watchelement_one([2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux82, 2)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux120, M_00004_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux121, M_00004_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux122, M_00004_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1], aux43, 1)
watchelement_one([2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux43, 2)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux26, M_00004_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux27, M_00004_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux81, M_00004_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1], aux76, 1)
watchelement_one([2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux76, 2)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux64, M_00005_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux35, M_00005_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux34, M_00005_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1], aux77, 1)
watchelement_one([2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux77, 2)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux32, M_00005_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux65, M_00005_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux33, M_00005_00005)
watchelement_one([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1], aux63, 1)
watchelement_one([2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2], aux63, 2)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux123, M_00005_00003)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux124, M_00005_00004)
watchelement_one([3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5], aux125, M_00005_00005)
lexleq([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00003, M_00005_00004, M_00005_00005],[aux126, aux127, aux128, aux129, aux130, aux131, aux132, aux133, aux134, aux135, aux136, aux137, aux138, aux139, aux140])
lexleq([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00003, M_00005_00004, M_00005_00005],[aux141, aux142, aux143, aux144, aux145, aux146, aux147, aux148, aux149, aux150, aux151, aux152, aux153, aux154, aux155])
lexleq([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00003, M_00005_00004, M_00005_00005],[aux156, aux157, aux158, aux159, aux160, aux161, aux162, aux163, aux164, aux165, aux166, aux167, aux168, aux169, aux170])
lexleq([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00003, M_00005_00004, M_00005_00005],[aux171, aux172, aux173, aux174, aux175, aux176, aux177, aux178, aux179, aux180, aux181, aux182, aux183, aux184, aux185])
lexleq([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00003, M_00003_00004, M_00003_00005, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00003, M_00005_00004, M_00005_00005],[aux186, aux187, aux188, aux189, aux190, aux191, aux192, aux193, aux194, aux195, aux196, aux197, aux198, aux199, aux200])
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004], aux57, aux84)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005], aux59, aux84)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005], aux66, aux85)
watchelement_one([M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005], aux38, aux85)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005], aux75, aux86)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005], aux39, aux86)
watchelement_one([M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004], aux36, aux87)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005], aux60, aux87)
watchelement_one([M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux56, aux88)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005], aux54, aux88)
watchelement_one([M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux37, aux89)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005], aux47, aux89)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004], aux41, aux90)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005], aux62, aux90)
watchelement_one([M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux40, aux91)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005], aux74, aux91)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux58, aux92)
watchelement_one([M_00001_00003, M_00001_00004, M_00001_00005], aux51, aux92)
watchelement_one([M_00002_00003, M_00002_00004, M_00002_00005], aux59, aux93)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004], aux46, aux93)
watchelement_one([M_00002_00003, M_00002_00004, M_00002_00005], aux66, aux94)
watchelement_one([M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005], aux22, aux94)
watchelement_one([M_00002_00003, M_00002_00004, M_00002_00005], aux75, aux95)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005], aux23, aux95)
watchelement_one([M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004], aux19, aux96)
watchelement_one([M_00002_00003, M_00002_00004, M_00002_00005], aux60, aux96)
watchelement_one([M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux45, aux97)
watchelement_one([M_00002_00003, M_00002_00004, M_00002_00005], aux54, aux97)
watchelement_one([M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux21, aux98)
watchelement_one([M_00002_00003, M_00002_00004, M_00002_00005], aux47, aux98)
watchelement_one([M_00002_00003, M_00002_00004, M_00002_00005], aux62, aux99)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004], aux18, aux99)
watchelement_one([M_00002_00003, M_00002_00004, M_00002_00005], aux74, aux100)
watchelement_one([M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux20, aux100)
watchelement_one([M_00002_00003, M_00002_00004, M_00002_00005], aux51, aux101)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux44, aux101)
watchelement_one([1, 2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1], aux78, aux102)
watchelement_one([1, 2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1], aux42, aux102)
watchelement_one([2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2], aux78, aux103)
watchelement_one([2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2], aux42, aux103)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux30, aux104)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux80, aux104)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux68, aux105)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux25, aux105)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux24, aux106)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux28, aux106)
watchelement_one([1, 2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1], aux79, aux107)
watchelement_one([1, 2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1], aux76, aux107)
watchelement_one([2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2], aux79, aux108)
watchelement_one([2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2], aux76, aux108)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux31, aux109)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux64, aux109)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux35, aux110)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux29, aux110)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux67, aux111)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux34, aux111)
watchelement_one([1, 2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1], aux77, aux112)
watchelement_one([1, 2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1], aux43, aux112)
watchelement_one([2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2], aux77, aux113)
watchelement_one([2, M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2], aux43, aux113)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux32, aux114)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux26, aux114)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux27, aux115)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux65, aux115)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux33, aux116)
watchelement_one([M_00003_00003, M_00003_00004, M_00003_00005, 1, 2, M_00004_00003, M_00004_00004, M_00004_00005, 1, 2, M_00005_00003, M_00005_00004, M_00005_00005], aux81, aux116)
weightedsumleq([6,1],[M_00003_00003,-17],aux117)
weightedsumgeq([6,1],[M_00003_00003,-17],aux117)
weightedsumleq([5,1,1],[M_00003_00003,M_00003_00004,-17],aux118)
weightedsumgeq([5,1,1],[M_00003_00003,M_00003_00004,-17],aux118)
weightedsumleq([5,1,1],[M_00003_00003,M_00003_00005,-17],aux119)
weightedsumgeq([5,1,1],[M_00003_00003,M_00003_00005,-17],aux119)
weightedsumleq([1,5,1],[M_00004_00003,M_00004_00004,-17],aux120)
weightedsumgeq([1,5,1],[M_00004_00003,M_00004_00004,-17],aux120)
weightedsumleq([6,1],[M_00004_00004,-17],aux121)
weightedsumgeq([6,1],[M_00004_00004,-17],aux121)
weightedsumleq([5,1,1],[M_00004_00004,M_00004_00005,-17],aux122)
weightedsumgeq([5,1,1],[M_00004_00004,M_00004_00005,-17],aux122)
weightedsumleq([1,1,5],[-17,M_00005_00003,M_00005_00005],aux123)
weightedsumgeq([1,1,5],[-17,M_00005_00003,M_00005_00005],aux123)
weightedsumleq([1,1,5],[-17,M_00005_00004,M_00005_00005],aux124)
weightedsumgeq([1,1,5],[-17,M_00005_00004,M_00005_00005],aux124)
weightedsumleq([1,6],[-17,M_00005_00005],aux125)
weightedsumgeq([1,6],[-17,M_00005_00005],aux125)
weightedsumleq([1,5,1],[M_00002_00003,M_00002_00005,-17],aux18)
weightedsumgeq([1,5,1],[M_00002_00003,M_00002_00005,-17],aux18)
weightedsumleq([1,5,1],[M_00002_00003,M_00002_00004,-22],aux19)
weightedsumgeq([1,5,1],[M_00002_00003,M_00002_00004,-22],aux19)
weightedsumleq([1,5,1],[M_00002_00004,M_00002_00005,-18],aux20)
weightedsumgeq([1,5,1],[M_00002_00004,M_00002_00005,-18],aux20)
weightedsumleq([5,1,1],[M_00002_00004,M_00002_00005,-22],aux21)
weightedsumgeq([5,1,1],[M_00002_00004,M_00002_00005,-22],aux21)
weightedsumleq([5,1,1],[M_00002_00003,M_00002_00004,-18],aux22)
weightedsumgeq([5,1,1],[M_00002_00003,M_00002_00004,-18],aux22)
weightedsumleq([5,1,1],[M_00002_00003,M_00002_00005,-17],aux23)
weightedsumgeq([5,1,1],[M_00002_00003,M_00002_00005,-17],aux23)
weightedsumleq([5,1,1],[M_00004_00003,M_00004_00005,-17],aux24)
weightedsumgeq([5,1,1],[M_00004_00003,M_00004_00005,-17],aux24)
weightedsumleq([5,1,1],[M_00004_00003,M_00004_00004,-17],aux25)
weightedsumgeq([5,1,1],[M_00004_00003,M_00004_00004,-17],aux25)
weightedsumleq([1,5,1],[M_00004_00003,M_00004_00005,-17],aux26)
weightedsumgeq([1,5,1],[M_00004_00003,M_00004_00005,-17],aux26)
weightedsumleq([1,5,1],[M_00004_00004,M_00004_00005,-17],aux27)
weightedsumgeq([1,5,1],[M_00004_00004,M_00004_00005,-17],aux27)
weightedsumleq([5,1,1],[M_00003_00004,M_00003_00005,-17],aux28)
weightedsumgeq([5,1,1],[M_00003_00004,M_00003_00005,-17],aux28)
weightedsumleq([1,5,1],[M_00003_00004,M_00003_00005,-17],aux29)
weightedsumgeq([1,5,1],[M_00003_00004,M_00003_00005,-17],aux29)
weightedsumleq([1,5,1],[M_00003_00003,M_00003_00004,-17],aux30)
weightedsumgeq([1,5,1],[M_00003_00003,M_00003_00004,-17],aux30)
weightedsumleq([1,5,1],[M_00003_00003,M_00003_00005,-17],aux31)
weightedsumgeq([1,5,1],[M_00003_00003,M_00003_00005,-17],aux31)
weightedsumleq([1,1,5],[-17,M_00005_00003,M_00005_00004],aux32)
weightedsumgeq([1,1,5],[-17,M_00005_00003,M_00005_00004],aux32)
weightedsumleq([1,5,1],[-17,M_00005_00004,M_00005_00005],aux33)
weightedsumgeq([1,5,1],[-17,M_00005_00004,M_00005_00005],aux33)
weightedsumleq([1,5,1],[-17,M_00005_00003,M_00005_00005],aux34)
weightedsumgeq([1,5,1],[-17,M_00005_00003,M_00005_00005],aux34)
weightedsumleq([1,5,1],[-17,M_00005_00003,M_00005_00004],aux35)
weightedsumgeq([1,5,1],[-17,M_00005_00003,M_00005_00004],aux35)
weightedsumleq([1,1,5],[-22,M_00001_00003,M_00001_00004],aux36)
weightedsumgeq([1,1,5],[-22,M_00001_00003,M_00001_00004],aux36)
weightedsumleq([1,5,1],[-22,M_00001_00004,M_00001_00005],aux37)
weightedsumgeq([1,5,1],[-22,M_00001_00004,M_00001_00005],aux37)
weightedsumleq([1,5,1],[-18,M_00001_00003,M_00001_00004],aux38)
weightedsumgeq([1,5,1],[-18,M_00001_00003,M_00001_00004],aux38)
weightedsumleq([1,5,1],[-17,M_00001_00003,M_00001_00005],aux39)
weightedsumgeq([1,5,1],[-17,M_00001_00003,M_00001_00005],aux39)
weightedsumleq([1,1,5],[-18,M_00001_00004,M_00001_00005],aux40)
weightedsumgeq([1,1,5],[-18,M_00001_00004,M_00001_00005],aux40)
weightedsumleq([1,1,5],[-17,M_00001_00003,M_00001_00005],aux41)
weightedsumgeq([1,1,5],[-17,M_00001_00003,M_00001_00005],aux41)
weightedsumleq([5,1],[M_00004_00003,-14],aux42)
weightedsumgeq([5,1],[M_00004_00003,-14],aux42)
weightedsumleq([5,1],[M_00004_00005,-14],aux43)
weightedsumgeq([5,1],[M_00004_00005,-14],aux43)
weightedsumleq([6,1],[M_00002_00005,-17],aux44)
weightedsumgeq([6,1],[M_00002_00005,-17],aux44)
weightedsumleq([6,1],[M_00002_00004,-23],aux45)
weightedsumgeq([6,1],[M_00002_00004,-23],aux45)
weightedsumleq([6,1],[M_00002_00003,-17],aux46)
weightedsumgeq([6,1],[M_00002_00003,-17],aux46)
sumleq([M_00004_00005,-2],aux47)
sumgeq([M_00004_00005,-2],aux47)
weightedsumleq([1,5],[-14,M_00001_00003],aux48)
weightedsumgeq([1,5],[-14,M_00001_00003],aux48)
weightedsumleq([1,5],[-14,M_00001_00005],aux49)
weightedsumgeq([1,5],[-14,M_00001_00005],aux49)
weightedsumleq([1,5],[-19,M_00001_00004],aux50)
weightedsumgeq([1,5],[-19,M_00001_00004],aux50)
sumleq([-2,M_00005_00005],aux51)
sumgeq([-2,M_00005_00005],aux51)
sumleq([M_00002_00004,-3],aux52)
sumgeq([M_00002_00004,-3],aux52)
sumleq([-2,M_00001_00003],aux53)
sumgeq([-2,M_00001_00003],aux53)
sumleq([M_00004_00004,-2],aux54)
sumgeq([M_00004_00004,-2],aux54)
sumleq([M_00002_00003,-2],aux55)
sumgeq([M_00002_00003,-2],aux55)
weightedsumleq([1,6],[-23,M_00001_00004],aux56)
weightedsumgeq([1,6],[-23,M_00001_00004],aux56)
weightedsumleq([1,6],[-17,M_00001_00003],aux57)
weightedsumgeq([1,6],[-17,M_00001_00003],aux57)
weightedsumleq([1,6],[-17,M_00001_00005],aux58)
weightedsumgeq([1,6],[-17,M_00001_00005],aux58)
sumleq([M_00003_00003,-2],aux59)
sumgeq([M_00003_00003,-2],aux59)
sumleq([M_00004_00003,-2],aux60)
sumgeq([M_00004_00003,-2],aux60)
sumleq([-3,M_00001_00004],aux61)
sumgeq([-3,M_00001_00004],aux61)
sumleq([-2,M_00005_00003],aux62)
sumgeq([-2,M_00005_00003],aux62)
weightedsumleq([1,5],[-14,M_00005_00005],aux63)
weightedsumgeq([1,5],[-14,M_00005_00005],aux63)
weightedsumleq([1,6],[-17,M_00005_00003],aux64)
weightedsumgeq([1,6],[-17,M_00005_00003],aux64)
weightedsumleq([1,6],[-17,M_00005_00004],aux65)
weightedsumgeq([1,6],[-17,M_00005_00004],aux65)
sumleq([M_00003_00004,-2],aux66)
sumgeq([M_00003_00004,-2],aux66)
weightedsumleq([6,1],[M_00003_00005,-17],aux67)
weightedsumgeq([6,1],[M_00003_00005,-17],aux67)
weightedsumleq([6,1],[M_00003_00004,-17],aux68)
weightedsumgeq([6,1],[M_00003_00004,-17],aux68)
weightedsumleq([5,1],[M_00003_00003,-14],aux69)
weightedsumgeq([5,1],[M_00003_00003,-14],aux69)
weightedsumleq([5,1],[M_00002_00005,-14],aux70)
weightedsumgeq([5,1],[M_00002_00005,-14],aux70)
weightedsumleq([5,1],[M_00002_00003,-14],aux71)
weightedsumgeq([5,1],[M_00002_00003,-14],aux71)
weightedsumleq([5,1],[M_00002_00004,-19],aux72)
weightedsumgeq([5,1],[M_00002_00004,-19],aux72)
sumleq([M_00002_00005,-2],aux73)
sumgeq([M_00002_00005,-2],aux73)
sumleq([-2,M_00005_00004],aux74)
sumgeq([-2,M_00005_00004],aux74)
sumleq([M_00003_00005,-2],aux75)
sumgeq([M_00003_00005,-2],aux75)
weightedsumleq([1,5],[-14,M_00005_00003],aux76)
weightedsumgeq([1,5],[-14,M_00005_00003],aux76)
weightedsumleq([1,5],[-14,M_00005_00004],aux77)
weightedsumgeq([1,5],[-14,M_00005_00004],aux77)
weightedsumleq([5,1],[M_00003_00004,-14],aux78)
weightedsumgeq([5,1],[M_00003_00004,-14],aux78)
weightedsumleq([5,1],[M_00003_00005,-14],aux79)
weightedsumgeq([5,1],[M_00003_00005,-14],aux79)
weightedsumleq([6,1],[M_00004_00003,-17],aux80)
weightedsumgeq([6,1],[M_00004_00003,-17],aux80)
weightedsumleq([6,1],[M_00004_00005,-17],aux81)
weightedsumgeq([6,1],[M_00004_00005,-17],aux81)
weightedsumleq([5,1],[M_00004_00004,-14],aux82)
weightedsumgeq([5,1],[M_00004_00004,-14],aux82)
sumleq([-2,M_00001_00005],aux83)
sumgeq([-2,M_00001_00005],aux83)
**EOF**
